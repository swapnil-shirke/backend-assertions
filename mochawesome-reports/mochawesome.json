{
  "reportTitle": "backend",
  "stats": {
    "suites": 3,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2016-06-24T09:35:59.613Z",
    "end": "2016-06-24T09:36:42.298Z",
    "duration": 42685,
    "testsRegistered": 292,
    "passPercent": 4.5,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 279,
    "hasSkipped": true,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "App users ---",
        "suites": [
          {
            "title": "App user Object",
            "suites": [],
            "tests": [
              {
                "title": "should be able to create application user as an object",
                "fullTitle": "App users --- App user Object should be able to create application user as an object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUserName,<br>    <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>  <span class=\"hljs-keyword\">var</span> object = res.body.object<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>  <span class=\"hljs-comment\">// Keys assertion</span><br>  <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'_version'</span>])<br>  <span class=\"hljs-comment\">// Data type assertion</span><br>  object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>  object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  object.ACL.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  object.ACL.others.read.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.others.update.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.others.delete.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br><br>  <span class=\"hljs-comment\">// Value assertion</span><br>  object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  object.__loc[<span class=\"hljs-number\">0</span>].should.be.equal(-<span class=\"hljs-number\">122.4431164995849</span>)<br>  object.__loc[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-number\">37.74045209829323</span>)<br>  object.username.should.be.equal(appUserName)<br>  object.email.should.be.equal(appUseremail)<br>  object.first_name.should.be.equal(<span class=\"hljs-string\">'james'</span>)<br>  object.last_name.should.be.equal(<span class=\"hljs-string\">'bond'</span>)<br>  object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>  object.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(roleId)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>  object.created_by.should.be.equal(userUID)<br>  object.updated_by.should.be.equal(object.created_by)<br>  object.created_at.should.be.equal(object.updated_at)<br><br>  object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>  object.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "373f4af0-7ceb-4a75-90a4-1e29826724e2",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should provide an error message for mandetory fields(email)",
                "fullTitle": "App users --- App user Object should provide an error message for mandetory fields(email)",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-comment\">// \"email\": appUseremail,</span><br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"email\"</span>: [<br>        <span class=\"hljs-string\">\"is a required field\"</span><br>      ]<br>    }<br>  })<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "a774f016-42ef-46eb-bf8d-975f3c8a3190",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should provide an error message for unique email",
                "fullTitle": "App users --- App user Object should provide an error message for unique email",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUserName,<br>    <span class=\"hljs-string\">\"email\"</span>: appUser1.email,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"email\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "89899bac-d380-4dad-9977-925c7b21d381",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should provide an error message for unique username",
                "fullTitle": "App users --- App user Object should provide an error message for unique username",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUser1.username,<br>    <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"username\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "7addbf68-bdce-47e9-aa36-996b3dc9d055",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid authtoken(app user)",
                "fullTitle": "App users --- App user Object should provide an error message for invalid authtoken(app user)",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, <span class=\"hljs-string\">'fhts2323432'</span>, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUserName,<br>    <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.expect(<span class=\"hljs-number\">401</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "07670caf-a461-40dd-92d2-e1eb5508f7b5",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to get all application user objects present",
                "fullTitle": "App users --- App user Object should be able to get all application user objects present",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key)<br>        .expect(<span class=\"hljs-number\">200</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          <span class=\"hljs-keyword\">var</span> object = R.last(res.body.objects)<br>          <span class=\"hljs-comment\">// Keys assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>          <span class=\"hljs-comment\">// Data type assertion</span><br>          object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          <span class=\"hljs-comment\">// Value assertion</span><br>          object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          object.__loc.should.be.deep.equal(appUser.__loc)<br>          <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>          <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>          object.username.should.be.equal(appUser.username)<br>          object.email.should.be.equal(appUser.email)<br>          object.first_name.should.be.equal(appUser.first_name)<br>          object.last_name.should.be.equal(appUser.last_name)<br>          object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          object.created_by.should.be.equal(userUID)<br>          object.updated_by.should.be.equal(object.created_by)<br>          object.created_at.should.be.equal(object.updated_at)<br>          object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>          object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "ac311fc4-76af-410c-972f-3428f559edbb",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to get single application user object",
                "fullTitle": "App users --- App user Object should be able to get single application user object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_object_app_user'</span>, authtoken, api_key, appUser1.uid)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          <span class=\"hljs-keyword\">var</span> object = res.body.object<br>          <span class=\"hljs-comment\">// Keys assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>          <span class=\"hljs-comment\">// Data type assertion</span><br>          object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          <span class=\"hljs-comment\">// Value assertion</span><br>          object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          object.__loc.should.be.deep.equal(appUser1.__loc)<br>          <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>          <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>          object.username.should.be.equal(appUser1.username)<br>          object.email.should.be.equal(appUser1.email)<br>          object.first_name.should.be.equal(appUser1.first_name)<br>          object.last_name.should.be.equal(appUser1.last_name)<br>          object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          object.created_by.should.be.equal(userUID)<br>          object.updated_by.should.be.equal(object.created_by)<br>          object.created_at.should.be.equal(object.updated_at)<br>          object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>          object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "4f4b4a09-9f70-4a6c-b70f-07d1142f175d",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid uid",
                "fullTitle": "App users --- App user Object should provide an error message for invalid uid",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_object_app_user'</span>, authtoken, api_key, <span class=\"hljs-string\">'adafewt34vf'</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "cdc60905-4567-4751-8733-ff790ef777d7",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to update application user object",
                "fullTitle": "App users --- App user Object should be able to update application user object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, authtoken, api_key, appUser1.uid, {<br>        <span class=\"hljs-string\">\"object\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span><br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.object<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal(appUser1.__loc)<br>        <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>        <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>        object.username.should.be.equal(appUser1.username)<br>        object.email.should.be.equal(appUser1.email)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(object.created_by)<br>        object.created_at.should.be.not.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "739f1a02-415e-459f-a339-deeeebb4da80",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid authtoken(app user) for update",
                "fullTitle": "App users --- App user Object should provide an error message for invalid authtoken(app user) for update",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, <span class=\"hljs-string\">'asdafe2323dfr445'</span>, api_key, appUser1.uid, {<br>        <span class=\"hljs-string\">\"object\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span><br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">401</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "dab3f99c-1836-485f-b80f-52327d25296d",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid uid for update",
                "fullTitle": "App users --- App user Object should provide an error message for invalid uid for update",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, authtoken, api_key, <span class=\"hljs-string\">'asfa323dfgs'</span>, {<br>        <span class=\"hljs-string\">\"object\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span><br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "52d6b1f3-19a6-480f-8d59-5899afe15af7",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to search application users using query",
                "fullTitle": "App users --- App user Object should be able to search application users using query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, { query: {<span class=\"hljs-string\">\"email\"</span>: appUser.email } })<br>        .expect(<span class=\"hljs-number\">200</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          <br>          <span class=\"hljs-keyword\">var</span> object = R.last(res.body.objects)<br>          <br>          <span class=\"hljs-comment\">// Keys assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>          <span class=\"hljs-comment\">// Data type assertion</span><br>          object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          <span class=\"hljs-comment\">// Value assertion</span><br>          object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          object.__loc.should.be.deep.equal(appUser.__loc)<br>          <br>          object.username.should.be.equal(appUser.username)<br>          object.email.should.be.equal(appUser.email)<br>          object.first_name.should.be.equal(appUser.first_name)<br>          object.last_name.should.be.equal(appUser.last_name)<br>          object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          object.created_by.should.be.equal(userUID)<br>          object.updated_by.should.be.equal(object.created_by)<br>          object.created_at.should.be.equal(object.updated_at)<br>          object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>          object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "bcc7faf6-b640-4af2-8a1b-8e24ef2c4f50",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid authtoken for delete",
                "fullTitle": "App users --- App user Object should provide an error message for invalid authtoken for delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_object_app_user'</span>, <span class=\"hljs-string\">'asdwvf434vdfv'</span>, api_key, appUser1.uid)<br>        .expect(<span class=\"hljs-number\">401</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t})<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "428e987e-e289-4160-931c-73f4aa3dcfa5",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to delete application user object",
                "fullTitle": "App users --- App user Object should be able to delete application user object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_object_app_user'</span>, authtoken, api_key, appUser1.uid)<br>      .expect(<span class=\"hljs-number\">200</span>)  <br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "77f9646a-f01c-4563-b61d-48bf0e593dbf",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid uid for delete",
                "fullTitle": "App users --- App user Object should provide an error message for invalid uid for delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_object_app_user'</span>, authtoken, api_key, <span class=\"hljs-string\">'adf34d34d'</span>)<br>        .expect(<span class=\"hljs-number\">422</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "835ee8b5-fc37-4462-a0f8-514a5b835875",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to get application user objects count",
                "fullTitle": "App users --- App user Object should be able to get application user objects count",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <br>        res.body.objects.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "62c4c420-6402-46a9-869f-17a1fcdf7098",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to get application user objects includeing count",
                "fullTitle": "App users --- App user Object should be able to get application user objects includeing count",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        <span class=\"hljs-keyword\">var</span> object = R.last(res.body.objects)<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal(appUser.__loc)<br>        <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>        <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>        object.username.should.be.equal(appUser.username)<br>        object.email.should.be.equal(appUser.email)<br>        object.first_name.should.be.equal(appUser.first_name)<br>        object.last_name.should.be.equal(appUser.last_name)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(object.created_by)<br>        object.created_at.should.be.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "a537f749-32c2-4a5e-b9d0-cb3299d81f5c",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to get application user objects using skip and count",
                "fullTitle": "App users --- App user Object should be able to get application user objects using skip and count",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.objects.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "334136d9-d13a-481f-b65e-49e382affa41",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to get application user objects using limit and count",
                "fullTitle": "App users --- App user Object should be able to get application user objects using limit and count",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.objects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "56447833-f700-4f3f-9568-1d5161f4f6d9",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to get application user objects using skip",
                "fullTitle": "App users --- App user Object should be able to get application user objects using skip",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span>,<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.objects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "76e0f343-9118-4ada-85ea-15d1cb8fad53",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to get application user objects using -ve skip value",
                "fullTitle": "App users --- App user Object should be able to get application user objects using -ve skip value",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"skip\"</span>: -<span class=\"hljs-number\">2</span><br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Failed to fetch objects. Please try again with valid parameters.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"params\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"has an invalid operation.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "89879385-8c8d-4532-8788-25a76633a18b",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to get application user objects using -ve limit value",
                "fullTitle": "App users --- App user Object should be able to get application user objects using -ve limit value",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"limit\"</span>: -<span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">1</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        <span class=\"hljs-keyword\">var</span> object = res.body.objects[<span class=\"hljs-number\">0</span>]<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'_version'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal(object.__loc)<br>        <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>        <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>        object.username.should.be.equal(object.username)<br>        object.email.should.be.equal(object.email)<br>        object.first_name.should.be.equal(object.first_name)<br>        object.last_name.should.be.equal(object.last_name)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'android'</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(object.created_by)<br>        object.created_at.should.be.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">'catwoman'</span>, <span class=\"hljs-string\">'backend'</span>])<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "e86729bc-505e-45f8-b84c-924c2508a165",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "9724810b-94a1-4d9b-bf10-7da7a2786096",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to create application user as an object",
                "fullTitle": "App users --- App user Object should be able to create application user as an object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUserName,<br>    <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>  <span class=\"hljs-keyword\">var</span> object = res.body.object<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>  <span class=\"hljs-comment\">// Keys assertion</span><br>  <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'_version'</span>])<br>  <span class=\"hljs-comment\">// Data type assertion</span><br>  object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>  object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  object.ACL.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  object.ACL.others.read.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.others.update.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.others.delete.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br><br>  <span class=\"hljs-comment\">// Value assertion</span><br>  object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  object.__loc[<span class=\"hljs-number\">0</span>].should.be.equal(-<span class=\"hljs-number\">122.4431164995849</span>)<br>  object.__loc[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-number\">37.74045209829323</span>)<br>  object.username.should.be.equal(appUserName)<br>  object.email.should.be.equal(appUseremail)<br>  object.first_name.should.be.equal(<span class=\"hljs-string\">'james'</span>)<br>  object.last_name.should.be.equal(<span class=\"hljs-string\">'bond'</span>)<br>  object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>  object.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(roleId)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>  object.created_by.should.be.equal(userUID)<br>  object.updated_by.should.be.equal(object.created_by)<br>  object.created_at.should.be.equal(object.updated_at)<br><br>  object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>  object.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "373f4af0-7ceb-4a75-90a4-1e29826724e2",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should provide an error message for mandetory fields(email)",
                "fullTitle": "App users --- App user Object should provide an error message for mandetory fields(email)",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-comment\">// \"email\": appUseremail,</span><br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"email\"</span>: [<br>        <span class=\"hljs-string\">\"is a required field\"</span><br>      ]<br>    }<br>  })<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "a774f016-42ef-46eb-bf8d-975f3c8a3190",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should provide an error message for unique email",
                "fullTitle": "App users --- App user Object should provide an error message for unique email",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUserName,<br>    <span class=\"hljs-string\">\"email\"</span>: appUser1.email,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"email\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "89899bac-d380-4dad-9977-925c7b21d381",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should provide an error message for unique username",
                "fullTitle": "App users --- App user Object should provide an error message for unique username",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUser1.username,<br>    <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"username\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "7addbf68-bdce-47e9-aa36-996b3dc9d055",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid authtoken(app user)",
                "fullTitle": "App users --- App user Object should provide an error message for invalid authtoken(app user)",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, <span class=\"hljs-string\">'fhts2323432'</span>, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUserName,<br>    <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.expect(<span class=\"hljs-number\">401</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "07670caf-a461-40dd-92d2-e1eb5508f7b5",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to get all application user objects present",
                "fullTitle": "App users --- App user Object should be able to get all application user objects present",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key)<br>        .expect(<span class=\"hljs-number\">200</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          <span class=\"hljs-keyword\">var</span> object = R.last(res.body.objects)<br>          <span class=\"hljs-comment\">// Keys assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>          <span class=\"hljs-comment\">// Data type assertion</span><br>          object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          <span class=\"hljs-comment\">// Value assertion</span><br>          object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          object.__loc.should.be.deep.equal(appUser.__loc)<br>          <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>          <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>          object.username.should.be.equal(appUser.username)<br>          object.email.should.be.equal(appUser.email)<br>          object.first_name.should.be.equal(appUser.first_name)<br>          object.last_name.should.be.equal(appUser.last_name)<br>          object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          object.created_by.should.be.equal(userUID)<br>          object.updated_by.should.be.equal(object.created_by)<br>          object.created_at.should.be.equal(object.updated_at)<br>          object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>          object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "ac311fc4-76af-410c-972f-3428f559edbb",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to get single application user object",
                "fullTitle": "App users --- App user Object should be able to get single application user object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_object_app_user'</span>, authtoken, api_key, appUser1.uid)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          <span class=\"hljs-keyword\">var</span> object = res.body.object<br>          <span class=\"hljs-comment\">// Keys assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>          <span class=\"hljs-comment\">// Data type assertion</span><br>          object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          <span class=\"hljs-comment\">// Value assertion</span><br>          object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          object.__loc.should.be.deep.equal(appUser1.__loc)<br>          <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>          <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>          object.username.should.be.equal(appUser1.username)<br>          object.email.should.be.equal(appUser1.email)<br>          object.first_name.should.be.equal(appUser1.first_name)<br>          object.last_name.should.be.equal(appUser1.last_name)<br>          object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          object.created_by.should.be.equal(userUID)<br>          object.updated_by.should.be.equal(object.created_by)<br>          object.created_at.should.be.equal(object.updated_at)<br>          object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>          object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "4f4b4a09-9f70-4a6c-b70f-07d1142f175d",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid uid",
                "fullTitle": "App users --- App user Object should provide an error message for invalid uid",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_object_app_user'</span>, authtoken, api_key, <span class=\"hljs-string\">'adafewt34vf'</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "cdc60905-4567-4751-8733-ff790ef777d7",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to update application user object",
                "fullTitle": "App users --- App user Object should be able to update application user object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, authtoken, api_key, appUser1.uid, {<br>        <span class=\"hljs-string\">\"object\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span><br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.object<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal(appUser1.__loc)<br>        <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>        <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>        object.username.should.be.equal(appUser1.username)<br>        object.email.should.be.equal(appUser1.email)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(object.created_by)<br>        object.created_at.should.be.not.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "739f1a02-415e-459f-a339-deeeebb4da80",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid authtoken(app user) for update",
                "fullTitle": "App users --- App user Object should provide an error message for invalid authtoken(app user) for update",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, <span class=\"hljs-string\">'asdafe2323dfr445'</span>, api_key, appUser1.uid, {<br>        <span class=\"hljs-string\">\"object\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span><br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">401</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "dab3f99c-1836-485f-b80f-52327d25296d",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid uid for update",
                "fullTitle": "App users --- App user Object should provide an error message for invalid uid for update",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, authtoken, api_key, <span class=\"hljs-string\">'asfa323dfgs'</span>, {<br>        <span class=\"hljs-string\">\"object\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span><br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "52d6b1f3-19a6-480f-8d59-5899afe15af7",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to search application users using query",
                "fullTitle": "App users --- App user Object should be able to search application users using query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, { query: {<span class=\"hljs-string\">\"email\"</span>: appUser.email } })<br>        .expect(<span class=\"hljs-number\">200</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          <br>          <span class=\"hljs-keyword\">var</span> object = R.last(res.body.objects)<br>          <br>          <span class=\"hljs-comment\">// Keys assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>          <span class=\"hljs-comment\">// Data type assertion</span><br>          object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          <span class=\"hljs-comment\">// Value assertion</span><br>          object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          object.__loc.should.be.deep.equal(appUser.__loc)<br>          <br>          object.username.should.be.equal(appUser.username)<br>          object.email.should.be.equal(appUser.email)<br>          object.first_name.should.be.equal(appUser.first_name)<br>          object.last_name.should.be.equal(appUser.last_name)<br>          object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          object.created_by.should.be.equal(userUID)<br>          object.updated_by.should.be.equal(object.created_by)<br>          object.created_at.should.be.equal(object.updated_at)<br>          object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>          object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "bcc7faf6-b640-4af2-8a1b-8e24ef2c4f50",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid authtoken for delete",
                "fullTitle": "App users --- App user Object should provide an error message for invalid authtoken for delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_object_app_user'</span>, <span class=\"hljs-string\">'asdwvf434vdfv'</span>, api_key, appUser1.uid)<br>        .expect(<span class=\"hljs-number\">401</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t})<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "428e987e-e289-4160-931c-73f4aa3dcfa5",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to delete application user object",
                "fullTitle": "App users --- App user Object should be able to delete application user object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_object_app_user'</span>, authtoken, api_key, appUser1.uid)<br>      .expect(<span class=\"hljs-number\">200</span>)  <br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "77f9646a-f01c-4563-b61d-48bf0e593dbf",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid uid for delete",
                "fullTitle": "App users --- App user Object should provide an error message for invalid uid for delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_object_app_user'</span>, authtoken, api_key, <span class=\"hljs-string\">'adf34d34d'</span>)<br>        .expect(<span class=\"hljs-number\">422</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "835ee8b5-fc37-4462-a0f8-514a5b835875",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to get application user objects count",
                "fullTitle": "App users --- App user Object should be able to get application user objects count",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <br>        res.body.objects.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "62c4c420-6402-46a9-869f-17a1fcdf7098",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to get application user objects includeing count",
                "fullTitle": "App users --- App user Object should be able to get application user objects includeing count",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        <span class=\"hljs-keyword\">var</span> object = R.last(res.body.objects)<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal(appUser.__loc)<br>        <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>        <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>        object.username.should.be.equal(appUser.username)<br>        object.email.should.be.equal(appUser.email)<br>        object.first_name.should.be.equal(appUser.first_name)<br>        object.last_name.should.be.equal(appUser.last_name)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(object.created_by)<br>        object.created_at.should.be.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "a537f749-32c2-4a5e-b9d0-cb3299d81f5c",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to get application user objects using skip and count",
                "fullTitle": "App users --- App user Object should be able to get application user objects using skip and count",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.objects.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "334136d9-d13a-481f-b65e-49e382affa41",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to get application user objects using limit and count",
                "fullTitle": "App users --- App user Object should be able to get application user objects using limit and count",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.objects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "56447833-f700-4f3f-9568-1d5161f4f6d9",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to get application user objects using skip",
                "fullTitle": "App users --- App user Object should be able to get application user objects using skip",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span>,<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.objects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "76e0f343-9118-4ada-85ea-15d1cb8fad53",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to get application user objects using -ve skip value",
                "fullTitle": "App users --- App user Object should be able to get application user objects using -ve skip value",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"skip\"</span>: -<span class=\"hljs-number\">2</span><br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Failed to fetch objects. Please try again with valid parameters.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"params\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"has an invalid operation.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "89879385-8c8d-4532-8788-25a76633a18b",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              },
              {
                "title": "should be able to get application user objects using -ve limit value",
                "fullTitle": "App users --- App user Object should be able to get application user objects using -ve limit value",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"limit\"</span>: -<span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">1</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        <span class=\"hljs-keyword\">var</span> object = res.body.objects[<span class=\"hljs-number\">0</span>]<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'_version'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal(object.__loc)<br>        <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>        <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>        object.username.should.be.equal(object.username)<br>        object.email.should.be.equal(object.email)<br>        object.first_name.should.be.equal(object.first_name)<br>        object.last_name.should.be.equal(object.last_name)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'android'</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(object.created_by)<br>        object.created_at.should.be.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">'catwoman'</span>, <span class=\"hljs-string\">'backend'</span>])<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "e86729bc-505e-45f8-b84c-924c2508a165",
                "parentUUID": "9724810b-94a1-4d9b-bf10-7da7a2786096",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 22,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 22,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "App users registration",
            "suites": [],
            "tests": [
              {
                "title": "should be able to register application users",
                "fullTitle": "App users --- App users registration should be able to register application users",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUserName<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.application_user<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! You have successfully registered!'</span>)<br>        <span class=\"hljs-comment\">// // Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>        <span class=\"hljs-comment\">// // Data type assertion</span><br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.active.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        should.not.exist(object.updated_by)<br>        should.not.exist(object.created_by)<br>        should.not.exist(object.__loc)<br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.email.should.be.equal(appUseremail)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'john'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'smith'</span>)<br>        object.username.should.be.equal(appUserName)<br>        object.active.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_at.should.be.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        object.tags.should.be.deep.equal([])<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "7de45170-ae8e-4594-89bf-84c3d77db30a",
                "parentUUID": "152aebd1-f8f3-444c-8a80-0521c8885c30",
                "skipped": true
              },
              {
                "title": "should provide error message for password confirmation",
                "fullTitle": "App users --- App users registration should provide error message for password confirmation",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw1234\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUserName<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't sign you up. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">192</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"password_confirmation\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"password and password_confirmation must match\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "d11c4a11-93d9-4aa3-a15d-cd54d80a7411",
                "parentUUID": "152aebd1-f8f3-444c-8a80-0521c8885c30",
                "skipped": true
              },
              {
                "title": "should provide error message for register unique username",
                "fullTitle": "App users --- App users registration should provide error message for register unique username",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUser2.username<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    \t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't sign you up. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">127</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"username\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "beca8e76-f392-4578-9ed6-fb22eab3f209",
                "parentUUID": "152aebd1-f8f3-444c-8a80-0521c8885c30",
                "skipped": true
              },
              {
                "title": "should provide error message for register unique email",
                "fullTitle": "App users --- App users registration should provide error message for register unique email",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUser2.email,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUserName<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    \t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't sign you up. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">127</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"email\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "f3ceb84f-c356-4beb-9dfd-1033162ef352",
                "parentUUID": "152aebd1-f8f3-444c-8a80-0521c8885c30",
                "skipped": true
              },
              {
                "title": "should be able to update registered application user",
                "fullTitle": "App users --- App users registration should be able to update registered application user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser_authtoken, api_key, appUser2.uid, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.application_user<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        <span class=\"hljs-comment\">// value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>        object.email.should.be.equal(appUser2.email)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.username.should.be.equal(appUser2.username)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">\"testuser\"</span>, <span class=\"hljs-string\">\"backend\"</span>])<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(userUID)<br>        object.created_at.should.be.not.equal(object.updated_at)<br>        object.uid.should.be.equal(appUser2.uid)<br>        object.ACL.can[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'update'</span>)<br>        object.ACL.can[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'delete'</span>)<br>        object._version.should.be.equal(<span class=\"hljs-number\">3</span>)<br>        <span class=\"hljs-comment\">// object.last_login_at.should.be.equal('string')</span><br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "7530aeaf-efd7-45dd-bdd2-09e1c8818411",
                "parentUUID": "152aebd1-f8f3-444c-8a80-0521c8885c30",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid app user authtoken ",
                "fullTitle": "App users --- App users registration should provide an error message for invalid app user authtoken ",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, <span class=\"hljs-string\">''</span>, api_key, appUser2.uid, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "f4699584-a42d-4102-ad91-3f2813d4ad0a",
                "parentUUID": "152aebd1-f8f3-444c-8a80-0521c8885c30",
                "skipped": true
              },
              {
                "title": "should be able to get registered application user",
                "fullTitle": "App users --- App users registration should be able to get registered application user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_register_app_user'</span>, appUser_authtoken, api_key, appUser2.uid)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.application_user<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        <span class=\"hljs-comment\">// value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>        object.email.should.be.equal(appUser2.email)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.username.should.be.equal(appUser2.username)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">\"testuser\"</span>, <span class=\"hljs-string\">\"backend\"</span>])<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(userUID)<br>        object.created_at.should.be.not.equal(object.updated_at)<br>        object.uid.should.be.equal(appUser2.uid)<br>        object.ACL.can[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'update'</span>)<br>        object.ACL.can[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'delete'</span>)<br>        object._version.should.be.equal(<span class=\"hljs-number\">3</span>)<br>        <span class=\"hljs-comment\">// object.last_login_at.should.be.equal('string')</span><br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "45264d2c-53be-4b3c-a3dd-a98b3593ddfe",
                "parentUUID": "152aebd1-f8f3-444c-8a80-0521c8885c30",
                "skipped": true
              },
              {
                "title": "should be able to deactivate an existing application user",
                "fullTitle": "App users --- App users registration should be able to deactivate an existing application user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_register_app_user'</span>, appUser_authtoken, api_key, appUser2.uid)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "4f42e491-b6fe-4a30-b95d-d8bb1dadc8e7",
                "parentUUID": "152aebd1-f8f3-444c-8a80-0521c8885c30",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "152aebd1-f8f3-444c-8a80-0521c8885c30",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to register application users",
                "fullTitle": "App users --- App users registration should be able to register application users",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUserName<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.application_user<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! You have successfully registered!'</span>)<br>        <span class=\"hljs-comment\">// // Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>        <span class=\"hljs-comment\">// // Data type assertion</span><br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.active.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        should.not.exist(object.updated_by)<br>        should.not.exist(object.created_by)<br>        should.not.exist(object.__loc)<br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.email.should.be.equal(appUseremail)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'john'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'smith'</span>)<br>        object.username.should.be.equal(appUserName)<br>        object.active.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_at.should.be.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        object.tags.should.be.deep.equal([])<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "7de45170-ae8e-4594-89bf-84c3d77db30a",
                "parentUUID": "152aebd1-f8f3-444c-8a80-0521c8885c30",
                "skipped": true
              },
              {
                "title": "should provide error message for password confirmation",
                "fullTitle": "App users --- App users registration should provide error message for password confirmation",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw1234\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUserName<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't sign you up. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">192</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"password_confirmation\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"password and password_confirmation must match\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "d11c4a11-93d9-4aa3-a15d-cd54d80a7411",
                "parentUUID": "152aebd1-f8f3-444c-8a80-0521c8885c30",
                "skipped": true
              },
              {
                "title": "should provide error message for register unique username",
                "fullTitle": "App users --- App users registration should provide error message for register unique username",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUser2.username<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    \t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't sign you up. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">127</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"username\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "beca8e76-f392-4578-9ed6-fb22eab3f209",
                "parentUUID": "152aebd1-f8f3-444c-8a80-0521c8885c30",
                "skipped": true
              },
              {
                "title": "should provide error message for register unique email",
                "fullTitle": "App users --- App users registration should provide error message for register unique email",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUser2.email,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUserName<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    \t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't sign you up. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">127</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"email\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "f3ceb84f-c356-4beb-9dfd-1033162ef352",
                "parentUUID": "152aebd1-f8f3-444c-8a80-0521c8885c30",
                "skipped": true
              },
              {
                "title": "should be able to update registered application user",
                "fullTitle": "App users --- App users registration should be able to update registered application user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser_authtoken, api_key, appUser2.uid, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.application_user<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        <span class=\"hljs-comment\">// value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>        object.email.should.be.equal(appUser2.email)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.username.should.be.equal(appUser2.username)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">\"testuser\"</span>, <span class=\"hljs-string\">\"backend\"</span>])<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(userUID)<br>        object.created_at.should.be.not.equal(object.updated_at)<br>        object.uid.should.be.equal(appUser2.uid)<br>        object.ACL.can[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'update'</span>)<br>        object.ACL.can[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'delete'</span>)<br>        object._version.should.be.equal(<span class=\"hljs-number\">3</span>)<br>        <span class=\"hljs-comment\">// object.last_login_at.should.be.equal('string')</span><br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "7530aeaf-efd7-45dd-bdd2-09e1c8818411",
                "parentUUID": "152aebd1-f8f3-444c-8a80-0521c8885c30",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid app user authtoken ",
                "fullTitle": "App users --- App users registration should provide an error message for invalid app user authtoken ",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, <span class=\"hljs-string\">''</span>, api_key, appUser2.uid, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "f4699584-a42d-4102-ad91-3f2813d4ad0a",
                "parentUUID": "152aebd1-f8f3-444c-8a80-0521c8885c30",
                "skipped": true
              },
              {
                "title": "should be able to get registered application user",
                "fullTitle": "App users --- App users registration should be able to get registered application user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_register_app_user'</span>, appUser_authtoken, api_key, appUser2.uid)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.application_user<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        <span class=\"hljs-comment\">// value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>        object.email.should.be.equal(appUser2.email)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.username.should.be.equal(appUser2.username)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">\"testuser\"</span>, <span class=\"hljs-string\">\"backend\"</span>])<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(userUID)<br>        object.created_at.should.be.not.equal(object.updated_at)<br>        object.uid.should.be.equal(appUser2.uid)<br>        object.ACL.can[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'update'</span>)<br>        object.ACL.can[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'delete'</span>)<br>        object._version.should.be.equal(<span class=\"hljs-number\">3</span>)<br>        <span class=\"hljs-comment\">// object.last_login_at.should.be.equal('string')</span><br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "45264d2c-53be-4b3c-a3dd-a98b3593ddfe",
                "parentUUID": "152aebd1-f8f3-444c-8a80-0521c8885c30",
                "skipped": true
              },
              {
                "title": "should be able to deactivate an existing application user",
                "fullTitle": "App users --- App users registration should be able to deactivate an existing application user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_register_app_user'</span>, appUser_authtoken, api_key, appUser2.uid)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "4f42e491-b6fe-4a30-b95d-d8bb1dadc8e7",
                "parentUUID": "152aebd1-f8f3-444c-8a80-0521c8885c30",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 8,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 8,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "App user login/logout",
            "suites": [],
            "tests": [
              {
                "title": "should provide error message for invalid application user login operation",
                "fullTitle": "App users --- App user login/logout should provide error message for invalid application user login operation",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"asd\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {<br>            <span class=\"hljs-string\">\"auth\"</span>: [<br>              <span class=\"hljs-string\">\"Looks like your email or password is invalid\"</span><br>            ]<br>          }<br>        })<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "7b7eca57-d1b6-4aad-b36d-c454ee10688e",
                "parentUUID": "23cdba7b-d566-4874-a3c0-a558865ba743",
                "skipped": true
              },
              {
                "title": "should be able to login users registered for an application",
                "fullTitle": "App users --- App user login/logout should be able to login users registered for an application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUser3.email,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>        }<br>      })<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Logged in successfully!'</span>)<br>          user = res.body.application_user<br>          userAuthtoken = res.body.application_user.authtoken<br>          <span class=\"hljs-comment\">// key assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(user).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>, <span class=\"hljs-string\">'authtoken'</span>])<br>          <span class=\"hljs-comment\">// data assertion</span><br>          user.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          user.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          user.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          user.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.active.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          user.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          user._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          user.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.authtoken.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          <span class=\"hljs-comment\">// value assertion</span><br>          user.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          user.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>          user.email.should.be.equal(appUser3.email)<br>          user.first_name.should.be.equal(appUser3.first_name)<br>          user.last_name.should.be.equal(appUser3.last_name)<br>          user.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          user.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          user.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          user.created_by.should.be.equal(userUID)<br>          user.updated_by.should.be.equal(userUID)<br>          user.created_at.should.be.not.equal(user.updated_at)<br>          user.uid.should.be.equal(appUser3.uid)<br>          user.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          user.ACL.should.be.deep.equal({})<br>          user._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "b2008f9f-3bc9-40a9-ab13-456ee6d5fd3b",
                "parentUUID": "23cdba7b-d566-4874-a3c0-a558865ba743",
                "skipped": true
              },
              {
                "title": "should provide error message for invalid application user logout operation",
                "fullTitle": "App users --- App user login/logout should provide error message for invalid application user logout operation",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'logout_app_user'</span>, <span class=\"hljs-string\">\"userAuthtoken\"</span>, api_key)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          res.body.error_message.should.be.equal(<span class=\"hljs-string\">'Access denied. You have insufficient permissions to perform this operation.'</span>)<br>          res.body.error_code.should.be.equal(<span class=\"hljs-number\">162</span>)<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "cf4fb0f1-5032-4823-ad8a-8e640128abca",
                "parentUUID": "23cdba7b-d566-4874-a3c0-a558865ba743",
                "skipped": true
              },
              {
                "title": "should be able to logout application user from an apllication",
                "fullTitle": "App users --- App user login/logout should be able to logout application user from an apllication",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'login_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUser3.email,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>        }<br>      }))<br>        .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>          <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'logout_app_user'</span>, res.body.application_user.authtoken, api_key))<br>        })<br>        .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>          res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Logged out successfully.'</span>)<br>        })<br>        .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>          done()<br>        })<br>        .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>          <span class=\"hljs-built_in\">console</span>.log(err)<br>        })",
                "isRoot": false,
                "uuid": "20eb2324-74f2-4792-a78a-16da08bbb444",
                "parentUUID": "23cdba7b-d566-4874-a3c0-a558865ba743",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "23cdba7b-d566-4874-a3c0-a558865ba743",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should provide error message for invalid application user login operation",
                "fullTitle": "App users --- App user login/logout should provide error message for invalid application user login operation",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"asd\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {<br>            <span class=\"hljs-string\">\"auth\"</span>: [<br>              <span class=\"hljs-string\">\"Looks like your email or password is invalid\"</span><br>            ]<br>          }<br>        })<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "7b7eca57-d1b6-4aad-b36d-c454ee10688e",
                "parentUUID": "23cdba7b-d566-4874-a3c0-a558865ba743",
                "skipped": true
              },
              {
                "title": "should be able to login users registered for an application",
                "fullTitle": "App users --- App user login/logout should be able to login users registered for an application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUser3.email,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>        }<br>      })<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Logged in successfully!'</span>)<br>          user = res.body.application_user<br>          userAuthtoken = res.body.application_user.authtoken<br>          <span class=\"hljs-comment\">// key assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(user).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>, <span class=\"hljs-string\">'authtoken'</span>])<br>          <span class=\"hljs-comment\">// data assertion</span><br>          user.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          user.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          user.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          user.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.active.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          user.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          user._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          user.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.authtoken.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          <span class=\"hljs-comment\">// value assertion</span><br>          user.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          user.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>          user.email.should.be.equal(appUser3.email)<br>          user.first_name.should.be.equal(appUser3.first_name)<br>          user.last_name.should.be.equal(appUser3.last_name)<br>          user.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          user.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          user.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          user.created_by.should.be.equal(userUID)<br>          user.updated_by.should.be.equal(userUID)<br>          user.created_at.should.be.not.equal(user.updated_at)<br>          user.uid.should.be.equal(appUser3.uid)<br>          user.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          user.ACL.should.be.deep.equal({})<br>          user._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "b2008f9f-3bc9-40a9-ab13-456ee6d5fd3b",
                "parentUUID": "23cdba7b-d566-4874-a3c0-a558865ba743",
                "skipped": true
              },
              {
                "title": "should provide error message for invalid application user logout operation",
                "fullTitle": "App users --- App user login/logout should provide error message for invalid application user logout operation",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'logout_app_user'</span>, <span class=\"hljs-string\">\"userAuthtoken\"</span>, api_key)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          res.body.error_message.should.be.equal(<span class=\"hljs-string\">'Access denied. You have insufficient permissions to perform this operation.'</span>)<br>          res.body.error_code.should.be.equal(<span class=\"hljs-number\">162</span>)<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "cf4fb0f1-5032-4823-ad8a-8e640128abca",
                "parentUUID": "23cdba7b-d566-4874-a3c0-a558865ba743",
                "skipped": true
              },
              {
                "title": "should be able to logout application user from an apllication",
                "fullTitle": "App users --- App user login/logout should be able to logout application user from an apllication",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'login_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUser3.email,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>        }<br>      }))<br>        .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>          <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'logout_app_user'</span>, res.body.application_user.authtoken, api_key))<br>        })<br>        .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>          res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Logged out successfully.'</span>)<br>        })<br>        .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>          done()<br>        })<br>        .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>          <span class=\"hljs-built_in\">console</span>.log(err)<br>        })",
                "isRoot": false,
                "uuid": "20eb2324-74f2-4792-a78a-16da08bbb444",
                "parentUUID": "23cdba7b-d566-4874-a3c0-a558865ba743",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 4,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "App user token/uid",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get current logged in application user",
                "fullTitle": "App users --- App user token/uid should be able to get current logged in application user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">30000</span>)<br><br>R.Promisify(factories.create(<span class=\"hljs-string\">'get_current_app_user'</span>, userAuthtoken1, api_key))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    userAuthtoken = res.body.application_user.authtoken<br>    <span class=\"hljs-comment\">// key assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(user).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>, <span class=\"hljs-string\">'isApplicationUser'</span>, <span class=\"hljs-string\">'authtoken'</span>])<br>    <span class=\"hljs-comment\">// data assertion</span><br>    user.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    user.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    user.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    user.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.active.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    user.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    user._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>    user.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.isApplicationUser.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    user.authtoken.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    <span class=\"hljs-comment\">// value assertion</span><br>    user.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    user.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>    user.email.should.be.equal(appUser4.email)<br>    user.first_name.should.be.equal(appUser4.first_name)<br>    user.last_name.should.be.equal(appUser4.last_name)<br>    user.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>    user.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>    user.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>    user.created_by.should.be.equal(userUID)<br>    user.updated_by.should.be.equal(userUID)<br>    user.created_at.should.be.not.equal(user.updated_at)<br>    user.uid.should.be.equal(appUser4.uid)<br>    user.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    user.ACL.should.be.deep.equal({ })<br>    user._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>    user.isApplicationUser.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "66d3fe3d-0c65-4444-9660-8d01c1f5c3ff",
                "parentUUID": "a6af9ca2-cbb9-4ad6-a7fa-808783e0a50c",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid application user authtoken",
                "fullTitle": "App users --- App user token/uid should provide an error message for invalid application user authtoken",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">30000</span>)<br><br>R.Promisify(factories.create(<span class=\"hljs-string\">'get_current_app_user'</span>, <span class=\"hljs-string\">'899769kjnkj'</span>, api_key))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    res.status.should.be.equal(<span class=\"hljs-number\">422</span>)<br>    res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t})<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "2866a205-c2da-4cb9-b7e1-bb88d8840234",
                "parentUUID": "a6af9ca2-cbb9-4ad6-a7fa-808783e0a50c",
                "skipped": true
              },
              {
                "title": "should be able to retrieve application user uid",
                "fullTitle": "App users --- App user token/uid should be able to retrieve application user uid",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'app_user_retrieve_user_uid'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"email\"</span>: appUser4.email<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.uid.should.be.equal(appUser4.uid)<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "11607d89-45da-432f-b71e-a867d24074af",
                "parentUUID": "a6af9ca2-cbb9-4ad6-a7fa-808783e0a50c",
                "skipped": true
              },
              {
                "title": "should be able to an application user token by using an application`s master key",
                "fullTitle": "App users --- App user token/uid should be able to an application user token by using an application`s master key",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'app_user_token'</span>, master_key, api_key, appUser4.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <br>  res.body.token.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  done()<br>})",
                "isRoot": false,
                "uuid": "e64fbf03-ca6f-4997-a283-a01a371212ce",
                "parentUUID": "a6af9ca2-cbb9-4ad6-a7fa-808783e0a50c",
                "skipped": true
              },
              {
                "title": "should provide an error message for an invalid application`s master key",
                "fullTitle": "App users --- App user token/uid should provide an error message for an invalid application`s master key",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'app_user_token'</span>, <span class=\"hljs-string\">'kdsj43fvbgkj'</span>, api_key, appUser4.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  <span class=\"hljs-comment\">// res.body.token.should.be.a('string')</span><br>  done()<br>})",
                "isRoot": false,
                "uuid": "e44662df-e9f9-4d8c-bd03-f7611f0c7811",
                "parentUUID": "a6af9ca2-cbb9-4ad6-a7fa-808783e0a50c",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 25000,
            "file": "/test.js",
            "uuid": "a6af9ca2-cbb9-4ad6-a7fa-808783e0a50c",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get current logged in application user",
                "fullTitle": "App users --- App user token/uid should be able to get current logged in application user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">30000</span>)<br><br>R.Promisify(factories.create(<span class=\"hljs-string\">'get_current_app_user'</span>, userAuthtoken1, api_key))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    userAuthtoken = res.body.application_user.authtoken<br>    <span class=\"hljs-comment\">// key assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(user).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>, <span class=\"hljs-string\">'isApplicationUser'</span>, <span class=\"hljs-string\">'authtoken'</span>])<br>    <span class=\"hljs-comment\">// data assertion</span><br>    user.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    user.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    user.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    user.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.active.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    user.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    user._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>    user.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.isApplicationUser.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    user.authtoken.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    <span class=\"hljs-comment\">// value assertion</span><br>    user.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    user.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>    user.email.should.be.equal(appUser4.email)<br>    user.first_name.should.be.equal(appUser4.first_name)<br>    user.last_name.should.be.equal(appUser4.last_name)<br>    user.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>    user.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>    user.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>    user.created_by.should.be.equal(userUID)<br>    user.updated_by.should.be.equal(userUID)<br>    user.created_at.should.be.not.equal(user.updated_at)<br>    user.uid.should.be.equal(appUser4.uid)<br>    user.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    user.ACL.should.be.deep.equal({ })<br>    user._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>    user.isApplicationUser.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "66d3fe3d-0c65-4444-9660-8d01c1f5c3ff",
                "parentUUID": "a6af9ca2-cbb9-4ad6-a7fa-808783e0a50c",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid application user authtoken",
                "fullTitle": "App users --- App user token/uid should provide an error message for invalid application user authtoken",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">30000</span>)<br><br>R.Promisify(factories.create(<span class=\"hljs-string\">'get_current_app_user'</span>, <span class=\"hljs-string\">'899769kjnkj'</span>, api_key))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    res.status.should.be.equal(<span class=\"hljs-number\">422</span>)<br>    res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t})<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "2866a205-c2da-4cb9-b7e1-bb88d8840234",
                "parentUUID": "a6af9ca2-cbb9-4ad6-a7fa-808783e0a50c",
                "skipped": true
              },
              {
                "title": "should be able to retrieve application user uid",
                "fullTitle": "App users --- App user token/uid should be able to retrieve application user uid",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'app_user_retrieve_user_uid'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"email\"</span>: appUser4.email<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.uid.should.be.equal(appUser4.uid)<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "11607d89-45da-432f-b71e-a867d24074af",
                "parentUUID": "a6af9ca2-cbb9-4ad6-a7fa-808783e0a50c",
                "skipped": true
              },
              {
                "title": "should be able to an application user token by using an application`s master key",
                "fullTitle": "App users --- App user token/uid should be able to an application user token by using an application`s master key",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'app_user_token'</span>, master_key, api_key, appUser4.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <br>  res.body.token.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  done()<br>})",
                "isRoot": false,
                "uuid": "e64fbf03-ca6f-4997-a283-a01a371212ce",
                "parentUUID": "a6af9ca2-cbb9-4ad6-a7fa-808783e0a50c",
                "skipped": true
              },
              {
                "title": "should provide an error message for an invalid application`s master key",
                "fullTitle": "App users --- App user token/uid should provide an error message for an invalid application`s master key",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'app_user_token'</span>, <span class=\"hljs-string\">'kdsj43fvbgkj'</span>, api_key, appUser4.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  <span class=\"hljs-comment\">// res.body.token.should.be.a('string')</span><br>  done()<br>})",
                "isRoot": false,
                "uuid": "e44662df-e9f9-4d8c-bd03-f7611f0c7811",
                "parentUUID": "a6af9ca2-cbb9-4ad6-a7fa-808783e0a50c",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 5,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "App user activations",
            "suites": [],
            "tests": [
              {
                "title": "should be able to activate app user`s account",
                "fullTitle": "App users --- App user activations should be able to activate app user`s account",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'activate_app_user'</span>, api_key, appUser5.uid, token))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Account activated successfully!'</span>)<br>  done()<br>})",
                "isRoot": false,
                "uuid": "69d621fa-37e2-416f-9692-57152ccaa124",
                "parentUUID": "0e14558f-337b-420c-9e19-fe1fbb6bafc9",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid token",
                "fullTitle": "App users --- App user activations should provide an error message for invalid token",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'activate_app_user'</span>, api_key, appUser5.uid, <span class=\"hljs-string\">'4569y8zvzkdfgzdf'</span>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.status.should.be.equal(<span class=\"hljs-number\">422</span>)<br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't retreive the token for you.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">147</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"token\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"Bummer. The token provided is invalid. Please try again.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "cef1bc95-d01e-419b-8ab6-998e69056f7b",
                "parentUUID": "0e14558f-337b-420c-9e19-fe1fbb6bafc9",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "0e14558f-337b-420c-9e19-fe1fbb6bafc9",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to activate app user`s account",
                "fullTitle": "App users --- App user activations should be able to activate app user`s account",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'activate_app_user'</span>, api_key, appUser5.uid, token))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Account activated successfully!'</span>)<br>  done()<br>})",
                "isRoot": false,
                "uuid": "69d621fa-37e2-416f-9692-57152ccaa124",
                "parentUUID": "0e14558f-337b-420c-9e19-fe1fbb6bafc9",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid token",
                "fullTitle": "App users --- App user activations should provide an error message for invalid token",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'activate_app_user'</span>, api_key, appUser5.uid, <span class=\"hljs-string\">'4569y8zvzkdfgzdf'</span>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.status.should.be.equal(<span class=\"hljs-number\">422</span>)<br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't retreive the token for you.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">147</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"token\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"Bummer. The token provided is invalid. Please try again.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "cef1bc95-d01e-419b-8ab6-998e69056f7b",
                "parentUUID": "0e14558f-337b-420c-9e19-fe1fbb6bafc9",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "App user requests",
            "suites": [],
            "tests": [
              {
                "title": "should be able to request reset password, for an application",
                "fullTitle": "App users --- App user requests should be able to request reset password, for an application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'req_forgot_password'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"email\"</span>: appUser6.email<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'OK! We\\'ve sent you an email. Please check it for further instructions.'</span>)<br>  <br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "e291d1b2-b87d-422a-ab63-5d90c141bb10",
                "parentUUID": "93ef657a-fe72-440e-991d-4b37ffa98f28",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid email for forgot password",
                "fullTitle": "App users --- App user requests should provide an error message for invalid email for forgot password",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'req_forgot_password'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't help you with your password. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">148</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"email\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "df12172d-7202-4076-8746-d5770f5ea530",
                "parentUUID": "93ef657a-fe72-440e-991d-4b37ffa98f28",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "93ef657a-fe72-440e-991d-4b37ffa98f28",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to request reset password, for an application",
                "fullTitle": "App users --- App user requests should be able to request reset password, for an application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'req_forgot_password'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"email\"</span>: appUser6.email<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'OK! We\\'ve sent you an email. Please check it for further instructions.'</span>)<br>  <br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "e291d1b2-b87d-422a-ab63-5d90c141bb10",
                "parentUUID": "93ef657a-fe72-440e-991d-4b37ffa98f28",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid email for forgot password",
                "fullTitle": "App users --- App user requests should provide an error message for invalid email for forgot password",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'req_forgot_password'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't help you with your password. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">148</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"email\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "df12172d-7202-4076-8746-d5770f5ea530",
                "parentUUID": "93ef657a-fe72-440e-991d-4b37ffa98f28",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "App user forgot password",
            "suites": [],
            "tests": [
              {
                "title": "should be able to reset password using provided token",
                "fullTitle": "App users --- App user forgot password should be able to reset password using provided token",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'reset_password_app_user'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"reset_password_token\"</span>: token,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! You\\'ve successfully reset your password.'</span>)<br>  <br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "d008422c-6408-4a91-a879-e48e727cc523",
                "parentUUID": "b0faba54-403c-4642-b245-c85a2ab23974",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid reset password token",
                "fullTitle": "App users --- App user forgot password should provide an error message for invalid reset password token",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'reset_password_app_user'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"reset_password_token\"</span>: <span class=\"hljs-string\">\"swapnil\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't reset your password. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">149</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"reset_password_token\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"Bummer. The token provided is invalid. Please try again.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "921f7504-202c-4e07-bc1d-b056473e3279",
                "parentUUID": "b0faba54-403c-4642-b245-c85a2ab23974",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "b0faba54-403c-4642-b245-c85a2ab23974",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to reset password using provided token",
                "fullTitle": "App users --- App user forgot password should be able to reset password using provided token",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'reset_password_app_user'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"reset_password_token\"</span>: token,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! You\\'ve successfully reset your password.'</span>)<br>  <br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "d008422c-6408-4a91-a879-e48e727cc523",
                "parentUUID": "b0faba54-403c-4642-b245-c85a2ab23974",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid reset password token",
                "fullTitle": "App users --- App user forgot password should provide an error message for invalid reset password token",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'reset_password_app_user'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"reset_password_token\"</span>: <span class=\"hljs-string\">\"swapnil\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't reset your password. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">149</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"reset_password_token\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"Bummer. The token provided is invalid. Please try again.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "921f7504-202c-4e07-bc1d-b056473e3279",
                "parentUUID": "b0faba54-403c-4642-b245-c85a2ab23974",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "App user validate_token",
            "suites": [],
            "tests": [
              {
                "title": "should be able to check whether reset password token is valid or not",
                "fullTitle": "App users --- App user validate_token should be able to check whether reset password token is valid or not",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'validate_token_app_user'</span>, api_key, { <span class=\"hljs-string\">'application_user[reset_password_token]'</span>: token }))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'That token works!'</span>)<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "1c7f3525-d048-481e-92a0-2f7eb8444800",
                "parentUUID": "96421b49-1a2d-4f61-857e-5c2e02cbf01a",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid provided token",
                "fullTitle": "App users --- App user validate_token should provide an error message for invalid provided token",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'validate_token_app_user'</span>, api_key, { <span class=\"hljs-string\">'application_user[reset_password_token]'</span>: <span class=\"hljs-string\">'swapnil'</span> }))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The token provided is invalid. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">210</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"reset_password_token\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not valid, or it might have expired\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "c8413e41-f36e-43e5-a4d0-6635b054afa9",
                "parentUUID": "96421b49-1a2d-4f61-857e-5c2e02cbf01a",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "96421b49-1a2d-4f61-857e-5c2e02cbf01a",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to check whether reset password token is valid or not",
                "fullTitle": "App users --- App user validate_token should be able to check whether reset password token is valid or not",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'validate_token_app_user'</span>, api_key, { <span class=\"hljs-string\">'application_user[reset_password_token]'</span>: token }))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'That token works!'</span>)<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "1c7f3525-d048-481e-92a0-2f7eb8444800",
                "parentUUID": "96421b49-1a2d-4f61-857e-5c2e02cbf01a",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid provided token",
                "fullTitle": "App users --- App user validate_token should provide an error message for invalid provided token",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'validate_token_app_user'</span>, api_key, { <span class=\"hljs-string\">'application_user[reset_password_token]'</span>: <span class=\"hljs-string\">'swapnil'</span> }))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The token provided is invalid. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">210</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"reset_password_token\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not valid, or it might have expired\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "c8413e41-f36e-43e5-a4d0-6635b054afa9",
                "parentUUID": "96421b49-1a2d-4f61-857e-5c2e02cbf01a",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "3e1896ea-d0c9-492e-acb5-eeeb11bdee8c",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "General app settings ---",
        "suites": [
          {
            "title": "uploads whitelist restrictions",
            "suites": [],
            "tests": [
              {
                "title": "should be able to restricted whitelisted files only",
                "fullTitle": "General app settings --- uploads whitelist restrictions should be able to restricted whitelisted files only",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, sys_user1.authtoken, app1.api_key, filename2))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser2.authtoken, app1.api_key, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File creation failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">142</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "8464fb04-da04-41ca-9d02-c59035331a57",
                "parentUUID": "1bb1a9c7-4b38-4fa0-8565-12732c58a9dd",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "1bb1a9c7-4b38-4fa0-8565-12732c58a9dd",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to restricted whitelisted files only",
                "fullTitle": "General app settings --- uploads whitelist restrictions should be able to restricted whitelisted files only",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, sys_user1.authtoken, app1.api_key, filename2))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser2.authtoken, app1.api_key, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File creation failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">142</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "8464fb04-da04-41ca-9d02-c59035331a57",
                "parentUUID": "1bb1a9c7-4b38-4fa0-8565-12732c58a9dd",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "uploads blacklist restrictions",
            "suites": [],
            "tests": [
              {
                "title": "should be able to restrict blackted files only",
                "fullTitle": "General app settings --- uploads blacklist restrictions should be able to restrict blackted files only",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File creation failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">142</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, sys_user1.authtoken, app1.api_key, filename2))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File creation failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">142</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser2.authtoken, app1.api_key, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'application/json'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, sys_user1.authtoken, app1.api_key, filename4))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'application/pdf'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "f5225016-98b9-439e-b1a3-d1faea96c9f5",
                "parentUUID": "6095f864-7f43-4287-bd1f-35abed9df508",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "6095f864-7f43-4287-bd1f-35abed9df508",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to restrict blackted files only",
                "fullTitle": "General app settings --- uploads blacklist restrictions should be able to restrict blackted files only",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File creation failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">142</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, sys_user1.authtoken, app1.api_key, filename2))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File creation failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">142</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser2.authtoken, app1.api_key, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'application/json'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, sys_user1.authtoken, app1.api_key, filename4))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'application/pdf'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "f5225016-98b9-439e-b1a3-d1faea96c9f5",
                "parentUUID": "6095f864-7f43-4287-bd1f-35abed9df508",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "uploads restrictions on update object",
            "suites": [],
            "tests": [
              {
                "title": "should be able to restrict whitelisted files only on update upload object",
                "fullTitle": "General app settings --- uploads restrictions on update object should be able to restrict whitelisted files only on update upload object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br>    userFile = res.body.upload<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_upload'</span>, sys_user1.authtoken, app1.api_key, userFile.uid, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File update failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">143</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "1c9887ec-bfde-401a-8c93-bd725d491b02",
                "parentUUID": "88f99730-9597-4808-8d81-e8496f69b8a8",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "88f99730-9597-4808-8d81-e8496f69b8a8",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to restrict whitelisted files only on update upload object",
                "fullTitle": "General app settings --- uploads restrictions on update object should be able to restrict whitelisted files only on update upload object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br>    userFile = res.body.upload<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_upload'</span>, sys_user1.authtoken, app1.api_key, userFile.uid, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File update failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">143</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "1c9887ec-bfde-401a-8c93-bd725d491b02",
                "parentUUID": "88f99730-9597-4808-8d81-e8496f69b8a8",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "uploads disable restrictions",
            "suites": [],
            "tests": [
              {
                "title": "should be able to disable restrictions on whitelisted files",
                "fullTitle": "General app settings --- uploads disable restrictions should be able to disable restrictions on whitelisted files",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br>    userFile = res.body.upload<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_upload'</span>, sys_user1.authtoken, app1.api_key, userFile.uid, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.deep.equal(<span class=\"hljs-string\">'Woot! File updated successfully.'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "105204d3-5d7d-4bf6-ab7f-8aa542b64c0e",
                "parentUUID": "06dd4a5d-71b1-412f-b1aa-fa5391971cc0",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "06dd4a5d-71b1-412f-b1aa-fa5391971cc0",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to disable restrictions on whitelisted files",
                "fullTitle": "General app settings --- uploads disable restrictions should be able to disable restrictions on whitelisted files",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br>    userFile = res.body.upload<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_upload'</span>, sys_user1.authtoken, app1.api_key, userFile.uid, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.deep.equal(<span class=\"hljs-string\">'Woot! File updated successfully.'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "105204d3-5d7d-4bf6-ab7f-8aa542b64c0e",
                "parentUUID": "06dd4a5d-71b1-412f-b1aa-fa5391971cc0",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "users profile whitelist restrictions",
            "suites": [],
            "tests": [
              {
                "title": "should be able to restricted whitelisted files only",
                "fullTitle": "General app settings --- users profile whitelist restrictions should be able to restricted whitelisted files only",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser2.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"superman\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    user.username.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    user.first_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    <span class=\"hljs-comment\">// user.last_name.should.be.equal('superman')</span><br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err.trace)<br>  })",
                "isRoot": false,
                "uuid": "260dbc4b-259c-4bd6-b31f-6e42d4f42d05",
                "parentUUID": "51ce4b5a-4c89-42b5-9353-304452aa4640",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "51ce4b5a-4c89-42b5-9353-304452aa4640",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to restricted whitelisted files only",
                "fullTitle": "General app settings --- users profile whitelist restrictions should be able to restricted whitelisted files only",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser2.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"superman\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    user.username.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    user.first_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    <span class=\"hljs-comment\">// user.last_name.should.be.equal('superman')</span><br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err.trace)<br>  })",
                "isRoot": false,
                "uuid": "260dbc4b-259c-4bd6-b31f-6e42d4f42d05",
                "parentUUID": "51ce4b5a-4c89-42b5-9353-304452aa4640",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "users profile blacklist restrictions",
            "suites": [],
            "tests": [
              {
                "title": "should be able to restrict whitelisted uploads files only",
                "fullTitle": "General app settings --- users profile blacklist restrictions should be able to restrict whitelisted uploads files only",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser1.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"superman\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    user.username.should.be.equal(user1.username)<br>    user.last_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "beef58da-5571-4240-99d6-e15f32df9558",
                "parentUUID": "21b79661-9170-4bc2-b5a9-8eb03f64b26e",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "21b79661-9170-4bc2-b5a9-8eb03f64b26e",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to restrict whitelisted uploads files only",
                "fullTitle": "General app settings --- users profile blacklist restrictions should be able to restrict whitelisted uploads files only",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser1.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"superman\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    user.username.should.be.equal(user1.username)<br>    user.last_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "beef58da-5571-4240-99d6-e15f32df9558",
                "parentUUID": "21b79661-9170-4bc2-b5a9-8eb03f64b26e",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "users profile disable restrictions",
            "suites": [],
            "tests": [
              {
                "title": "should be able to restrict whitelisted user profile only",
                "fullTitle": "General app settings --- users profile disable restrictions should be able to restrict whitelisted user profile only",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser2.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"superman\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    user.username.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    user.first_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    user.last_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "51196d7d-6d64-4bf5-9e85-e878cea69293",
                "parentUUID": "e3cbd10e-76f4-4bc9-84d9-08f12f5f40ef",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "e3cbd10e-76f4-4bc9-84d9-08f12f5f40ef",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to restrict whitelisted user profile only",
                "fullTitle": "General app settings --- users profile disable restrictions should be able to restrict whitelisted user profile only",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser2.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"superman\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    user.username.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    user.first_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    user.last_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "51196d7d-6d64-4bf5-9e85-e878cea69293",
                "parentUUID": "e3cbd10e-76f4-4bc9-84d9-08f12f5f40ef",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "users restricted profile ",
            "suites": [],
            "tests": [
              {
                "title": "should be update by only system user",
                "fullTitle": "General app settings --- users restricted profile  should be update by only system user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">30000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, sys_user1.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"object\"</span>: {<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"hulk\"</span>,<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"hulk\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"hulk\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.object<br>    user.username.should.be.equal(<span class=\"hljs-string\">'hulk'</span>)<br>    user.first_name.should.be.equal(<span class=\"hljs-string\">'hulk'</span>)<br>    user.last_name.should.be.equal(<span class=\"hljs-string\">'hulk'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "54a6766b-ab45-4847-9b98-5a6ecb63ef43",
                "parentUUID": "7fcd2309-e595-4633-848f-6a9f3aecb93e",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "7fcd2309-e595-4633-848f-6a9f3aecb93e",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be update by only system user",
                "fullTitle": "General app settings --- users restricted profile  should be update by only system user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">30000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, sys_user1.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"object\"</span>: {<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"hulk\"</span>,<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"hulk\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"hulk\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.object<br>    user.username.should.be.equal(<span class=\"hljs-string\">'hulk'</span>)<br>    user.first_name.should.be.equal(<span class=\"hljs-string\">'hulk'</span>)<br>    user.last_name.should.be.equal(<span class=\"hljs-string\">'hulk'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "54a6766b-ab45-4847-9b98-5a6ecb63ef43",
                "parentUUID": "7fcd2309-e595-4633-848f-6a9f3aecb93e",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Enable or disable, Permitted login schemes",
            "suites": [],
            "tests": [
              {
                "title": "should be able to disable traditional login",
                "fullTitle": "General app settings --- Enable or disable, Permitted login schemes should be able to disable traditional login",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'login_app_user'</span>, app1.api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"email\"</span>: user2.email,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via traditional is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "2ab916f0-1015-4dbe-9149-17ae2fae6a38",
                "parentUUID": "3a19633b-8578-477d-8354-a86bb7ff8af0",
                "skipped": true
              },
              {
                "title": "should be able to disable Google login",
                "fullTitle": "General app settings --- Enable or disable, Permitted login schemes should be able to disable Google login",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'register_app_user'</span>, app1.api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"auth_data\"</span>: {<br>      <span class=\"hljs-string\">\"google\"</span>: {<br>          <span class=\"hljs-string\">\"access_token\"</span>: <span class=\"hljs-string\">\"ya29.CjHeAiM_voLZbQFdGxlzuHW1sweJFFzWfK5mHZn5Q5wkxTnnnZFa7axbhxEbuJ8cJz-N\"</span><br>      }<br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via google is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "57505fdf-d0a0-4988-b326-2b864a30c778",
                "parentUUID": "3a19633b-8578-477d-8354-a86bb7ff8af0",
                "skipped": true
              },
              {
                "title": "should be able to disable facebook login",
                "fullTitle": "General app settings --- Enable or disable, Permitted login schemes should be able to disable facebook login",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'register_app_user'</span>, app1.api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"auth_data\"</span>: {<br>      <span class=\"hljs-string\">\"facebook\"</span>: {<br>        <span class=\"hljs-string\">\"access_token\"</span>: <span class=\"hljs-string\">\"ya29.AHES6ZSvSaMpLeToKeNVowjHEZrJA_J0k8\"</span><br>      }<br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via facebook is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "64ab7f36-b2ee-410e-9639-8f1b7d266e4b",
                "parentUUID": "3a19633b-8578-477d-8354-a86bb7ff8af0",
                "skipped": true
              },
              {
                "title": "should be able to disable twitter login",
                "fullTitle": "General app settings --- Enable or disable, Permitted login schemes should be able to disable twitter login",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'register_app_user'</span>, app1.api_key, {<br><span class=\"hljs-string\">\"application_user\"</span>: {<br>  <span class=\"hljs-string\">\"auth_data\"</span>: {<br>      <span class=\"hljs-string\">\"twitter\"</span>: {<br>        <span class=\"hljs-string\">\"token\"</span>: <span class=\"hljs-string\">\"ya29.AHES6ZSvSaMpLeToKeNVowjHEZrJA_J0k8\"</span>,<br>        <span class=\"hljs-string\">\"token_secret\"</span>: <span class=\"hljs-string\">\"aMpLeToKeNVowjHEZrJA_J0k8\"</span>,<br>        <span class=\"hljs-string\">\"consumer_key\"</span>: <span class=\"hljs-string\">\"aMpLeToKeNVowjHEZrJA_J0k8kjfs78\"</span>,<br>        <span class=\"hljs-string\">\"consumer_secret\"</span>: <span class=\"hljs-string\">\"aMpLeToKeNVowjHEZrJA_J0kfd878\"</span><br>      }<br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via twitter is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "d007fb0c-ca88-4e71-9f74-8cb59417fc73",
                "parentUUID": "3a19633b-8578-477d-8354-a86bb7ff8af0",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "3a19633b-8578-477d-8354-a86bb7ff8af0",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to disable traditional login",
                "fullTitle": "General app settings --- Enable or disable, Permitted login schemes should be able to disable traditional login",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'login_app_user'</span>, app1.api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"email\"</span>: user2.email,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via traditional is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "2ab916f0-1015-4dbe-9149-17ae2fae6a38",
                "parentUUID": "3a19633b-8578-477d-8354-a86bb7ff8af0",
                "skipped": true
              },
              {
                "title": "should be able to disable Google login",
                "fullTitle": "General app settings --- Enable or disable, Permitted login schemes should be able to disable Google login",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'register_app_user'</span>, app1.api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"auth_data\"</span>: {<br>      <span class=\"hljs-string\">\"google\"</span>: {<br>          <span class=\"hljs-string\">\"access_token\"</span>: <span class=\"hljs-string\">\"ya29.CjHeAiM_voLZbQFdGxlzuHW1sweJFFzWfK5mHZn5Q5wkxTnnnZFa7axbhxEbuJ8cJz-N\"</span><br>      }<br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via google is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "57505fdf-d0a0-4988-b326-2b864a30c778",
                "parentUUID": "3a19633b-8578-477d-8354-a86bb7ff8af0",
                "skipped": true
              },
              {
                "title": "should be able to disable facebook login",
                "fullTitle": "General app settings --- Enable or disable, Permitted login schemes should be able to disable facebook login",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'register_app_user'</span>, app1.api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"auth_data\"</span>: {<br>      <span class=\"hljs-string\">\"facebook\"</span>: {<br>        <span class=\"hljs-string\">\"access_token\"</span>: <span class=\"hljs-string\">\"ya29.AHES6ZSvSaMpLeToKeNVowjHEZrJA_J0k8\"</span><br>      }<br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via facebook is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "64ab7f36-b2ee-410e-9639-8f1b7d266e4b",
                "parentUUID": "3a19633b-8578-477d-8354-a86bb7ff8af0",
                "skipped": true
              },
              {
                "title": "should be able to disable twitter login",
                "fullTitle": "General app settings --- Enable or disable, Permitted login schemes should be able to disable twitter login",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'register_app_user'</span>, app1.api_key, {<br><span class=\"hljs-string\">\"application_user\"</span>: {<br>  <span class=\"hljs-string\">\"auth_data\"</span>: {<br>      <span class=\"hljs-string\">\"twitter\"</span>: {<br>        <span class=\"hljs-string\">\"token\"</span>: <span class=\"hljs-string\">\"ya29.AHES6ZSvSaMpLeToKeNVowjHEZrJA_J0k8\"</span>,<br>        <span class=\"hljs-string\">\"token_secret\"</span>: <span class=\"hljs-string\">\"aMpLeToKeNVowjHEZrJA_J0k8\"</span>,<br>        <span class=\"hljs-string\">\"consumer_key\"</span>: <span class=\"hljs-string\">\"aMpLeToKeNVowjHEZrJA_J0k8kjfs78\"</span>,<br>        <span class=\"hljs-string\">\"consumer_secret\"</span>: <span class=\"hljs-string\">\"aMpLeToKeNVowjHEZrJA_J0kfd878\"</span><br>      }<br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via twitter is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "d007fb0c-ca88-4e71-9f74-8cb59417fc73",
                "parentUUID": "3a19633b-8578-477d-8354-a86bb7ff8af0",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 4,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "cf86d643-3eee-4a73-8692-781d70aff862",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Applications ---",
        "suites": [
          {
            "title": "Get restricted uids",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get list of all restricted uids for an application",
                "fullTitle": "Applications --- Get restricted uids should be able to get list of all restricted uids for an application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(api.get(config.endpoints.restricted_uids)<br>.set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>.expect(<span class=\"hljs-number\">200</span>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"restricted\"</span>: [<br>      <span class=\"hljs-string\">\"published\"</span>,<br>      <span class=\"hljs-string\">\"uid\"</span>,<br>      <span class=\"hljs-string\">\"created_at\"</span>,<br>      <span class=\"hljs-string\">\"deleted_at\"</span>,<br>      <span class=\"hljs-string\">\"updated_at\"</span>,<br>      <span class=\"hljs-string\">\"tags_array\"</span>,<br>      <span class=\"hljs-string\">\"klass_id\"</span>,<br>      <span class=\"hljs-string\">\"applikation_id\"</span>,<br>      <span class=\"hljs-string\">\"*_ids\"</span>,<br>      <span class=\"hljs-string\">\"id\"</span>,<br>      <span class=\"hljs-string\">\"_id\"</span>,<br>      <span class=\"hljs-string\">\"ACL\"</span>,<br>      <span class=\"hljs-string\">\"SYS_ACL\"</span>,<br>      <span class=\"hljs-string\">\"DEFAULT_ACL\"</span>,<br>      <span class=\"hljs-string\">\"app_user_object_uid\"</span>,<br>      <span class=\"hljs-string\">\"built_io_upload\"</span>,<br>      <span class=\"hljs-string\">\"__loc\"</span>,<br>      <span class=\"hljs-string\">\"tags\"</span>,<br>      <span class=\"hljs-string\">\"_owner\"</span>,<br>      <span class=\"hljs-string\">\"_version\"</span>,<br>      <span class=\"hljs-string\">\"toJSON\"</span>,<br>      <span class=\"hljs-string\">\"save\"</span>,<br>      <span class=\"hljs-string\">\"update\"</span>,<br>      <span class=\"hljs-string\">\"domain\"</span>,<br>      <span class=\"hljs-string\">\"shard_account\"</span>,<br>      <span class=\"hljs-string\">\"shard_app\"</span>,<br>      <span class=\"hljs-string\">\"shard_random\"</span>,<br>      <span class=\"hljs-string\">\"hook\"</span>,<br>      <span class=\"hljs-string\">\"__indexes\"</span>,<br>      <span class=\"hljs-string\">\"__meta\"</span>,<br>      <span class=\"hljs-string\">\"created_by\"</span>,<br>      <span class=\"hljs-string\">\"updated_by\"</span>,<br>      <span class=\"hljs-string\">\"inbuilt_class\"</span>,<br>      <span class=\"hljs-string\">\"tenant_id\"</span>,<br>      <span class=\"hljs-string\">\"isSystemUser\"</span>,<br>      <span class=\"hljs-string\">\"isApplicationUser\"</span>,<br>      <span class=\"hljs-string\">\"isNew\"</span>,<br>      <span class=\"hljs-string\">\"_shouldLean\"</span>,<br>      <span class=\"hljs-string\">\"_shouldFilter\"</span>,<br>      <span class=\"hljs-string\">\"_shouldSyncPostHooks\"</span>,<br>      <span class=\"hljs-string\">\"_skip_transformations\"</span>,<br>      <span class=\"hljs-string\">\"_filterOptions\"</span>,<br>      <span class=\"hljs-string\">\"options\"</span>,<br>      <span class=\"hljs-string\">\"_version\"</span>,<br>      <span class=\"hljs-string\">\"__v\"</span><br>    ]<br>  })<br>  <br>  done()<br>});",
                "isRoot": false,
                "uuid": "bb482244-4bf0-4a0b-942f-ed68e2c3efd3",
                "parentUUID": "68f8731d-ca25-4f6c-befc-7ea12d7aeb9f",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "68f8731d-ca25-4f6c-befc-7ea12d7aeb9f",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get list of all restricted uids for an application",
                "fullTitle": "Applications --- Get restricted uids should be able to get list of all restricted uids for an application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(api.get(config.endpoints.restricted_uids)<br>.set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>.expect(<span class=\"hljs-number\">200</span>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"restricted\"</span>: [<br>      <span class=\"hljs-string\">\"published\"</span>,<br>      <span class=\"hljs-string\">\"uid\"</span>,<br>      <span class=\"hljs-string\">\"created_at\"</span>,<br>      <span class=\"hljs-string\">\"deleted_at\"</span>,<br>      <span class=\"hljs-string\">\"updated_at\"</span>,<br>      <span class=\"hljs-string\">\"tags_array\"</span>,<br>      <span class=\"hljs-string\">\"klass_id\"</span>,<br>      <span class=\"hljs-string\">\"applikation_id\"</span>,<br>      <span class=\"hljs-string\">\"*_ids\"</span>,<br>      <span class=\"hljs-string\">\"id\"</span>,<br>      <span class=\"hljs-string\">\"_id\"</span>,<br>      <span class=\"hljs-string\">\"ACL\"</span>,<br>      <span class=\"hljs-string\">\"SYS_ACL\"</span>,<br>      <span class=\"hljs-string\">\"DEFAULT_ACL\"</span>,<br>      <span class=\"hljs-string\">\"app_user_object_uid\"</span>,<br>      <span class=\"hljs-string\">\"built_io_upload\"</span>,<br>      <span class=\"hljs-string\">\"__loc\"</span>,<br>      <span class=\"hljs-string\">\"tags\"</span>,<br>      <span class=\"hljs-string\">\"_owner\"</span>,<br>      <span class=\"hljs-string\">\"_version\"</span>,<br>      <span class=\"hljs-string\">\"toJSON\"</span>,<br>      <span class=\"hljs-string\">\"save\"</span>,<br>      <span class=\"hljs-string\">\"update\"</span>,<br>      <span class=\"hljs-string\">\"domain\"</span>,<br>      <span class=\"hljs-string\">\"shard_account\"</span>,<br>      <span class=\"hljs-string\">\"shard_app\"</span>,<br>      <span class=\"hljs-string\">\"shard_random\"</span>,<br>      <span class=\"hljs-string\">\"hook\"</span>,<br>      <span class=\"hljs-string\">\"__indexes\"</span>,<br>      <span class=\"hljs-string\">\"__meta\"</span>,<br>      <span class=\"hljs-string\">\"created_by\"</span>,<br>      <span class=\"hljs-string\">\"updated_by\"</span>,<br>      <span class=\"hljs-string\">\"inbuilt_class\"</span>,<br>      <span class=\"hljs-string\">\"tenant_id\"</span>,<br>      <span class=\"hljs-string\">\"isSystemUser\"</span>,<br>      <span class=\"hljs-string\">\"isApplicationUser\"</span>,<br>      <span class=\"hljs-string\">\"isNew\"</span>,<br>      <span class=\"hljs-string\">\"_shouldLean\"</span>,<br>      <span class=\"hljs-string\">\"_shouldFilter\"</span>,<br>      <span class=\"hljs-string\">\"_shouldSyncPostHooks\"</span>,<br>      <span class=\"hljs-string\">\"_skip_transformations\"</span>,<br>      <span class=\"hljs-string\">\"_filterOptions\"</span>,<br>      <span class=\"hljs-string\">\"options\"</span>,<br>      <span class=\"hljs-string\">\"_version\"</span>,<br>      <span class=\"hljs-string\">\"__v\"</span><br>    ]<br>  })<br>  <br>  done()<br>});",
                "isRoot": false,
                "uuid": "bb482244-4bf0-4a0b-942f-ed68e2c3efd3",
                "parentUUID": "68f8731d-ca25-4f6c-befc-7ea12d7aeb9f",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "App creation",
            "suites": [],
            "tests": [
              {
                "title": "should be able to create an application as a system user",
                "fullTitle": "Applications --- App creation should be able to create an application as a system user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appName = <span class=\"hljs-string\">\"Post App\"</span><br>      factories.create(<span class=\"hljs-string\">'Create_application'</span>, authtoken, {<br>          <span class=\"hljs-string\">\"name\"</span>: appName<br>      })<br>      .expect(<span class=\"hljs-number\">201</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> application = res.body.application<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Hurray! Application created successfully.'</span>)<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>        application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        application.name.should.be.equal(appName)<br>        application.created_at.should.be.equal(application.updated_at)<br>        application.owner_uid.should.be.equal(userUID)<br>        application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>        factories.create(<span class=\"hljs-string\">'Delete_application'</span>, authtoken, application.api_key)<br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>            <br>            done(err)<br>          })<br>      })",
                "isRoot": false,
                "uuid": "48c37fb3-11d3-45df-89b8-aca46d32edf9",
                "parentUUID": "0311084e-9330-43cc-9119-ff27b0ef0df8",
                "skipped": true
              },
              {
                "title": "should provide error message for invalid authtoken while creating application",
                "fullTitle": "Applications --- App creation should provide error message for invalid authtoken while creating application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appName = <span class=\"hljs-string\">\"Post App\"</span><br>      factories.create(<span class=\"hljs-string\">'Create_application'</span>, <span class=\"hljs-string\">\"asdasd\"</span>, {<br>          <span class=\"hljs-string\">\"name\"</span>: appName<br>      })<br>      .expect(<span class=\"hljs-number\">401</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {}<br>        })<br>         done(err)<br>      })",
                "isRoot": false,
                "uuid": "8960b83e-23f0-42fe-b206-2426e4f76831",
                "parentUUID": "0311084e-9330-43cc-9119-ff27b0ef0df8",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "0311084e-9330-43cc-9119-ff27b0ef0df8",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to create an application as a system user",
                "fullTitle": "Applications --- App creation should be able to create an application as a system user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appName = <span class=\"hljs-string\">\"Post App\"</span><br>      factories.create(<span class=\"hljs-string\">'Create_application'</span>, authtoken, {<br>          <span class=\"hljs-string\">\"name\"</span>: appName<br>      })<br>      .expect(<span class=\"hljs-number\">201</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> application = res.body.application<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Hurray! Application created successfully.'</span>)<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>        application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        application.name.should.be.equal(appName)<br>        application.created_at.should.be.equal(application.updated_at)<br>        application.owner_uid.should.be.equal(userUID)<br>        application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>        factories.create(<span class=\"hljs-string\">'Delete_application'</span>, authtoken, application.api_key)<br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>            <br>            done(err)<br>          })<br>      })",
                "isRoot": false,
                "uuid": "48c37fb3-11d3-45df-89b8-aca46d32edf9",
                "parentUUID": "0311084e-9330-43cc-9119-ff27b0ef0df8",
                "skipped": true
              },
              {
                "title": "should provide error message for invalid authtoken while creating application",
                "fullTitle": "Applications --- App creation should provide error message for invalid authtoken while creating application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appName = <span class=\"hljs-string\">\"Post App\"</span><br>      factories.create(<span class=\"hljs-string\">'Create_application'</span>, <span class=\"hljs-string\">\"asdasd\"</span>, {<br>          <span class=\"hljs-string\">\"name\"</span>: appName<br>      })<br>      .expect(<span class=\"hljs-number\">401</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {}<br>        })<br>         done(err)<br>      })",
                "isRoot": false,
                "uuid": "8960b83e-23f0-42fe-b206-2426e4f76831",
                "parentUUID": "0311084e-9330-43cc-9119-ff27b0ef0df8",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Get applications",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all applications",
                "fullTitle": "Applications --- Get applications should be able to get all applications",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br><br>    <span class=\"hljs-keyword\">var</span> application = res.body.applications[<span class=\"hljs-number\">0</span>]<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    application.api_key.should.be.equal(api_key)<br>    application.created_at.should.be.equal(application.updated_at)<br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br><br><br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "3fd1a7b6-187d-464b-888a-bde99d99bd4c",
                "parentUUID": "7861700e-bfd3-484c-bcb4-9d59518c87fe",
                "skipped": true
              },
              {
                "title": "should be able to get count of applications created",
                "fullTitle": "Applications --- Get applications should be able to get count of applications created",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-literal\">true</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(res.body).should.to.be.deep.equal([<span class=\"hljs-string\">'applications'</span>])<br>    res.body.applications.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "5b9721b1-958d-47ef-b62d-4bf9f836718b",
                "parentUUID": "7861700e-bfd3-484c-bcb4-9d59518c87fe",
                "skipped": true
              },
              {
                "title": "should be able to get an application using query",
                "fullTitle": "Applications --- Get applications should be able to get an application using query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"query\"</span>: {<br>      <span class=\"hljs-string\">\"api_key\"</span>: api_key<br>    }<br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br><br>    <span class=\"hljs-keyword\">var</span> application = res.body.applications[<span class=\"hljs-number\">0</span>]<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    application.api_key.should.be.equal(api_key)<br>    application.created_at.should.be.equal(application.updated_at)<br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br><br><br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "d7c08686-f0c5-4d0e-b2b8-45309e6fb242",
                "parentUUID": "7861700e-bfd3-484c-bcb4-9d59518c87fe",
                "skipped": true
              },
              {
                "title": "should be able to provide an applications count in response",
                "fullTitle": "Applications --- Get applications should be able to provide an applications count in response",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-literal\">true</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> response = res.body<br>    <br>    response.applications.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>    response.applications.should.not.equal(<span class=\"hljs-number\">0</span>)<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "ae08ad88-d7f4-4934-b4c6-734feb901746",
                "parentUUID": "7861700e-bfd3-484c-bcb4-9d59518c87fe",
                "skipped": true
              },
              {
                "title": "should be able to get an applications including collaborators info in response",
                "fullTitle": "Applications --- Get applications should be able to get an applications including collaborators info in response",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">25000</span>)<br>factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>        <span class=\"hljs-string\">\"emails\"</span>: [<br>          res.body.user.email<br>        ]<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        <br>        factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>            <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>            <span class=\"hljs-string\">\"include_collaborators\"</span>: <span class=\"hljs-literal\">true</span>,<br>            <span class=\"hljs-string\">\"query\"</span>: {<br>              <span class=\"hljs-string\">\"api_key\"</span>: api_key<br>            }<br>          })<br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>            <br>            <span class=\"hljs-keyword\">var</span> application = res2.body.applications[<span class=\"hljs-number\">0</span>]<br>            <br>          <span class=\"hljs-comment\">// Keys assertion</span><br>            <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'collaborators'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>            <span class=\"hljs-built_in\">Object</span>.keys(application.collaborators[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>, <span class=\"hljs-string\">'is_owner'</span>, <span class=\"hljs-string\">'roles'</span>])<br>            <span class=\"hljs-built_in\">Object</span>.keys(application.collaborators[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>, <span class=\"hljs-string\">'roles'</span>])<br>              <span class=\"hljs-comment\">// Data type assertion</span><br>            application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].plan_id.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].plan_id.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].is_owner.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            <span class=\"hljs-comment\">//application.collaborators[1].roles[0].should.be.a('string') </span><br>            application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>            application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>            application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>            <span class=\"hljs-comment\">// Value assertion</span><br>            application.api_key.should.be.equal(api_key)<br>            application.owner_uid.should.be.equal(userUID)<br>            application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>            application.collaborators[<span class=\"hljs-number\">1</span>].uid.should.be.equal(userUID)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].uid.should.not.be.equal(userUID)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'free_trial'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'free_trial'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].username.should.be.equal(username)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].email.should.be.equal(email)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].is_owner.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>            <span class=\"hljs-comment\">//application.created_at.should.be.equal(application.updated_at)</span><br>            done(err)<br>          })<br>      })<br>  })",
                "isRoot": false,
                "uuid": "54d7f21a-c042-430f-997a-939e94be4125",
                "parentUUID": "7861700e-bfd3-484c-bcb4-9d59518c87fe",
                "skipped": true
              },
              {
                "title": "should be able to get an application including application variables in response.",
                "fullTitle": "Applications --- Get applications should be able to get an application including application variables in response.",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_app_settings'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"app_settings\"</span>: {<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"test_tool\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>      }<br>    }<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    <br>    factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>        <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>        <span class=\"hljs-string\">\"include_application_variables\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>        <span class=\"hljs-comment\">//res2.body.applications.length.should.be.equal(1)</span><br>        <br>        <span class=\"hljs-keyword\">var</span> application = R.last(res2.body.applications)<br>        <br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(application.application_variables).should.to.be.deep.equal([<span class=\"hljs-string\">'test_tool'</span>])<br>        <br>          <span class=\"hljs-comment\">// Data type assertion</span><br>        application.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        <br>        application.application_variables.test_tool.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br><br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "821348e5-b7fe-41e5-a338-2de003e33434",
                "parentUUID": "7861700e-bfd3-484c-bcb4-9d59518c87fe",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "7861700e-bfd3-484c-bcb4-9d59518c87fe",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get all applications",
                "fullTitle": "Applications --- Get applications should be able to get all applications",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br><br>    <span class=\"hljs-keyword\">var</span> application = res.body.applications[<span class=\"hljs-number\">0</span>]<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    application.api_key.should.be.equal(api_key)<br>    application.created_at.should.be.equal(application.updated_at)<br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br><br><br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "3fd1a7b6-187d-464b-888a-bde99d99bd4c",
                "parentUUID": "7861700e-bfd3-484c-bcb4-9d59518c87fe",
                "skipped": true
              },
              {
                "title": "should be able to get count of applications created",
                "fullTitle": "Applications --- Get applications should be able to get count of applications created",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-literal\">true</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(res.body).should.to.be.deep.equal([<span class=\"hljs-string\">'applications'</span>])<br>    res.body.applications.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "5b9721b1-958d-47ef-b62d-4bf9f836718b",
                "parentUUID": "7861700e-bfd3-484c-bcb4-9d59518c87fe",
                "skipped": true
              },
              {
                "title": "should be able to get an application using query",
                "fullTitle": "Applications --- Get applications should be able to get an application using query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"query\"</span>: {<br>      <span class=\"hljs-string\">\"api_key\"</span>: api_key<br>    }<br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br><br>    <span class=\"hljs-keyword\">var</span> application = res.body.applications[<span class=\"hljs-number\">0</span>]<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    application.api_key.should.be.equal(api_key)<br>    application.created_at.should.be.equal(application.updated_at)<br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br><br><br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "d7c08686-f0c5-4d0e-b2b8-45309e6fb242",
                "parentUUID": "7861700e-bfd3-484c-bcb4-9d59518c87fe",
                "skipped": true
              },
              {
                "title": "should be able to provide an applications count in response",
                "fullTitle": "Applications --- Get applications should be able to provide an applications count in response",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-literal\">true</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> response = res.body<br>    <br>    response.applications.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>    response.applications.should.not.equal(<span class=\"hljs-number\">0</span>)<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "ae08ad88-d7f4-4934-b4c6-734feb901746",
                "parentUUID": "7861700e-bfd3-484c-bcb4-9d59518c87fe",
                "skipped": true
              },
              {
                "title": "should be able to get an applications including collaborators info in response",
                "fullTitle": "Applications --- Get applications should be able to get an applications including collaborators info in response",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">25000</span>)<br>factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>        <span class=\"hljs-string\">\"emails\"</span>: [<br>          res.body.user.email<br>        ]<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        <br>        factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>            <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>            <span class=\"hljs-string\">\"include_collaborators\"</span>: <span class=\"hljs-literal\">true</span>,<br>            <span class=\"hljs-string\">\"query\"</span>: {<br>              <span class=\"hljs-string\">\"api_key\"</span>: api_key<br>            }<br>          })<br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>            <br>            <span class=\"hljs-keyword\">var</span> application = res2.body.applications[<span class=\"hljs-number\">0</span>]<br>            <br>          <span class=\"hljs-comment\">// Keys assertion</span><br>            <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'collaborators'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>            <span class=\"hljs-built_in\">Object</span>.keys(application.collaborators[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>, <span class=\"hljs-string\">'is_owner'</span>, <span class=\"hljs-string\">'roles'</span>])<br>            <span class=\"hljs-built_in\">Object</span>.keys(application.collaborators[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>, <span class=\"hljs-string\">'roles'</span>])<br>              <span class=\"hljs-comment\">// Data type assertion</span><br>            application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].plan_id.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].plan_id.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].is_owner.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            <span class=\"hljs-comment\">//application.collaborators[1].roles[0].should.be.a('string') </span><br>            application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>            application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>            application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>            <span class=\"hljs-comment\">// Value assertion</span><br>            application.api_key.should.be.equal(api_key)<br>            application.owner_uid.should.be.equal(userUID)<br>            application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>            application.collaborators[<span class=\"hljs-number\">1</span>].uid.should.be.equal(userUID)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].uid.should.not.be.equal(userUID)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'free_trial'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'free_trial'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].username.should.be.equal(username)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].email.should.be.equal(email)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].is_owner.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>            <span class=\"hljs-comment\">//application.created_at.should.be.equal(application.updated_at)</span><br>            done(err)<br>          })<br>      })<br>  })",
                "isRoot": false,
                "uuid": "54d7f21a-c042-430f-997a-939e94be4125",
                "parentUUID": "7861700e-bfd3-484c-bcb4-9d59518c87fe",
                "skipped": true
              },
              {
                "title": "should be able to get an application including application variables in response.",
                "fullTitle": "Applications --- Get applications should be able to get an application including application variables in response.",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_app_settings'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"app_settings\"</span>: {<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"test_tool\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>      }<br>    }<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    <br>    factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>        <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>        <span class=\"hljs-string\">\"include_application_variables\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>        <span class=\"hljs-comment\">//res2.body.applications.length.should.be.equal(1)</span><br>        <br>        <span class=\"hljs-keyword\">var</span> application = R.last(res2.body.applications)<br>        <br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(application.application_variables).should.to.be.deep.equal([<span class=\"hljs-string\">'test_tool'</span>])<br>        <br>          <span class=\"hljs-comment\">// Data type assertion</span><br>        application.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        <br>        application.application_variables.test_tool.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br><br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "821348e5-b7fe-41e5-a338-2de003e33434",
                "parentUUID": "7861700e-bfd3-484c-bcb4-9d59518c87fe",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 6,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 6,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Get an applications skip/limit",
            "suites": [],
            "tests": [
              {
                "title": "should be able to skip number of applications while getting all apps",
                "fullTitle": "Applications --- Get an applications skip/limit should be able to skip number of applications while getting all apps",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">3</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-keyword\">var</span> application = res.body.applications<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "189d9788-47c4-488a-b1d8-569b0617101d",
                "parentUUID": "60900c4c-7c5f-4b8b-adbc-25e89f0f83c0",
                "skipped": true
              },
              {
                "title": "should be able to limit number of applications while getting all apps",
                "fullTitle": "Applications --- Get an applications skip/limit should be able to limit number of applications while getting all apps",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">20000</span>)<br>factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-string\">\"2\"</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>    <br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "953e371d-8691-40d2-af09-7b86f1fa5da2",
                "parentUUID": "60900c4c-7c5f-4b8b-adbc-25e89f0f83c0",
                "skipped": true
              },
              {
                "title": "should provide error message for -ve skip/limit values while getting all apps",
                "fullTitle": "Applications --- Get an applications skip/limit should provide error message for -ve skip/limit values while getting all apps",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"skip\"</span>: -<span class=\"hljs-number\">2</span>,<br>    <span class=\"hljs-string\">\"limit\"</span>: -<span class=\"hljs-number\">2</span><br>  })<br>.expect(<span class=\"hljs-number\">422</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Failed to fetch applications. Please try again with valid parameters.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">109</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"params\"</span>: [<br>        <span class=\"hljs-string\">\"has an invalid operation.\"</span><br>      ]<br>    }<br>  })<br>  <br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "3f870b2c-20cf-4d62-9beb-b477c6048d9a",
                "parentUUID": "60900c4c-7c5f-4b8b-adbc-25e89f0f83c0",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "60900c4c-7c5f-4b8b-adbc-25e89f0f83c0",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to skip number of applications while getting all apps",
                "fullTitle": "Applications --- Get an applications skip/limit should be able to skip number of applications while getting all apps",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">3</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-keyword\">var</span> application = res.body.applications<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "189d9788-47c4-488a-b1d8-569b0617101d",
                "parentUUID": "60900c4c-7c5f-4b8b-adbc-25e89f0f83c0",
                "skipped": true
              },
              {
                "title": "should be able to limit number of applications while getting all apps",
                "fullTitle": "Applications --- Get an applications skip/limit should be able to limit number of applications while getting all apps",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">20000</span>)<br>factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-string\">\"2\"</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>    <br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "953e371d-8691-40d2-af09-7b86f1fa5da2",
                "parentUUID": "60900c4c-7c5f-4b8b-adbc-25e89f0f83c0",
                "skipped": true
              },
              {
                "title": "should provide error message for -ve skip/limit values while getting all apps",
                "fullTitle": "Applications --- Get an applications skip/limit should provide error message for -ve skip/limit values while getting all apps",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"skip\"</span>: -<span class=\"hljs-number\">2</span>,<br>    <span class=\"hljs-string\">\"limit\"</span>: -<span class=\"hljs-number\">2</span><br>  })<br>.expect(<span class=\"hljs-number\">422</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Failed to fetch applications. Please try again with valid parameters.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">109</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"params\"</span>: [<br>        <span class=\"hljs-string\">\"has an invalid operation.\"</span><br>      ]<br>    }<br>  })<br>  <br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "3f870b2c-20cf-4d62-9beb-b477c6048d9a",
                "parentUUID": "60900c4c-7c5f-4b8b-adbc-25e89f0f83c0",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 3,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Get valid field types for an apllication",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get field datatypes supported and the various options for these fields",
                "fullTitle": "Applications --- Get valid field types for an apllication should be able to get field datatypes supported and the various options for these fields",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "api.get(config.endpoints.applications + config.endpoints.valid_field_types)<br>  .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>  .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>  .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"field_types\"</span>: [<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Text\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this datatype we can enter string literals for the field. Additionaly you can also assign blob data.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"isodate\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"ISODate\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this datatype you can assign either date, time or datetime values for the particular field.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"file\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"File\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"When you upload any asset in your built.io application, you can apply that upload's UID to this field. This will form a link between that asset and the object.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"boolean\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Boolean\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Use this datatype when you would like to add fields that can act as a switch for you. For Example: In an Invoice class, there can be a boolean field called, 'paid'\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"reference\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Reference\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"You can refer to objects of other classes in your application, when you use this field.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"group\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Group\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this field, you can group other fields into this one. An example usage can be, an address field, which is a composite of streeet address, city, state.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"link\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Link\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this field you can save hyperlinks into your objects. The link field itself is composite of two fields, link title and link href.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Number\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"This datatype can be used to store numerical values.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"mixed\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Mixed\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"This datatype helps you save a key-value store in your object.\"</span><br>        }<br>      ]<br>    })<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "56d17e6c-e52e-4789-b293-4655711a5082",
                "parentUUID": "6c488a3d-0990-485e-8c09-9da3cd4bef23",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "6c488a3d-0990-485e-8c09-9da3cd4bef23",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get field datatypes supported and the various options for these fields",
                "fullTitle": "Applications --- Get valid field types for an apllication should be able to get field datatypes supported and the various options for these fields",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "api.get(config.endpoints.applications + config.endpoints.valid_field_types)<br>  .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>  .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>  .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"field_types\"</span>: [<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Text\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this datatype we can enter string literals for the field. Additionaly you can also assign blob data.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"isodate\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"ISODate\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this datatype you can assign either date, time or datetime values for the particular field.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"file\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"File\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"When you upload any asset in your built.io application, you can apply that upload's UID to this field. This will form a link between that asset and the object.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"boolean\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Boolean\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Use this datatype when you would like to add fields that can act as a switch for you. For Example: In an Invoice class, there can be a boolean field called, 'paid'\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"reference\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Reference\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"You can refer to objects of other classes in your application, when you use this field.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"group\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Group\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this field, you can group other fields into this one. An example usage can be, an address field, which is a composite of streeet address, city, state.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"link\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Link\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this field you can save hyperlinks into your objects. The link field itself is composite of two fields, link title and link href.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Number\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"This datatype can be used to store numerical values.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"mixed\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Mixed\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"This datatype helps you save a key-value store in your object.\"</span><br>        }<br>      ]<br>    })<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "56d17e6c-e52e-4789-b293-4655711a5082",
                "parentUUID": "6c488a3d-0990-485e-8c09-9da3cd4bef23",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Get app",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get application as an owner",
                "fullTitle": "Applications --- Get app should be able to get application as an owner",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_application'</span>, authtoken)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> app = res.body.application<br>    factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, app.api_key)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> application = res1.body.application<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>        application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        application.api_key.should.be.equal(app.api_key)<br>          <span class=\"hljs-comment\">// bug</span><br>          <span class=\"hljs-comment\">//application.created_at.should.be.equal(application.updated_at)</span><br>        application.owner_uid.should.be.equal(userUID)<br>        application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>        factories.create(<span class=\"hljs-string\">'Delete_application'</span>, authtoken, app.api_key)<br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>            done(err)<br>          })<br><br>      })<br>  });",
                "isRoot": false,
                "uuid": "232f7786-4b74-40c8-849d-9a6a6c0b7122",
                "parentUUID": "7c115560-4401-4418-9438-85b6530caf75",
                "skipped": true
              },
              {
                "title": "should be able to get application as a collaborator without master_key in response",
                "fullTitle": "Applications --- Get app should be able to get application as a collaborator without master_key in response",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken1, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    <span class=\"hljs-keyword\">var</span> application = res.body.application<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    application.user_uids.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    application.api_key.should.be.equal(api_key)<br>    <span class=\"hljs-comment\">//bug</span><br>    <span class=\"hljs-comment\">//application.created_at.should.be.equal(application.updated_at)</span><br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>    application.owner_uid.should.not.equal(application.user_uids[<span class=\"hljs-number\">1</span>])<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "42cf0f9d-849d-414d-b043-0f452b880c9a",
                "parentUUID": "7c115560-4401-4418-9438-85b6530caf75",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "7c115560-4401-4418-9438-85b6530caf75",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get application as an owner",
                "fullTitle": "Applications --- Get app should be able to get application as an owner",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_application'</span>, authtoken)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> app = res.body.application<br>    factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, app.api_key)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> application = res1.body.application<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>        application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        application.api_key.should.be.equal(app.api_key)<br>          <span class=\"hljs-comment\">// bug</span><br>          <span class=\"hljs-comment\">//application.created_at.should.be.equal(application.updated_at)</span><br>        application.owner_uid.should.be.equal(userUID)<br>        application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>        factories.create(<span class=\"hljs-string\">'Delete_application'</span>, authtoken, app.api_key)<br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>            done(err)<br>          })<br><br>      })<br>  });",
                "isRoot": false,
                "uuid": "232f7786-4b74-40c8-849d-9a6a6c0b7122",
                "parentUUID": "7c115560-4401-4418-9438-85b6530caf75",
                "skipped": true
              },
              {
                "title": "should be able to get application as a collaborator without master_key in response",
                "fullTitle": "Applications --- Get app should be able to get application as a collaborator without master_key in response",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken1, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    <span class=\"hljs-keyword\">var</span> application = res.body.application<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    application.user_uids.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    application.api_key.should.be.equal(api_key)<br>    <span class=\"hljs-comment\">//bug</span><br>    <span class=\"hljs-comment\">//application.created_at.should.be.equal(application.updated_at)</span><br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>    application.owner_uid.should.not.equal(application.user_uids[<span class=\"hljs-number\">1</span>])<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "42cf0f9d-849d-414d-b043-0f452b880c9a",
                "parentUUID": "7c115560-4401-4418-9438-85b6530caf75",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Update app",
            "suites": [],
            "tests": [
              {
                "title": "should be able to update created application",
                "fullTitle": "Applications --- Update app should be able to update created application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_application'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    <span class=\"hljs-keyword\">var</span> application = res.body.application<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    <span class=\"hljs-comment\">// application.user_uids[0].length.should.be.a('string')</span><br>    <span class=\"hljs-comment\">// console.log(\"==\", application.user_uids)</span><br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Awesome! Application updated successfully.'</span>)<br>    application.name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>    application.api_key.should.be.equal(api_key)<br>    application.created_at.should.be.not.equal(application.updated_at)<br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "0e83433e-8da4-4046-b81e-0732d9601c92",
                "parentUUID": "edc65b91-590b-427b-a182-f40342a4b25b",
                "skipped": true
              },
              {
                "title": "should not be able to update application as a collaborator",
                "fullTitle": "Applications --- Update app should not be able to update application as a collaborator",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'Update_application'</span>, res.body.user.authtoken, api_key, {<br>                  <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated by collaborator\"</span><br>                })<br>                .expect(<span class=\"hljs-number\">422</span>) <span class=\"hljs-comment\">//need to fix in factory</span><br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.error_message.should.to.be.equal(<span class=\"hljs-string\">'Bummer. Access denied. It seems you are not the owner of the app.'</span>)<br>                  done(err)<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "c2916697-826e-45d0-a6c2-511476995e40",
                "parentUUID": "edc65b91-590b-427b-a182-f40342a4b25b",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "edc65b91-590b-427b-a182-f40342a4b25b",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to update created application",
                "fullTitle": "Applications --- Update app should be able to update created application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_application'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    <span class=\"hljs-keyword\">var</span> application = res.body.application<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    <span class=\"hljs-comment\">// application.user_uids[0].length.should.be.a('string')</span><br>    <span class=\"hljs-comment\">// console.log(\"==\", application.user_uids)</span><br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Awesome! Application updated successfully.'</span>)<br>    application.name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>    application.api_key.should.be.equal(api_key)<br>    application.created_at.should.be.not.equal(application.updated_at)<br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "0e83433e-8da4-4046-b81e-0732d9601c92",
                "parentUUID": "edc65b91-590b-427b-a182-f40342a4b25b",
                "skipped": true
              },
              {
                "title": "should not be able to update application as a collaborator",
                "fullTitle": "Applications --- Update app should not be able to update application as a collaborator",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'Update_application'</span>, res.body.user.authtoken, api_key, {<br>                  <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated by collaborator\"</span><br>                })<br>                .expect(<span class=\"hljs-number\">422</span>) <span class=\"hljs-comment\">//need to fix in factory</span><br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.error_message.should.to.be.equal(<span class=\"hljs-string\">'Bummer. Access denied. It seems you are not the owner of the app.'</span>)<br>                  done(err)<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "c2916697-826e-45d0-a6c2-511476995e40",
                "parentUUID": "edc65b91-590b-427b-a182-f40342a4b25b",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Delete app",
            "suites": [],
            "tests": [
              {
                "title": "should be able to delete careated application",
                "fullTitle": "Applications --- Delete app should be able to delete careated application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appName = <span class=\"hljs-string\">\"Delete App\"</span><br>      factories.create(<span class=\"hljs-string\">'Create_application'</span>, authtoken, {<br>          <span class=\"hljs-string\">\"name\"</span>: appName<br>        })<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          <span class=\"hljs-keyword\">var</span> application = res.body.application<br>          res.body.notice.should.be.equal(<span class=\"hljs-string\">'Hurray! Application created successfully.'</span>)<br>          factories.create(<span class=\"hljs-string\">'Delete_application'</span>, authtoken, application.api_key)<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              res1.body.notice.should.be.equal(<span class=\"hljs-string\">'That worked. Application deleted successfully!'</span>)<br>              done(err)<br>            })<br>        })",
                "isRoot": false,
                "uuid": "25fc3cb7-b6a3-4f87-8965-b27da66bf0f8",
                "parentUUID": "f3e6b898-d9a3-4582-8652-007944b2a105",
                "skipped": true
              },
              {
                "title": "should not be able to delete application as a collaborator",
                "fullTitle": "Applications --- Delete app should not be able to delete application as a collaborator",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>        <span class=\"hljs-string\">\"emails\"</span>: [<br>          res.body.user.email<br>        ]<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        factories.create(<span class=\"hljs-string\">'Delete_application'</span>, res.body.user.authtoken, api_key)<br>          .expect(<span class=\"hljs-number\">422</span>) <span class=\"hljs-comment\">//need to fix in factory</span><br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> response = res2.body<br>            response.error_message.should.to.be.equal(<span class=\"hljs-string\">'Bummer. Access denied. It seems you are not the owner of the app.'</span>)<br>            done(err)<br>          })<br>      })<br>  })",
                "isRoot": false,
                "uuid": "d6f27041-c437-435a-b6fb-d80912ed1e9f",
                "parentUUID": "f3e6b898-d9a3-4582-8652-007944b2a105",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "f3e6b898-d9a3-4582-8652-007944b2a105",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to delete careated application",
                "fullTitle": "Applications --- Delete app should be able to delete careated application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appName = <span class=\"hljs-string\">\"Delete App\"</span><br>      factories.create(<span class=\"hljs-string\">'Create_application'</span>, authtoken, {<br>          <span class=\"hljs-string\">\"name\"</span>: appName<br>        })<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          <span class=\"hljs-keyword\">var</span> application = res.body.application<br>          res.body.notice.should.be.equal(<span class=\"hljs-string\">'Hurray! Application created successfully.'</span>)<br>          factories.create(<span class=\"hljs-string\">'Delete_application'</span>, authtoken, application.api_key)<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              res1.body.notice.should.be.equal(<span class=\"hljs-string\">'That worked. Application deleted successfully!'</span>)<br>              done(err)<br>            })<br>        })",
                "isRoot": false,
                "uuid": "25fc3cb7-b6a3-4f87-8965-b27da66bf0f8",
                "parentUUID": "f3e6b898-d9a3-4582-8652-007944b2a105",
                "skipped": true
              },
              {
                "title": "should not be able to delete application as a collaborator",
                "fullTitle": "Applications --- Delete app should not be able to delete application as a collaborator",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>        <span class=\"hljs-string\">\"emails\"</span>: [<br>          res.body.user.email<br>        ]<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        factories.create(<span class=\"hljs-string\">'Delete_application'</span>, res.body.user.authtoken, api_key)<br>          .expect(<span class=\"hljs-number\">422</span>) <span class=\"hljs-comment\">//need to fix in factory</span><br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> response = res2.body<br>            response.error_message.should.to.be.equal(<span class=\"hljs-string\">'Bummer. Access denied. It seems you are not the owner of the app.'</span>)<br>            done(err)<br>          })<br>      })<br>  })",
                "isRoot": false,
                "uuid": "d6f27041-c437-435a-b6fb-d80912ed1e9f",
                "parentUUID": "f3e6b898-d9a3-4582-8652-007944b2a105",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Reset app master key",
            "suites": [],
            "tests": [
              {
                "title": "should be able to reset app master key as a owner",
                "fullTitle": "Applications --- Reset app master key should be able to reset app master key as a owner",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.reset_master_key)<br>  .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>  .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>  .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'OK, we\\'ve generated a new master key for you.'</span>)<br>    factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> application = res1.body.application<br>        application.master_key.should.be.not.equal(master_key)<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "dbdbbab3-c57b-4b97-9493-fcd06abe82e0",
                "parentUUID": "87b1e1b1-87ae-49e8-9cc8-cccb7b89f896",
                "skipped": true
              },
              {
                "title": "should not be able to reset app master key as a collaborator",
                "fullTitle": "Applications --- Reset app master key should not be able to reset app master key as a collaborator",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.reset_master_key)<br>  .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>  .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken3)<br>  .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>  .expect(<span class=\"hljs-number\">422</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Access denied. It seems you are not the owner of the app.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">133</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {}<br>    })          <br>    done(err)<br>    <br>  })",
                "isRoot": false,
                "uuid": "1e8c9dc9-2b2d-42ca-b7de-7ddd359aede5",
                "parentUUID": "87b1e1b1-87ae-49e8-9cc8-cccb7b89f896",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "87b1e1b1-87ae-49e8-9cc8-cccb7b89f896",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to reset app master key as a owner",
                "fullTitle": "Applications --- Reset app master key should be able to reset app master key as a owner",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.reset_master_key)<br>  .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>  .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>  .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'OK, we\\'ve generated a new master key for you.'</span>)<br>    factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> application = res1.body.application<br>        application.master_key.should.be.not.equal(master_key)<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "dbdbbab3-c57b-4b97-9493-fcd06abe82e0",
                "parentUUID": "87b1e1b1-87ae-49e8-9cc8-cccb7b89f896",
                "skipped": true
              },
              {
                "title": "should not be able to reset app master key as a collaborator",
                "fullTitle": "Applications --- Reset app master key should not be able to reset app master key as a collaborator",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.reset_master_key)<br>  .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>  .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken3)<br>  .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>  .expect(<span class=\"hljs-number\">422</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Access denied. It seems you are not the owner of the app.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">133</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {}<br>    })          <br>    done(err)<br>    <br>  })",
                "isRoot": false,
                "uuid": "1e8c9dc9-2b2d-42ca-b7de-7ddd359aede5",
                "parentUUID": "87b1e1b1-87ae-49e8-9cc8-cccb7b89f896",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "App settings",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get application settings",
                "fullTitle": "Applications --- App settings should be able to get application settings",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_app_settings'</span>, authtoken, api_key)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>  <span class=\"hljs-keyword\">var</span> settings = res.body.app_settings<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>  <span class=\"hljs-built_in\">Object</span>.keys(settings).should.to.be.deep.equal([<span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>, <span class=\"hljs-string\">'smtp_settings'</span>, <span class=\"hljs-string\">'login_schemes'</span>, <span class=\"hljs-string\">'upload_type_restriction'</span>, <span class=\"hljs-string\">'restricted_profile_update'</span>, <span class=\"hljs-string\">'hide_email'</span>, <span class=\"hljs-string\">'allow_client_notifications'</span>, <span class=\"hljs-string\">'active_user_threshold'</span>, <span class=\"hljs-string\">'auto_create_tenants'</span>, <span class=\"hljs-string\">'activation_template'</span>, <span class=\"hljs-string\">'welcome_template'</span>, <span class=\"hljs-string\">'forgot_password_template'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.login_schemes).should.to.be.deep.equal([<span class=\"hljs-string\">'google'</span>, <span class=\"hljs-string\">'facebook'</span>, <span class=\"hljs-string\">'twitter'</span>, <span class=\"hljs-string\">'tibbr'</span>, <span class=\"hljs-string\">'traditional'</span>, <span class=\"hljs-string\">'anyauth'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.upload_type_restriction).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'list'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.restricted_profile_update).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'keys'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.activation_template).should.to.be.deep.equal([<span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.welcome_template).should.to.be.deep.equal([<span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.forgot_password_template).should.to.be.deep.equal([<span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'template'</span>])<br><br>  <span class=\"hljs-comment\">// Data type assertion</span><br>  settings.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.login_schemes.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.upload_type_restriction.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.restricted_profile_update.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.hide_email.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.allow_client_notifications.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.active_user_threshold.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>  settings.auto_create_tenants.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.activation_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.welcome_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.forgot_password_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.login_schemes.google.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.facebook.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.twitter.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.tibbr.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.traditional.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.anyauth.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.upload_type_restriction.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.upload_type_restriction.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.upload_type_restriction.list.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  settings.restricted_profile_update.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.restricted_profile_update.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.restricted_profile_update.keys.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  settings.activation_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.activation_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.activation_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.activation_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.welcome_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.welcome_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.welcome_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.welcome_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.forgot_password_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.forgot_password_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.forgot_password_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>  <span class=\"hljs-comment\">// Value assertion</span><br>  settings.login_schemes.google.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.facebook.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.twitter.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.tibbr.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.traditional.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.anyauth.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.upload_type_restriction.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.upload_type_restriction.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.upload_type_restriction.list.should.be.deep.equal([])<br>  settings.restricted_profile_update.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.restricted_profile_update.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.restricted_profile_update.keys.should.be.deep.equal([])<br><br>  settings.hide_email.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.allow_client_notifications.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.active_user_threshold.should.be.equal(<span class=\"hljs-number\">15</span>)<br>  settings.auto_create_tenants.should.be.equal(<span class=\"hljs-literal\">false</span>)<br><br>  settings.activation_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>  settings.activation_template.subject.should.be.equal(<span class=\"hljs-string\">'Activate Your Account'</span>)<br>  settings.activation_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;Hi!&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Thank you for creating an account!\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Please &lt;a href=\"{{confirm_link}}\"&gt;confirm&lt;/a&gt; your account to continue.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\nIf you have any problems, please feel free to contact us.\\n&lt;/p&gt;\\n\\n&lt;br/&gt;\\n\\n&lt;p&gt;\\n  Cheers.\\n&lt;/p&gt;'</span>)<br>  settings.activation_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.welcome_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>  settings.welcome_template.subject.should.be.equal(<span class=\"hljs-string\">'Welcome!'</span>)<br>  settings.welcome_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;\\n  Hi!\\n&lt;/p&gt;\\n&lt;p&gt;\\n  Welcome to {{app_name}}.\\n  &lt;br/&gt;\\n  &lt;br/&gt;\\n  Your registration has been confirmed successfully.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Cheers\\n&lt;/p&gt;'</span>)<br>  settings.welcome_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.forgot_password_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>  settings.forgot_password_template.subject.should.be.equal(<span class=\"hljs-string\">'Reset Your Password'</span>)<br>  settings.forgot_password_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;Hi!&lt;/p&gt;\\n\\n&lt;p&gt;\\n  You (or someone else) have requested to reset your password for {{app_name}}.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  If you follow the link below you will be able to personally reset your password\\n&lt;/p&gt;\\n\\n&lt;br /&gt;\\n{{reset_password_link}}\\n\\n&lt;p&gt;Cheers&lt;/p&gt;'</span>)<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "e37d84c9-a746-43ac-ae80-8d2030a82ede",
                "parentUUID": "be22c9a1-287c-494d-aaff-b5612cf8f151",
                "skipped": true
              },
              {
                "title": "should be able to update application settings",
                "fullTitle": "Applications --- App settings should be able to update application settings",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_app_settings'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"app_settings\"</span>: {<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"test_tool\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>      },<br>      <span class=\"hljs-string\">\"discrete_variables\"</span>: {<br>        <span class=\"hljs-string\">\"supertest\"</span>: <span class=\"hljs-string\">\"is a nodejs test tool\"</span><br>      },<br>      <span class=\"hljs-string\">\"activation_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"activation_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail activation template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"welcome_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"welcome_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail welcome template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"forgot_password_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"forgot_password_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"forgot password template\"</span><br>      },<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"testing_tool\"</span>: <span class=\"hljs-string\">\"using supertest and mocha\"</span><br>      },<br>      <span class=\"hljs-string\">\"allow_client_notifications\"</span>: <span class=\"hljs-string\">\"true\"</span>,<br>      <span class=\"hljs-string\">\"active_user_threshold\"</span>: <span class=\"hljs-string\">\"20\"</span>,<br>      <span class=\"hljs-string\">\"auto_create_tenants\"</span>: <span class=\"hljs-string\">\"false\"</span><br>    }<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> settings = res.body.app_settings<br>    <br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Awesome! The application settings were updated successfully.'</span>)<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(settings).should.to.be.deep.equal([<span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>, <span class=\"hljs-string\">'smtp_settings'</span>, <span class=\"hljs-string\">'login_schemes'</span>, <span class=\"hljs-string\">'upload_type_restriction'</span>, <span class=\"hljs-string\">'restricted_profile_update'</span>, <span class=\"hljs-string\">'hide_email'</span>, <span class=\"hljs-string\">'allow_client_notifications'</span>, <span class=\"hljs-string\">'active_user_threshold'</span>, <span class=\"hljs-string\">'auto_create_tenants'</span>, <span class=\"hljs-string\">'activation_template'</span>, <span class=\"hljs-string\">'welcome_template'</span>, <span class=\"hljs-string\">'forgot_password_template'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.login_schemes).should.to.be.deep.equal([<span class=\"hljs-string\">'google'</span>, <span class=\"hljs-string\">'facebook'</span>, <span class=\"hljs-string\">'twitter'</span>, <span class=\"hljs-string\">'tibbr'</span>, <span class=\"hljs-string\">'traditional'</span>, <span class=\"hljs-string\">'anyauth'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.upload_type_restriction).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'list'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.restricted_profile_update).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'keys'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.activation_template).should.to.be.deep.equal([<span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.welcome_template).should.to.be.deep.equal([<span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.forgot_password_template).should.to.be.deep.equal([<span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'template'</span>])<br><br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    settings.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.login_schemes.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.upload_type_restriction.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.restricted_profile_update.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.hide_email.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.allow_client_notifications.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.active_user_threshold.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>    settings.auto_create_tenants.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.activation_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.welcome_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.forgot_password_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.login_schemes.google.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.facebook.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.twitter.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.tibbr.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.traditional.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.anyauth.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.upload_type_restriction.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.upload_type_restriction.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.upload_type_restriction.list.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    settings.restricted_profile_update.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.restricted_profile_update.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.restricted_profile_update.keys.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    settings.activation_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.activation_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.activation_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.activation_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.welcome_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.welcome_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.welcome_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.welcome_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.forgot_password_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.forgot_password_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.forgot_password_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>    <span class=\"hljs-comment\">// Value assertion</span><br>    settings.login_schemes.google.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.facebook.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.twitter.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.tibbr.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.traditional.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.anyauth.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.upload_type_restriction.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.upload_type_restriction.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.upload_type_restriction.list.should.be.deep.equal([])<br>    settings.restricted_profile_update.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.restricted_profile_update.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.restricted_profile_update.keys.should.be.deep.equal([])<br>    settings.hide_email.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.allow_client_notifications.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.active_user_threshold.should.be.equal(<span class=\"hljs-number\">20</span>)<br>    settings.auto_create_tenants.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.activation_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>    settings.activation_template.subject.should.be.equal(<span class=\"hljs-string\">'activation_template'</span>)<br>    settings.activation_template.template.should.be.equal(<span class=\"hljs-string\">'the mail activation template'</span>)<br>    settings.activation_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.welcome_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>    settings.welcome_template.subject.should.be.equal(<span class=\"hljs-string\">'welcome_template'</span>)<br>    settings.welcome_template.template.should.be.equal(<span class=\"hljs-string\">'the mail welcome template'</span>)<br>    settings.welcome_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.forgot_password_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>    settings.forgot_password_template.subject.should.be.equal(<span class=\"hljs-string\">'forgot_password_template'</span>)<br>    settings.forgot_password_template.template.should.be.equal(<span class=\"hljs-string\">'forgot password template'</span>)<br>    settings.application_variables.testing_tool.should.be.equal(<span class=\"hljs-string\">'using supertest and mocha'</span>)<br>    settings.discrete_variables.supertest.should.be.equal(<span class=\"hljs-string\">'is a nodejs test tool'</span>)<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "8ba5decb-b74c-4de1-ae08-6534747dccc9",
                "parentUUID": "be22c9a1-287c-494d-aaff-b5612cf8f151",
                "skipped": true
              },
              {
                "title": "should be able to reset application settings",
                "fullTitle": "Applications --- App settings should be able to reset application settings",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_app_settings'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"app_settings\"</span>: {<br>      <span class=\"hljs-string\">\"activation_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"activation_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail activation template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"welcome_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"welcome_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail welcome template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"forgot_password_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"forgot_password_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"forgot password template\"</span><br>      },<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"testing_tool\"</span>: <span class=\"hljs-string\">\"using 'supertest and mocha'\"</span><br>      },<br>      <span class=\"hljs-string\">\"allow_client_notifications\"</span>: <span class=\"hljs-string\">\"true\"</span>,<br>      <span class=\"hljs-string\">\"active_user_threshold\"</span>: <span class=\"hljs-string\">\"20\"</span>,<br>      <span class=\"hljs-string\">\"auto_create_tenants\"</span>: <span class=\"hljs-string\">\"false\"</span><br>    }<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    factories.create(<span class=\"hljs-string\">'reset_app_settings'</span>, authtoken, api_key, {<br>        <span class=\"hljs-string\">\"scope\"</span>: {<br>          <span class=\"hljs-string\">\"activation_template\"</span>: []<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> settings = res.body.app_settings<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Awesome! The application settings were updated successfully.'</span>)<br>        <br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(settings).should.to.be.deep.equal([<span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>, <span class=\"hljs-string\">'smtp_settings'</span>, <span class=\"hljs-string\">'login_schemes'</span>, <span class=\"hljs-string\">'upload_type_restriction'</span>, <span class=\"hljs-string\">'restricted_profile_update'</span>, <span class=\"hljs-string\">'hide_email'</span>, <span class=\"hljs-string\">'allow_client_notifications'</span>, <span class=\"hljs-string\">'active_user_threshold'</span>, <span class=\"hljs-string\">'auto_create_tenants'</span>, <span class=\"hljs-string\">'activation_template'</span>, <span class=\"hljs-string\">'welcome_template'</span>, <span class=\"hljs-string\">'forgot_password_template'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(settings.login_schemes).should.to.be.deep.equal([<span class=\"hljs-string\">'google'</span>, <span class=\"hljs-string\">'facebook'</span>, <span class=\"hljs-string\">'twitter'</span>, <span class=\"hljs-string\">'tibbr'</span>, <span class=\"hljs-string\">'traditional'</span>, <span class=\"hljs-string\">'anyauth'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(settings.upload_type_restriction).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'list'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(settings.restricted_profile_update).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'keys'</span>])<br>        <span class=\"hljs-comment\">// order is not static need to change</span><br>        <span class=\"hljs-comment\">// Object.keys(settings.activation_template).should.to.be.deep.equal(['subject', 'reply_to', 'template', 'use'])</span><br>        <span class=\"hljs-comment\">// Object.keys(settings.welcome_template).should.to.be.equal(['subject', 'template', 'use', 'reply_to'])</span><br>        <span class=\"hljs-comment\">// Object.keys(settings.forgot_password_template).should.to.be.equal(['reply_to', 'subject', 'template'])</span><br><br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        settings.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.login_schemes.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.upload_type_restriction.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.restricted_profile_update.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.hide_email.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.allow_client_notifications.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.active_user_threshold.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        settings.auto_create_tenants.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.activation_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.welcome_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.forgot_password_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.login_schemes.google.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.facebook.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.twitter.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.tibbr.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.traditional.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.anyauth.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.upload_type_restriction.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.upload_type_restriction.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.upload_type_restriction.list.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        settings.restricted_profile_update.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.restricted_profile_update.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.restricted_profile_update.keys.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        settings.activation_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.activation_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.activation_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.activation_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.welcome_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.welcome_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.welcome_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.welcome_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.forgot_password_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.forgot_password_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.forgot_password_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>        <span class=\"hljs-comment\">// Value assertion</span><br>        settings.login_schemes.google.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.facebook.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.twitter.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.tibbr.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.traditional.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.anyauth.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.upload_type_restriction.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        settings.upload_type_restriction.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.upload_type_restriction.list.should.be.deep.equal([])<br>        settings.restricted_profile_update.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        settings.restricted_profile_update.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.restricted_profile_update.keys.should.be.deep.equal([])<br><br>        settings.hide_email.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        settings.allow_client_notifications.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.active_user_threshold.should.be.equal(<span class=\"hljs-number\">20</span>)<br>        settings.auto_create_tenants.should.be.equal(<span class=\"hljs-literal\">false</span>)<br><br>        settings.activation_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>        settings.activation_template.subject.should.be.equal(<span class=\"hljs-string\">'Activate Your Account'</span>)<br>        settings.activation_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;Hi!&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Thank you for creating an account!\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Please &lt;a href=\"{{confirm_link}}\"&gt;confirm&lt;/a&gt; your account to continue.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\nIf you have any problems, please feel free to contact us.\\n&lt;/p&gt;\\n\\n&lt;br/&gt;\\n\\n&lt;p&gt;\\n  Cheers.\\n&lt;/p&gt;'</span>)<br>        settings.activation_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.welcome_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>        settings.welcome_template.subject.should.be.equal(<span class=\"hljs-string\">'welcome_template'</span>)<br>        settings.welcome_template.template.should.be.equal(<span class=\"hljs-string\">'the mail welcome template'</span>)<br>        settings.welcome_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.forgot_password_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>        settings.forgot_password_template.subject.should.be.equal(<span class=\"hljs-string\">'forgot_password_template'</span>)<br>        settings.forgot_password_template.template.should.be.equal(<span class=\"hljs-string\">'forgot password template'</span>)<br>        done(err)<br>      });<br>  });",
                "isRoot": false,
                "uuid": "db8adbe3-79ee-4577-b1cf-58746108a3cb",
                "parentUUID": "be22c9a1-287c-494d-aaff-b5612cf8f151",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "be22c9a1-287c-494d-aaff-b5612cf8f151",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get application settings",
                "fullTitle": "Applications --- App settings should be able to get application settings",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_app_settings'</span>, authtoken, api_key)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>  <span class=\"hljs-keyword\">var</span> settings = res.body.app_settings<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>  <span class=\"hljs-built_in\">Object</span>.keys(settings).should.to.be.deep.equal([<span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>, <span class=\"hljs-string\">'smtp_settings'</span>, <span class=\"hljs-string\">'login_schemes'</span>, <span class=\"hljs-string\">'upload_type_restriction'</span>, <span class=\"hljs-string\">'restricted_profile_update'</span>, <span class=\"hljs-string\">'hide_email'</span>, <span class=\"hljs-string\">'allow_client_notifications'</span>, <span class=\"hljs-string\">'active_user_threshold'</span>, <span class=\"hljs-string\">'auto_create_tenants'</span>, <span class=\"hljs-string\">'activation_template'</span>, <span class=\"hljs-string\">'welcome_template'</span>, <span class=\"hljs-string\">'forgot_password_template'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.login_schemes).should.to.be.deep.equal([<span class=\"hljs-string\">'google'</span>, <span class=\"hljs-string\">'facebook'</span>, <span class=\"hljs-string\">'twitter'</span>, <span class=\"hljs-string\">'tibbr'</span>, <span class=\"hljs-string\">'traditional'</span>, <span class=\"hljs-string\">'anyauth'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.upload_type_restriction).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'list'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.restricted_profile_update).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'keys'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.activation_template).should.to.be.deep.equal([<span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.welcome_template).should.to.be.deep.equal([<span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.forgot_password_template).should.to.be.deep.equal([<span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'template'</span>])<br><br>  <span class=\"hljs-comment\">// Data type assertion</span><br>  settings.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.login_schemes.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.upload_type_restriction.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.restricted_profile_update.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.hide_email.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.allow_client_notifications.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.active_user_threshold.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>  settings.auto_create_tenants.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.activation_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.welcome_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.forgot_password_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.login_schemes.google.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.facebook.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.twitter.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.tibbr.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.traditional.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.anyauth.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.upload_type_restriction.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.upload_type_restriction.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.upload_type_restriction.list.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  settings.restricted_profile_update.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.restricted_profile_update.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.restricted_profile_update.keys.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  settings.activation_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.activation_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.activation_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.activation_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.welcome_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.welcome_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.welcome_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.welcome_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.forgot_password_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.forgot_password_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.forgot_password_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>  <span class=\"hljs-comment\">// Value assertion</span><br>  settings.login_schemes.google.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.facebook.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.twitter.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.tibbr.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.traditional.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.anyauth.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.upload_type_restriction.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.upload_type_restriction.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.upload_type_restriction.list.should.be.deep.equal([])<br>  settings.restricted_profile_update.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.restricted_profile_update.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.restricted_profile_update.keys.should.be.deep.equal([])<br><br>  settings.hide_email.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.allow_client_notifications.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.active_user_threshold.should.be.equal(<span class=\"hljs-number\">15</span>)<br>  settings.auto_create_tenants.should.be.equal(<span class=\"hljs-literal\">false</span>)<br><br>  settings.activation_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>  settings.activation_template.subject.should.be.equal(<span class=\"hljs-string\">'Activate Your Account'</span>)<br>  settings.activation_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;Hi!&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Thank you for creating an account!\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Please &lt;a href=\"{{confirm_link}}\"&gt;confirm&lt;/a&gt; your account to continue.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\nIf you have any problems, please feel free to contact us.\\n&lt;/p&gt;\\n\\n&lt;br/&gt;\\n\\n&lt;p&gt;\\n  Cheers.\\n&lt;/p&gt;'</span>)<br>  settings.activation_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.welcome_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>  settings.welcome_template.subject.should.be.equal(<span class=\"hljs-string\">'Welcome!'</span>)<br>  settings.welcome_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;\\n  Hi!\\n&lt;/p&gt;\\n&lt;p&gt;\\n  Welcome to {{app_name}}.\\n  &lt;br/&gt;\\n  &lt;br/&gt;\\n  Your registration has been confirmed successfully.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Cheers\\n&lt;/p&gt;'</span>)<br>  settings.welcome_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.forgot_password_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>  settings.forgot_password_template.subject.should.be.equal(<span class=\"hljs-string\">'Reset Your Password'</span>)<br>  settings.forgot_password_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;Hi!&lt;/p&gt;\\n\\n&lt;p&gt;\\n  You (or someone else) have requested to reset your password for {{app_name}}.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  If you follow the link below you will be able to personally reset your password\\n&lt;/p&gt;\\n\\n&lt;br /&gt;\\n{{reset_password_link}}\\n\\n&lt;p&gt;Cheers&lt;/p&gt;'</span>)<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "e37d84c9-a746-43ac-ae80-8d2030a82ede",
                "parentUUID": "be22c9a1-287c-494d-aaff-b5612cf8f151",
                "skipped": true
              },
              {
                "title": "should be able to update application settings",
                "fullTitle": "Applications --- App settings should be able to update application settings",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_app_settings'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"app_settings\"</span>: {<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"test_tool\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>      },<br>      <span class=\"hljs-string\">\"discrete_variables\"</span>: {<br>        <span class=\"hljs-string\">\"supertest\"</span>: <span class=\"hljs-string\">\"is a nodejs test tool\"</span><br>      },<br>      <span class=\"hljs-string\">\"activation_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"activation_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail activation template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"welcome_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"welcome_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail welcome template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"forgot_password_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"forgot_password_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"forgot password template\"</span><br>      },<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"testing_tool\"</span>: <span class=\"hljs-string\">\"using supertest and mocha\"</span><br>      },<br>      <span class=\"hljs-string\">\"allow_client_notifications\"</span>: <span class=\"hljs-string\">\"true\"</span>,<br>      <span class=\"hljs-string\">\"active_user_threshold\"</span>: <span class=\"hljs-string\">\"20\"</span>,<br>      <span class=\"hljs-string\">\"auto_create_tenants\"</span>: <span class=\"hljs-string\">\"false\"</span><br>    }<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> settings = res.body.app_settings<br>    <br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Awesome! The application settings were updated successfully.'</span>)<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(settings).should.to.be.deep.equal([<span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>, <span class=\"hljs-string\">'smtp_settings'</span>, <span class=\"hljs-string\">'login_schemes'</span>, <span class=\"hljs-string\">'upload_type_restriction'</span>, <span class=\"hljs-string\">'restricted_profile_update'</span>, <span class=\"hljs-string\">'hide_email'</span>, <span class=\"hljs-string\">'allow_client_notifications'</span>, <span class=\"hljs-string\">'active_user_threshold'</span>, <span class=\"hljs-string\">'auto_create_tenants'</span>, <span class=\"hljs-string\">'activation_template'</span>, <span class=\"hljs-string\">'welcome_template'</span>, <span class=\"hljs-string\">'forgot_password_template'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.login_schemes).should.to.be.deep.equal([<span class=\"hljs-string\">'google'</span>, <span class=\"hljs-string\">'facebook'</span>, <span class=\"hljs-string\">'twitter'</span>, <span class=\"hljs-string\">'tibbr'</span>, <span class=\"hljs-string\">'traditional'</span>, <span class=\"hljs-string\">'anyauth'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.upload_type_restriction).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'list'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.restricted_profile_update).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'keys'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.activation_template).should.to.be.deep.equal([<span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.welcome_template).should.to.be.deep.equal([<span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.forgot_password_template).should.to.be.deep.equal([<span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'template'</span>])<br><br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    settings.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.login_schemes.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.upload_type_restriction.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.restricted_profile_update.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.hide_email.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.allow_client_notifications.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.active_user_threshold.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>    settings.auto_create_tenants.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.activation_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.welcome_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.forgot_password_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.login_schemes.google.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.facebook.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.twitter.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.tibbr.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.traditional.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.anyauth.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.upload_type_restriction.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.upload_type_restriction.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.upload_type_restriction.list.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    settings.restricted_profile_update.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.restricted_profile_update.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.restricted_profile_update.keys.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    settings.activation_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.activation_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.activation_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.activation_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.welcome_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.welcome_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.welcome_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.welcome_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.forgot_password_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.forgot_password_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.forgot_password_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>    <span class=\"hljs-comment\">// Value assertion</span><br>    settings.login_schemes.google.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.facebook.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.twitter.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.tibbr.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.traditional.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.anyauth.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.upload_type_restriction.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.upload_type_restriction.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.upload_type_restriction.list.should.be.deep.equal([])<br>    settings.restricted_profile_update.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.restricted_profile_update.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.restricted_profile_update.keys.should.be.deep.equal([])<br>    settings.hide_email.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.allow_client_notifications.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.active_user_threshold.should.be.equal(<span class=\"hljs-number\">20</span>)<br>    settings.auto_create_tenants.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.activation_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>    settings.activation_template.subject.should.be.equal(<span class=\"hljs-string\">'activation_template'</span>)<br>    settings.activation_template.template.should.be.equal(<span class=\"hljs-string\">'the mail activation template'</span>)<br>    settings.activation_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.welcome_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>    settings.welcome_template.subject.should.be.equal(<span class=\"hljs-string\">'welcome_template'</span>)<br>    settings.welcome_template.template.should.be.equal(<span class=\"hljs-string\">'the mail welcome template'</span>)<br>    settings.welcome_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.forgot_password_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>    settings.forgot_password_template.subject.should.be.equal(<span class=\"hljs-string\">'forgot_password_template'</span>)<br>    settings.forgot_password_template.template.should.be.equal(<span class=\"hljs-string\">'forgot password template'</span>)<br>    settings.application_variables.testing_tool.should.be.equal(<span class=\"hljs-string\">'using supertest and mocha'</span>)<br>    settings.discrete_variables.supertest.should.be.equal(<span class=\"hljs-string\">'is a nodejs test tool'</span>)<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "8ba5decb-b74c-4de1-ae08-6534747dccc9",
                "parentUUID": "be22c9a1-287c-494d-aaff-b5612cf8f151",
                "skipped": true
              },
              {
                "title": "should be able to reset application settings",
                "fullTitle": "Applications --- App settings should be able to reset application settings",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_app_settings'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"app_settings\"</span>: {<br>      <span class=\"hljs-string\">\"activation_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"activation_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail activation template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"welcome_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"welcome_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail welcome template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"forgot_password_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"forgot_password_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"forgot password template\"</span><br>      },<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"testing_tool\"</span>: <span class=\"hljs-string\">\"using 'supertest and mocha'\"</span><br>      },<br>      <span class=\"hljs-string\">\"allow_client_notifications\"</span>: <span class=\"hljs-string\">\"true\"</span>,<br>      <span class=\"hljs-string\">\"active_user_threshold\"</span>: <span class=\"hljs-string\">\"20\"</span>,<br>      <span class=\"hljs-string\">\"auto_create_tenants\"</span>: <span class=\"hljs-string\">\"false\"</span><br>    }<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    factories.create(<span class=\"hljs-string\">'reset_app_settings'</span>, authtoken, api_key, {<br>        <span class=\"hljs-string\">\"scope\"</span>: {<br>          <span class=\"hljs-string\">\"activation_template\"</span>: []<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> settings = res.body.app_settings<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Awesome! The application settings were updated successfully.'</span>)<br>        <br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(settings).should.to.be.deep.equal([<span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>, <span class=\"hljs-string\">'smtp_settings'</span>, <span class=\"hljs-string\">'login_schemes'</span>, <span class=\"hljs-string\">'upload_type_restriction'</span>, <span class=\"hljs-string\">'restricted_profile_update'</span>, <span class=\"hljs-string\">'hide_email'</span>, <span class=\"hljs-string\">'allow_client_notifications'</span>, <span class=\"hljs-string\">'active_user_threshold'</span>, <span class=\"hljs-string\">'auto_create_tenants'</span>, <span class=\"hljs-string\">'activation_template'</span>, <span class=\"hljs-string\">'welcome_template'</span>, <span class=\"hljs-string\">'forgot_password_template'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(settings.login_schemes).should.to.be.deep.equal([<span class=\"hljs-string\">'google'</span>, <span class=\"hljs-string\">'facebook'</span>, <span class=\"hljs-string\">'twitter'</span>, <span class=\"hljs-string\">'tibbr'</span>, <span class=\"hljs-string\">'traditional'</span>, <span class=\"hljs-string\">'anyauth'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(settings.upload_type_restriction).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'list'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(settings.restricted_profile_update).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'keys'</span>])<br>        <span class=\"hljs-comment\">// order is not static need to change</span><br>        <span class=\"hljs-comment\">// Object.keys(settings.activation_template).should.to.be.deep.equal(['subject', 'reply_to', 'template', 'use'])</span><br>        <span class=\"hljs-comment\">// Object.keys(settings.welcome_template).should.to.be.equal(['subject', 'template', 'use', 'reply_to'])</span><br>        <span class=\"hljs-comment\">// Object.keys(settings.forgot_password_template).should.to.be.equal(['reply_to', 'subject', 'template'])</span><br><br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        settings.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.login_schemes.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.upload_type_restriction.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.restricted_profile_update.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.hide_email.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.allow_client_notifications.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.active_user_threshold.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        settings.auto_create_tenants.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.activation_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.welcome_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.forgot_password_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.login_schemes.google.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.facebook.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.twitter.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.tibbr.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.traditional.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.anyauth.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.upload_type_restriction.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.upload_type_restriction.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.upload_type_restriction.list.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        settings.restricted_profile_update.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.restricted_profile_update.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.restricted_profile_update.keys.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        settings.activation_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.activation_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.activation_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.activation_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.welcome_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.welcome_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.welcome_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.welcome_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.forgot_password_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.forgot_password_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.forgot_password_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>        <span class=\"hljs-comment\">// Value assertion</span><br>        settings.login_schemes.google.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.facebook.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.twitter.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.tibbr.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.traditional.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.anyauth.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.upload_type_restriction.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        settings.upload_type_restriction.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.upload_type_restriction.list.should.be.deep.equal([])<br>        settings.restricted_profile_update.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        settings.restricted_profile_update.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.restricted_profile_update.keys.should.be.deep.equal([])<br><br>        settings.hide_email.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        settings.allow_client_notifications.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.active_user_threshold.should.be.equal(<span class=\"hljs-number\">20</span>)<br>        settings.auto_create_tenants.should.be.equal(<span class=\"hljs-literal\">false</span>)<br><br>        settings.activation_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>        settings.activation_template.subject.should.be.equal(<span class=\"hljs-string\">'Activate Your Account'</span>)<br>        settings.activation_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;Hi!&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Thank you for creating an account!\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Please &lt;a href=\"{{confirm_link}}\"&gt;confirm&lt;/a&gt; your account to continue.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\nIf you have any problems, please feel free to contact us.\\n&lt;/p&gt;\\n\\n&lt;br/&gt;\\n\\n&lt;p&gt;\\n  Cheers.\\n&lt;/p&gt;'</span>)<br>        settings.activation_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.welcome_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>        settings.welcome_template.subject.should.be.equal(<span class=\"hljs-string\">'welcome_template'</span>)<br>        settings.welcome_template.template.should.be.equal(<span class=\"hljs-string\">'the mail welcome template'</span>)<br>        settings.welcome_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.forgot_password_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>        settings.forgot_password_template.subject.should.be.equal(<span class=\"hljs-string\">'forgot_password_template'</span>)<br>        settings.forgot_password_template.template.should.be.equal(<span class=\"hljs-string\">'forgot password template'</span>)<br>        done(err)<br>      });<br>  });",
                "isRoot": false,
                "uuid": "db8adbe3-79ee-4577-b1cf-58746108a3cb",
                "parentUUID": "be22c9a1-287c-494d-aaff-b5612cf8f151",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 3,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Collaborators invite and unaccepted_invitations",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all collaborators present in an application",
                "fullTitle": "Applications --- Collaborators invite and unaccepted_invitations should be able to get all collaborators present in an application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  collaborator = res.body.user<br>  <span class=\"hljs-keyword\">return</span> res<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"emails\"</span>: [<br>      res.body.user.email<br>    ]<br>  }))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Get_collaborators'</span>, authtoken, api_key)) <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  users = res.body.users<br>  <span class=\"hljs-built_in\">Object</span>.keys(users[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'email'</span>,<span class=\"hljs-string\">'username'</span>,<span class=\"hljs-string\">'plan_id'</span>,<span class=\"hljs-string\">'roles'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(users[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'email'</span>,<span class=\"hljs-string\">'username'</span>,<span class=\"hljs-string\">'plan_id'</span>,<span class=\"hljs-string\">'is_owner'</span>,<span class=\"hljs-string\">'roles'</span>])<br>  users[<span class=\"hljs-number\">0</span>].email.should.be.equal(collaborator.email)<br>  users[<span class=\"hljs-number\">1</span>].email.should.be.equal(email)<br>  users[<span class=\"hljs-number\">1</span>].is_owner.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "d161757e-112c-4309-aac2-5c208d55b36d",
                "parentUUID": "7b05aa48-b5df-4ec6-a8b8-aeb3ebd78849",
                "skipped": true
              },
              {
                "title": "should be able to invite collaborators for an application",
                "fullTitle": "Applications --- Collaborators invite and unaccepted_invitations should be able to invite collaborators for an application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"emails\"</span>: [<br>      <span class=\"hljs-string\">\"test1user@mailinator.com\"</span>,<br>      <span class=\"hljs-string\">\"test2user@mailinator.com\"</span><br>    ]<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> response = res.body<br>    response.notice.should.be.equal(<span class=\"hljs-string\">'The invitation has been sent successfully.'</span>)<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "9d228eea-4b70-48f1-b1af-d3d2579ed666",
                "parentUUID": "7b05aa48-b5df-4ec6-a8b8-aeb3ebd78849",
                "skipped": true
              },
              {
                "title": "should be able to get unaccepted invitations for an application",
                "fullTitle": "Applications --- Collaborators invite and unaccepted_invitations should be able to get unaccepted invitations for an application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "api.get(config.endpoints.applications + <span class=\"hljs-string\">\"/\"</span> + api_key + config.endpoints.unaccepted_invitations)<br>        .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>        .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>        .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>        .expect(<span class=\"hljs-number\">200</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>          <span class=\"hljs-keyword\">var</span> response = res1.body<br>          response.emails.should.be.deep.equal([<br>            <span class=\"hljs-string\">\"test1user@mailinator.com\"</span>,<br>            <span class=\"hljs-string\">\"test2user@mailinator.com\"</span><br>          ])<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "55733cbc-1da9-4620-b2ef-49a4b80184f8",
                "parentUUID": "7b05aa48-b5df-4ec6-a8b8-aeb3ebd78849",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "7b05aa48-b5df-4ec6-a8b8-aeb3ebd78849",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get all collaborators present in an application",
                "fullTitle": "Applications --- Collaborators invite and unaccepted_invitations should be able to get all collaborators present in an application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  collaborator = res.body.user<br>  <span class=\"hljs-keyword\">return</span> res<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"emails\"</span>: [<br>      res.body.user.email<br>    ]<br>  }))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Get_collaborators'</span>, authtoken, api_key)) <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  users = res.body.users<br>  <span class=\"hljs-built_in\">Object</span>.keys(users[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'email'</span>,<span class=\"hljs-string\">'username'</span>,<span class=\"hljs-string\">'plan_id'</span>,<span class=\"hljs-string\">'roles'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(users[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'email'</span>,<span class=\"hljs-string\">'username'</span>,<span class=\"hljs-string\">'plan_id'</span>,<span class=\"hljs-string\">'is_owner'</span>,<span class=\"hljs-string\">'roles'</span>])<br>  users[<span class=\"hljs-number\">0</span>].email.should.be.equal(collaborator.email)<br>  users[<span class=\"hljs-number\">1</span>].email.should.be.equal(email)<br>  users[<span class=\"hljs-number\">1</span>].is_owner.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "d161757e-112c-4309-aac2-5c208d55b36d",
                "parentUUID": "7b05aa48-b5df-4ec6-a8b8-aeb3ebd78849",
                "skipped": true
              },
              {
                "title": "should be able to invite collaborators for an application",
                "fullTitle": "Applications --- Collaborators invite and unaccepted_invitations should be able to invite collaborators for an application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"emails\"</span>: [<br>      <span class=\"hljs-string\">\"test1user@mailinator.com\"</span>,<br>      <span class=\"hljs-string\">\"test2user@mailinator.com\"</span><br>    ]<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> response = res.body<br>    response.notice.should.be.equal(<span class=\"hljs-string\">'The invitation has been sent successfully.'</span>)<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "9d228eea-4b70-48f1-b1af-d3d2579ed666",
                "parentUUID": "7b05aa48-b5df-4ec6-a8b8-aeb3ebd78849",
                "skipped": true
              },
              {
                "title": "should be able to get unaccepted invitations for an application",
                "fullTitle": "Applications --- Collaborators invite and unaccepted_invitations should be able to get unaccepted invitations for an application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "api.get(config.endpoints.applications + <span class=\"hljs-string\">\"/\"</span> + api_key + config.endpoints.unaccepted_invitations)<br>        .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>        .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>        .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>        .expect(<span class=\"hljs-number\">200</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>          <span class=\"hljs-keyword\">var</span> response = res1.body<br>          response.emails.should.be.deep.equal([<br>            <span class=\"hljs-string\">\"test1user@mailinator.com\"</span>,<br>            <span class=\"hljs-string\">\"test2user@mailinator.com\"</span><br>          ])<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "55733cbc-1da9-4620-b2ef-49a4b80184f8",
                "parentUUID": "7b05aa48-b5df-4ec6-a8b8-aeb3ebd78849",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 3,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "App unshare",
            "suites": [],
            "tests": [
              {
                "title": "should be able to unshare application from collaborator as a system user",
                "fullTitle": "Applications --- App unshare should be able to unshare application from collaborator as a system user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, authtoken, api_key, {<br>                  <span class=\"hljs-string\">\"unshare_from\"</span>: res.body.user.email<br>                })<br>                .expect(<span class=\"hljs-number\">200</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.notice.should.to.be.equal(<span class=\"hljs-string\">'The application has been successfully unshared.'</span>)<br>                  done(err)<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "f5080826-9f12-45f7-bb64-3390032b30ed",
                "parentUUID": "569da81b-8f94-4074-abca-2552dac70629",
                "skipped": true
              },
              {
                "title": "should be able to unshare collaborator application as a collaborator",
                "fullTitle": "Applications --- App unshare should be able to unshare collaborator application as a collaborator",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                .expect(<span class=\"hljs-number\">200</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.notice.should.to.be.equal(<span class=\"hljs-string\">'The application has been successfully unshared.'</span>)<br>                  done(err)<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "5219240c-c18a-4eb1-a3b2-3b4e7885f5f4",
                "parentUUID": "569da81b-8f94-4074-abca-2552dac70629",
                "skipped": true
              },
              {
                "title": "should provide error message when collaborators email is invalid",
                "fullTitle": "Applications --- App unshare should provide error message when collaborators email is invalid",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                <span class=\"hljs-string\">\"swapnil@mailinator.com\"</span><br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                .expect(<span class=\"hljs-number\">422</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res3</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res3.body<br>                  <br>                  response.should.to.be.deep.equal({<br>                    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Access denied. You need to be a collaborator before accessing this app.\"</span>,<br>                    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">133</span>,<br>                    <span class=\"hljs-string\">\"errors\"</span>: {}<br>                  })<br>                  done(err)<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "2fc9da73-1c93-413d-8e20-512ca4f4758a",
                "parentUUID": "569da81b-8f94-4074-abca-2552dac70629",
                "skipped": true
              },
              {
                "title": "should provide error message when user is not a collaborator for given application",
                "fullTitle": "Applications --- App unshare should provide error message when user is not a collaborator for given application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                .expect(<span class=\"hljs-number\">200</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.notice.should.to.be.equal(<span class=\"hljs-string\">'The application has been successfully unshared.'</span>)<br>                  factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>                    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>                    res.body.should.be.deep.equal({<br>                      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Access denied. You need to be a collaborator before accessing this app.\"</span>,<br>                      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">133</span>,<br>                      <span class=\"hljs-string\">\"errors\"</span>: {}<br>                    })<br>                    done(err)<br>                  })<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "c6050027-d76d-4e01-8bf4-edafe7ff63d7",
                "parentUUID": "569da81b-8f94-4074-abca-2552dac70629",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "569da81b-8f94-4074-abca-2552dac70629",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to unshare application from collaborator as a system user",
                "fullTitle": "Applications --- App unshare should be able to unshare application from collaborator as a system user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, authtoken, api_key, {<br>                  <span class=\"hljs-string\">\"unshare_from\"</span>: res.body.user.email<br>                })<br>                .expect(<span class=\"hljs-number\">200</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.notice.should.to.be.equal(<span class=\"hljs-string\">'The application has been successfully unshared.'</span>)<br>                  done(err)<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "f5080826-9f12-45f7-bb64-3390032b30ed",
                "parentUUID": "569da81b-8f94-4074-abca-2552dac70629",
                "skipped": true
              },
              {
                "title": "should be able to unshare collaborator application as a collaborator",
                "fullTitle": "Applications --- App unshare should be able to unshare collaborator application as a collaborator",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                .expect(<span class=\"hljs-number\">200</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.notice.should.to.be.equal(<span class=\"hljs-string\">'The application has been successfully unshared.'</span>)<br>                  done(err)<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "5219240c-c18a-4eb1-a3b2-3b4e7885f5f4",
                "parentUUID": "569da81b-8f94-4074-abca-2552dac70629",
                "skipped": true
              },
              {
                "title": "should provide error message when collaborators email is invalid",
                "fullTitle": "Applications --- App unshare should provide error message when collaborators email is invalid",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                <span class=\"hljs-string\">\"swapnil@mailinator.com\"</span><br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                .expect(<span class=\"hljs-number\">422</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res3</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res3.body<br>                  <br>                  response.should.to.be.deep.equal({<br>                    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Access denied. You need to be a collaborator before accessing this app.\"</span>,<br>                    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">133</span>,<br>                    <span class=\"hljs-string\">\"errors\"</span>: {}<br>                  })<br>                  done(err)<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "2fc9da73-1c93-413d-8e20-512ca4f4758a",
                "parentUUID": "569da81b-8f94-4074-abca-2552dac70629",
                "skipped": true
              },
              {
                "title": "should provide error message when user is not a collaborator for given application",
                "fullTitle": "Applications --- App unshare should provide error message when user is not a collaborator for given application",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                .expect(<span class=\"hljs-number\">200</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.notice.should.to.be.equal(<span class=\"hljs-string\">'The application has been successfully unshared.'</span>)<br>                  factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>                    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>                    res.body.should.be.deep.equal({<br>                      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Access denied. You need to be a collaborator before accessing this app.\"</span>,<br>                      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">133</span>,<br>                      <span class=\"hljs-string\">\"errors\"</span>: {}<br>                    })<br>                    done(err)<br>                  })<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "c6050027-d76d-4e01-8bf4-edafe7ff63d7",
                "parentUUID": "569da81b-8f94-4074-abca-2552dac70629",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 4,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "App Transfer/Accept Ownership",
            "suites": [],
            "tests": [
              {
                "title": "should be able to transfer app ownership to registered system users",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to transfer app ownership to registered system users",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: email<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'An email has been sent to '</span>+ config.user2.email +<span class=\"hljs-string\">' about transferring ownership of \\''</span> + res1.body.application.name + <span class=\"hljs-string\">'\\'. The ownership will be transferred after the other user accepts ownership.'</span>)<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "f1aa47bc-1fa9-4131-a0f2-1d3b2b676e13",
                "parentUUID": "9b4d9f2e-2973-4f2f-b759-3a12c1d8fc68",
                "skipped": true
              },
              {
                "title": "should give error for transfer app ownership to non-registered system users",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should give error for transfer app ownership to non-registered system users",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: <span class=\"hljs-string\">\"non_registered@mailinator.com\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Sorry about that. non_registered@mailinator.com is not registered in Built.io Backend. Create an account first.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">179</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {}<br>        })<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "39b07e01-035c-4752-988d-0188703d167b",
                "parentUUID": "9b4d9f2e-2973-4f2f-b759-3a12c1d8fc68",
                "skipped": true
              },
              {
                "title": "should be able to accept application ownership",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to accept application ownership",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "7a1067fc-76df-4840-bd8c-4251ca4b8f40",
                "parentUUID": "9b4d9f2e-2973-4f2f-b759-3a12c1d8fc68",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "should be able to accept application ownership",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to accept application ownership",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "7a1067fc-76df-4840-bd8c-4251ca4b8f40",
                "parentUUID": "9b4d9f2e-2973-4f2f-b759-3a12c1d8fc68",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "9b4d9f2e-2973-4f2f-b759-3a12c1d8fc68",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to transfer app ownership to registered system users",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to transfer app ownership to registered system users",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: email<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'An email has been sent to '</span>+ config.user2.email +<span class=\"hljs-string\">' about transferring ownership of \\''</span> + res1.body.application.name + <span class=\"hljs-string\">'\\'. The ownership will be transferred after the other user accepts ownership.'</span>)<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "f1aa47bc-1fa9-4131-a0f2-1d3b2b676e13",
                "parentUUID": "9b4d9f2e-2973-4f2f-b759-3a12c1d8fc68",
                "skipped": true
              },
              {
                "title": "should give error for transfer app ownership to non-registered system users",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should give error for transfer app ownership to non-registered system users",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: <span class=\"hljs-string\">\"non_registered@mailinator.com\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Sorry about that. non_registered@mailinator.com is not registered in Built.io Backend. Create an account first.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">179</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {}<br>        })<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "39b07e01-035c-4752-988d-0188703d167b",
                "parentUUID": "9b4d9f2e-2973-4f2f-b759-3a12c1d8fc68",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": true,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "27aebea1-216a-4c01-b35e-697985396b88",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "App user roles ---",
        "suites": [
          {
            "title": "Application user roles",
            "suites": [],
            "tests": [
              {
                "title": "should be able to create application user role",
                "fullTitle": "App user roles --- Application user roles should be able to create application user role",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_app_user_role'</span>, appUser1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"createRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\trole1 = res.body.object<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role1).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole1.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole1.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole1.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole1.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole1.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole1._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole1.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole1.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole1.name.should.be.equal(<span class=\"hljs-string\">\"createRole\"</span>)<br>\trole1.users.should.be.deep.equal([])<br>\trole1.roles.should.be.deep.equal([])<br>\trole1.app_user_object_uid.should.be.equal(appUser1.uid)<br>\texpect(role1.created_by).to.be.null<br>\texpect(role1.created_by).to.be.null<br>\trole1.created_at.should.be.equal(role1.updated_at)<br>\trole1._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'delete_role'</span>, appUser1.authtoken, app.api_key, role1.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err.trace)<br>})",
                "isRoot": false,
                "uuid": "e8cf0fa8-b93d-4414-9092-684fc4bdb22f",
                "parentUUID": "2c625661-132c-43fb-bfa2-c44ef7eb8ab6",
                "skipped": true
              },
              {
                "title": "should provide error for invalid role field",
                "fullTitle": "App user roles --- Application user roles should provide error for invalid role field",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">45000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_app_user_role'</span>, appUser1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-comment\">// \"name\": \"createRole\",</span><br>\t\t<span class=\"hljs-string\">\"users\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "ee8ec3fe-1a16-44b7-ab5f-12dc2904a3c6",
                "parentUUID": "2c625661-132c-43fb-bfa2-c44ef7eb8ab6",
                "skipped": true
              },
              {
                "title": "should be able to get all application user roles created",
                "fullTitle": "App user roles --- Application user roles should be able to get all application user roles created",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_app_user_roles'</span>, appUser2.authtoken, app.api_key))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\trole2 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role2).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'users'</span>,<span class=\"hljs-string\">'roles'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole2.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole2.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole2.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole2.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole2.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// role2.created_by.should.be.a('string')</span><br>\t<span class=\"hljs-comment\">// role2.updated_by.should.be.a('string')</span><br>\trole2.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole2._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole2.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole2.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole2.name.should.be.equal(roleName)<br>\trole2.users.should.be.deep.equal([])<br>\trole2.roles.should.be.deep.equal([])<br>\trole2.app_user_object_uid.should.be.equal(appUser1.uid)<br>\texpect(role2.created_by).to.be.null<br>\texpect(role2.created_by).to.be.null<br>\trole2.created_at.should.be.equal(role2.updated_at)<br>\trole2._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "42c11035-05c1-4c88-a826-828eff8337c8",
                "parentUUID": "2c625661-132c-43fb-bfa2-c44ef7eb8ab6",
                "skipped": true
              },
              {
                "title": "should be able to get single application user role",
                "fullTitle": "App user roles --- Application user roles should be able to get single application user role",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_single_role'</span>, appUser1.authtoken, app.api_key, roleUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t<br>\trole3 = res.body.object<br>\t<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role3).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole3.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole3.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole3.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole3.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole3.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole3._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole3.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole3.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole3.name.should.be.equal(roleName)<br>\trole3.users.should.be.deep.equal([])<br>\trole3.roles.should.be.deep.equal([])<br>\trole3.app_user_object_uid.should.be.equal(appUser1.uid)<br>\texpect(role3.created_by).to.be.null<br>\texpect(role3.created_by).to.be.null<br>\trole3.created_at.should.be.equal(role3.updated_at)<br>\trole3._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "175db8da-c0fe-4813-992e-3fbb06c10df6",
                "parentUUID": "2c625661-132c-43fb-bfa2-c44ef7eb8ab6",
                "skipped": true
              },
              {
                "title": "should be able to update application user role",
                "fullTitle": "App user roles --- Application user roles should be able to update application user role",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_app_user_role'</span>, sys_user.authtoken, app.api_key, roleUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updateRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [appUser2.uid],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [roleUid]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\trole4 = res.body.object<br>\t<span class=\"hljs-comment\">//Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role4).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'users'</span>,<span class=\"hljs-string\">'roles'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole4.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole4.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// role4.created_by.should.be.a('string')</span><br>\trole4.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole4._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole4.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.users.should.be.deep.equal([appUser2.uid])<br>\trole4.roles.should.be.deep.equal([roleUid])<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole4.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole4.name.should.be.equal(<span class=\"hljs-string\">\"updateRole\"</span>)<br>\t<span class=\"hljs-comment\">// role4.users.should.be.equal('array')</span><br>\t<span class=\"hljs-comment\">// role4.roles.should.be.equal('array')</span><br>\trole4.app_user_object_uid.should.be.equal(appUser1.uid)<br>\t<br>\t<span class=\"hljs-comment\">// expect(role4.created_by).should.to.be.null</span><br>\t<br>\trole4.updated_by.should.be.equal(sys_user.uid)<br>\trole4.created_at.should.not.equal(role4.updated_at)<br>\trole4._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "b9795c11-78fe-4fc5-9318-e1456823fa6e",
                "parentUUID": "2c625661-132c-43fb-bfa2-c44ef7eb8ab6",
                "skipped": true
              },
              {
                "title": "should proide error message for invalid role uid while updating role",
                "fullTitle": "App user roles --- Application user roles should proide error message for invalid role uid while updating role",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_app_user_role'</span>, sys_user.authtoken, app.api_key, <span class=\"hljs-string\">\"asd\"</span>, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updateRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [appUser2.uid],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [roleUid]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "87af3379-be0f-4624-8761-9bcec471f603",
                "parentUUID": "2c625661-132c-43fb-bfa2-c44ef7eb8ab6",
                "skipped": true
              },
              {
                "title": "should be able to delete application user role created",
                "fullTitle": "App user roles --- Application user roles should be able to delete application user role created",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_app_user_role'</span>, appUser1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"createRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\trole5 = res.body.object<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-comment\">// Object.keys(role5).should.to.be.deep.equal(['published', '__loc', 'name', 'users', 'roles', 'app_user_object_uid', 'created_at', 'updated_at', 'uid', 'ACL', '_version', 'created_by', 'updated_by', 'tags'])</span><br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'delete_role'</span>, appUser1.authtoken, app.api_key, role5.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "d909a43f-5c1c-4f6b-8314-36a4a547f51c",
                "parentUUID": "2c625661-132c-43fb-bfa2-c44ef7eb8ab6",
                "skipped": true
              },
              {
                "title": "should proide error message for invalid role uid while deleting role",
                "fullTitle": "App user roles --- Application user roles should proide error message for invalid role uid while deleting role",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'delete_role'</span>, appUser1.authtoken, app.api_key, <span class=\"hljs-string\">\"asd\"</span>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "570924be-7102-40c7-a3e8-be48037f3e6b",
                "parentUUID": "2c625661-132c-43fb-bfa2-c44ef7eb8ab6",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "2c625661-132c-43fb-bfa2-c44ef7eb8ab6",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to create application user role",
                "fullTitle": "App user roles --- Application user roles should be able to create application user role",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_app_user_role'</span>, appUser1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"createRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\trole1 = res.body.object<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role1).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole1.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole1.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole1.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole1.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole1.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole1._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole1.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole1.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole1.name.should.be.equal(<span class=\"hljs-string\">\"createRole\"</span>)<br>\trole1.users.should.be.deep.equal([])<br>\trole1.roles.should.be.deep.equal([])<br>\trole1.app_user_object_uid.should.be.equal(appUser1.uid)<br>\texpect(role1.created_by).to.be.null<br>\texpect(role1.created_by).to.be.null<br>\trole1.created_at.should.be.equal(role1.updated_at)<br>\trole1._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'delete_role'</span>, appUser1.authtoken, app.api_key, role1.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err.trace)<br>})",
                "isRoot": false,
                "uuid": "e8cf0fa8-b93d-4414-9092-684fc4bdb22f",
                "parentUUID": "2c625661-132c-43fb-bfa2-c44ef7eb8ab6",
                "skipped": true
              },
              {
                "title": "should provide error for invalid role field",
                "fullTitle": "App user roles --- Application user roles should provide error for invalid role field",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">45000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_app_user_role'</span>, appUser1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-comment\">// \"name\": \"createRole\",</span><br>\t\t<span class=\"hljs-string\">\"users\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "ee8ec3fe-1a16-44b7-ab5f-12dc2904a3c6",
                "parentUUID": "2c625661-132c-43fb-bfa2-c44ef7eb8ab6",
                "skipped": true
              },
              {
                "title": "should be able to get all application user roles created",
                "fullTitle": "App user roles --- Application user roles should be able to get all application user roles created",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_app_user_roles'</span>, appUser2.authtoken, app.api_key))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\trole2 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role2).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'users'</span>,<span class=\"hljs-string\">'roles'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole2.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole2.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole2.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole2.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole2.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// role2.created_by.should.be.a('string')</span><br>\t<span class=\"hljs-comment\">// role2.updated_by.should.be.a('string')</span><br>\trole2.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole2._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole2.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole2.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole2.name.should.be.equal(roleName)<br>\trole2.users.should.be.deep.equal([])<br>\trole2.roles.should.be.deep.equal([])<br>\trole2.app_user_object_uid.should.be.equal(appUser1.uid)<br>\texpect(role2.created_by).to.be.null<br>\texpect(role2.created_by).to.be.null<br>\trole2.created_at.should.be.equal(role2.updated_at)<br>\trole2._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "42c11035-05c1-4c88-a826-828eff8337c8",
                "parentUUID": "2c625661-132c-43fb-bfa2-c44ef7eb8ab6",
                "skipped": true
              },
              {
                "title": "should be able to get single application user role",
                "fullTitle": "App user roles --- Application user roles should be able to get single application user role",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_single_role'</span>, appUser1.authtoken, app.api_key, roleUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t<br>\trole3 = res.body.object<br>\t<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role3).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole3.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole3.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole3.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole3.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole3.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole3._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole3.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole3.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole3.name.should.be.equal(roleName)<br>\trole3.users.should.be.deep.equal([])<br>\trole3.roles.should.be.deep.equal([])<br>\trole3.app_user_object_uid.should.be.equal(appUser1.uid)<br>\texpect(role3.created_by).to.be.null<br>\texpect(role3.created_by).to.be.null<br>\trole3.created_at.should.be.equal(role3.updated_at)<br>\trole3._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "175db8da-c0fe-4813-992e-3fbb06c10df6",
                "parentUUID": "2c625661-132c-43fb-bfa2-c44ef7eb8ab6",
                "skipped": true
              },
              {
                "title": "should be able to update application user role",
                "fullTitle": "App user roles --- Application user roles should be able to update application user role",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_app_user_role'</span>, sys_user.authtoken, app.api_key, roleUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updateRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [appUser2.uid],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [roleUid]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\trole4 = res.body.object<br>\t<span class=\"hljs-comment\">//Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role4).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'users'</span>,<span class=\"hljs-string\">'roles'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole4.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole4.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// role4.created_by.should.be.a('string')</span><br>\trole4.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole4._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole4.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.users.should.be.deep.equal([appUser2.uid])<br>\trole4.roles.should.be.deep.equal([roleUid])<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole4.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole4.name.should.be.equal(<span class=\"hljs-string\">\"updateRole\"</span>)<br>\t<span class=\"hljs-comment\">// role4.users.should.be.equal('array')</span><br>\t<span class=\"hljs-comment\">// role4.roles.should.be.equal('array')</span><br>\trole4.app_user_object_uid.should.be.equal(appUser1.uid)<br>\t<br>\t<span class=\"hljs-comment\">// expect(role4.created_by).should.to.be.null</span><br>\t<br>\trole4.updated_by.should.be.equal(sys_user.uid)<br>\trole4.created_at.should.not.equal(role4.updated_at)<br>\trole4._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "b9795c11-78fe-4fc5-9318-e1456823fa6e",
                "parentUUID": "2c625661-132c-43fb-bfa2-c44ef7eb8ab6",
                "skipped": true
              },
              {
                "title": "should proide error message for invalid role uid while updating role",
                "fullTitle": "App user roles --- Application user roles should proide error message for invalid role uid while updating role",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_app_user_role'</span>, sys_user.authtoken, app.api_key, <span class=\"hljs-string\">\"asd\"</span>, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updateRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [appUser2.uid],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [roleUid]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "87af3379-be0f-4624-8761-9bcec471f603",
                "parentUUID": "2c625661-132c-43fb-bfa2-c44ef7eb8ab6",
                "skipped": true
              },
              {
                "title": "should be able to delete application user role created",
                "fullTitle": "App user roles --- Application user roles should be able to delete application user role created",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_app_user_role'</span>, appUser1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"createRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\trole5 = res.body.object<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-comment\">// Object.keys(role5).should.to.be.deep.equal(['published', '__loc', 'name', 'users', 'roles', 'app_user_object_uid', 'created_at', 'updated_at', 'uid', 'ACL', '_version', 'created_by', 'updated_by', 'tags'])</span><br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'delete_role'</span>, appUser1.authtoken, app.api_key, role5.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "d909a43f-5c1c-4f6b-8314-36a4a547f51c",
                "parentUUID": "2c625661-132c-43fb-bfa2-c44ef7eb8ab6",
                "skipped": true
              },
              {
                "title": "should proide error message for invalid role uid while deleting role",
                "fullTitle": "App user roles --- Application user roles should proide error message for invalid role uid while deleting role",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'delete_role'</span>, appUser1.authtoken, app.api_key, <span class=\"hljs-string\">\"asd\"</span>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "570924be-7102-40c7-a3e8-be48037f3e6b",
                "parentUUID": "2c625661-132c-43fb-bfa2-c44ef7eb8ab6",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 8,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 8,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "1cf82366-5413-474d-b5fa-5188f868e59d",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "classes ---",
        "suites": [
          {
            "title": "Get classes(inbuilt)",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all classes present",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get all classes present",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> app_user = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> app_user_role = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> installation_data = res.body.classes[<span class=\"hljs-number\">2</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> upload_class = res.body.classes[<span class=\"hljs-number\">3</span>]<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user_role).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation_data).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<br>\t\t<span class=\"hljs-comment\">//console.log(app_user.schema[0])</span><br>\t\t<span class=\"hljs-comment\">// Keys assertion schema</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user_role.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation_data.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>])<br>\t\t<span class=\"hljs-comment\">// Object.keys(upload_class.schema[0]).should.to.be.deep.equal(['display_name', 'uid', 'data_type', 'field_metadata', 'multiple', 'mandatory'])</span><br><br><br>\t\tapp_user.schema.length.should.be.equal(<span class=\"hljs-number\">9</span>)<br>\t\tapp_user_role.schema.length.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\tinstallation_data.schema.length.should.be.equal(<span class=\"hljs-number\">7</span>)<br>\t\t<span class=\"hljs-comment\">// upload_class.schema.length.should.be.equal(3)</span><br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\tapp_user.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tapp_user.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user_role.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user_role.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tapp_user_role.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user_role.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user_role.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user_role.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tinstallation_data.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tinstallation_data.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tinstallation_data.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tinstallation_data.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tinstallation_data.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tinstallation_data.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t<span class=\"hljs-comment\">// upload_class.created_at.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.updated_at.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.title.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.uid.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.inbuilt_class.should.be.a('boolean')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.schema.should.be.a('array')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.maintain_revisions.should.be.a('boolean')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.abilities.should.be.a('object')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.DEFAULT_ACL.should.be.a('object')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.SYS_ACL.should.be.a('object')</span><br><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tapp_user.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\tapp_user.title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\tapp_user.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tapp_user_role.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\tapp_user_role.title.should.be.equal(<span class=\"hljs-string\">'Application User Role'</span>)<br>\t\tapp_user_role.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tinstallation_data.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\tinstallation_data.title.should.be.equal(<span class=\"hljs-string\">'Installation Data'</span>)<br>\t\tinstallation_data.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t<span class=\"hljs-comment\">// upload_class.uid.should.be.equal('built_io_upload')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.title.should.be.equal('built.io Uploads')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.inbuilt_class.should.be.equal(true)</span><br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "a8dbf4d9-97eb-4084-9ec4-ece3496705c3",
                "parentUUID": "6b146e18-9931-4497-a667-112cf2e01ef2",
                "skipped": true
              },
              {
                "title": "should be able to get count for the classes present",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get count for the classes present",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-literal\">true</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">//console.log(res.body)</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body).should.to.be.deep.equal([<span class=\"hljs-string\">'classes'</span>])<br>\t\tres.body.classes.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\tres.body.classes.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "95f94cde-451c-4920-a795-65677a82fbc2",
                "parentUUID": "6b146e18-9931-4497-a667-112cf2e01ef2",
                "skipped": true
              },
              {
                "title": "should be able to get classes using limit param",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get classes using limit param",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> response = res.body.classes<br>\t\tresponse.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(response[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tresponse[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\tresponse[<span class=\"hljs-number\">0</span>].title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\tresponse[<span class=\"hljs-number\">0</span>].inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "8ca94c66-127f-466d-be85-c1002affb0a9",
                "parentUUID": "6b146e18-9931-4497-a667-112cf2e01ef2",
                "skipped": true
              },
              {
                "title": "should be able to get classes using skip param",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get classes using skip param",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> classes = res.body.classes<br>\t\tclasses.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tclasses[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].title.should.be.equal(<span class=\"hljs-string\">'Installation Data'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "3b877694-c367-4ce7-874c-e0b52471f850",
                "parentUUID": "6b146e18-9931-4497-a667-112cf2e01ef2",
                "skipped": true
              },
              {
                "title": "should be able to get classes simple query",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get classes simple query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>\t}<br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">//console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> classes = res.body.classes<br>\t\tclasses.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tclasses[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].title.should.be.equal(<span class=\"hljs-string\">'Application User Role'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "f6251df8-bff2-436f-abde-7d6e9392f45b",
                "parentUUID": "6b146e18-9931-4497-a667-112cf2e01ef2",
                "skipped": true
              },
              {
                "title": "should provide error message for -ve skip/limit value",
                "fullTitle": "classes --- Get classes(inbuilt) should provide error message for -ve skip/limit value",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"skip\"</span>: -<span class=\"hljs-number\">3</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">422</span>) <br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Failed to fetch classes. Please try again with valid parameters.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"params\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"has an invalid operation.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "1b2072f5-d57e-4bfe-9000-bde271d96fe9",
                "parentUUID": "6b146e18-9931-4497-a667-112cf2e01ef2",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "6b146e18-9931-4497-a667-112cf2e01ef2",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get all classes present",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get all classes present",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> app_user = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> app_user_role = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> installation_data = res.body.classes[<span class=\"hljs-number\">2</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> upload_class = res.body.classes[<span class=\"hljs-number\">3</span>]<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user_role).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation_data).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<br>\t\t<span class=\"hljs-comment\">//console.log(app_user.schema[0])</span><br>\t\t<span class=\"hljs-comment\">// Keys assertion schema</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user_role.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation_data.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>])<br>\t\t<span class=\"hljs-comment\">// Object.keys(upload_class.schema[0]).should.to.be.deep.equal(['display_name', 'uid', 'data_type', 'field_metadata', 'multiple', 'mandatory'])</span><br><br><br>\t\tapp_user.schema.length.should.be.equal(<span class=\"hljs-number\">9</span>)<br>\t\tapp_user_role.schema.length.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\tinstallation_data.schema.length.should.be.equal(<span class=\"hljs-number\">7</span>)<br>\t\t<span class=\"hljs-comment\">// upload_class.schema.length.should.be.equal(3)</span><br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\tapp_user.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tapp_user.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user_role.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user_role.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tapp_user_role.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user_role.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user_role.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user_role.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tinstallation_data.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tinstallation_data.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tinstallation_data.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tinstallation_data.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tinstallation_data.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tinstallation_data.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t<span class=\"hljs-comment\">// upload_class.created_at.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.updated_at.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.title.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.uid.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.inbuilt_class.should.be.a('boolean')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.schema.should.be.a('array')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.maintain_revisions.should.be.a('boolean')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.abilities.should.be.a('object')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.DEFAULT_ACL.should.be.a('object')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.SYS_ACL.should.be.a('object')</span><br><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tapp_user.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\tapp_user.title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\tapp_user.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tapp_user_role.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\tapp_user_role.title.should.be.equal(<span class=\"hljs-string\">'Application User Role'</span>)<br>\t\tapp_user_role.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tinstallation_data.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\tinstallation_data.title.should.be.equal(<span class=\"hljs-string\">'Installation Data'</span>)<br>\t\tinstallation_data.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t<span class=\"hljs-comment\">// upload_class.uid.should.be.equal('built_io_upload')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.title.should.be.equal('built.io Uploads')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.inbuilt_class.should.be.equal(true)</span><br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "a8dbf4d9-97eb-4084-9ec4-ece3496705c3",
                "parentUUID": "6b146e18-9931-4497-a667-112cf2e01ef2",
                "skipped": true
              },
              {
                "title": "should be able to get count for the classes present",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get count for the classes present",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-literal\">true</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">//console.log(res.body)</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body).should.to.be.deep.equal([<span class=\"hljs-string\">'classes'</span>])<br>\t\tres.body.classes.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\tres.body.classes.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "95f94cde-451c-4920-a795-65677a82fbc2",
                "parentUUID": "6b146e18-9931-4497-a667-112cf2e01ef2",
                "skipped": true
              },
              {
                "title": "should be able to get classes using limit param",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get classes using limit param",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> response = res.body.classes<br>\t\tresponse.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(response[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tresponse[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\tresponse[<span class=\"hljs-number\">0</span>].title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\tresponse[<span class=\"hljs-number\">0</span>].inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "8ca94c66-127f-466d-be85-c1002affb0a9",
                "parentUUID": "6b146e18-9931-4497-a667-112cf2e01ef2",
                "skipped": true
              },
              {
                "title": "should be able to get classes using skip param",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get classes using skip param",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> classes = res.body.classes<br>\t\tclasses.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tclasses[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].title.should.be.equal(<span class=\"hljs-string\">'Installation Data'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "3b877694-c367-4ce7-874c-e0b52471f850",
                "parentUUID": "6b146e18-9931-4497-a667-112cf2e01ef2",
                "skipped": true
              },
              {
                "title": "should be able to get classes simple query",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get classes simple query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>\t}<br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">//console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> classes = res.body.classes<br>\t\tclasses.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tclasses[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].title.should.be.equal(<span class=\"hljs-string\">'Application User Role'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "f6251df8-bff2-436f-abde-7d6e9392f45b",
                "parentUUID": "6b146e18-9931-4497-a667-112cf2e01ef2",
                "skipped": true
              },
              {
                "title": "should provide error message for -ve skip/limit value",
                "fullTitle": "classes --- Get classes(inbuilt) should provide error message for -ve skip/limit value",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"skip\"</span>: -<span class=\"hljs-number\">3</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">422</span>) <br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Failed to fetch classes. Please try again with valid parameters.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"params\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"has an invalid operation.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "1b2072f5-d57e-4bfe-9000-bde271d96fe9",
                "parentUUID": "6b146e18-9931-4497-a667-112cf2e01ef2",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 6,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 6,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Class creation",
            "suites": [],
            "tests": [
              {
                "title": "should be able to create a class for given app",
                "fullTitle": "classes --- Class creation should be able to create a class for given app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> res = res.body<br>\t\t\t\t\tres.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class created successfully!'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">//console.log(res)</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.schema[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.abilities).should.be.deep.equal([<span class=\"hljs-string\">'get_one_object'</span>, <span class=\"hljs-string\">'get_all_objects'</span>, <span class=\"hljs-string\">'create_object'</span>, <span class=\"hljs-string\">'update_object'</span>, <span class=\"hljs-string\">'delete_object'</span>, <span class=\"hljs-string\">'delete_all_objects'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.DEFAULT_ACL).should.be.deep.equal([<span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.DEFAULT_ACL.others).should.be.deep.equal([<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tres.class.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tres.class.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tres.class.last_activity.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tres.class.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tres.class.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tres.class.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tres.class.schema.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tres.class.title.should.be.equal(<span class=\"hljs-string\">'class_name'</span>)<br>\t\t\t\t\tres.class.uid.should.be.equal(<span class=\"hljs-string\">'class_uid'</span>)<br>\t\t\t\t\tres.class.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tres.class.maintain_revisions.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tres.class.abilities.get_one_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.get_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.create_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.update_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.delete_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.delete_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.DEFAULT_ACL.others.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.DEFAULT_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// res.class.SYS_ACL.should.be.equal({})</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// res.class.DEFAULT_ACL.length.should.be.equal('others')</span><br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "9fa8ade4-88ca-45bf-9424-340ca2d35a21",
                "parentUUID": "6e771ade-0081-4067-a88b-246e24ddd2e1",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid json param",
                "fullTitle": "classes --- Class creation should provide an error message for invalid json param",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t<span class=\"hljs-comment\">// .expect(201)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Please send your attributes wrapped in 'class'\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "6491fb3a-26c1-42cc-8856-16406172beec",
                "parentUUID": "6e771ade-0081-4067-a88b-246e24ddd2e1",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid schema",
                "fullTitle": "classes --- Class creation should provide an error message for invalid schema",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span><br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t<span class=\"hljs-comment\">// .expect(201)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class creation failed. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">115</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"schema\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"should have a group schema\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "2167716d-bad7-4c4a-b5ae-332d109dcd20",
                "parentUUID": "6e771ade-0081-4067-a88b-246e24ddd2e1",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid authtoken",
                "fullTitle": "classes --- Class creation should provide an error message for invalid authtoken",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, <span class=\"hljs-string\">''</span>, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t<span class=\"hljs-comment\">// .expect(201)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "17a16deb-240a-40c3-9f56-0aed1364c904",
                "parentUUID": "6e771ade-0081-4067-a88b-246e24ddd2e1",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "6e771ade-0081-4067-a88b-246e24ddd2e1",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to create a class for given app",
                "fullTitle": "classes --- Class creation should be able to create a class for given app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> res = res.body<br>\t\t\t\t\tres.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class created successfully!'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">//console.log(res)</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.schema[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.abilities).should.be.deep.equal([<span class=\"hljs-string\">'get_one_object'</span>, <span class=\"hljs-string\">'get_all_objects'</span>, <span class=\"hljs-string\">'create_object'</span>, <span class=\"hljs-string\">'update_object'</span>, <span class=\"hljs-string\">'delete_object'</span>, <span class=\"hljs-string\">'delete_all_objects'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.DEFAULT_ACL).should.be.deep.equal([<span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.DEFAULT_ACL.others).should.be.deep.equal([<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tres.class.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tres.class.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tres.class.last_activity.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tres.class.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tres.class.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tres.class.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tres.class.schema.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tres.class.title.should.be.equal(<span class=\"hljs-string\">'class_name'</span>)<br>\t\t\t\t\tres.class.uid.should.be.equal(<span class=\"hljs-string\">'class_uid'</span>)<br>\t\t\t\t\tres.class.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tres.class.maintain_revisions.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tres.class.abilities.get_one_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.get_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.create_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.update_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.delete_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.delete_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.DEFAULT_ACL.others.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.DEFAULT_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// res.class.SYS_ACL.should.be.equal({})</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// res.class.DEFAULT_ACL.length.should.be.equal('others')</span><br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "9fa8ade4-88ca-45bf-9424-340ca2d35a21",
                "parentUUID": "6e771ade-0081-4067-a88b-246e24ddd2e1",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid json param",
                "fullTitle": "classes --- Class creation should provide an error message for invalid json param",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t<span class=\"hljs-comment\">// .expect(201)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Please send your attributes wrapped in 'class'\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "6491fb3a-26c1-42cc-8856-16406172beec",
                "parentUUID": "6e771ade-0081-4067-a88b-246e24ddd2e1",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid schema",
                "fullTitle": "classes --- Class creation should provide an error message for invalid schema",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span><br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t<span class=\"hljs-comment\">// .expect(201)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class creation failed. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">115</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"schema\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"should have a group schema\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "2167716d-bad7-4c4a-b5ae-332d109dcd20",
                "parentUUID": "6e771ade-0081-4067-a88b-246e24ddd2e1",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid authtoken",
                "fullTitle": "classes --- Class creation should provide an error message for invalid authtoken",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, <span class=\"hljs-string\">''</span>, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t<span class=\"hljs-comment\">// .expect(201)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "17a16deb-240a-40c3-9f56-0aed1364c904",
                "parentUUID": "6e771ade-0081-4067-a88b-246e24ddd2e1",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 4,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Get class",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get single(built_io_installation_data) class",
                "fullTitle": "classes --- Get class should be able to get single(built_io_installation_data) class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_installation_data\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> installation = res.body.class<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>])<br>\t\t\t\t\tinstallation.schema.length.should.be.equal(<span class=\"hljs-number\">7</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tinstallation.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tinstallation.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tinstallation.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tinstallation.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tinstallation.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tinstallation.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tinstallation.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\t\t\t\tinstallation.title.should.be.equal(<span class=\"hljs-string\">'Installation Data'</span>)<br>\t\t\t\t\tinstallation.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "ffe6c80b-b946-413f-83a9-ea772d05edd9",
                "parentUUID": "6c2d9fae-ccd9-4956-b87b-72814d3e531c",
                "skipped": true
              },
              {
                "title": "should be able to get single(built_io_application_user_role) class",
                "fullTitle": "classes --- Get class should be able to get single(built_io_application_user_role) class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> appUserRole = res.body.class<br>\t\t\t\t\t\t<span class=\"hljs-comment\">//console.log(appUserRole)</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserRole).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserRole.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>])<br>\t\t\t\t\tappUserRole.schema.length.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tappUserRole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserRole.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tappUserRole.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserRole.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserRole.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserRole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tappUserRole.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\t\t\t\tappUserRole.title.should.be.equal(<span class=\"hljs-string\">'Application User Role'</span>)<br>\t\t\t\t\tappUserRole.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "3e78e955-8803-4d59-873e-8f39a88d4e01",
                "parentUUID": "6c2d9fae-ccd9-4956-b87b-72814d3e531c",
                "skipped": true
              },
              {
                "title": "should be able to get single(built_io_application_user) class",
                "fullTitle": "classes --- Get class should be able to get single(built_io_application_user) class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> appUserClass = res.body.class<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserClass).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserClass.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>])<br>\t\t\t\t\tappUserClass.schema.length.should.be.equal(<span class=\"hljs-number\">9</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tappUserClass.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserClass.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tappUserClass.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserClass.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserClass.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserClass.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tappUserClass.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tappUserClass.title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\t\t\t\tappUserClass.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "bb4787b7-0dcb-42d9-b01c-823a5c8ee258",
                "parentUUID": "6c2d9fae-ccd9-4956-b87b-72814d3e531c",
                "skipped": true
              },
              {
                "title": "should be able to get single(inbuilt) class",
                "fullTitle": "classes --- Get class should be able to get single(inbuilt) class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> uploadClass = res.body.class<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(uploadClass).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(uploadClass.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// console.log(uploadClass.schema.length)</span><br>\t\t\t\t\tuploadClass.schema.length.should.be.equal(<span class=\"hljs-number\">9</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tuploadClass.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tuploadClass.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tuploadClass.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tuploadClass.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tuploadClass.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tuploadClass.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tuploadClass.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tuploadClass.title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\t\t\t\tuploadClass.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "cf0df8e0-15ab-49f4-b613-ce3b4cb44201",
                "parentUUID": "6c2d9fae-ccd9-4956-b87b-72814d3e531c",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "6c2d9fae-ccd9-4956-b87b-72814d3e531c",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get single(built_io_installation_data) class",
                "fullTitle": "classes --- Get class should be able to get single(built_io_installation_data) class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_installation_data\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> installation = res.body.class<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>])<br>\t\t\t\t\tinstallation.schema.length.should.be.equal(<span class=\"hljs-number\">7</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tinstallation.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tinstallation.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tinstallation.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tinstallation.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tinstallation.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tinstallation.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tinstallation.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\t\t\t\tinstallation.title.should.be.equal(<span class=\"hljs-string\">'Installation Data'</span>)<br>\t\t\t\t\tinstallation.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "ffe6c80b-b946-413f-83a9-ea772d05edd9",
                "parentUUID": "6c2d9fae-ccd9-4956-b87b-72814d3e531c",
                "skipped": true
              },
              {
                "title": "should be able to get single(built_io_application_user_role) class",
                "fullTitle": "classes --- Get class should be able to get single(built_io_application_user_role) class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> appUserRole = res.body.class<br>\t\t\t\t\t\t<span class=\"hljs-comment\">//console.log(appUserRole)</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserRole).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserRole.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>])<br>\t\t\t\t\tappUserRole.schema.length.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tappUserRole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserRole.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tappUserRole.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserRole.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserRole.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserRole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tappUserRole.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\t\t\t\tappUserRole.title.should.be.equal(<span class=\"hljs-string\">'Application User Role'</span>)<br>\t\t\t\t\tappUserRole.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "3e78e955-8803-4d59-873e-8f39a88d4e01",
                "parentUUID": "6c2d9fae-ccd9-4956-b87b-72814d3e531c",
                "skipped": true
              },
              {
                "title": "should be able to get single(built_io_application_user) class",
                "fullTitle": "classes --- Get class should be able to get single(built_io_application_user) class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> appUserClass = res.body.class<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserClass).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserClass.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>])<br>\t\t\t\t\tappUserClass.schema.length.should.be.equal(<span class=\"hljs-number\">9</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tappUserClass.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserClass.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tappUserClass.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserClass.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserClass.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserClass.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tappUserClass.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tappUserClass.title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\t\t\t\tappUserClass.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "bb4787b7-0dcb-42d9-b01c-823a5c8ee258",
                "parentUUID": "6c2d9fae-ccd9-4956-b87b-72814d3e531c",
                "skipped": true
              },
              {
                "title": "should be able to get single(inbuilt) class",
                "fullTitle": "classes --- Get class should be able to get single(inbuilt) class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> uploadClass = res.body.class<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(uploadClass).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(uploadClass.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// console.log(uploadClass.schema.length)</span><br>\t\t\t\t\tuploadClass.schema.length.should.be.equal(<span class=\"hljs-number\">9</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tuploadClass.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tuploadClass.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tuploadClass.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tuploadClass.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tuploadClass.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tuploadClass.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tuploadClass.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tuploadClass.title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\t\t\t\tuploadClass.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "cf0df8e0-15ab-49f4-b613-ce3b4cb44201",
                "parentUUID": "6c2d9fae-ccd9-4956-b87b-72814d3e531c",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 4,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Update class",
            "suites": [],
            "tests": [
              {
                "title": "should be able to update the given class",
                "fullTitle": "classes --- Update class should be able to update the given class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"testclas\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"testclass\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classUid = res1.body.class.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Update_class'</span>, authtoken, api_key, classUid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"changed\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"count\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"count\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t]<br>\t\t\t\t\t\t}<br>\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> updatedClss = res2.body.class<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.schema[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.abilities).should.be.deep.equal([<span class=\"hljs-string\">'get_one_object'</span>, <span class=\"hljs-string\">'get_all_objects'</span>, <span class=\"hljs-string\">'create_object'</span>, <span class=\"hljs-string\">'update_object'</span>, <span class=\"hljs-string\">'delete_object'</span>, <span class=\"hljs-string\">'delete_all_objects'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.DEFAULT_ACL).should.be.deep.equal([<span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.DEFAULT_ACL.others).should.be.deep.equal([<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t\t\tupdatedClss.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tupdatedClss.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tupdatedClss.last_activity.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tupdatedClss.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tupdatedClss.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tupdatedClss.schema.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\tupdatedClss.title.should.be.equal(<span class=\"hljs-string\">'changed'</span>)<br>\t\t\t\t\t\t\tupdatedClss.uid.should.be.equal(<span class=\"hljs-string\">'testclass'</span>)<br>\t\t\t\t\t\t\tupdatedClss.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tupdatedClss.maintain_revisions.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.get_one_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.get_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.create_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.update_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.delete_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.delete_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.DEFAULT_ACL.others.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.DEFAULT_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "eb84382f-1a2f-47b6-b9e7-b0d915ebe39a",
                "parentUUID": "6f62b309-cf5c-4886-a407-310e7f20cf31",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "6f62b309-cf5c-4886-a407-310e7f20cf31",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to update the given class",
                "fullTitle": "classes --- Update class should be able to update the given class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"testclas\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"testclass\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classUid = res1.body.class.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Update_class'</span>, authtoken, api_key, classUid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"changed\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"count\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"count\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t]<br>\t\t\t\t\t\t}<br>\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> updatedClss = res2.body.class<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.schema[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.abilities).should.be.deep.equal([<span class=\"hljs-string\">'get_one_object'</span>, <span class=\"hljs-string\">'get_all_objects'</span>, <span class=\"hljs-string\">'create_object'</span>, <span class=\"hljs-string\">'update_object'</span>, <span class=\"hljs-string\">'delete_object'</span>, <span class=\"hljs-string\">'delete_all_objects'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.DEFAULT_ACL).should.be.deep.equal([<span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.DEFAULT_ACL.others).should.be.deep.equal([<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t\t\tupdatedClss.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tupdatedClss.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tupdatedClss.last_activity.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tupdatedClss.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tupdatedClss.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tupdatedClss.schema.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\tupdatedClss.title.should.be.equal(<span class=\"hljs-string\">'changed'</span>)<br>\t\t\t\t\t\t\tupdatedClss.uid.should.be.equal(<span class=\"hljs-string\">'testclass'</span>)<br>\t\t\t\t\t\t\tupdatedClss.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tupdatedClss.maintain_revisions.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.get_one_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.get_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.create_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.update_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.delete_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.delete_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.DEFAULT_ACL.others.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.DEFAULT_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "eb84382f-1a2f-47b6-b9e7-b0d915ebe39a",
                "parentUUID": "6f62b309-cf5c-4886-a407-310e7f20cf31",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Delete Class",
            "suites": [],
            "tests": [
              {
                "title": "should be able to delete class",
                "fullTitle": "classes --- Delete Class should be able to delete class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"new class\"</span>,<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"new_class\"</span>,<br>\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t}]<br>\t}<br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br><br>\t\t<span class=\"hljs-keyword\">var</span> classUid = res1.body.class.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class deleted successfully!'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br><br>\t})",
                "isRoot": false,
                "uuid": "9d7d5604-db1e-4748-bb89-a75b7bc625fa",
                "parentUUID": "01c17753-d241-4e6e-a2bb-bf7a88214f6d",
                "skipped": true
              },
              {
                "title": "should provide an error messgae on application user class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on application user class delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "ca0d2fc8-9297-4f42-a53d-1d632f305b59",
                "parentUUID": "01c17753-d241-4e6e-a2bb-bf7a88214f6d",
                "skipped": true
              },
              {
                "title": "should provide an error messgae on application user role class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on application user role class delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "b333a5b0-98e8-4325-bae3-7fc950658048",
                "parentUUID": "01c17753-d241-4e6e-a2bb-bf7a88214f6d",
                "skipped": true
              },
              {
                "title": "should provide an error messgae on upload class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "2830691d-8820-4249-b0de-1cc97a7ed7e8",
                "parentUUID": "01c17753-d241-4e6e-a2bb-bf7a88214f6d",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on upload class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_installation_data\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "0ad61ff9-eb57-4864-a9e8-545b4b14d407",
                "parentUUID": "01c17753-d241-4e6e-a2bb-bf7a88214f6d",
                "skipped": true
              }
            ],
            "pending": [
              {
                "title": "should provide an error messgae on upload class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "2830691d-8820-4249-b0de-1cc97a7ed7e8",
                "parentUUID": "01c17753-d241-4e6e-a2bb-bf7a88214f6d",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "01c17753-d241-4e6e-a2bb-bf7a88214f6d",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to delete class",
                "fullTitle": "classes --- Delete Class should be able to delete class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"new class\"</span>,<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"new_class\"</span>,<br>\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t}]<br>\t}<br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br><br>\t\t<span class=\"hljs-keyword\">var</span> classUid = res1.body.class.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class deleted successfully!'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br><br>\t})",
                "isRoot": false,
                "uuid": "9d7d5604-db1e-4748-bb89-a75b7bc625fa",
                "parentUUID": "01c17753-d241-4e6e-a2bb-bf7a88214f6d",
                "skipped": true
              },
              {
                "title": "should provide an error messgae on application user class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on application user class delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "ca0d2fc8-9297-4f42-a53d-1d632f305b59",
                "parentUUID": "01c17753-d241-4e6e-a2bb-bf7a88214f6d",
                "skipped": true
              },
              {
                "title": "should provide an error messgae on application user role class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on application user role class delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "b333a5b0-98e8-4325-bae3-7fc950658048",
                "parentUUID": "01c17753-d241-4e6e-a2bb-bf7a88214f6d",
                "skipped": true
              },
              {
                "title": "should provide an error messgae on upload class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_installation_data\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "0ad61ff9-eb57-4864-a9e8-545b4b14d407",
                "parentUUID": "01c17753-d241-4e6e-a2bb-bf7a88214f6d",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 4,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": true,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "8d4aee69-b952-404c-85ef-8502231b3261",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Bulk sys ACL --- ",
        "suites": [
          {
            "title": "Classes Bulk sys ACL",
            "suites": [],
            "tests": [
              {
                "title": "should apply bulk sys ACL on given classes",
                "fullTitle": "Bulk sys ACL ---  Classes Bulk sys ACL should apply bulk sys ACL on given classes",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'apply_bulk_sys_acl'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_application_user\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_application_user_role\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_installation_data\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_upload\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: classUid,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}]<br>\t\t\t})<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes1 = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes2 = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes3 = res.body.classes[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes4 = res.body.classes[<span class=\"hljs-number\">3</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes5 = res.body.classes[<span class=\"hljs-number\">4</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tclasses1.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses2.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses3.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses4.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses5.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tclasses1.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tclasses2.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\t\t\t\tclasses3.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\t\t\t\tclasses4.uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\t\tclasses5.uid.should.be.equal(<span class=\"hljs-string\">'supertest_class'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].uid.should.be.equal(contentRole)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">//</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.read.should.be.equal(false)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.update.should.be.equal(false)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.delete.should.be.equal(false)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.create.should.be.equal(false)</span><br>\t\t\t\t\tdone()<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "abae21f0-8f89-4626-94ca-f4acfdc11ada",
                "parentUUID": "262824e0-5311-476f-b03b-3fd72b00dda1",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "262824e0-5311-476f-b03b-3fd72b00dda1",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should apply bulk sys ACL on given classes",
                "fullTitle": "Bulk sys ACL ---  Classes Bulk sys ACL should apply bulk sys ACL on given classes",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'apply_bulk_sys_acl'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_application_user\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_application_user_role\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_installation_data\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_upload\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: classUid,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}]<br>\t\t\t})<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes1 = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes2 = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes3 = res.body.classes[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes4 = res.body.classes[<span class=\"hljs-number\">3</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes5 = res.body.classes[<span class=\"hljs-number\">4</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tclasses1.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses2.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses3.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses4.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses5.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tclasses1.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tclasses2.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\t\t\t\tclasses3.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\t\t\t\tclasses4.uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\t\tclasses5.uid.should.be.equal(<span class=\"hljs-string\">'supertest_class'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].uid.should.be.equal(contentRole)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">//</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.read.should.be.equal(false)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.update.should.be.equal(false)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.delete.should.be.equal(false)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.create.should.be.equal(false)</span><br>\t\t\t\t\tdone()<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "abae21f0-8f89-4626-94ca-f4acfdc11ada",
                "parentUUID": "262824e0-5311-476f-b03b-3fd72b00dda1",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Get classes bulk acl",
            "suites": [],
            "tests": [
              {
                "title": "should get bulk sys ACL applied on classes",
                "fullTitle": "Bulk sys ACL ---  Get classes bulk acl should get bulk sys ACL applied on classes",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_bulk_sys_acl'</span>, authtoken, api_key)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes1 = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes2 = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes3 = res.body.classes[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes4 = res.body.classes[<span class=\"hljs-number\">3</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes5 = res.body.classes[<span class=\"hljs-number\">4</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tclasses1.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tclasses2.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\t\t\t\tclasses3.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\t\t\t\tclasses4.uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\t\tclasses5.uid.should.be.equal(<span class=\"hljs-string\">'supertest_class'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">//</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "9494fef8-ed7c-4d6a-99a4-61905431384d",
                "parentUUID": "68a59e2f-e2c7-4723-86e0-254c2f9a0ee9",
                "skipped": true
              },
              {
                "title": "should get bulk sys ACL applied on specified class",
                "fullTitle": "Bulk sys ACL ---  Get classes bulk acl should get bulk sys ACL applied on specified class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_bulk_sys_acl'</span>, authtoken, api_key, {<br>\t\t\t\tclass_uids: <span class=\"hljs-string\">'[\"supertest_class\", \"built_io_upload\"]'</span><br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> classes1 = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> classes2 = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1]).should.to.be.deep.equal(['uid', 'read', 'update', 'delete', 'sub_acl'])</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1].sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1]).should.to.be.deep.equal(['uid', 'read', 'update', 'delete', 'sub_acl'])</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1].sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br>\t\t\t\t<span class=\"hljs-comment\">// data assertion</span><br>\t\t\t\tclasses1.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tclasses2.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tclasses1.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].should.be.a('object')</span><br>\t\t\t\t<span class=\"hljs-comment\">// value assertion\t</span><br>\t\t\t\tclasses1.uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\tclasses2.uid.should.be.equal(<span class=\"hljs-string\">'supertest_class'</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t<span class=\"hljs-comment\">// classes1.SYS_ACL.roles[1].uid.should.be.equal(contentRole)</span><br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].uid.should.be.equal(contentRole)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].read.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].update.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].delete.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.read.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.update.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.delete.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.create.should.be.equal(false)</span><br>\t\t\t\tdone()<br>\t\t\t})",
                "isRoot": false,
                "uuid": "ebab1e83-d4c6-4939-ab38-afe2a62e5503",
                "parentUUID": "68a59e2f-e2c7-4723-86e0-254c2f9a0ee9",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "68a59e2f-e2c7-4723-86e0-254c2f9a0ee9",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should get bulk sys ACL applied on classes",
                "fullTitle": "Bulk sys ACL ---  Get classes bulk acl should get bulk sys ACL applied on classes",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_bulk_sys_acl'</span>, authtoken, api_key)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes1 = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes2 = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes3 = res.body.classes[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes4 = res.body.classes[<span class=\"hljs-number\">3</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes5 = res.body.classes[<span class=\"hljs-number\">4</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tclasses1.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tclasses2.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\t\t\t\tclasses3.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\t\t\t\tclasses4.uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\t\tclasses5.uid.should.be.equal(<span class=\"hljs-string\">'supertest_class'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">//</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "9494fef8-ed7c-4d6a-99a4-61905431384d",
                "parentUUID": "68a59e2f-e2c7-4723-86e0-254c2f9a0ee9",
                "skipped": true
              },
              {
                "title": "should get bulk sys ACL applied on specified class",
                "fullTitle": "Bulk sys ACL ---  Get classes bulk acl should get bulk sys ACL applied on specified class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_bulk_sys_acl'</span>, authtoken, api_key, {<br>\t\t\t\tclass_uids: <span class=\"hljs-string\">'[\"supertest_class\", \"built_io_upload\"]'</span><br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> classes1 = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> classes2 = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1]).should.to.be.deep.equal(['uid', 'read', 'update', 'delete', 'sub_acl'])</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1].sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1]).should.to.be.deep.equal(['uid', 'read', 'update', 'delete', 'sub_acl'])</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1].sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br>\t\t\t\t<span class=\"hljs-comment\">// data assertion</span><br>\t\t\t\tclasses1.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tclasses2.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tclasses1.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].should.be.a('object')</span><br>\t\t\t\t<span class=\"hljs-comment\">// value assertion\t</span><br>\t\t\t\tclasses1.uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\tclasses2.uid.should.be.equal(<span class=\"hljs-string\">'supertest_class'</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t<span class=\"hljs-comment\">// classes1.SYS_ACL.roles[1].uid.should.be.equal(contentRole)</span><br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].uid.should.be.equal(contentRole)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].read.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].update.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].delete.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.read.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.update.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.delete.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.create.should.be.equal(false)</span><br>\t\t\t\tdone()<br>\t\t\t})",
                "isRoot": false,
                "uuid": "ebab1e83-d4c6-4939-ab38-afe2a62e5503",
                "parentUUID": "68a59e2f-e2c7-4723-86e0-254c2f9a0ee9",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Collaborators permissions",
            "suites": [],
            "tests": [
              {
                "title": "should set roles to collaborators in bulk",
                "fullTitle": "Bulk sys ACL ---  Collaborators permissions should set roles to collaborators in bulk",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// console.log(userUID_2)</span><br><span class=\"hljs-comment\">// console.log(email_2)</span><br><span class=\"hljs-comment\">// console.log(supertestRole)</span><br><span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">55000</span>)<br><span class=\"hljs-keyword\">var</span> users = {}<br>users[userUID_2] = [<br>\tsupertestRole,<br>\tcontentRole<br>]<br>factories.create(<span class=\"hljs-string\">'set_role_collaborator'</span>, authtoken, api_key, {<br>\tusers: users<br>})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">\"The roles were applied successfully.\"</span>)<br>\t\t<span class=\"hljs-keyword\">var</span> users1 = res.body.users[<span class=\"hljs-number\">1</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> users2 = res.body.users[<span class=\"hljs-number\">0</span>]<br>\t\t<br>\t<span class=\"hljs-comment\">// // key assertions</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users2).should.to.be.deep.equal(['uid', 'created_at', 'updated_at', 'email', 'username', 'plan_id', 'roles'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users2.roles[0]).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users2.roles[1]).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users1).should.to.be.deep.equal(['uid', 'created_at', 'updated_at', 'email', 'username', 'plan_id', 'roles'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users1.roles[0]).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL'])</span><br>\t<span class=\"hljs-comment\">// \t// value assertions</span><br>\t<span class=\"hljs-comment\">// \tusers2.uid.should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.email.should.be.equal(email_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.username.should.be.equal(username_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].uid.should.be.equal(devRole)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].users[0].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].owner.should.be.equal(email)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.api_key.should.be.equal(api_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.owner_uid.should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.master_key.should.be.equal(master_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.user_uids[0].should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.user_uids[1].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.user_uids[2].should.be.equal(userUID_2)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].uid.should.be.equal(contentRole)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].users[0].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].owner.should.be.equal(email)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].application.api_key.should.be.equal(api_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.master_key.should.be.equal(master_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].application.owner_uid.should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers1.uid.should.be.equal(userUID_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.email.should.be.equal(email_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.username.should.be.equal(username_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].uid.should.be.equal(supertestRole)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].users[0].should.be.equal(userUID_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].owner.should.be.equal(email)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.api_key.should.be.equal(api_key)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.owner_uid.should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.master_key.should.be.equal(master_key)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.user_uids[0].should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.user_uids[1].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.user_uids[2].should.be.equal(userUID_2)</span><br><br><br>\t\tdone()<br>\t})",
                "isRoot": false,
                "uuid": "1d538d05-ac5f-4583-ae87-a88c9dba8e34",
                "parentUUID": "c07729da-86a0-41c0-bf09-67841c70ee9c",
                "skipped": true
              },
              {
                "title": "should Fetch permissions for one or more users",
                "fullTitle": "Bulk sys ACL ---  Collaborators permissions should Fetch permissions for one or more users",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_permissions_user'</span>, authtoken, api_key, {<br>\t\t\t\tusers: [userUID, userUID_2]<br>\t\t\t})<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body, err)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> users1 = res.body.users[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> users2 = res.body.users[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(users1)</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users2).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'classes'</span>, <span class=\"hljs-string\">'isOwner'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users2.classes).should.to.be.deep.equal([<span class=\"hljs-string\">'built_io_application_user'</span>, <span class=\"hljs-string\">'built_io_application_user_role'</span>, <span class=\"hljs-string\">'built_io_installation_data'</span>, <span class=\"hljs-string\">'built_io_upload'</span>, <span class=\"hljs-string\">'supertest_class'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users1).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'classes'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users1.classes).should.to.be.deep.equal([<span class=\"hljs-string\">'built_io_application_user'</span>, <span class=\"hljs-string\">'built_io_application_user_role'</span>, <span class=\"hljs-string\">'built_io_installation_data'</span>, <span class=\"hljs-string\">'built_io_upload'</span>, <span class=\"hljs-string\">'supertest_class'</span>])<br>\t\t\t\t\tdone()<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "b1d86a7b-8589-4e38-8396-900f3fa4959d",
                "parentUUID": "c07729da-86a0-41c0-bf09-67841c70ee9c",
                "skipped": true
              },
              {
                "title": "should Fetch permissions for one or more users after updating role",
                "fullTitle": "Bulk sys ACL ---  Collaborators permissions should Fetch permissions for one or more users after updating role",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Update_system_role'</span>, authtoken, api_key, supertestRole.uid, {<br>\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"testRole\"</span><br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> factories.create(<span class=\"hljs-string\">'Get_system_roles'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"include_permissions\"</span>: <span class=\"hljs-literal\">true</span><br>\t}) <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t<span class=\"hljs-keyword\">var</span> roles = res.body.system_roles[<span class=\"hljs-number\">0</span>]<br><span class=\"hljs-comment\">// // key assertion</span><br><span class=\"hljs-comment\">// \tObject.keys(roles).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL', 'permissions'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[0]).should.to.be.deep.equal(['class_uid', 'SYS_ACL'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[1]).should.to.be.deep.equal(['class_uid', 'SYS_ACL'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[0].SYS_ACL).should.to.be.deep.equal(['read', 'update', 'delete', 'sub_acl'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[0].SYS_ACL.sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[1].SYS_ACL).should.to.be.deep.equal(['read', 'update', 'delete', 'sub_acl'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[1].SYS_ACL.sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br><span class=\"hljs-comment\">// \t// Data assertion</span><br><span class=\"hljs-comment\">// \troles.uid.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.name.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.users.should.be.a('array')</span><br><span class=\"hljs-comment\">// \troles.roles.should.be.a('array')</span><br><span class=\"hljs-comment\">// \troles.created_at.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.updated_at.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.owner.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.application.should.be.a('object')</span><br><span class=\"hljs-comment\">// \troles.SYS_ACL.should.be.a('object')</span><br><span class=\"hljs-comment\">// \troles.permissions.should.be.a('array')</span><br><span class=\"hljs-comment\">// \t// value assertion</span><br><span class=\"hljs-comment\">// \troles.uid.should.be.equal(devRole1)</span><br><span class=\"hljs-comment\">// \troles.created_at.should.be.equal(roles.updated_at)</span><br><span class=\"hljs-comment\">// \troles.owner.should.be.equal(email)</span><br><span class=\"hljs-comment\">// \troles.application.api_key.should.be.equal(api_key1)</span><br><span class=\"hljs-comment\">// \troles.application.owner_uid.should.be.equal(userUID)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].class_uid.should.be.equal(classUid1)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.read.should.be.equal(true)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.read.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.create.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].class_uid.should.be.equal('built_io_upload')</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.read.should.be.equal(true)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.read.should.be.equal(true)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.create.should.be.equal(false)</span><br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "ccb9777a-3df7-4cae-918c-8fcdbb270a70",
                "parentUUID": "c07729da-86a0-41c0-bf09-67841c70ee9c",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "c07729da-86a0-41c0-bf09-67841c70ee9c",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should set roles to collaborators in bulk",
                "fullTitle": "Bulk sys ACL ---  Collaborators permissions should set roles to collaborators in bulk",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// console.log(userUID_2)</span><br><span class=\"hljs-comment\">// console.log(email_2)</span><br><span class=\"hljs-comment\">// console.log(supertestRole)</span><br><span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">55000</span>)<br><span class=\"hljs-keyword\">var</span> users = {}<br>users[userUID_2] = [<br>\tsupertestRole,<br>\tcontentRole<br>]<br>factories.create(<span class=\"hljs-string\">'set_role_collaborator'</span>, authtoken, api_key, {<br>\tusers: users<br>})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">\"The roles were applied successfully.\"</span>)<br>\t\t<span class=\"hljs-keyword\">var</span> users1 = res.body.users[<span class=\"hljs-number\">1</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> users2 = res.body.users[<span class=\"hljs-number\">0</span>]<br>\t\t<br>\t<span class=\"hljs-comment\">// // key assertions</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users2).should.to.be.deep.equal(['uid', 'created_at', 'updated_at', 'email', 'username', 'plan_id', 'roles'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users2.roles[0]).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users2.roles[1]).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users1).should.to.be.deep.equal(['uid', 'created_at', 'updated_at', 'email', 'username', 'plan_id', 'roles'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users1.roles[0]).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL'])</span><br>\t<span class=\"hljs-comment\">// \t// value assertions</span><br>\t<span class=\"hljs-comment\">// \tusers2.uid.should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.email.should.be.equal(email_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.username.should.be.equal(username_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].uid.should.be.equal(devRole)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].users[0].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].owner.should.be.equal(email)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.api_key.should.be.equal(api_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.owner_uid.should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.master_key.should.be.equal(master_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.user_uids[0].should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.user_uids[1].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.user_uids[2].should.be.equal(userUID_2)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].uid.should.be.equal(contentRole)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].users[0].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].owner.should.be.equal(email)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].application.api_key.should.be.equal(api_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.master_key.should.be.equal(master_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].application.owner_uid.should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers1.uid.should.be.equal(userUID_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.email.should.be.equal(email_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.username.should.be.equal(username_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].uid.should.be.equal(supertestRole)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].users[0].should.be.equal(userUID_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].owner.should.be.equal(email)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.api_key.should.be.equal(api_key)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.owner_uid.should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.master_key.should.be.equal(master_key)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.user_uids[0].should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.user_uids[1].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.user_uids[2].should.be.equal(userUID_2)</span><br><br><br>\t\tdone()<br>\t})",
                "isRoot": false,
                "uuid": "1d538d05-ac5f-4583-ae87-a88c9dba8e34",
                "parentUUID": "c07729da-86a0-41c0-bf09-67841c70ee9c",
                "skipped": true
              },
              {
                "title": "should Fetch permissions for one or more users",
                "fullTitle": "Bulk sys ACL ---  Collaborators permissions should Fetch permissions for one or more users",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_permissions_user'</span>, authtoken, api_key, {<br>\t\t\t\tusers: [userUID, userUID_2]<br>\t\t\t})<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body, err)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> users1 = res.body.users[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> users2 = res.body.users[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(users1)</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users2).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'classes'</span>, <span class=\"hljs-string\">'isOwner'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users2.classes).should.to.be.deep.equal([<span class=\"hljs-string\">'built_io_application_user'</span>, <span class=\"hljs-string\">'built_io_application_user_role'</span>, <span class=\"hljs-string\">'built_io_installation_data'</span>, <span class=\"hljs-string\">'built_io_upload'</span>, <span class=\"hljs-string\">'supertest_class'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users1).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'classes'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users1.classes).should.to.be.deep.equal([<span class=\"hljs-string\">'built_io_application_user'</span>, <span class=\"hljs-string\">'built_io_application_user_role'</span>, <span class=\"hljs-string\">'built_io_installation_data'</span>, <span class=\"hljs-string\">'built_io_upload'</span>, <span class=\"hljs-string\">'supertest_class'</span>])<br>\t\t\t\t\tdone()<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "b1d86a7b-8589-4e38-8396-900f3fa4959d",
                "parentUUID": "c07729da-86a0-41c0-bf09-67841c70ee9c",
                "skipped": true
              },
              {
                "title": "should Fetch permissions for one or more users after updating role",
                "fullTitle": "Bulk sys ACL ---  Collaborators permissions should Fetch permissions for one or more users after updating role",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Update_system_role'</span>, authtoken, api_key, supertestRole.uid, {<br>\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"testRole\"</span><br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> factories.create(<span class=\"hljs-string\">'Get_system_roles'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"include_permissions\"</span>: <span class=\"hljs-literal\">true</span><br>\t}) <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t<span class=\"hljs-keyword\">var</span> roles = res.body.system_roles[<span class=\"hljs-number\">0</span>]<br><span class=\"hljs-comment\">// // key assertion</span><br><span class=\"hljs-comment\">// \tObject.keys(roles).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL', 'permissions'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[0]).should.to.be.deep.equal(['class_uid', 'SYS_ACL'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[1]).should.to.be.deep.equal(['class_uid', 'SYS_ACL'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[0].SYS_ACL).should.to.be.deep.equal(['read', 'update', 'delete', 'sub_acl'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[0].SYS_ACL.sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[1].SYS_ACL).should.to.be.deep.equal(['read', 'update', 'delete', 'sub_acl'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[1].SYS_ACL.sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br><span class=\"hljs-comment\">// \t// Data assertion</span><br><span class=\"hljs-comment\">// \troles.uid.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.name.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.users.should.be.a('array')</span><br><span class=\"hljs-comment\">// \troles.roles.should.be.a('array')</span><br><span class=\"hljs-comment\">// \troles.created_at.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.updated_at.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.owner.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.application.should.be.a('object')</span><br><span class=\"hljs-comment\">// \troles.SYS_ACL.should.be.a('object')</span><br><span class=\"hljs-comment\">// \troles.permissions.should.be.a('array')</span><br><span class=\"hljs-comment\">// \t// value assertion</span><br><span class=\"hljs-comment\">// \troles.uid.should.be.equal(devRole1)</span><br><span class=\"hljs-comment\">// \troles.created_at.should.be.equal(roles.updated_at)</span><br><span class=\"hljs-comment\">// \troles.owner.should.be.equal(email)</span><br><span class=\"hljs-comment\">// \troles.application.api_key.should.be.equal(api_key1)</span><br><span class=\"hljs-comment\">// \troles.application.owner_uid.should.be.equal(userUID)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].class_uid.should.be.equal(classUid1)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.read.should.be.equal(true)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.read.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.create.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].class_uid.should.be.equal('built_io_upload')</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.read.should.be.equal(true)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.read.should.be.equal(true)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.create.should.be.equal(false)</span><br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "ccb9777a-3df7-4cae-918c-8fcdbb270a70",
                "parentUUID": "c07729da-86a0-41c0-bf09-67841c70ee9c",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 3,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "system roles Bulk ACL",
            "suites": [],
            "tests": [
              {
                "title": "should apply system roles on classes in bulk",
                "fullTitle": "Bulk sys ACL ---  system roles Bulk ACL should apply system roles on classes in bulk",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'set_role_bulk_acl'</span>, authtoken, api_key1, {<br>\t\t\t\t<span class=\"hljs-string\">\"system_roles\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: roleid,<br>\t\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: classUid1,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_upload\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}]<br>\t\t\t\t}]<br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> roles = res.body.system_roles[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'permissions'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\troles.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.permissions.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\troles.uid.should.be.equal(roleid)<br>\t\t\t\troles.created_at.should.be.equal(roles.updated_at)<br>\t\t\t\troles.owner.should.be.equal(email)<br>\t\t\t\troles.application.api_key.should.be.equal(api_key1)<br>\t\t\t\troles.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].class_uid.should.be.equal(classUid1)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].class_uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "2e85276d-273d-46b7-8da3-2d756ae09c67",
                "parentUUID": "e7bcf1ab-01ff-499a-8b36-3f06c6c1eab3",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "e7bcf1ab-01ff-499a-8b36-3f06c6c1eab3",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should apply system roles on classes in bulk",
                "fullTitle": "Bulk sys ACL ---  system roles Bulk ACL should apply system roles on classes in bulk",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'set_role_bulk_acl'</span>, authtoken, api_key1, {<br>\t\t\t\t<span class=\"hljs-string\">\"system_roles\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: roleid,<br>\t\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: classUid1,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_upload\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}]<br>\t\t\t\t}]<br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> roles = res.body.system_roles[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'permissions'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\troles.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.permissions.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\troles.uid.should.be.equal(roleid)<br>\t\t\t\troles.created_at.should.be.equal(roles.updated_at)<br>\t\t\t\troles.owner.should.be.equal(email)<br>\t\t\t\troles.application.api_key.should.be.equal(api_key1)<br>\t\t\t\troles.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].class_uid.should.be.equal(classUid1)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].class_uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "2e85276d-273d-46b7-8da3-2d756ae09c67",
                "parentUUID": "e7bcf1ab-01ff-499a-8b36-3f06c6c1eab3",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "permissions",
            "suites": [],
            "tests": [
              {
                "title": "should get all roles, and the ACL set for it on each class",
                "fullTitle": "Bulk sys ACL ---  permissions should get all roles, and the ACL set for it on each class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_system_roles'</span>, authtoken, api_key1, {<br>\t\t\t\t<span class=\"hljs-string\">\"include_permissions\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> roles = res.body.system_roles[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'permissions'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\troles.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.permissions.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\troles.uid.should.be.equal(devRole1)<br>\t\t\t\troles.created_at.should.be.equal(roles.updated_at)<br>\t\t\t\troles.owner.should.be.equal(email)<br>\t\t\t\troles.application.api_key.should.be.equal(api_key1)<br>\t\t\t\troles.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].class_uid.should.be.equal(classUid1)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].class_uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tdone(err)<br>\t\t\t<br>\t\t\t})",
                "isRoot": false,
                "uuid": "ee5c763a-e34a-48ca-b86f-48fa3a0ff989",
                "parentUUID": "53afda08-6620-4d0d-8dc8-580f5f70528a",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "53afda08-6620-4d0d-8dc8-580f5f70528a",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should get all roles, and the ACL set for it on each class",
                "fullTitle": "Bulk sys ACL ---  permissions should get all roles, and the ACL set for it on each class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_system_roles'</span>, authtoken, api_key1, {<br>\t\t\t\t<span class=\"hljs-string\">\"include_permissions\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> roles = res.body.system_roles[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'permissions'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\troles.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.permissions.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\troles.uid.should.be.equal(devRole1)<br>\t\t\t\troles.created_at.should.be.equal(roles.updated_at)<br>\t\t\t\troles.owner.should.be.equal(email)<br>\t\t\t\troles.application.api_key.should.be.equal(api_key1)<br>\t\t\t\troles.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].class_uid.should.be.equal(classUid1)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].class_uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tdone(err)<br>\t\t\t<br>\t\t\t})",
                "isRoot": false,
                "uuid": "ee5c763a-e34a-48ca-b86f-48fa3a0ff989",
                "parentUUID": "53afda08-6620-4d0d-8dc8-580f5f70528a",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "de581e79-54b2-4c66-b404-259ef1b5ac88",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Objects metadata --- ",
        "suites": [
          {
            "title": "Create metadata (POST call)",
            "suites": [],
            "tests": [
              {
                "title": "should be able to ignore metadata field while creating object",
                "fullTitle": "Objects metadata ---  Create metadata (POST call) should be able to ignore metadata field while creating object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_object'</span>, authtoken, api_key, classUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"metadata object\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata create\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"isAtool\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"environment\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"dev\"</span>: <span class=\"hljs-string\">\"new server\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"stag\"</span>: <span class=\"hljs-string\">\"old server\"</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "b6aa773f-2674-4cdb-b8a1-f7b73c991096",
                "parentUUID": "d8243aa6-ad3c-467b-9ad5-3c26fd9f2268",
                "skipped": true
              },
              {
                "title": "should be able to ignore _metadata field while creating object",
                "fullTitle": "Objects metadata ---  Create metadata (POST call) should be able to ignore _metadata field while creating object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_object'</span>, authtoken, api_key, classUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"_metadata object\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata create\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"isAtool\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"environment\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"dev\"</span>: <span class=\"hljs-string\">\"new server\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"stag\"</span>: <span class=\"hljs-string\">\"old server\"</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tobject = res.body.object<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "b01f49f6-21fb-4307-a227-a584c2b48a59",
                "parentUUID": "d8243aa6-ad3c-467b-9ad5-3c26fd9f2268",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "d8243aa6-ad3c-467b-9ad5-3c26fd9f2268",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to ignore metadata field while creating object",
                "fullTitle": "Objects metadata ---  Create metadata (POST call) should be able to ignore metadata field while creating object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_object'</span>, authtoken, api_key, classUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"metadata object\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata create\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"isAtool\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"environment\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"dev\"</span>: <span class=\"hljs-string\">\"new server\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"stag\"</span>: <span class=\"hljs-string\">\"old server\"</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "b6aa773f-2674-4cdb-b8a1-f7b73c991096",
                "parentUUID": "d8243aa6-ad3c-467b-9ad5-3c26fd9f2268",
                "skipped": true
              },
              {
                "title": "should be able to ignore _metadata field while creating object",
                "fullTitle": "Objects metadata ---  Create metadata (POST call) should be able to ignore _metadata field while creating object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_object'</span>, authtoken, api_key, classUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"_metadata object\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata create\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"isAtool\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"environment\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"dev\"</span>: <span class=\"hljs-string\">\"new server\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"stag\"</span>: <span class=\"hljs-string\">\"old server\"</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tobject = res.body.object<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "b01f49f6-21fb-4307-a227-a584c2b48a59",
                "parentUUID": "d8243aa6-ad3c-467b-9ad5-3c26fd9f2268",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Update object with metadata (PUT call)",
            "suites": [],
            "tests": [
              {
                "title": "should be able to ignore metadata field while updating object",
                "fullTitle": "Objects metadata ---  Update object with metadata (PUT call) should be able to ignore metadata field while updating object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "6f0b8150-3ac3-4c97-a795-32651c5cdcdb",
                "parentUUID": "00a4673e-93c2-4c24-8382-ae25704f0c29",
                "skipped": true
              },
              {
                "title": "should be able to provide error message for _metadata field while updating object",
                "fullTitle": "Objects metadata ---  Update object with metadata (PUT call) should be able to provide error message for _metadata field while updating object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"isupertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tobject = res.body.object<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "bfdb81f1-d5ce-4e9c-a158-1895debf4232",
                "parentUUID": "00a4673e-93c2-4c24-8382-ae25704f0c29",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "00a4673e-93c2-4c24-8382-ae25704f0c29",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to ignore metadata field while updating object",
                "fullTitle": "Objects metadata ---  Update object with metadata (PUT call) should be able to ignore metadata field while updating object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "6f0b8150-3ac3-4c97-a795-32651c5cdcdb",
                "parentUUID": "00a4673e-93c2-4c24-8382-ae25704f0c29",
                "skipped": true
              },
              {
                "title": "should be able to provide error message for _metadata field while updating object",
                "fullTitle": "Objects metadata ---  Update object with metadata (PUT call) should be able to provide error message for _metadata field while updating object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"isupertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tobject = res.body.object<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "bfdb81f1-d5ce-4e9c-a158-1895debf4232",
                "parentUUID": "00a4673e-93c2-4c24-8382-ae25704f0c29",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Update object with metadata (/metadata PUT call)",
            "suites": [],
            "tests": [
              {
                "title": "should update object with metadata",
                "fullTitle": "Objects metadata ---  Update object with metadata (/metadata PUT call) should update object with metadata",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_metadata'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"metadata\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t}<br>\t\t}, {<br>\t\t\t<span class=\"hljs-string\">\"$set\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata update\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-number\">4</span><br>\t\t\t}<br>\t\t}]<br>\t})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'_metadata'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object._metadata).should.to.be.deep.equal([<span class=\"hljs-string\">'increment'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'multiple'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\tobject._metadata.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tobject._metadata.increment.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\tobject._metadata.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tobject._metadata.multiple.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tobject._metadata.name.should.be.equal(<span class=\"hljs-string\">'supertest metadata update'</span>)<br>\t\tobject._metadata.multiple.should.be.equal(<span class=\"hljs-number\">4</span>)<br>\t\tobject._metadata.increment.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_metadata'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t<span class=\"hljs-string\">\"metadata\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"$mul\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-number\">4</span><br>\t\t\t\t\t}<br>\t\t\t\t}]<br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'_metadata'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object._metadata).should.to.be.deep.equal([<span class=\"hljs-string\">'increment'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'multiple'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\tobject._metadata.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject._metadata.increment.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject._metadata.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject._metadata.multiple.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tobject._metadata.name.should.be.equal(<span class=\"hljs-string\">'supertest metadata update'</span>)<br>\t\t\t\tobject._metadata.increment.should.be.equal(<span class=\"hljs-number\">4</span>)<br>\t\t\t\tobject._metadata.multiple.should.be.equal(<span class=\"hljs-number\">16</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "89237d14-f4a1-478c-8777-bcd196e61888",
                "parentUUID": "16ab452b-acc8-4dea-bc6f-bdaa1e0b77e3",
                "skipped": true
              },
              {
                "title": "should provide error message for _metadata field while updating object",
                "fullTitle": "Objects metadata ---  Update object with metadata (/metadata PUT call) should provide error message for _metadata field while updating object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_metadata'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"_metadata\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t}<br>\t\t}, {<br>\t\t\t<span class=\"hljs-string\">\"$set\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata update\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-number\">4</span><br>\t\t\t}<br>\t\t}]<br>\t})<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tres.body.error_message.should.be.equal(<span class=\"hljs-string\">\"Please send your attributes wrapped in 'metadata'\"</span>)<br>\t\tres.body.error_code.should.be.equal(<span class=\"hljs-number\">141</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "cc94b37e-b02a-4729-b1df-bffa788753fd",
                "parentUUID": "16ab452b-acc8-4dea-bc6f-bdaa1e0b77e3",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "16ab452b-acc8-4dea-bc6f-bdaa1e0b77e3",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should update object with metadata",
                "fullTitle": "Objects metadata ---  Update object with metadata (/metadata PUT call) should update object with metadata",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_metadata'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"metadata\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t}<br>\t\t}, {<br>\t\t\t<span class=\"hljs-string\">\"$set\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata update\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-number\">4</span><br>\t\t\t}<br>\t\t}]<br>\t})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'_metadata'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object._metadata).should.to.be.deep.equal([<span class=\"hljs-string\">'increment'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'multiple'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\tobject._metadata.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tobject._metadata.increment.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\tobject._metadata.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tobject._metadata.multiple.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tobject._metadata.name.should.be.equal(<span class=\"hljs-string\">'supertest metadata update'</span>)<br>\t\tobject._metadata.multiple.should.be.equal(<span class=\"hljs-number\">4</span>)<br>\t\tobject._metadata.increment.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_metadata'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t<span class=\"hljs-string\">\"metadata\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"$mul\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-number\">4</span><br>\t\t\t\t\t}<br>\t\t\t\t}]<br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'_metadata'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object._metadata).should.to.be.deep.equal([<span class=\"hljs-string\">'increment'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'multiple'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\tobject._metadata.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject._metadata.increment.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject._metadata.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject._metadata.multiple.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tobject._metadata.name.should.be.equal(<span class=\"hljs-string\">'supertest metadata update'</span>)<br>\t\t\t\tobject._metadata.increment.should.be.equal(<span class=\"hljs-number\">4</span>)<br>\t\t\t\tobject._metadata.multiple.should.be.equal(<span class=\"hljs-number\">16</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "89237d14-f4a1-478c-8777-bcd196e61888",
                "parentUUID": "16ab452b-acc8-4dea-bc6f-bdaa1e0b77e3",
                "skipped": true
              },
              {
                "title": "should provide error message for _metadata field while updating object",
                "fullTitle": "Objects metadata ---  Update object with metadata (/metadata PUT call) should provide error message for _metadata field while updating object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_metadata'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"_metadata\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t}<br>\t\t}, {<br>\t\t\t<span class=\"hljs-string\">\"$set\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata update\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-number\">4</span><br>\t\t\t}<br>\t\t}]<br>\t})<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tres.body.error_message.should.be.equal(<span class=\"hljs-string\">\"Please send your attributes wrapped in 'metadata'\"</span>)<br>\t\tres.body.error_code.should.be.equal(<span class=\"hljs-number\">141</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "cc94b37e-b02a-4729-b1df-bffa788753fd",
                "parentUUID": "16ab452b-acc8-4dea-bc6f-bdaa1e0b77e3",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "4b3134e1-a407-411c-af30-5206f8578513",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Objects revisions/revert --- ",
        "suites": [
          {
            "title": "get object",
            "suites": [],
            "tests": [
              {
                "title": "should get object owner information in created_by key",
                "fullTitle": "Objects revisions/revert ---  get object should get object owner information in created_by key",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"include_created_by\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.created_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\tobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\tobject.created_by.uid.should.be.equal(userUID)<br>\t\t\t\tobject.created_by.uid.should.be.equal(object.updated_by)<br>\t\t\t\tobject.created_by.email.should.be.equal(email)<br>\t\t\t\tobject.created_by.username.should.be.equal(username)<br>\t\t\t\tobject.updated_by.should.be.equal(userUID)<br>\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// object.ACL.should.be.equal({})</span><br>\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// object.tags.should.be.equal([])\t\t\t\t               </span><br>\t\t\t\tdone()<br>\t\t\t});",
                "isRoot": false,
                "uuid": "9c3a42f3-24c6-49d4-8f06-c92d787f5e80",
                "parentUUID": "cb802d12-ddd6-462a-8653-ab2a4ab0acff",
                "skipped": true
              },
              {
                "title": "should get object owner information in updated_by key",
                "fullTitle": "Objects revisions/revert ---  get object should get object owner information in updated_by key",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"include_updated_by\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t})<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.updated_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.uid.should.be.equal(userUID)<br>\t\t\t\t\tobject.updated_by.uid.should.be.equal(object.created_by)<br>\t\t\t\t\tobject.updated_by.email.should.be.equal(email)<br>\t\t\t\t\tobject.updated_by.username.should.be.equal(username)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// object.ACL.should.be.equal({})</span><br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// object.tags.should.be.equal([])\t\t\t\t               </span><br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "8968038b-36c8-43c9-8164-93881af82cfd",
                "parentUUID": "cb802d12-ddd6-462a-8653-ab2a4ab0acff",
                "skipped": true
              },
              {
                "title": "should get object owner information in updated_by/created_by key",
                "fullTitle": "Objects revisions/revert ---  get object should get object owner information in updated_by/created_by key",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, authtoken_1, api_key, classUid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"include_updated_by\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"include_created_by\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t}))<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.updated_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.created_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tobject.created_by.uid.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_by.email.should.be.equal(email)<br>\t\t\t\t\tobject.created_by.username.should.be.equal(username)<br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.updated_by.uid.should.be.equal(userUID_1)<br>\t\t\t\t\tobject.updated_by.email.should.be.equal(email_1)<br>\t\t\t\t\tobject.updated_by.username.should.be.equal(username_1)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "94074cd2-0e20-454a-b7bc-6816fbf46e2c",
                "parentUUID": "cb802d12-ddd6-462a-8653-ab2a4ab0acff",
                "skipped": true
              },
              {
                "title": "should get object with specific version",
                "fullTitle": "Objects revisions/revert ---  get object should get object with specific version",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"version\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t\t}))<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "6fd5e3b0-64b4-4c98-ac70-ed6eb3cc07ed",
                "parentUUID": "cb802d12-ddd6-462a-8653-ab2a4ab0acff",
                "skipped": true
              },
              {
                "title": "should get all objects with revisions",
                "fullTitle": "Objects revisions/revert ---  get object should get all objects with revisions",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// R.pretty(res.body)</span><br><span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t}<br>\t}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_revisions'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: objectUid<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> object1 = res1.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> object2 = res1.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object1).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object2).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobject1.uid.should.be.equal(objectUid)<br>\t\tobject1.name.should.be.equal(<span class=\"hljs-string\">'supertest_update'</span>)<br>\t\tobject1.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\tobject1.updated_by.should.be.equal(userUID_1)<br>\t\tobject1.created_by.should.be.equal(userUID)<br>\t\tobject1.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject1.created_at.should.be.not.equal(object1.updated_at)<br>\t\tobject1._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\tobject2.uid.should.be.equal(objectUid)<br>\t\tobject2.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\tobject2.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\tobject2.updated_by.should.be.equal(userUID)<br>\t\tobject2.updated_by.should.be.equal(object2.created_by)<br>\t\tobject2.created_by.should.be.equal(userUID)<br>\t\tobject2.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject2.created_at.should.be.equal(object2.updated_at)<br>\t\tobject2._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\tdone()<br>\t});",
                "isRoot": false,
                "uuid": "6037897d-0951-445f-9263-b632724061cc",
                "parentUUID": "cb802d12-ddd6-462a-8653-ab2a4ab0acff",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "cb802d12-ddd6-462a-8653-ab2a4ab0acff",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should get object owner information in created_by key",
                "fullTitle": "Objects revisions/revert ---  get object should get object owner information in created_by key",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"include_created_by\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.created_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\tobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\tobject.created_by.uid.should.be.equal(userUID)<br>\t\t\t\tobject.created_by.uid.should.be.equal(object.updated_by)<br>\t\t\t\tobject.created_by.email.should.be.equal(email)<br>\t\t\t\tobject.created_by.username.should.be.equal(username)<br>\t\t\t\tobject.updated_by.should.be.equal(userUID)<br>\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// object.ACL.should.be.equal({})</span><br>\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// object.tags.should.be.equal([])\t\t\t\t               </span><br>\t\t\t\tdone()<br>\t\t\t});",
                "isRoot": false,
                "uuid": "9c3a42f3-24c6-49d4-8f06-c92d787f5e80",
                "parentUUID": "cb802d12-ddd6-462a-8653-ab2a4ab0acff",
                "skipped": true
              },
              {
                "title": "should get object owner information in updated_by key",
                "fullTitle": "Objects revisions/revert ---  get object should get object owner information in updated_by key",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"include_updated_by\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t})<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.updated_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.uid.should.be.equal(userUID)<br>\t\t\t\t\tobject.updated_by.uid.should.be.equal(object.created_by)<br>\t\t\t\t\tobject.updated_by.email.should.be.equal(email)<br>\t\t\t\t\tobject.updated_by.username.should.be.equal(username)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// object.ACL.should.be.equal({})</span><br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// object.tags.should.be.equal([])\t\t\t\t               </span><br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "8968038b-36c8-43c9-8164-93881af82cfd",
                "parentUUID": "cb802d12-ddd6-462a-8653-ab2a4ab0acff",
                "skipped": true
              },
              {
                "title": "should get object owner information in updated_by/created_by key",
                "fullTitle": "Objects revisions/revert ---  get object should get object owner information in updated_by/created_by key",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, authtoken_1, api_key, classUid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"include_updated_by\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"include_created_by\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t}))<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.updated_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.created_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tobject.created_by.uid.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_by.email.should.be.equal(email)<br>\t\t\t\t\tobject.created_by.username.should.be.equal(username)<br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.updated_by.uid.should.be.equal(userUID_1)<br>\t\t\t\t\tobject.updated_by.email.should.be.equal(email_1)<br>\t\t\t\t\tobject.updated_by.username.should.be.equal(username_1)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "94074cd2-0e20-454a-b7bc-6816fbf46e2c",
                "parentUUID": "cb802d12-ddd6-462a-8653-ab2a4ab0acff",
                "skipped": true
              },
              {
                "title": "should get object with specific version",
                "fullTitle": "Objects revisions/revert ---  get object should get object with specific version",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"version\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t\t}))<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "6fd5e3b0-64b4-4c98-ac70-ed6eb3cc07ed",
                "parentUUID": "cb802d12-ddd6-462a-8653-ab2a4ab0acff",
                "skipped": true
              },
              {
                "title": "should get all objects with revisions",
                "fullTitle": "Objects revisions/revert ---  get object should get all objects with revisions",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// R.pretty(res.body)</span><br><span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t}<br>\t}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_revisions'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: objectUid<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> object1 = res1.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> object2 = res1.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object1).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object2).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobject1.uid.should.be.equal(objectUid)<br>\t\tobject1.name.should.be.equal(<span class=\"hljs-string\">'supertest_update'</span>)<br>\t\tobject1.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\tobject1.updated_by.should.be.equal(userUID_1)<br>\t\tobject1.created_by.should.be.equal(userUID)<br>\t\tobject1.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject1.created_at.should.be.not.equal(object1.updated_at)<br>\t\tobject1._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\tobject2.uid.should.be.equal(objectUid)<br>\t\tobject2.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\tobject2.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\tobject2.updated_by.should.be.equal(userUID)<br>\t\tobject2.updated_by.should.be.equal(object2.created_by)<br>\t\tobject2.created_by.should.be.equal(userUID)<br>\t\tobject2.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject2.created_at.should.be.equal(object2.updated_at)<br>\t\tobject2._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\tdone()<br>\t});",
                "isRoot": false,
                "uuid": "6037897d-0951-445f-9263-b632724061cc",
                "parentUUID": "cb802d12-ddd6-462a-8653-ab2a4ab0acff",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 5,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "object update",
            "suites": [],
            "tests": [
              {
                "title": "should update object with preserve_version",
                "fullTitle": "Objects revisions/revert ---  object update should update object with preserve_version",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_preserve_version'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">\"Woot! Object updated successfully.\"</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest_update'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.not.equal(object.created_by)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID_1)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject.created_at.should.be.not.equal(object.updated_at)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "3b41871d-47b5-43ac-ae8b-00602ee9c672",
                "parentUUID": "86fd234b-a1bf-451e-b5a8-eb09294a6a8f",
                "skipped": true
              },
              {
                "title": "should perform a silent update on object",
                "fullTitle": "Objects revisions/revert ---  object update should perform a silent update on object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"timeless\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">\"Woot! Object updated successfully.\"</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest_update'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.not.equal(object.created_by)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID_1)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "4762261e-315a-4bc0-917f-8c9e3917b722",
                "parentUUID": "86fd234b-a1bf-451e-b5a8-eb09294a6a8f",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "86fd234b-a1bf-451e-b5a8-eb09294a6a8f",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should update object with preserve_version",
                "fullTitle": "Objects revisions/revert ---  object update should update object with preserve_version",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_preserve_version'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">\"Woot! Object updated successfully.\"</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest_update'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.not.equal(object.created_by)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID_1)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject.created_at.should.be.not.equal(object.updated_at)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "3b41871d-47b5-43ac-ae8b-00602ee9c672",
                "parentUUID": "86fd234b-a1bf-451e-b5a8-eb09294a6a8f",
                "skipped": true
              },
              {
                "title": "should perform a silent update on object",
                "fullTitle": "Objects revisions/revert ---  object update should perform a silent update on object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"timeless\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">\"Woot! Object updated successfully.\"</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest_update'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.not.equal(object.created_by)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID_1)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "4762261e-315a-4bc0-917f-8c9e3917b722",
                "parentUUID": "86fd234b-a1bf-451e-b5a8-eb09294a6a8f",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "object revert",
            "suites": [],
            "tests": [
              {
                "title": "should revert object to specific version",
                "fullTitle": "Objects revisions/revert ---  object revert should revert object to specific version",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// res.body.object._version.should.be.equal(2)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'object_revert'</span>, authtoken, api_key, classUid, objectUid, tenant_uid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"version\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t\t}))<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// new copy of object is getting created with new verison </span><br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "88789719-e30c-4506-93d4-4139163070b5",
                "parentUUID": "8f8e8ce8-cd53-48f4-8454-be6201ea0641",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "8f8e8ce8-cd53-48f4-8454-be6201ea0641",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should revert object to specific version",
                "fullTitle": "Objects revisions/revert ---  object revert should revert object to specific version",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// res.body.object._version.should.be.equal(2)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'object_revert'</span>, authtoken, api_key, classUid, objectUid, tenant_uid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"version\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t\t}))<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// new copy of object is getting created with new verison </span><br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "88789719-e30c-4506-93d4-4139163070b5",
                "parentUUID": "8f8e8ce8-cd53-48f4-8454-be6201ea0641",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "4b87dd57-61ad-4570-aa85-ae6ecaf979f2",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Installation data ---",
        "suites": [
          {
            "title": "Create an installations",
            "suites": [],
            "tests": [
              {
                "title": "should be able to create installation object for an app",
                "fullTitle": "Installation data --- Create an installations should be able to create installation object for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"__loc\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"device_token\"</span>: R.bltRandom(<span class=\"hljs-number\">8</span>),<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"subscribed_to_channels\"</span>: [<span class=\"hljs-string\">\"object.create\"</span>, <span class=\"hljs-string\">\"object.delete\"</span>],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"badge\"</span>: <span class=\"hljs-number\">1</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"timezone\"</span>: <span class=\"hljs-string\">\"+05:30\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"credentials_name\"</span>: <span class=\"hljs-string\">\"swapnil shirke\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"ACL\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t},<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"tags\"</span>: [<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"supertest object\"</span><br>\t\t\t\t\t\t]<br>\t\t\t\t\t}<br>\t\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objData = res.body.object<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.object.uid<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(objData).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(objData.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(objData.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\tobjData.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tobjData.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobjData.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tobjData.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobjData.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobjData.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobjData._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobjData.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tobjData.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\texpect(objData.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\t\tobjData.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobjData.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\tobjData.badge.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tobjData.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\t\tobjData.credentials_name.should.be.equal(<span class=\"hljs-string\">'swapnil shirke'</span>)<br>\t\t\t\t\tobjData.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tobjData.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object'</span>)<br>\t\t\t\t\tobjData.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobjData.created_by.should.be.equal(objData.updated_by)<br>\t\t\t\t\tobjData.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobjData.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tobjData.created_at.should.be.equal(objData.updated_at)<br>\t\t\t\t\tobjData.updated_at.should.be.equal(objData.created_at)<br>\t\t\t\t\tobjData.uid.should.be.equal(id)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "ba63a6a7-c2dd-4022-8143-b2f57b037df9",
                "parentUUID": "9765f747-cf21-4fac-a260-7da2c0fc687b",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 15000,
            "file": "/test.js",
            "uuid": "9765f747-cf21-4fac-a260-7da2c0fc687b",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to create installation object for an app",
                "fullTitle": "Installation data --- Create an installations should be able to create installation object for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"__loc\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"device_token\"</span>: R.bltRandom(<span class=\"hljs-number\">8</span>),<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"subscribed_to_channels\"</span>: [<span class=\"hljs-string\">\"object.create\"</span>, <span class=\"hljs-string\">\"object.delete\"</span>],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"badge\"</span>: <span class=\"hljs-number\">1</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"timezone\"</span>: <span class=\"hljs-string\">\"+05:30\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"credentials_name\"</span>: <span class=\"hljs-string\">\"swapnil shirke\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"ACL\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t},<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"tags\"</span>: [<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"supertest object\"</span><br>\t\t\t\t\t\t]<br>\t\t\t\t\t}<br>\t\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objData = res.body.object<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.object.uid<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(objData).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(objData.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(objData.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\tobjData.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tobjData.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobjData.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tobjData.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobjData.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobjData.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobjData._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobjData.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tobjData.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\texpect(objData.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\t\tobjData.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobjData.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\tobjData.badge.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tobjData.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\t\tobjData.credentials_name.should.be.equal(<span class=\"hljs-string\">'swapnil shirke'</span>)<br>\t\t\t\t\tobjData.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tobjData.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object'</span>)<br>\t\t\t\t\tobjData.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobjData.created_by.should.be.equal(objData.updated_by)<br>\t\t\t\t\tobjData.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobjData.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tobjData.created_at.should.be.equal(objData.updated_at)<br>\t\t\t\t\tobjData.updated_at.should.be.equal(objData.created_at)<br>\t\t\t\t\tobjData.uid.should.be.equal(id)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "ba63a6a7-c2dd-4022-8143-b2f57b037df9",
                "parentUUID": "9765f747-cf21-4fac-a260-7da2c0fc687b",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Get all installations",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get installation objects created for an app",
                "fullTitle": "Installation data --- Get all installations should be able to get installation objects created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Get_Installation_objects'</span>, authtoken, api_key)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// console.log(res1.body)</span><br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\t\t\tobject.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\texpect(object.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.equal(<span class=\"hljs-string\">'swapnil shirke'</span>)<br>\t\t\t\t\t\t\tobject.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t\t\tobject.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "197797b4-6175-4527-922a-84c54a628012",
                "parentUUID": "a6f3cff3-755b-40f4-95e8-02eb3178f3cf",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 15000,
            "file": "/test.js",
            "uuid": "a6f3cff3-755b-40f4-95e8-02eb3178f3cf",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get installation objects created for an app",
                "fullTitle": "Installation data --- Get all installations should be able to get installation objects created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Get_Installation_objects'</span>, authtoken, api_key)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// console.log(res1.body)</span><br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\t\t\tobject.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\texpect(object.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.equal(<span class=\"hljs-string\">'swapnil shirke'</span>)<br>\t\t\t\t\t\t\tobject.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t\t\tobject.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "197797b4-6175-4527-922a-84c54a628012",
                "parentUUID": "a6f3cff3-755b-40f4-95e8-02eb3178f3cf",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Get single object",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get single object created for an app",
                "fullTitle": "Installation data --- Get single object should be able to get single object created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> id = res.body.object.uid<br>\t\t<br>\t\tfactories.create(<span class=\"hljs-string\">'Get_Installation_objects'</span>, authtoken, api_key, id)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\tobject.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\tobject.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tobject.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\tobject.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\texpect(object.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\tobject.badge.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\tobject.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\tobject.credentials_name.should.be.equal(<span class=\"hljs-string\">'swapnil shirke'</span>)<br>\t\t\t\tobject.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\tobject.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "e9e352b7-042b-43a9-8bac-3002791584ad",
                "parentUUID": "fd6c2045-10ee-483d-a273-e1c9f252c05b",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 15000,
            "file": "/test.js",
            "uuid": "fd6c2045-10ee-483d-a273-e1c9f252c05b",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get single object created for an app",
                "fullTitle": "Installation data --- Get single object should be able to get single object created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> id = res.body.object.uid<br>\t\t<br>\t\tfactories.create(<span class=\"hljs-string\">'Get_Installation_objects'</span>, authtoken, api_key, id)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\tobject.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\tobject.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tobject.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\tobject.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\texpect(object.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\tobject.badge.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\tobject.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\tobject.credentials_name.should.be.equal(<span class=\"hljs-string\">'swapnil shirke'</span>)<br>\t\t\t\tobject.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\tobject.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "e9e352b7-042b-43a9-8bac-3002791584ad",
                "parentUUID": "fd6c2045-10ee-483d-a273-e1c9f252c05b",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Update an installation",
            "suites": [],
            "tests": [
              {
                "title": "should be able to update installation objects created for an app",
                "fullTitle": "Installation data --- Update an installation should be able to update installation objects created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectID = res.body.object.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Update_Installation_object'</span>, authtoken, api_key, objectID, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"__loc\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"device_token\"</span>: R.bltRandom(<span class=\"hljs-number\">8</span>),<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"subscribed_to_channels\"</span>: [<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"object.create\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"object.update\"</span><br>\t\t\t\t\t\t\t\t],<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"badge\"</span>: <span class=\"hljs-number\">3</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"timezone\"</span>: <span class=\"hljs-string\">\"+05:30\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"credentials_name\"</span>: <span class=\"hljs-string\">\"super test\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"ACL\"</span>: {<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t},<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tags\"</span>: [<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"supertest object update\"</span><br>\t\t\t\t\t\t\t\t]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//console.log(res1.body)</span><br>\t\t\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.update'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\t\t\tobject.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object update'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\texpect(object.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.update'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.equal(<span class=\"hljs-string\">'super test'</span>)<br>\t\t\t\t\t\t\tobject.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\t\t\tobject.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object update'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\t\t\tobject.created_at.should.not.equal(object.updated_at)<br>\t\t\t\t\t\t\tobject.updated_at.should.not.equal(object.created_at)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "1de1c6ef-38bb-4052-addb-6827596ac31f",
                "parentUUID": "8192f2c0-e3f1-4776-9354-d35fee983de2",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 15000,
            "file": "/test.js",
            "uuid": "8192f2c0-e3f1-4776-9354-d35fee983de2",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to update installation objects created for an app",
                "fullTitle": "Installation data --- Update an installation should be able to update installation objects created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectID = res.body.object.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Update_Installation_object'</span>, authtoken, api_key, objectID, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"__loc\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"device_token\"</span>: R.bltRandom(<span class=\"hljs-number\">8</span>),<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"subscribed_to_channels\"</span>: [<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"object.create\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"object.update\"</span><br>\t\t\t\t\t\t\t\t],<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"badge\"</span>: <span class=\"hljs-number\">3</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"timezone\"</span>: <span class=\"hljs-string\">\"+05:30\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"credentials_name\"</span>: <span class=\"hljs-string\">\"super test\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"ACL\"</span>: {<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t},<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tags\"</span>: [<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"supertest object update\"</span><br>\t\t\t\t\t\t\t\t]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//console.log(res1.body)</span><br>\t\t\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.update'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\t\t\tobject.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object update'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\texpect(object.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.update'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.equal(<span class=\"hljs-string\">'super test'</span>)<br>\t\t\t\t\t\t\tobject.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\t\t\tobject.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object update'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\t\t\tobject.created_at.should.not.equal(object.updated_at)<br>\t\t\t\t\t\t\tobject.updated_at.should.not.equal(object.created_at)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "1de1c6ef-38bb-4052-addb-6827596ac31f",
                "parentUUID": "8192f2c0-e3f1-4776-9354-d35fee983de2",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Delete an installation",
            "suites": [],
            "tests": [
              {
                "title": "should be able to delete an installation object created for an app",
                "fullTitle": "Installation data --- Delete an installation should be able to delete an installation object created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectUid = res.body.object.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Delete_Installation_object'</span>, authtoken, api_key, objectUid)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "fd5073a1-8724-43e4-8e73-92b777bca526",
                "parentUUID": "6c881159-f6a0-4f40-a558-9a3d43d218c5",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 15000,
            "file": "/test.js",
            "uuid": "6c881159-f6a0-4f40-a558-9a3d43d218c5",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to delete an installation object created for an app",
                "fullTitle": "Installation data --- Delete an installation should be able to delete an installation object created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectUid = res.body.object.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Delete_Installation_object'</span>, authtoken, api_key, objectUid)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "fd5073a1-8724-43e4-8e73-92b777bca526",
                "parentUUID": "6c881159-f6a0-4f40-a558-9a3d43d218c5",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "b27d1cc4-d69a-42ef-a8b0-d1ccdc24359c",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Field validation ---",
        "suites": [
          {
            "title": "Text",
            "suites": [],
            "tests": [
              {
                "title": "should provide an error message for min value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for min value for given text field",
                "timedOut": false,
                "duration": 1635,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asd\"</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is less than the minimum value 5\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "8e20bf25-177f-4084-9544-0ad9dd336537",
                "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
                "skipped": false
              },
              {
                "title": "should provide an error message for max value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for max value for given text field",
                "timedOut": false,
                "duration": 1621,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asdsfsdd5555\"</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is greater than the maximum value 10\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "1229fb3b-be1a-4e2d-b2b8-4b6c530e150e",
                "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
                "skipped": false
              },
              {
                "title": "should provide an error message for mandatory value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for mandatory value for given text field",
                "timedOut": false,
                "duration": 1600,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "6a14f2b9-6832-424c-8c8f-139fd1c7d705",
                "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
                "skipped": false
              },
              {
                "title": "should provide an error message for object value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for object value for given text field",
                "timedOut": false,
                "duration": 1636,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: {<span class=\"hljs-string\">\"testing\"</span>: <span class=\"hljs-string\">\"backend\"</span>}\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not text\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "cef676b2-abb6-45eb-8b53-620b07829504",
                "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
                "skipped": false
              },
              {
                "title": "should provide an error message for array value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for array value for given text field",
                "timedOut": false,
                "duration": 2810,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"testing\"</span>, <span class=\"hljs-string\">\"backend\"</span>]\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"should be a single value instead of multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "62d64d99-559b-41b6-8286-2561529ce9a2",
                "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
                "skipped": false
              },
              {
                "title": "should provide an error message for null value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for null value for given text field",
                "timedOut": false,
                "duration": 2670,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-literal\">null</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "50d7ee89-e8c0-4b12-bfc9-20a064d5a83a",
                "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should provide an error message for min value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for min value for given text field",
                "timedOut": false,
                "duration": 1635,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asd\"</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is less than the minimum value 5\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "8e20bf25-177f-4084-9544-0ad9dd336537",
                "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
                "skipped": false
              },
              {
                "title": "should provide an error message for max value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for max value for given text field",
                "timedOut": false,
                "duration": 1621,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asdsfsdd5555\"</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is greater than the maximum value 10\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "1229fb3b-be1a-4e2d-b2b8-4b6c530e150e",
                "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
                "skipped": false
              },
              {
                "title": "should provide an error message for mandatory value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for mandatory value for given text field",
                "timedOut": false,
                "duration": 1600,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "6a14f2b9-6832-424c-8c8f-139fd1c7d705",
                "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
                "skipped": false
              },
              {
                "title": "should provide an error message for object value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for object value for given text field",
                "timedOut": false,
                "duration": 1636,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: {<span class=\"hljs-string\">\"testing\"</span>: <span class=\"hljs-string\">\"backend\"</span>}\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not text\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "cef676b2-abb6-45eb-8b53-620b07829504",
                "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
                "skipped": false
              },
              {
                "title": "should provide an error message for array value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for array value for given text field",
                "timedOut": false,
                "duration": 2810,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"testing\"</span>, <span class=\"hljs-string\">\"backend\"</span>]\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"should be a single value instead of multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "62d64d99-559b-41b6-8286-2561529ce9a2",
                "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
                "skipped": false
              },
              {
                "title": "should provide an error message for null value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for null value for given text field",
                "timedOut": false,
                "duration": 2670,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-literal\">null</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "50d7ee89-e8c0-4b12-bfc9-20a064d5a83a",
                "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 6,
            "totalPasses": 6,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 11972
          },
          {
            "title": "Text Multiple and field format ",
            "suites": [],
            "tests": [
              {
                "title": "should provide an error message for blank array when field is mandatory",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for blank array when field is mandatory",
                "timedOut": false,
                "duration": 1667,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: []<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "b725a30d-cba9-41f0-bebd-92be1ab22429",
                "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
                "skipped": false
              },
              {
                "title": "should provide an error message for multiple field when array is not provided",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for multiple field when array is not provided",
                "timedOut": false,
                "duration": 1586,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asd\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "fb5fefbc-3312-405d-b5ff-4cdeeb29e842",
                "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
                "skipped": false
              },
              {
                "title": "should provide an error message for multiple field if blank",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for multiple field if blank",
                "timedOut": false,
                "duration": 1557,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "35a77a91-4b88-4060-b54a-a5483f108145",
                "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
                "skipped": false
              },
              {
                "title": "should be able to create object with valid format",
                "fullTitle": "Field validation --- Text Multiple and field format  should be able to create object with valid format",
                "timedOut": false,
                "duration": 2670,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>    <span class=\"hljs-string\">\"object\"</span>: {<br>        <span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"ASD\"</span>],<br>        <span class=\"hljs-string\">\"list\"</span>: [<span class=\"hljs-literal\">null</span>]<br>    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tres.body.object.textfield[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'ASD'</span>)<br>\tres.body.object.app_user_object_uid.should.be.equal(appUser1.uid)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "86d002b9-1e2a-4889-a252-15cfde477809",
                "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid value format for field",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for invalid value format for field",
                "timedOut": false,
                "duration": 1734,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"asdasd\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"does not match the required format for the field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "194d4ce2-74e2-4b78-b4fb-9198d9acdc2b",
                "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid value format in array field",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for invalid value format in array field",
                "timedOut": false,
                "duration": 1637,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"ADS\"</span>, <span class=\"hljs-string\">\"asdasd\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.1\"</span>: [<br>\t      <span class=\"hljs-string\">\"does not match the required format for the field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "fda5cc23-28de-47c9-b10f-aaf09cdc3f47",
                "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
                "skipped": false
              },
              {
                "title": "should provide an error message for object value inside array field",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for object value inside array field",
                "timedOut": false,
                "duration": 1553,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [{<span class=\"hljs-string\">\"ASD\"</span>: <span class=\"hljs-string\">\"AD\"</span>}]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not text\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "19a78f7a-3f5a-4c4e-84d5-84df8b4cdf49",
                "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should provide an error message for blank array when field is mandatory",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for blank array when field is mandatory",
                "timedOut": false,
                "duration": 1667,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: []<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "b725a30d-cba9-41f0-bebd-92be1ab22429",
                "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
                "skipped": false
              },
              {
                "title": "should provide an error message for multiple field when array is not provided",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for multiple field when array is not provided",
                "timedOut": false,
                "duration": 1586,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asd\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "fb5fefbc-3312-405d-b5ff-4cdeeb29e842",
                "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
                "skipped": false
              },
              {
                "title": "should provide an error message for multiple field if blank",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for multiple field if blank",
                "timedOut": false,
                "duration": 1557,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "35a77a91-4b88-4060-b54a-a5483f108145",
                "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
                "skipped": false
              },
              {
                "title": "should be able to create object with valid format",
                "fullTitle": "Field validation --- Text Multiple and field format  should be able to create object with valid format",
                "timedOut": false,
                "duration": 2670,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>    <span class=\"hljs-string\">\"object\"</span>: {<br>        <span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"ASD\"</span>],<br>        <span class=\"hljs-string\">\"list\"</span>: [<span class=\"hljs-literal\">null</span>]<br>    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tres.body.object.textfield[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'ASD'</span>)<br>\tres.body.object.app_user_object_uid.should.be.equal(appUser1.uid)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "86d002b9-1e2a-4889-a252-15cfde477809",
                "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid value format for field",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for invalid value format for field",
                "timedOut": false,
                "duration": 1734,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"asdasd\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"does not match the required format for the field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "194d4ce2-74e2-4b78-b4fb-9198d9acdc2b",
                "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid value format in array field",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for invalid value format in array field",
                "timedOut": false,
                "duration": 1637,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"ADS\"</span>, <span class=\"hljs-string\">\"asdasd\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.1\"</span>: [<br>\t      <span class=\"hljs-string\">\"does not match the required format for the field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "fda5cc23-28de-47c9-b10f-aaf09cdc3f47",
                "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
                "skipped": false
              },
              {
                "title": "should provide an error message for object value inside array field",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for object value inside array field",
                "timedOut": false,
                "duration": 1553,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [{<span class=\"hljs-string\">\"ASD\"</span>: <span class=\"hljs-string\">\"AD\"</span>}]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not text\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "19a78f7a-3f5a-4c4e-84d5-84df8b4cdf49",
                "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 7,
            "totalPasses": 7,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 12404
          },
          {
            "title": "Links",
            "suites": [],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "86beecb8-9fc2-4762-8b94-4e732d148dd6",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasSuites": false,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "1771e8a5-006e-4fa3-b403-9ccf04aa8e42",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Queries and reference",
        "suites": [
          {
            "title": "Get objects Queries",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get objects created for an app using simple query",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using simple query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid, {<br>\t\t\t <span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"author\"</span>: <span class=\"hljs-string\">\"swapnil\"</span><br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'swapnil'</span>)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'FTJ'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "f7e9edbd-44b8-4dc4-b0e6-60417424a70d",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using regex in query",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using regex in query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"author\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^chet\"</span>,<br>\t\t\t      <span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'chetan'</span>)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'Life of psy'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "145d57eb-1ee6-4be8-b915-1a62f435b2e1",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using query on simple group field",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using query on simple group field",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t    \t<span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"anjuna\"</span>  <br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'pratick'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// object.bookname.should.be.equal('Life of psy')</span><br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "f3736d75-4e3a-447d-8f8a-dd94b655362c",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using $or query",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $or query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t\t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"$or\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"author\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^chetan\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"bookname\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^FTJ\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject1.author.should.be.equal(<span class=\"hljs-string\">'chetan'</span>)<br>\t\t\t\tobject2.bookname.should.be.equal(<span class=\"hljs-string\">'FTJ'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "58fe6adf-e419-4558-ab76-1d222315bded",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using $and query",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $and query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t\t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"$and\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"author\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^chetan\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"daysold\"</span>: <span class=\"hljs-number\">90</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'chetan'</span>)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'Life of psy'</span>)<br>\t\t\t\tobject.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "b4aa85d6-4d2b-4aeb-a1a1-d5c5f527e79d",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using $lt(less then) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $lt(less then) operators",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$lt\"</span>: <span class=\"hljs-number\">125</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "e1c0e69e-31fe-4f55-ab6c-db34a601b10e",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able t0 get objects created for an app using $lte(less then or equal to) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able t0 get objects created for an app using $lte(less then or equal to) operators",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$lte\"</span>: <span class=\"hljs-number\">125</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">125</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "e8d058fe-6598-4e89-abff-ae1c5e92aa6e",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using $gt(greater than) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $gt(greater than) operators",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$gt\"</span>: <span class=\"hljs-number\">125</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">130</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "7b07ba04-b399-44cc-afcc-d9dc20d48514",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using $gte(greater than or equal to) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $gte(greater than or equal to) operators",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$gte\"</span>: <span class=\"hljs-number\">130</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">130</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "749a450f-bdfd-40c9-a93a-4a80e62883ab",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using $ne(not equal to) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $ne(not equal to) operators",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$ne\"</span>: <span class=\"hljs-number\">130</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br><br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject4 = res.body.objects[<span class=\"hljs-number\">3</span>]<br>\t\t\t\tobject5 = res.body.objects[<span class=\"hljs-number\">4</span>]<br>\t\t\t\t<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">125</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject4.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t\tobject5.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "319e348a-c2a4-4f56-b853-2ac6cc27a199",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using $in(contained In) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $in(contained In) operators",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$in\"</span>: [<span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">125</span>, <span class=\"hljs-number\">90</span>]<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">125</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">130</span>)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "f6e77f78-66d9-462b-aef2-7ca511f0c76b",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using $in(not contained In) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $in(not contained In) operators",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$nin\"</span>: [<span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">125</span>, <span class=\"hljs-number\">90</span>]<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br><br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "feb68457-a3c4-4c10-82fb-31aa8752af21",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using $exists(exists) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $exists(exists) operators",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"bookname\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$exists\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'FTJ'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "d3f616cb-45b6-45fb-9f00-12d402b6bf9b",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app and include its owner",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app and include its owner",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include_owner\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'author'</span>,<span class=\"hljs-string\">'bookname'</span>,<span class=\"hljs-string\">'address'</span>,<span class=\"hljs-string\">'daysold'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'_owner'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object._owner).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'username'</span>,<span class=\"hljs-string\">'email'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'active'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'last_login_at'</span>])<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "68ce4dde-e255-4d7f-904f-ff27c160815f",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app and include its count",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app and include its count",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tres.body.count.should.be.equal(<span class=\"hljs-number\">6</span>)<br>\t\t\t\tres.body.objects.length.should.be.equal(<span class=\"hljs-number\">6</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "8ecb5533-9683-47a9-a5b1-04216c93b4ff",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app and include its schema",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app and include its schema",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include_schema\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body).should.to.be.deep.equal([<span class=\"hljs-string\">'objects'</span>,<span class=\"hljs-string\">'schema'</span>])<br>\t\t\t\tres.body.schema[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'author'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "d05dd905-1fab-4f39-b27e-d7940f02ddbe",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app and include unpublished objects",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app and include unpublished objects",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"one\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t})<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t  \t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"include_unpublished\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t}))<br>\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "47ddd6a2-1d95-4534-8f54-fe6591b388be",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 45000,
            "file": "/test.js",
            "uuid": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get objects created for an app using simple query",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using simple query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid, {<br>\t\t\t <span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"author\"</span>: <span class=\"hljs-string\">\"swapnil\"</span><br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'swapnil'</span>)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'FTJ'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "f7e9edbd-44b8-4dc4-b0e6-60417424a70d",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using regex in query",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using regex in query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"author\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^chet\"</span>,<br>\t\t\t      <span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'chetan'</span>)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'Life of psy'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "145d57eb-1ee6-4be8-b915-1a62f435b2e1",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using query on simple group field",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using query on simple group field",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t    \t<span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"anjuna\"</span>  <br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'pratick'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// object.bookname.should.be.equal('Life of psy')</span><br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "f3736d75-4e3a-447d-8f8a-dd94b655362c",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using $or query",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $or query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t\t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"$or\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"author\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^chetan\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"bookname\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^FTJ\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject1.author.should.be.equal(<span class=\"hljs-string\">'chetan'</span>)<br>\t\t\t\tobject2.bookname.should.be.equal(<span class=\"hljs-string\">'FTJ'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "58fe6adf-e419-4558-ab76-1d222315bded",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using $and query",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $and query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t\t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"$and\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"author\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^chetan\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"daysold\"</span>: <span class=\"hljs-number\">90</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'chetan'</span>)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'Life of psy'</span>)<br>\t\t\t\tobject.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "b4aa85d6-4d2b-4aeb-a1a1-d5c5f527e79d",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using $lt(less then) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $lt(less then) operators",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$lt\"</span>: <span class=\"hljs-number\">125</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "e1c0e69e-31fe-4f55-ab6c-db34a601b10e",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able t0 get objects created for an app using $lte(less then or equal to) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able t0 get objects created for an app using $lte(less then or equal to) operators",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$lte\"</span>: <span class=\"hljs-number\">125</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">125</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "e8d058fe-6598-4e89-abff-ae1c5e92aa6e",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using $gt(greater than) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $gt(greater than) operators",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$gt\"</span>: <span class=\"hljs-number\">125</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">130</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "7b07ba04-b399-44cc-afcc-d9dc20d48514",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using $gte(greater than or equal to) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $gte(greater than or equal to) operators",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$gte\"</span>: <span class=\"hljs-number\">130</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">130</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "749a450f-bdfd-40c9-a93a-4a80e62883ab",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using $ne(not equal to) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $ne(not equal to) operators",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$ne\"</span>: <span class=\"hljs-number\">130</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br><br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject4 = res.body.objects[<span class=\"hljs-number\">3</span>]<br>\t\t\t\tobject5 = res.body.objects[<span class=\"hljs-number\">4</span>]<br>\t\t\t\t<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">125</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject4.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t\tobject5.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "319e348a-c2a4-4f56-b853-2ac6cc27a199",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using $in(contained In) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $in(contained In) operators",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$in\"</span>: [<span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">125</span>, <span class=\"hljs-number\">90</span>]<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">125</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">130</span>)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "f6e77f78-66d9-462b-aef2-7ca511f0c76b",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using $in(not contained In) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $in(not contained In) operators",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$nin\"</span>: [<span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">125</span>, <span class=\"hljs-number\">90</span>]<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br><br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "feb68457-a3c4-4c10-82fb-31aa8752af21",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using $exists(exists) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $exists(exists) operators",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"bookname\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$exists\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'FTJ'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "d3f616cb-45b6-45fb-9f00-12d402b6bf9b",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app and include its owner",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app and include its owner",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include_owner\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'author'</span>,<span class=\"hljs-string\">'bookname'</span>,<span class=\"hljs-string\">'address'</span>,<span class=\"hljs-string\">'daysold'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'_owner'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object._owner).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'username'</span>,<span class=\"hljs-string\">'email'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'active'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'last_login_at'</span>])<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "68ce4dde-e255-4d7f-904f-ff27c160815f",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app and include its count",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app and include its count",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tres.body.count.should.be.equal(<span class=\"hljs-number\">6</span>)<br>\t\t\t\tres.body.objects.length.should.be.equal(<span class=\"hljs-number\">6</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "8ecb5533-9683-47a9-a5b1-04216c93b4ff",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app and include its schema",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app and include its schema",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include_schema\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body).should.to.be.deep.equal([<span class=\"hljs-string\">'objects'</span>,<span class=\"hljs-string\">'schema'</span>])<br>\t\t\t\tres.body.schema[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'author'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "d05dd905-1fab-4f39-b27e-d7940f02ddbe",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app and include unpublished objects",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app and include unpublished objects",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"one\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t})<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t  \t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"include_unpublished\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t}))<br>\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "47ddd6a2-1d95-4534-8f54-fe6591b388be",
                "parentUUID": "61bbd0f5-5b89-4d53-9978-d25e6bf79c42",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 17,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 17,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Reference objects",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get reference objects created for an app using $in_query query",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using $in_query query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, {<br>\t\t\t  <span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$in_query\"</span>: {<br>\t\t\t        <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"backend\"</span><br>\t\t\t      }<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'four'</span>)<br>\t\t\t\tobject.project[<span class=\"hljs-number\">0</span>].should.be.equal(object2.uid)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "eaf040c6-39ee-4926-8f4d-d32cb40426e5",
                "parentUUID": "f8c75fab-edde-4469-8a5c-803341ac3aad",
                "skipped": true
              },
              {
                "title": "should be able to get reference objects created for an app using $nin_query query",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using $nin_query query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, {<br>\t\t\t  <span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$nin_query\"</span>: {<br>\t\t\t        <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"flow\"</span><br>\t\t\t      }<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'four'</span>)<br>\t\t\t\tobject.project[<span class=\"hljs-number\">0</span>].should.be.equal(object2.uid)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "673d55fc-3f19-4b64-981b-912ae82fa49e",
                "parentUUID": "f8c75fab-edde-4469-8a5c-803341ac3aad",
                "skipped": true
              },
              {
                "title": "should be able to get reference objects created for an app using include[]",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using include[]",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include\"</span>: [<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span><br>\t\t\t  ]<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t\tobject.project[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'flow'</span>)<br>\t\t\t\tobject.project[<span class=\"hljs-number\">0</span>].app_user_object_uid.should.be.equal(appUser1.uid)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "4cafc628-589c-4230-8f5d-631515872696",
                "parentUUID": "f8c75fab-edde-4469-8a5c-803341ac3aad",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using ONLY BASE query",
                "fullTitle": "Queries and reference Reference objects should be able to get objects created for an app using ONLY BASE query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"only\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"BASE\"</span>: [<br>\t\t\t      <span class=\"hljs-string\">\"uid\"</span><br>\t\t\t    ]<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>])<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "353cad82-5a7b-41f2-9b67-2acf5827e78c",
                "parentUUID": "f8c75fab-edde-4469-8a5c-803341ac3aad",
                "skipped": true
              },
              {
                "title": "should be able to get reference objects created for an app using include[] and Only BASE query",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using include[] and Only BASE query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include\"</span>: [<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span><br>\t\t\t  ],<br>\t\t\t  <span class=\"hljs-string\">\"only\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"BASE\"</span>: [<br>\t\t\t      <span class=\"hljs-string\">\"project\"</span><br>\t\t\t    ],<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span>: [<br>\t\t\t      <span class=\"hljs-string\">\"description\"</span><br>\t\t\t    ]<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'project'</span>,<span class=\"hljs-string\">'uid'</span>])<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "79757fc5-8ecc-4540-aad9-34242bc05ee4",
                "parentUUID": "f8c75fab-edde-4469-8a5c-803341ac3aad",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using except BASE query",
                "fullTitle": "Queries and reference Reference objects should be able to get objects created for an app using except BASE query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"except\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"BASE\"</span>: [<span class=\"hljs-string\">\"project\"</span>]<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t\tshould.not.exist(object.project)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "02d8e424-da70-431d-bf88-6beeb7b91dd2",
                "parentUUID": "f8c75fab-edde-4469-8a5c-803341ac3aad",
                "skipped": true
              },
              {
                "title": "should be able to get reference objects created for an app using include[] and except BASE query",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using include[] and except BASE query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, { <br>\t\t\t\t<span class=\"hljs-string\">\"include\"</span>: [<span class=\"hljs-string\">\"project\"</span>],<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"except\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span>: [<span class=\"hljs-string\">\"name\"</span>, <span class=\"hljs-string\">\"tags\"</span>, <span class=\"hljs-string\">\"_version\"</span>, <span class=\"hljs-string\">\"created_by\"</span>, <span class=\"hljs-string\">\"updated_by\"</span>, <span class=\"hljs-string\">\"__loc\"</span>, <span class=\"hljs-string\">\"app_user_object_uid\"</span>, <span class=\"hljs-string\">\"uid\"</span>, <span class=\"hljs-string\">\"published\"</span>, <span class=\"hljs-string\">\"created_at\"</span>,<span class=\"hljs-string\">\"updated_at\"</span>, <span class=\"hljs-string\">\"description\"</span>,<span class=\"hljs-string\">\"ACL\"</span>]<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.project[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>])<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-comment\">// object.name.should.be.equal('one')</span><br>\t\t\t\t<span class=\"hljs-comment\">// object.project.should.be.deep.equal({'uid'})</span><br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "22be6d56-1bf6-41fc-baa2-c6e4a9d61813",
                "parentUUID": "f8c75fab-edde-4469-8a5c-803341ac3aad",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using exists[field_uid] query",
                "fullTitle": "Queries and reference Reference objects should be able to get objects created for an app using exists[field_uid] query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"exists\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"ACL\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "292d8116-9845-47bd-889c-caac032b4170",
                "parentUUID": "f8c75fab-edde-4469-8a5c-803341ac3aad",
                "skipped": true
              },
              {
                "title": "should be able to create reference object without passing array",
                "fullTitle": "Queries and reference Reference objects should be able to create reference object without passing array",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pro = object1.uid<br>\t\t<br>\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass2.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"seven\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"project\"</span>: pro<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\tobject = res.body.object<br>\t\t\tobject.project.should.be.deep.equal([pro])<br>\t\t})<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\tdone()<br>\t\t})",
                "isRoot": false,
                "uuid": "b99ddad7-f384-47e5-8e83-a71b83048cae",
                "parentUUID": "f8c75fab-edde-4469-8a5c-803341ac3aad",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "f8c75fab-edde-4469-8a5c-803341ac3aad",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get reference objects created for an app using $in_query query",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using $in_query query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, {<br>\t\t\t  <span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$in_query\"</span>: {<br>\t\t\t        <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"backend\"</span><br>\t\t\t      }<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'four'</span>)<br>\t\t\t\tobject.project[<span class=\"hljs-number\">0</span>].should.be.equal(object2.uid)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "eaf040c6-39ee-4926-8f4d-d32cb40426e5",
                "parentUUID": "f8c75fab-edde-4469-8a5c-803341ac3aad",
                "skipped": true
              },
              {
                "title": "should be able to get reference objects created for an app using $nin_query query",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using $nin_query query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, {<br>\t\t\t  <span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$nin_query\"</span>: {<br>\t\t\t        <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"flow\"</span><br>\t\t\t      }<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'four'</span>)<br>\t\t\t\tobject.project[<span class=\"hljs-number\">0</span>].should.be.equal(object2.uid)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "673d55fc-3f19-4b64-981b-912ae82fa49e",
                "parentUUID": "f8c75fab-edde-4469-8a5c-803341ac3aad",
                "skipped": true
              },
              {
                "title": "should be able to get reference objects created for an app using include[]",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using include[]",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include\"</span>: [<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span><br>\t\t\t  ]<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t\tobject.project[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'flow'</span>)<br>\t\t\t\tobject.project[<span class=\"hljs-number\">0</span>].app_user_object_uid.should.be.equal(appUser1.uid)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "4cafc628-589c-4230-8f5d-631515872696",
                "parentUUID": "f8c75fab-edde-4469-8a5c-803341ac3aad",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using ONLY BASE query",
                "fullTitle": "Queries and reference Reference objects should be able to get objects created for an app using ONLY BASE query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"only\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"BASE\"</span>: [<br>\t\t\t      <span class=\"hljs-string\">\"uid\"</span><br>\t\t\t    ]<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>])<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "353cad82-5a7b-41f2-9b67-2acf5827e78c",
                "parentUUID": "f8c75fab-edde-4469-8a5c-803341ac3aad",
                "skipped": true
              },
              {
                "title": "should be able to get reference objects created for an app using include[] and Only BASE query",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using include[] and Only BASE query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include\"</span>: [<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span><br>\t\t\t  ],<br>\t\t\t  <span class=\"hljs-string\">\"only\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"BASE\"</span>: [<br>\t\t\t      <span class=\"hljs-string\">\"project\"</span><br>\t\t\t    ],<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span>: [<br>\t\t\t      <span class=\"hljs-string\">\"description\"</span><br>\t\t\t    ]<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'project'</span>,<span class=\"hljs-string\">'uid'</span>])<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "79757fc5-8ecc-4540-aad9-34242bc05ee4",
                "parentUUID": "f8c75fab-edde-4469-8a5c-803341ac3aad",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using except BASE query",
                "fullTitle": "Queries and reference Reference objects should be able to get objects created for an app using except BASE query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"except\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"BASE\"</span>: [<span class=\"hljs-string\">\"project\"</span>]<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t\tshould.not.exist(object.project)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "02d8e424-da70-431d-bf88-6beeb7b91dd2",
                "parentUUID": "f8c75fab-edde-4469-8a5c-803341ac3aad",
                "skipped": true
              },
              {
                "title": "should be able to get reference objects created for an app using include[] and except BASE query",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using include[] and except BASE query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, { <br>\t\t\t\t<span class=\"hljs-string\">\"include\"</span>: [<span class=\"hljs-string\">\"project\"</span>],<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"except\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span>: [<span class=\"hljs-string\">\"name\"</span>, <span class=\"hljs-string\">\"tags\"</span>, <span class=\"hljs-string\">\"_version\"</span>, <span class=\"hljs-string\">\"created_by\"</span>, <span class=\"hljs-string\">\"updated_by\"</span>, <span class=\"hljs-string\">\"__loc\"</span>, <span class=\"hljs-string\">\"app_user_object_uid\"</span>, <span class=\"hljs-string\">\"uid\"</span>, <span class=\"hljs-string\">\"published\"</span>, <span class=\"hljs-string\">\"created_at\"</span>,<span class=\"hljs-string\">\"updated_at\"</span>, <span class=\"hljs-string\">\"description\"</span>,<span class=\"hljs-string\">\"ACL\"</span>]<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.project[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>])<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-comment\">// object.name.should.be.equal('one')</span><br>\t\t\t\t<span class=\"hljs-comment\">// object.project.should.be.deep.equal({'uid'})</span><br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "22be6d56-1bf6-41fc-baa2-c6e4a9d61813",
                "parentUUID": "f8c75fab-edde-4469-8a5c-803341ac3aad",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using exists[field_uid] query",
                "fullTitle": "Queries and reference Reference objects should be able to get objects created for an app using exists[field_uid] query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"exists\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"ACL\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "292d8116-9845-47bd-889c-caac032b4170",
                "parentUUID": "f8c75fab-edde-4469-8a5c-803341ac3aad",
                "skipped": true
              },
              {
                "title": "should be able to create reference object without passing array",
                "fullTitle": "Queries and reference Reference objects should be able to create reference object without passing array",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pro = object1.uid<br>\t\t<br>\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass2.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"seven\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"project\"</span>: pro<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\tobject = res.body.object<br>\t\t\tobject.project.should.be.deep.equal([pro])<br>\t\t})<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\tdone()<br>\t\t})",
                "isRoot": false,
                "uuid": "b99ddad7-f384-47e5-8e83-a71b83048cae",
                "parentUUID": "f8c75fab-edde-4469-8a5c-803341ac3aad",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 9,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 9,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "5994abd1-ac53-4576-956a-83f367e7a6bc",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Objects ---",
        "suites": [
          {
            "title": "Get objects",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all objects present for given class",
                "fullTitle": "Objects --- Get objects should be able to get all objects present for given class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "210417d3-a40c-4a9e-a9f6-fe1527e8e44b",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              },
              {
                "title": "should be able to get all objects and limit it to 1",
                "fullTitle": "Objects --- Get objects should be able to get all objects and limit it to 1",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "c0bca055-f029-47bf-a131-1b419dec3d41",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              },
              {
                "title": "should get be able to all objects and skip it to 2",
                "fullTitle": "Objects --- Get objects should get be able to all objects and skip it to 2",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "d586b453-8b8b-467a-8f26-0259aa519332",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              },
              {
                "title": "should be able to get all objects skip 2 / limit 1 ",
                "fullTitle": "Objects --- Get objects should be able to get all objects skip 2 / limit 1 ",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span>,<br>\t<span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "19791d4b-e82c-4eba-98d7-9c0dd687b099",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              },
              {
                "title": "should be able to get only object`s count in response",
                "fullTitle": "Objects --- Get objects should be able to get only object`s count in response",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "81c8dcfe-4fbc-45fa-9e3e-a5c17dc10d9f",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              },
              {
                "title": "should be able to get all objects and include schema for given class",
                "fullTitle": "Objects --- Get objects should be able to get all objects and include schema for given class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"include_schema\"</span>: <span class=\"hljs-string\">\"false\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\tschema = res.body.schema<br>\t\tshould.exist(schema)<br>\t\tschema[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">\"name\"</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "6a0a3d01-331b-4efa-8456-952cf22338e2",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              },
              {
                "title": "should be able to get all objects and include count in response",
                "fullTitle": "Objects --- Get objects should be able to get all objects and include count in response",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\tcount = res.body.count<br>\t\tshould.exist(count)<br>\t\tcount.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "b8a7f1f0-b267-483e-90b0-fe80dfa0b5e5",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              },
              {
                "title": "should be able to get zero objects and include count as a \"0\"",
                "fullTitle": "Objects --- Get objects should be able to get zero objects and include count as a \"0\"",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, classZero.uid, {<br>\t<span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"objects\"</span>: [],<br>\t  <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-number\">0</span><br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "db65ddd7-208a-4338-8d3a-4d8ae1725f44",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              },
              {
                "title": "should be able to get all objects in ascending order",
                "fullTitle": "Objects --- Get objects should be able to get all objects in ascending order",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"asc\"</span>: <span class=\"hljs-string\">\"name\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobjects[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'1'</span>)<br>\t\tobjects[<span class=\"hljs-number\">1</span>].name.should.be.equal(<span class=\"hljs-string\">'2'</span>)<br>\t\tobjects[<span class=\"hljs-number\">2</span>].name.should.be.equal(<span class=\"hljs-string\">'3'</span>)<br>\t\tobjects[<span class=\"hljs-number\">3</span>].name.should.be.equal(<span class=\"hljs-string\">'4'</span>)<br>\t\tobjects[<span class=\"hljs-number\">4</span>].name.should.be.equal(<span class=\"hljs-string\">'5'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "72f488da-b6ea-4c55-b0b3-35dbc3f4448f",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              },
              {
                "title": "should be able to get all objects in descending order",
                "fullTitle": "Objects --- Get objects should be able to get all objects in descending order",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"desc\"</span>: <span class=\"hljs-string\">\"name\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobjects[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'5'</span>)<br>\t\tobjects[<span class=\"hljs-number\">1</span>].name.should.be.equal(<span class=\"hljs-string\">'4'</span>)<br>\t\tobjects[<span class=\"hljs-number\">2</span>].name.should.be.equal(<span class=\"hljs-string\">'3'</span>)<br>\t\tobjects[<span class=\"hljs-number\">3</span>].name.should.be.equal(<span class=\"hljs-string\">'2'</span>)<br>\t\tobjects[<span class=\"hljs-number\">4</span>].name.should.be.equal(<span class=\"hljs-string\">'1'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "7fb44695-d13a-4854-ab95-09c2a5ce5db4",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get all objects present for given class",
                "fullTitle": "Objects --- Get objects should be able to get all objects present for given class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "210417d3-a40c-4a9e-a9f6-fe1527e8e44b",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              },
              {
                "title": "should be able to get all objects and limit it to 1",
                "fullTitle": "Objects --- Get objects should be able to get all objects and limit it to 1",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "c0bca055-f029-47bf-a131-1b419dec3d41",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              },
              {
                "title": "should get be able to all objects and skip it to 2",
                "fullTitle": "Objects --- Get objects should get be able to all objects and skip it to 2",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "d586b453-8b8b-467a-8f26-0259aa519332",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              },
              {
                "title": "should be able to get all objects skip 2 / limit 1 ",
                "fullTitle": "Objects --- Get objects should be able to get all objects skip 2 / limit 1 ",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span>,<br>\t<span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "19791d4b-e82c-4eba-98d7-9c0dd687b099",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              },
              {
                "title": "should be able to get only object`s count in response",
                "fullTitle": "Objects --- Get objects should be able to get only object`s count in response",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "81c8dcfe-4fbc-45fa-9e3e-a5c17dc10d9f",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              },
              {
                "title": "should be able to get all objects and include schema for given class",
                "fullTitle": "Objects --- Get objects should be able to get all objects and include schema for given class",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"include_schema\"</span>: <span class=\"hljs-string\">\"false\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\tschema = res.body.schema<br>\t\tshould.exist(schema)<br>\t\tschema[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">\"name\"</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "6a0a3d01-331b-4efa-8456-952cf22338e2",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              },
              {
                "title": "should be able to get all objects and include count in response",
                "fullTitle": "Objects --- Get objects should be able to get all objects and include count in response",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\tcount = res.body.count<br>\t\tshould.exist(count)<br>\t\tcount.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "b8a7f1f0-b267-483e-90b0-fe80dfa0b5e5",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              },
              {
                "title": "should be able to get zero objects and include count as a \"0\"",
                "fullTitle": "Objects --- Get objects should be able to get zero objects and include count as a \"0\"",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, classZero.uid, {<br>\t<span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"objects\"</span>: [],<br>\t  <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-number\">0</span><br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "db65ddd7-208a-4338-8d3a-4d8ae1725f44",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              },
              {
                "title": "should be able to get all objects in ascending order",
                "fullTitle": "Objects --- Get objects should be able to get all objects in ascending order",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"asc\"</span>: <span class=\"hljs-string\">\"name\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobjects[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'1'</span>)<br>\t\tobjects[<span class=\"hljs-number\">1</span>].name.should.be.equal(<span class=\"hljs-string\">'2'</span>)<br>\t\tobjects[<span class=\"hljs-number\">2</span>].name.should.be.equal(<span class=\"hljs-string\">'3'</span>)<br>\t\tobjects[<span class=\"hljs-number\">3</span>].name.should.be.equal(<span class=\"hljs-string\">'4'</span>)<br>\t\tobjects[<span class=\"hljs-number\">4</span>].name.should.be.equal(<span class=\"hljs-string\">'5'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "72f488da-b6ea-4c55-b0b3-35dbc3f4448f",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              },
              {
                "title": "should be able to get all objects in descending order",
                "fullTitle": "Objects --- Get objects should be able to get all objects in descending order",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"desc\"</span>: <span class=\"hljs-string\">\"name\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobjects[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'5'</span>)<br>\t\tobjects[<span class=\"hljs-number\">1</span>].name.should.be.equal(<span class=\"hljs-string\">'4'</span>)<br>\t\tobjects[<span class=\"hljs-number\">2</span>].name.should.be.equal(<span class=\"hljs-string\">'3'</span>)<br>\t\tobjects[<span class=\"hljs-number\">3</span>].name.should.be.equal(<span class=\"hljs-string\">'2'</span>)<br>\t\tobjects[<span class=\"hljs-number\">4</span>].name.should.be.equal(<span class=\"hljs-string\">'1'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "7fb44695-d13a-4854-ab95-09c2a5ce5db4",
                "parentUUID": "99778d5c-b353-48c9-8b7b-5c8449adcfbb",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 10,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 10,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Delta queries",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all objects using (ALL) delta query",
                "fullTitle": "Objects --- Delta queries should be able to get all objects using (ALL) delta query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"ALL\"</span>: date<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'deleted_at'</span>])<br>\t\t\t\tcreatedAt = res.body.objects.created_at<br>\t\t\t\tupdatedAt = res.body.objects.updated_at<br>\t\t\t\tdeletedAt = res.body.objects.deleted_at<br>\t\t\t\tres.body.objects.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tcreatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tdeletedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tcreatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\tupdatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\tdeletedAt.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object3.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(object3.name)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "d0a605c4-e589-43fd-9795-5c641fba6a16",
                "parentUUID": "0d672c4c-c471-44a5-8fc3-708585d4d251",
                "skipped": true
              },
              {
                "title": "should be able to get all objects by (created_at) delta query",
                "fullTitle": "Objects --- Delta queries should be able to get all objects by (created_at) delta query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"created_at\"</span>: object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>])<br>\t\t\t\tcreatedAt = res.body.objects.created_at<br>\t\t\t\tcreatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tcreatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "88d1a0e3-d236-47c2-a0a1-d6ed4571ba45",
                "parentUUID": "0d672c4c-c471-44a5-8fc3-708585d4d251",
                "skipped": true
              },
              {
                "title": "should be able to get all objects by (updated_at) delta query",
                "fullTitle": "Objects --- Delta queries should be able to get all objects by (updated_at) delta query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"updated_at\"</span>: object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'updated_at'</span>])<br>\t\t\t\t\tupdatedAt = res.body.objects.updated_at<br>\t\t\t\t\tupdatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupdatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "a3893595-08e4-44da-a197-9191b16dd402",
                "parentUUID": "0d672c4c-c471-44a5-8fc3-708585d4d251",
                "skipped": true
              },
              {
                "title": "should be able to get all objects by delete_at delta query",
                "fullTitle": "Objects --- Delta queries should be able to get all objects by delete_at delta query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"deleted_at\"</span>: object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'deleted_at'</span>])<br>\t\t\t\t\tdeletedAt = res.body.objects.deleted_at<br>\t\t\t\t\tdeletedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tdeletedAt.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object3.uid)<br>\t\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "0da4521e-0e5a-4303-9238-c85b775b19f0",
                "parentUUID": "0d672c4c-c471-44a5-8fc3-708585d4d251",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "0d672c4c-c471-44a5-8fc3-708585d4d251",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get all objects using (ALL) delta query",
                "fullTitle": "Objects --- Delta queries should be able to get all objects using (ALL) delta query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"ALL\"</span>: date<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'deleted_at'</span>])<br>\t\t\t\tcreatedAt = res.body.objects.created_at<br>\t\t\t\tupdatedAt = res.body.objects.updated_at<br>\t\t\t\tdeletedAt = res.body.objects.deleted_at<br>\t\t\t\tres.body.objects.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tcreatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tdeletedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tcreatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\tupdatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\tdeletedAt.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object3.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(object3.name)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "d0a605c4-e589-43fd-9795-5c641fba6a16",
                "parentUUID": "0d672c4c-c471-44a5-8fc3-708585d4d251",
                "skipped": true
              },
              {
                "title": "should be able to get all objects by (created_at) delta query",
                "fullTitle": "Objects --- Delta queries should be able to get all objects by (created_at) delta query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"created_at\"</span>: object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>])<br>\t\t\t\tcreatedAt = res.body.objects.created_at<br>\t\t\t\tcreatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tcreatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "88d1a0e3-d236-47c2-a0a1-d6ed4571ba45",
                "parentUUID": "0d672c4c-c471-44a5-8fc3-708585d4d251",
                "skipped": true
              },
              {
                "title": "should be able to get all objects by (updated_at) delta query",
                "fullTitle": "Objects --- Delta queries should be able to get all objects by (updated_at) delta query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"updated_at\"</span>: object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'updated_at'</span>])<br>\t\t\t\t\tupdatedAt = res.body.objects.updated_at<br>\t\t\t\t\tupdatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupdatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "a3893595-08e4-44da-a197-9191b16dd402",
                "parentUUID": "0d672c4c-c471-44a5-8fc3-708585d4d251",
                "skipped": true
              },
              {
                "title": "should be able to get all objects by delete_at delta query",
                "fullTitle": "Objects --- Delta queries should be able to get all objects by delete_at delta query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"deleted_at\"</span>: object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'deleted_at'</span>])<br>\t\t\t\t\tdeletedAt = res.body.objects.deleted_at<br>\t\t\t\t\tdeletedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tdeletedAt.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object3.uid)<br>\t\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "0da4521e-0e5a-4303-9238-c85b775b19f0",
                "parentUUID": "0d672c4c-c471-44a5-8fc3-708585d4d251",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 4,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Object CURD",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get single object present",
                "fullTitle": "Objects --- Object CURD should be able to get single object present",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "1eeabc15-e552-462d-b258-9de519ba1112",
                "parentUUID": "92f14c41-2230-4bf9-868b-fdd83805245d",
                "skipped": true
              },
              {
                "title": "should be able to update object present",
                "fullTitle": "Objects --- Object CURD should be able to update object present",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, object1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "6c1750fb-8ce9-4500-8dcd-018672ee5f39",
                "parentUUID": "92f14c41-2230-4bf9-868b-fdd83805245d",
                "skipped": true
              },
              {
                "title": "should be able to perform scilent update on object",
                "fullTitle": "Objects --- Object CURD should be able to perform scilent update on object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object_sclient'</span>, sys_user1.authtoken, app.api_key, <span class=\"hljs-literal\">true</span>, myclass3.uid, object2.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.object<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\tobject.created_at.should.be.equal(object.updated_at)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "3626af3b-2a42-4e60-8964-6a798b7e8a2e",
                "parentUUID": "92f14c41-2230-4bf9-868b-fdd83805245d",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid object uid",
                "fullTitle": "Objects --- Object CURD should provide an error message for invalid object uid",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, <span class=\"hljs-string\">\"swapnil\"</span>, {<br>\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "6dc231b5-fa99-45e2-9ee9-34016aa544cc",
                "parentUUID": "92f14c41-2230-4bf9-868b-fdd83805245d",
                "skipped": true
              },
              {
                "title": "should be able to delete object present",
                "fullTitle": "Objects --- Object CURD should be able to delete object present",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'delete_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "9a1bdd01-39da-45fe-851a-dcc461ec30ec",
                "parentUUID": "92f14c41-2230-4bf9-868b-fdd83805245d",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "92f14c41-2230-4bf9-868b-fdd83805245d",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get single object present",
                "fullTitle": "Objects --- Object CURD should be able to get single object present",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "1eeabc15-e552-462d-b258-9de519ba1112",
                "parentUUID": "92f14c41-2230-4bf9-868b-fdd83805245d",
                "skipped": true
              },
              {
                "title": "should be able to update object present",
                "fullTitle": "Objects --- Object CURD should be able to update object present",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, object1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "6c1750fb-8ce9-4500-8dcd-018672ee5f39",
                "parentUUID": "92f14c41-2230-4bf9-868b-fdd83805245d",
                "skipped": true
              },
              {
                "title": "should be able to perform scilent update on object",
                "fullTitle": "Objects --- Object CURD should be able to perform scilent update on object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object_sclient'</span>, sys_user1.authtoken, app.api_key, <span class=\"hljs-literal\">true</span>, myclass3.uid, object2.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.object<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\tobject.created_at.should.be.equal(object.updated_at)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "3626af3b-2a42-4e60-8964-6a798b7e8a2e",
                "parentUUID": "92f14c41-2230-4bf9-868b-fdd83805245d",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid object uid",
                "fullTitle": "Objects --- Object CURD should provide an error message for invalid object uid",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, <span class=\"hljs-string\">\"swapnil\"</span>, {<br>\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "6dc231b5-fa99-45e2-9ee9-34016aa544cc",
                "parentUUID": "92f14c41-2230-4bf9-868b-fdd83805245d",
                "skipped": true
              },
              {
                "title": "should be able to delete object present",
                "fullTitle": "Objects --- Object CURD should be able to delete object present",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'delete_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "9a1bdd01-39da-45fe-851a-dcc461ec30ec",
                "parentUUID": "92f14c41-2230-4bf9-868b-fdd83805245d",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 5,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Object update operations",
            "suites": [
              {
                "title": "PUSH-PULL",
                "suites": [],
                "tests": [
                  {
                    "title": "should provide an error message for -ve index key",
                    "fullTitle": "Object update operations PUSH-PULL should provide an error message for -ve index key",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"888\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: -<span class=\"hljs-number\">6</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"Invalid parameters\"</span>: [<br>\t      <span class=\"hljs-string\">\"have invalid update operation(s). Please check if they were performed on null values.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "364f926b-b7f1-4954-9a6b-4485c2e47296",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should be able to PUSH value (object property) in array field present in group",
                    "fullTitle": "Object update operations PUSH-PULL should be able to PUSH value (object property) in array field present in group",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"1222222\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "6d66fe7c-43d5-4069-bfdb-270a3809ae87",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should able to PUSH value (object property) in array field present in group without pasing index",
                    "fullTitle": "Object update operations PUSH-PULL should able to PUSH value (object property) in array field present in group without pasing index",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">555</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "591b1ca0-e4c6-417d-84f1-52d2e2a0f644",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should able to PUSH value(dot property) in array field present in group",
                    "fullTitle": "Object update operations PUSH-PULL should able to PUSH value(dot property) in array field present in group",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"666\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.object<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t<span class=\"hljs-comment\">// object.roundone.hits.should.have.length(6)</span><br>\tobject.roundone.hits[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">666</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "f58a3b4b-8ab0-4a53-aa96-c0d2d580c634",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message for field datatype validation for PUSH operation",
                    "fullTitle": "Object update operations PUSH-PULL should provide an error message for field datatype validation for PUSH operation",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone.hits.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not number\"</span><br>\t    ]<br>\t  }<br>\t})\t\t\t\t\t<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "6cd1dcc8-b54d-4487-a60f-8a7f90359349",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should able to PUSH value(dot property) without passing index",
                    "fullTitle": "Object update operations PUSH-PULL should able to PUSH value(dot property) without passing index",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">999</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = R.last(res.body.object.roundone.hits)<br>\tobject.should.be.equal(<span class=\"hljs-number\">999</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "66719a1a-ee3d-4f6d-9d2d-403ce4a24fa4",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should able to create object and PUSH values in it",
                    "fullTitle": "Object update operations PUSH-PULL should able to create object and PUSH values in it",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"555\"</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tobject = res.body.object.roundone.hits[<span class=\"hljs-number\">0</span>]<br>\tobject.should.be.equal(<span class=\"hljs-number\">555</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "f206925a-3224-4d87-a000-bf31ed9059b5",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message when data key is not present",
                    "fullTitle": "Object update operations PUSH-PULL should provide an error message when data key is not present",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": true,
                    "code": "",
                    "isRoot": false,
                    "uuid": "fc48e86c-6909-4294-8f51-fe029e2fed29",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": false
                  },
                  {
                    "title": "should able to create object and PUSH values in it using dot property",
                    "fullTitle": "Object update operations PUSH-PULL should able to create object and PUSH values in it using dot property",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">777</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"parameter\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "da447100-c9d7-4458-99ca-cabbe4c66f77",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should be able to PULL value(object property) from array while updating object",
                    "fullTitle": "Object update operations PUSH-PULL should be able to PULL value(object property) from array while updating object",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"101\"</span>, <span class=\"hljs-string\">\"102\"</span>, <span class=\"hljs-string\">\"103\"</span>, <span class=\"hljs-string\">\"104\"</span>, <span class=\"hljs-string\">\"105\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest1\"</span><br>\t\t}<br>\t}<br>}))<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">105</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))\t<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.roundone.hits.should.be.deep.equal([<span class=\"hljs-number\">101</span>, <span class=\"hljs-number\">102</span>, <span class=\"hljs-number\">103</span>, <span class=\"hljs-number\">104</span>])<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "db1cbedb-2694-4c03-b3d7-350d9b2acd79",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should be able to PULL multiple values(object property) from array while updating object",
                    "fullTitle": "Object update operations PUSH-PULL should be able to PULL multiple values(object property) from array while updating object",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"201\"</span>, <span class=\"hljs-string\">\"202\"</span>, <span class=\"hljs-string\">\"203\"</span>, <span class=\"hljs-string\">\"204\"</span>, <span class=\"hljs-string\">\"205\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest2\"</span><br>\t\t}<br>\t}<br>}))<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-number\">201</span>, <span class=\"hljs-number\">202</span>, <span class=\"hljs-number\">203</span>, <span class=\"hljs-number\">204</span>, <span class=\"hljs-number\">205</span>]<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))\t<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.roundone.hits.should.be.deep.equal([])<br>\t<span class=\"hljs-comment\">// object.roundone.hits[1].should.be.not.equal([3])</span><br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "d7d15a0b-8cd5-4bab-a48c-e9580dfea9d1",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message for data key for PULL operation",
                    "fullTitle": "Object update operations PUSH-PULL should provide an error message for data key for PULL operation",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone.hits\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "4fe47442-817f-4f82-a800-7216c8758867",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message if index specified for PULL operation ",
                    "fullTitle": "Object update operations PUSH-PULL should provide an error message if index specified for PULL operation ",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"401\"</span>, <span class=\"hljs-string\">\"402\"</span>, <span class=\"hljs-string\">\"403\"</span>, <span class=\"hljs-string\">\"404\"</span>, <span class=\"hljs-string\">\"405\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest3\"</span><br>\t\t}<br>\t}<br>}))<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone.hits\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "05735838-c02b-41e4-a74b-2eb4f4e94aac",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  }
                ],
                "pending": [
                  {
                    "title": "should provide an error message when data key is not present",
                    "fullTitle": "Object update operations PUSH-PULL should provide an error message when data key is not present",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": true,
                    "code": "",
                    "isRoot": false,
                    "uuid": "fc48e86c-6909-4294-8f51-fe029e2fed29",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": false
                  }
                ],
                "root": false,
                "_timeout": 95000,
                "file": "/test.js",
                "uuid": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                "fullFile": "/home/ss/Documents/backend/test.js",
                "passes": [],
                "failures": [],
                "skipped": [
                  {
                    "title": "should provide an error message for -ve index key",
                    "fullTitle": "Object update operations PUSH-PULL should provide an error message for -ve index key",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"888\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: -<span class=\"hljs-number\">6</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"Invalid parameters\"</span>: [<br>\t      <span class=\"hljs-string\">\"have invalid update operation(s). Please check if they were performed on null values.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "364f926b-b7f1-4954-9a6b-4485c2e47296",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should be able to PUSH value (object property) in array field present in group",
                    "fullTitle": "Object update operations PUSH-PULL should be able to PUSH value (object property) in array field present in group",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"1222222\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "6d66fe7c-43d5-4069-bfdb-270a3809ae87",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should able to PUSH value (object property) in array field present in group without pasing index",
                    "fullTitle": "Object update operations PUSH-PULL should able to PUSH value (object property) in array field present in group without pasing index",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">555</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "591b1ca0-e4c6-417d-84f1-52d2e2a0f644",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should able to PUSH value(dot property) in array field present in group",
                    "fullTitle": "Object update operations PUSH-PULL should able to PUSH value(dot property) in array field present in group",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"666\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.object<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t<span class=\"hljs-comment\">// object.roundone.hits.should.have.length(6)</span><br>\tobject.roundone.hits[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">666</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "f58a3b4b-8ab0-4a53-aa96-c0d2d580c634",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message for field datatype validation for PUSH operation",
                    "fullTitle": "Object update operations PUSH-PULL should provide an error message for field datatype validation for PUSH operation",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone.hits.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not number\"</span><br>\t    ]<br>\t  }<br>\t})\t\t\t\t\t<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "6cd1dcc8-b54d-4487-a60f-8a7f90359349",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should able to PUSH value(dot property) without passing index",
                    "fullTitle": "Object update operations PUSH-PULL should able to PUSH value(dot property) without passing index",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">999</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = R.last(res.body.object.roundone.hits)<br>\tobject.should.be.equal(<span class=\"hljs-number\">999</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "66719a1a-ee3d-4f6d-9d2d-403ce4a24fa4",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should able to create object and PUSH values in it",
                    "fullTitle": "Object update operations PUSH-PULL should able to create object and PUSH values in it",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"555\"</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tobject = res.body.object.roundone.hits[<span class=\"hljs-number\">0</span>]<br>\tobject.should.be.equal(<span class=\"hljs-number\">555</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "f206925a-3224-4d87-a000-bf31ed9059b5",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should able to create object and PUSH values in it using dot property",
                    "fullTitle": "Object update operations PUSH-PULL should able to create object and PUSH values in it using dot property",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">777</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"parameter\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "da447100-c9d7-4458-99ca-cabbe4c66f77",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should be able to PULL value(object property) from array while updating object",
                    "fullTitle": "Object update operations PUSH-PULL should be able to PULL value(object property) from array while updating object",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"101\"</span>, <span class=\"hljs-string\">\"102\"</span>, <span class=\"hljs-string\">\"103\"</span>, <span class=\"hljs-string\">\"104\"</span>, <span class=\"hljs-string\">\"105\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest1\"</span><br>\t\t}<br>\t}<br>}))<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">105</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))\t<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.roundone.hits.should.be.deep.equal([<span class=\"hljs-number\">101</span>, <span class=\"hljs-number\">102</span>, <span class=\"hljs-number\">103</span>, <span class=\"hljs-number\">104</span>])<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "db1cbedb-2694-4c03-b3d7-350d9b2acd79",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should be able to PULL multiple values(object property) from array while updating object",
                    "fullTitle": "Object update operations PUSH-PULL should be able to PULL multiple values(object property) from array while updating object",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"201\"</span>, <span class=\"hljs-string\">\"202\"</span>, <span class=\"hljs-string\">\"203\"</span>, <span class=\"hljs-string\">\"204\"</span>, <span class=\"hljs-string\">\"205\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest2\"</span><br>\t\t}<br>\t}<br>}))<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-number\">201</span>, <span class=\"hljs-number\">202</span>, <span class=\"hljs-number\">203</span>, <span class=\"hljs-number\">204</span>, <span class=\"hljs-number\">205</span>]<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))\t<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.roundone.hits.should.be.deep.equal([])<br>\t<span class=\"hljs-comment\">// object.roundone.hits[1].should.be.not.equal([3])</span><br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "d7d15a0b-8cd5-4bab-a48c-e9580dfea9d1",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message for data key for PULL operation",
                    "fullTitle": "Object update operations PUSH-PULL should provide an error message for data key for PULL operation",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone.hits\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "4fe47442-817f-4f82-a800-7216c8758867",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message if index specified for PULL operation ",
                    "fullTitle": "Object update operations PUSH-PULL should provide an error message if index specified for PULL operation ",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"401\"</span>, <span class=\"hljs-string\">\"402\"</span>, <span class=\"hljs-string\">\"403\"</span>, <span class=\"hljs-string\">\"404\"</span>, <span class=\"hljs-string\">\"405\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest3\"</span><br>\t\t}<br>\t}<br>}))<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone.hits\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "05735838-c02b-41e4-a74b-2eb4f4e94aac",
                    "parentUUID": "98133164-deef-44d9-a1a5-8b53e83ee3e5",
                    "skipped": true
                  }
                ],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 13,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 1,
                "totalSkipped": 12,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": true,
                "hasSkipped": true,
                "duration": 0
              },
              {
                "title": "UPDATE on group(array) field",
                "suites": [],
                "tests": [
                  {
                    "title": "should provide an error message for -ve index in UPDATE operation",
                    "fullTitle": "Object update operations UPDATE on group(array) field should provide an error message for -ve index in UPDATE operation",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">55000</span>)<br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"201\"</span>, <span class=\"hljs-string\">\"202\"</span>, <span class=\"hljs-string\">\"203\"</span>, <span class=\"hljs-string\">\"204\"</span>, <span class=\"hljs-string\">\"205\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest122\"</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// console.log(objUid)</span><br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">9999</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: -<span class=\"hljs-number\">1</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "cc6fa5ae-5f80-4a85-9ade-1202bc6f3d63",
                    "parentUUID": "0b98cfed-b412-49eb-9cc6-8cd9510aa150",
                    "skipped": true
                  },
                  {
                    "title": "should be able to update the given value(object property) at provided index",
                    "fullTitle": "Object update operations UPDATE on group(array) field should be able to update the given value(object property) at provided index",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">35000</span>)<br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"201\"</span>, <span class=\"hljs-string\">\"202\"</span>, <span class=\"hljs-string\">\"203\"</span>, <span class=\"hljs-string\">\"204\"</span>, <span class=\"hljs-string\">\"205\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest12\"</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">9999</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "92f84df4-27a1-432f-8b45-a288ae708429",
                    "parentUUID": "0b98cfed-b412-49eb-9cc6-8cd9510aa150",
                    "skipped": true
                  },
                  {
                    "title": "should be able to update then value(dot property) at provided index",
                    "fullTitle": "Object update operations UPDATE on group(array) field should be able to update then value(dot property) at provided index",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">40000</span>)<br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"501\"</span>, <span class=\"hljs-string\">\"502\"</span>, <span class=\"hljs-string\">\"503\"</span>, <span class=\"hljs-string\">\"504\"</span>, <span class=\"hljs-string\">\"505\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest22\"</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"UPDATE\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"666\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.roundone.hits[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">666</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "b4a940b7-3102-4ed2-82bc-919fc7dbb603",
                    "parentUUID": "0b98cfed-b412-49eb-9cc6-8cd9510aa150",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message for multiple values(object property) PUSH on same object",
                    "fullTitle": "Object update operations UPDATE on group(array) field should provide an error message for multiple values(object property) PUSH on same object",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object1.uid<br><br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass8.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"UPDATE\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"marks\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-number\">502</span>, <span class=\"hljs-number\">503</span>]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t},<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"subject\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"list\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-string\">\"ENG\"</span>]<br>\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"group.0.subject\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "c6deadcc-8e00-45dd-94d1-a53090d1b756",
                    "parentUUID": "0b98cfed-b412-49eb-9cc6-8cd9510aa150",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message for multiple values(dot property) PUSH on same object",
                    "fullTitle": "Object update operations UPDATE on group(array) field should provide an error message for multiple values(dot property) PUSH on same object",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">25000</span>)<br><span class=\"hljs-keyword\">var</span> objUid = object1.uid<br><br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass8.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"group\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"UPDATE\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"marks\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-number\">99</span>, <span class=\"hljs-number\">98</span>]<br>\t\t\t\t\t\t}<br>\t\t\t\t\t},<br>\t\t\t\t\t<span class=\"hljs-string\">\"subject.0.list\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-string\">\"FRN\"</span>]<br>\t\t\t\t\t\t},<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"subject.0.list\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-string\">\"PHY\"</span>]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object.group[<span class=\"hljs-number\">0</span>]<br>\tobject.marks[<span class=\"hljs-number\">4</span>].should.be.equal(<span class=\"hljs-number\">99</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "4c7179e5-b20d-427d-b903-35e199b1e819",
                    "parentUUID": "0b98cfed-b412-49eb-9cc6-8cd9510aa150",
                    "skipped": true
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 95000,
                "file": "/test.js",
                "uuid": "0b98cfed-b412-49eb-9cc6-8cd9510aa150",
                "fullFile": "/home/ss/Documents/backend/test.js",
                "passes": [],
                "failures": [],
                "skipped": [
                  {
                    "title": "should provide an error message for -ve index in UPDATE operation",
                    "fullTitle": "Object update operations UPDATE on group(array) field should provide an error message for -ve index in UPDATE operation",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">55000</span>)<br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"201\"</span>, <span class=\"hljs-string\">\"202\"</span>, <span class=\"hljs-string\">\"203\"</span>, <span class=\"hljs-string\">\"204\"</span>, <span class=\"hljs-string\">\"205\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest122\"</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// console.log(objUid)</span><br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">9999</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: -<span class=\"hljs-number\">1</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "cc6fa5ae-5f80-4a85-9ade-1202bc6f3d63",
                    "parentUUID": "0b98cfed-b412-49eb-9cc6-8cd9510aa150",
                    "skipped": true
                  },
                  {
                    "title": "should be able to update the given value(object property) at provided index",
                    "fullTitle": "Object update operations UPDATE on group(array) field should be able to update the given value(object property) at provided index",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">35000</span>)<br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"201\"</span>, <span class=\"hljs-string\">\"202\"</span>, <span class=\"hljs-string\">\"203\"</span>, <span class=\"hljs-string\">\"204\"</span>, <span class=\"hljs-string\">\"205\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest12\"</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">9999</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "92f84df4-27a1-432f-8b45-a288ae708429",
                    "parentUUID": "0b98cfed-b412-49eb-9cc6-8cd9510aa150",
                    "skipped": true
                  },
                  {
                    "title": "should be able to update then value(dot property) at provided index",
                    "fullTitle": "Object update operations UPDATE on group(array) field should be able to update then value(dot property) at provided index",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">40000</span>)<br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"501\"</span>, <span class=\"hljs-string\">\"502\"</span>, <span class=\"hljs-string\">\"503\"</span>, <span class=\"hljs-string\">\"504\"</span>, <span class=\"hljs-string\">\"505\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest22\"</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"UPDATE\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"666\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.roundone.hits[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">666</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "b4a940b7-3102-4ed2-82bc-919fc7dbb603",
                    "parentUUID": "0b98cfed-b412-49eb-9cc6-8cd9510aa150",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message for multiple values(object property) PUSH on same object",
                    "fullTitle": "Object update operations UPDATE on group(array) field should provide an error message for multiple values(object property) PUSH on same object",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object1.uid<br><br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass8.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"UPDATE\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"marks\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-number\">502</span>, <span class=\"hljs-number\">503</span>]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t},<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"subject\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"list\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-string\">\"ENG\"</span>]<br>\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"group.0.subject\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "c6deadcc-8e00-45dd-94d1-a53090d1b756",
                    "parentUUID": "0b98cfed-b412-49eb-9cc6-8cd9510aa150",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message for multiple values(dot property) PUSH on same object",
                    "fullTitle": "Object update operations UPDATE on group(array) field should provide an error message for multiple values(dot property) PUSH on same object",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">25000</span>)<br><span class=\"hljs-keyword\">var</span> objUid = object1.uid<br><br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass8.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"group\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"UPDATE\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"marks\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-number\">99</span>, <span class=\"hljs-number\">98</span>]<br>\t\t\t\t\t\t}<br>\t\t\t\t\t},<br>\t\t\t\t\t<span class=\"hljs-string\">\"subject.0.list\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-string\">\"FRN\"</span>]<br>\t\t\t\t\t\t},<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"subject.0.list\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-string\">\"PHY\"</span>]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object.group[<span class=\"hljs-number\">0</span>]<br>\tobject.marks[<span class=\"hljs-number\">4</span>].should.be.equal(<span class=\"hljs-number\">99</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "4c7179e5-b20d-427d-b903-35e199b1e819",
                    "parentUUID": "0b98cfed-b412-49eb-9cc6-8cd9510aa150",
                    "skipped": true
                  }
                ],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 5,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 5,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": true,
                "duration": 0
              },
              {
                "title": "ADD_SUB",
                "suites": [],
                "tests": [
                  {
                    "title": "should provide an error message for array field when index is not specifyed for field to ADD/SUB",
                    "fullTitle": "Object update operations ADD_SUB should provide an error message for array field when index is not specifyed for field to ADD/SUB",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_plus\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t},<br>\t\t<span class=\"hljs-string\">\"cash_minus\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">500</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"cash_plus\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "ec6c1e9e-531f-48d6-9bd0-6d6d49c85ebe",
                    "parentUUID": "96e4891c-1f2c-4468-bfa9-04018adfcd26",
                    "skipped": true
                  },
                  {
                    "title": "should be able to ADD provided number in present field in an array",
                    "fullTitle": "Object update operations ADD_SUB should be able to ADD provided number in present field in an array",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_plus.0\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.cash_plus[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">6900</span>)<br>\tobject.cash_plus[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-number\">6300</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "29175e7d-fde4-4b8b-b998-7be76baca661",
                    "parentUUID": "96e4891c-1f2c-4468-bfa9-04018adfcd26",
                    "skipped": true
                  },
                  {
                    "title": "should be able to SUB given number in present field in an array",
                    "fullTitle": "Object update operations ADD_SUB should be able to SUB given number in present field in an array",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_minus\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">500.7</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.cash_minus.should.be.equal(<span class=\"hljs-number\">8000.000000000001</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "d36dcf32-223b-4d4d-9f5d-3640dafbbbb5",
                    "parentUUID": "96e4891c-1f2c-4468-bfa9-04018adfcd26",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message for null field ADD/sub operation",
                    "fullTitle": "Object update operations ADD_SUB should provide an error message for null field ADD/sub operation",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": true,
                    "code": "",
                    "isRoot": false,
                    "uuid": "3752f692-84af-4394-8312-1b020de0b894",
                    "parentUUID": "96e4891c-1f2c-4468-bfa9-04018adfcd26",
                    "skipped": false
                  },
                  {
                    "title": "should be able to ADD given number to number field present inside the group",
                    "fullTitle": "Object update operations ADD_SUB should be able to ADD given number to number field present inside the group",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group_cash.add_cash.0\"</span>: {<span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">50</span>}<br>\t\t}<br>\t}<br>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.group_cash.add_cash[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">102</span>)<br>\tobject.group_cash.add_cash[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-number\">75</span>)<br>\tobject.group_cash.remove_cash.should.be.equal(<span class=\"hljs-number\">264.56</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "9f4ae919-67dd-47fb-9176-002aa834b80a",
                    "parentUUID": "96e4891c-1f2c-4468-bfa9-04018adfcd26",
                    "skipped": true
                  },
                  {
                    "title": "should be able to SUB given number to number field present inside the group",
                    "fullTitle": "Object update operations ADD_SUB should be able to SUB given number to number field present inside the group",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group_cash.remove_cash\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">200</span><br>\t\t\t}<br>\t\t}<br>\t}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.group_cash.remove_cash.should.be.equal(<span class=\"hljs-number\">64.56</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "3cec22aa-bff9-445a-920d-d77477dbc932",
                    "parentUUID": "96e4891c-1f2c-4468-bfa9-04018adfcd26",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message for incorrect group field",
                    "fullTitle": "Object update operations ADD_SUB should provide an error message for incorrect group field",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">35000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"group_cash.remove_cash.0\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">264</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"parameters\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "caac8b0c-7ff1-436d-b2f2-d308ff48b94c",
                    "parentUUID": "96e4891c-1f2c-4468-bfa9-04018adfcd26",
                    "skipped": true
                  },
                  {
                    "title": "should be able to ADD given number to number field present inside the group",
                    "fullTitle": "Object update operations ADD_SUB should be able to ADD given number to number field present inside the group",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group_cash.add_cash\"</span>: {<span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">50</span>}<br>\t\t}<br>\t}<br>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"group_cash.add_cash\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "d5d8bdca-c3f1-4c1b-8366-4e568cfd31f0",
                    "parentUUID": "96e4891c-1f2c-4468-bfa9-04018adfcd26",
                    "skipped": true
                  }
                ],
                "pending": [
                  {
                    "title": "should provide an error message for null field ADD/sub operation",
                    "fullTitle": "Object update operations ADD_SUB should provide an error message for null field ADD/sub operation",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": true,
                    "code": "",
                    "isRoot": false,
                    "uuid": "3752f692-84af-4394-8312-1b020de0b894",
                    "parentUUID": "96e4891c-1f2c-4468-bfa9-04018adfcd26",
                    "skipped": false
                  }
                ],
                "root": false,
                "_timeout": 95000,
                "file": "/test.js",
                "uuid": "96e4891c-1f2c-4468-bfa9-04018adfcd26",
                "fullFile": "/home/ss/Documents/backend/test.js",
                "passes": [],
                "failures": [],
                "skipped": [
                  {
                    "title": "should provide an error message for array field when index is not specifyed for field to ADD/SUB",
                    "fullTitle": "Object update operations ADD_SUB should provide an error message for array field when index is not specifyed for field to ADD/SUB",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_plus\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t},<br>\t\t<span class=\"hljs-string\">\"cash_minus\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">500</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"cash_plus\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "ec6c1e9e-531f-48d6-9bd0-6d6d49c85ebe",
                    "parentUUID": "96e4891c-1f2c-4468-bfa9-04018adfcd26",
                    "skipped": true
                  },
                  {
                    "title": "should be able to ADD provided number in present field in an array",
                    "fullTitle": "Object update operations ADD_SUB should be able to ADD provided number in present field in an array",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_plus.0\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.cash_plus[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">6900</span>)<br>\tobject.cash_plus[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-number\">6300</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "29175e7d-fde4-4b8b-b998-7be76baca661",
                    "parentUUID": "96e4891c-1f2c-4468-bfa9-04018adfcd26",
                    "skipped": true
                  },
                  {
                    "title": "should be able to SUB given number in present field in an array",
                    "fullTitle": "Object update operations ADD_SUB should be able to SUB given number in present field in an array",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_minus\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">500.7</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.cash_minus.should.be.equal(<span class=\"hljs-number\">8000.000000000001</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "d36dcf32-223b-4d4d-9f5d-3640dafbbbb5",
                    "parentUUID": "96e4891c-1f2c-4468-bfa9-04018adfcd26",
                    "skipped": true
                  },
                  {
                    "title": "should be able to ADD given number to number field present inside the group",
                    "fullTitle": "Object update operations ADD_SUB should be able to ADD given number to number field present inside the group",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group_cash.add_cash.0\"</span>: {<span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">50</span>}<br>\t\t}<br>\t}<br>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.group_cash.add_cash[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">102</span>)<br>\tobject.group_cash.add_cash[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-number\">75</span>)<br>\tobject.group_cash.remove_cash.should.be.equal(<span class=\"hljs-number\">264.56</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "9f4ae919-67dd-47fb-9176-002aa834b80a",
                    "parentUUID": "96e4891c-1f2c-4468-bfa9-04018adfcd26",
                    "skipped": true
                  },
                  {
                    "title": "should be able to SUB given number to number field present inside the group",
                    "fullTitle": "Object update operations ADD_SUB should be able to SUB given number to number field present inside the group",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group_cash.remove_cash\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">200</span><br>\t\t\t}<br>\t\t}<br>\t}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.group_cash.remove_cash.should.be.equal(<span class=\"hljs-number\">64.56</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "3cec22aa-bff9-445a-920d-d77477dbc932",
                    "parentUUID": "96e4891c-1f2c-4468-bfa9-04018adfcd26",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message for incorrect group field",
                    "fullTitle": "Object update operations ADD_SUB should provide an error message for incorrect group field",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">35000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"group_cash.remove_cash.0\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">264</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"parameters\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "caac8b0c-7ff1-436d-b2f2-d308ff48b94c",
                    "parentUUID": "96e4891c-1f2c-4468-bfa9-04018adfcd26",
                    "skipped": true
                  },
                  {
                    "title": "should be able to ADD given number to number field present inside the group",
                    "fullTitle": "Object update operations ADD_SUB should be able to ADD given number to number field present inside the group",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group_cash.add_cash\"</span>: {<span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">50</span>}<br>\t\t}<br>\t}<br>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"group_cash.add_cash\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "d5d8bdca-c3f1-4c1b-8366-4e568cfd31f0",
                    "parentUUID": "96e4891c-1f2c-4468-bfa9-04018adfcd26",
                    "skipped": true
                  }
                ],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 8,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 1,
                "totalSkipped": 7,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": true,
                "hasSkipped": true,
                "duration": 0
              },
              {
                "title": "UPSERT",
                "suites": [],
                "tests": [
                  {
                    "title": "should be able to search and update object using UPSERT operation",
                    "fullTitle": "Object update operations UPSERT should be able to search and update object using UPSERT operation",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classInfo.uid, {<br>  <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>    <span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"pune\"</span><br>  },<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"sachin\"</span>,<br>    <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">36</span>,<br>    <span class=\"hljs-string\">\"address\"</span>: {<br>      <span class=\"hljs-string\">\"state\"</span>: <span class=\"hljs-string\">\"DL\"</span>,<br>      <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"mumbai\"</span><br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, classInfo.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\tobject.name.should.be.equal(<span class=\"hljs-string\">'sachin'</span>)<br>\tobject.address.state.should.be.equal(<span class=\"hljs-string\">'DL'</span>)<br>\tobject.address.city.should.be.equal(<span class=\"hljs-string\">'mumbai'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "0a3d9e3c-c2a8-46e0-b2ee-b43580272b3c",
                    "parentUUID": "a88586bc-c144-4293-8787-d8ec2305cca3",
                    "skipped": true
                  },
                  {
                    "title": "should be able to search and create new object if not found",
                    "fullTitle": "Object update operations UPSERT should be able to search and create new object if not found",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-comment\">// console.log(classInfo.uid)</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classInfo.uid, {<br>  <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"ooty\"</span><br>  },<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"hari\"</span>,<br>    <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">28</span>,<br>    <span class=\"hljs-string\">\"address\"</span>: {<br>      <span class=\"hljs-string\">\"state\"</span>: <span class=\"hljs-string\">\"kerala\"</span>,<br>      <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"ooty\"</span><br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.name.should.be.equal(<span class=\"hljs-string\">'hari'</span>)<br>\tobject.age.should.be.equal(<span class=\"hljs-number\">28</span>)<br>\tobject.address.state.should.be.equal(<span class=\"hljs-string\">'kerala'</span>)<br>\tobject.address.city.should.be.equal(<span class=\"hljs-string\">'ooty'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "89571541-dd87-462a-9b22-f3f61a53ef4a",
                    "parentUUID": "a88586bc-c144-4293-8787-d8ec2305cca3",
                    "skipped": true
                  },
                  {
                    "title": "should be able to update reference object using UPSERT operation",
                    "fullTitle": "Object update operations UPSERT should be able to update reference object using UPSERT operation",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-comment\">// console.log(classInfo.uid)</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classRef.uid, {<br>\t\t\t    <span class=\"hljs-string\">\"object\"</span>: {<br>\t\t        <span class=\"hljs-string\">\"owner\"</span>: [{<br>\t\t          <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>\t\t              <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"sing\"</span><br>\t\t          },<br>\t\t          <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">55</span>,<br>\t\t          <span class=\"hljs-string\">\"address.state\"</span>: <span class=\"hljs-string\">\"KT\"</span>,<br>\t\t          <span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"hampi\"</span><br>\t\t        }]<br>\t\t\t    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, classInfo.uid, {<br>\t <span class=\"hljs-string\">\"query\"</span>: {<br>\t    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"sing\"</span><br>\t  }<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "910ca8de-d4b1-4b98-af9e-f6a5e8da973e",
                    "parentUUID": "a88586bc-c144-4293-8787-d8ec2305cca3",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message for Multiple matching objects while UPSERT operation",
                    "fullTitle": "Object update operations UPSERT should provide an error message for Multiple matching objects while UPSERT operation",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-comment\">// console.log(classInfo.uid)</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classRef.uid, {<br>\t\t\t    <span class=\"hljs-string\">\"object\"</span>: {<br>\t\t        <span class=\"hljs-string\">\"owner\"</span>: [{<br>\t\t          <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>\t\t              <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"peter\"</span><br>\t\t          },<br>\t\t          <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">55</span>,<br>\t\t          <span class=\"hljs-string\">\"address.state\"</span>: <span class=\"hljs-string\">\"KT\"</span>,<br>\t\t          <span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"hampi\"</span><br>\t\t        }]<br>\t\t\t    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"owner.0.UPSERT\"</span>: [<br>\t      <span class=\"hljs-string\">\"Bummer. Upsert failed. Multiple matching objects were found.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "eec7bae1-47c4-45c8-a4fb-29c1236318d2",
                    "parentUUID": "a88586bc-c144-4293-8787-d8ec2305cca3",
                    "skipped": true
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 95000,
                "file": "/test.js",
                "uuid": "a88586bc-c144-4293-8787-d8ec2305cca3",
                "fullFile": "/home/ss/Documents/backend/test.js",
                "passes": [],
                "failures": [],
                "skipped": [
                  {
                    "title": "should be able to search and update object using UPSERT operation",
                    "fullTitle": "Object update operations UPSERT should be able to search and update object using UPSERT operation",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classInfo.uid, {<br>  <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>    <span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"pune\"</span><br>  },<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"sachin\"</span>,<br>    <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">36</span>,<br>    <span class=\"hljs-string\">\"address\"</span>: {<br>      <span class=\"hljs-string\">\"state\"</span>: <span class=\"hljs-string\">\"DL\"</span>,<br>      <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"mumbai\"</span><br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, classInfo.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\tobject.name.should.be.equal(<span class=\"hljs-string\">'sachin'</span>)<br>\tobject.address.state.should.be.equal(<span class=\"hljs-string\">'DL'</span>)<br>\tobject.address.city.should.be.equal(<span class=\"hljs-string\">'mumbai'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "0a3d9e3c-c2a8-46e0-b2ee-b43580272b3c",
                    "parentUUID": "a88586bc-c144-4293-8787-d8ec2305cca3",
                    "skipped": true
                  },
                  {
                    "title": "should be able to search and create new object if not found",
                    "fullTitle": "Object update operations UPSERT should be able to search and create new object if not found",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-comment\">// console.log(classInfo.uid)</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classInfo.uid, {<br>  <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"ooty\"</span><br>  },<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"hari\"</span>,<br>    <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">28</span>,<br>    <span class=\"hljs-string\">\"address\"</span>: {<br>      <span class=\"hljs-string\">\"state\"</span>: <span class=\"hljs-string\">\"kerala\"</span>,<br>      <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"ooty\"</span><br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.name.should.be.equal(<span class=\"hljs-string\">'hari'</span>)<br>\tobject.age.should.be.equal(<span class=\"hljs-number\">28</span>)<br>\tobject.address.state.should.be.equal(<span class=\"hljs-string\">'kerala'</span>)<br>\tobject.address.city.should.be.equal(<span class=\"hljs-string\">'ooty'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "89571541-dd87-462a-9b22-f3f61a53ef4a",
                    "parentUUID": "a88586bc-c144-4293-8787-d8ec2305cca3",
                    "skipped": true
                  },
                  {
                    "title": "should be able to update reference object using UPSERT operation",
                    "fullTitle": "Object update operations UPSERT should be able to update reference object using UPSERT operation",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-comment\">// console.log(classInfo.uid)</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classRef.uid, {<br>\t\t\t    <span class=\"hljs-string\">\"object\"</span>: {<br>\t\t        <span class=\"hljs-string\">\"owner\"</span>: [{<br>\t\t          <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>\t\t              <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"sing\"</span><br>\t\t          },<br>\t\t          <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">55</span>,<br>\t\t          <span class=\"hljs-string\">\"address.state\"</span>: <span class=\"hljs-string\">\"KT\"</span>,<br>\t\t          <span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"hampi\"</span><br>\t\t        }]<br>\t\t\t    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, classInfo.uid, {<br>\t <span class=\"hljs-string\">\"query\"</span>: {<br>\t    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"sing\"</span><br>\t  }<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "910ca8de-d4b1-4b98-af9e-f6a5e8da973e",
                    "parentUUID": "a88586bc-c144-4293-8787-d8ec2305cca3",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message for Multiple matching objects while UPSERT operation",
                    "fullTitle": "Object update operations UPSERT should provide an error message for Multiple matching objects while UPSERT operation",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-comment\">// console.log(classInfo.uid)</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classRef.uid, {<br>\t\t\t    <span class=\"hljs-string\">\"object\"</span>: {<br>\t\t        <span class=\"hljs-string\">\"owner\"</span>: [{<br>\t\t          <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>\t\t              <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"peter\"</span><br>\t\t          },<br>\t\t          <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">55</span>,<br>\t\t          <span class=\"hljs-string\">\"address.state\"</span>: <span class=\"hljs-string\">\"KT\"</span>,<br>\t\t          <span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"hampi\"</span><br>\t\t        }]<br>\t\t\t    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"owner.0.UPSERT\"</span>: [<br>\t      <span class=\"hljs-string\">\"Bummer. Upsert failed. Multiple matching objects were found.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "eec7bae1-47c4-45c8-a4fb-29c1236318d2",
                    "parentUUID": "a88586bc-c144-4293-8787-d8ec2305cca3",
                    "skipped": true
                  }
                ],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 4,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": true,
                "duration": 0
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "1687e895-cd72-4648-8ea7-2406f3be8ad1",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "Uniqueness",
            "suites": [
              {
                "title": "Localy unique",
                "suites": [],
                "tests": [
                  {
                    "title": "should be able to have only localy unique objects per system user",
                    "fullTitle": "Uniqueness Localy unique should be able to have only localy unique objects per system user",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">20000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test\"</span><br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "0f455163-dceb-4d8b-8416-b4c39737df3c",
                    "parentUUID": "5db944cc-17f3-4263-8409-ab89c8dc2957",
                    "skipped": true
                  },
                  {
                    "title": "should be able to have only localy unique objects per application user(tenant)",
                    "fullTitle": "Uniqueness Localy unique should be able to have only localy unique objects per application user(tenant)",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">45000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}, tenant1.uid))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}, tenant1.uid))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}, tenant1.uid))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "c163676d-a431-425b-b123-bc75df4c9662",
                    "parentUUID": "5db944cc-17f3-4263-8409-ab89c8dc2957",
                    "skipped": true
                  },
                  {
                    "title": "should be able to have only localy unique objects as per application user and system user",
                    "fullTitle": "Uniqueness Localy unique should be able to have only localy unique objects as per application user and system user",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">45000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, <span class=\"hljs-string\">''</span>, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, <span class=\"hljs-string\">''</span>, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser3.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}, tenant2.uid))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "fa6237c4-661b-4d75-a58e-3128f49d49c1",
                    "parentUUID": "5db944cc-17f3-4263-8409-ab89c8dc2957",
                    "skipped": true
                  },
                  {
                    "title": "should be able to have only localy unique objects as per application user in tenant",
                    "fullTitle": "Uniqueness Localy unique should be able to have only localy unique objects as per application user in tenant",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">95000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser6.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "30beb4b3-dae7-432c-886a-5d5f69e690fb",
                    "parentUUID": "5db944cc-17f3-4263-8409-ab89c8dc2957",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message for localy unique object present",
                    "fullTitle": "Uniqueness Localy unique should provide an error message for localy unique object present",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classLocal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "521cdef0-b3aa-451c-8bf4-d36c58b562a5",
                    "parentUUID": "5db944cc-17f3-4263-8409-ab89c8dc2957",
                    "skipped": true
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 95000,
                "file": "/test.js",
                "uuid": "5db944cc-17f3-4263-8409-ab89c8dc2957",
                "fullFile": "/home/ss/Documents/backend/test.js",
                "passes": [],
                "failures": [],
                "skipped": [
                  {
                    "title": "should be able to have only localy unique objects per system user",
                    "fullTitle": "Uniqueness Localy unique should be able to have only localy unique objects per system user",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">20000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test\"</span><br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "0f455163-dceb-4d8b-8416-b4c39737df3c",
                    "parentUUID": "5db944cc-17f3-4263-8409-ab89c8dc2957",
                    "skipped": true
                  },
                  {
                    "title": "should be able to have only localy unique objects per application user(tenant)",
                    "fullTitle": "Uniqueness Localy unique should be able to have only localy unique objects per application user(tenant)",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">45000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}, tenant1.uid))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}, tenant1.uid))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}, tenant1.uid))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "c163676d-a431-425b-b123-bc75df4c9662",
                    "parentUUID": "5db944cc-17f3-4263-8409-ab89c8dc2957",
                    "skipped": true
                  },
                  {
                    "title": "should be able to have only localy unique objects as per application user and system user",
                    "fullTitle": "Uniqueness Localy unique should be able to have only localy unique objects as per application user and system user",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">45000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, <span class=\"hljs-string\">''</span>, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, <span class=\"hljs-string\">''</span>, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser3.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}, tenant2.uid))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "fa6237c4-661b-4d75-a58e-3128f49d49c1",
                    "parentUUID": "5db944cc-17f3-4263-8409-ab89c8dc2957",
                    "skipped": true
                  },
                  {
                    "title": "should be able to have only localy unique objects as per application user in tenant",
                    "fullTitle": "Uniqueness Localy unique should be able to have only localy unique objects as per application user in tenant",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">95000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser6.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "30beb4b3-dae7-432c-886a-5d5f69e690fb",
                    "parentUUID": "5db944cc-17f3-4263-8409-ab89c8dc2957",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message for localy unique object present",
                    "fullTitle": "Uniqueness Localy unique should provide an error message for localy unique object present",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classLocal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "521cdef0-b3aa-451c-8bf4-d36c58b562a5",
                    "parentUUID": "5db944cc-17f3-4263-8409-ab89c8dc2957",
                    "skipped": true
                  }
                ],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 5,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 5,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": true,
                "duration": 0
              },
              {
                "title": "Global unique",
                "suites": [],
                "tests": [
                  {
                    "title": "should be able to have only globaly unique objects per user",
                    "fullTitle": "Uniqueness Global unique should be able to have only globaly unique objects per user",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">35000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, classGlobal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, <span class=\"hljs-string\">''</span>, app.api_key, classGlobal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: [<br>\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t]<br>\t\t}<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classGlobal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t\t}<br>\t}, tenant1.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classGlobal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t\t}<br>\t}, tenant1.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: [<br>\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t]<br>\t\t}<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "3eeb6689-3714-4490-bf14-5c4f49a78ce4",
                    "parentUUID": "de507d45-cd10-45cd-a3a9-affbe9545571",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message for global object already present",
                    "fullTitle": "Uniqueness Global unique should provide an error message for global object already present",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classGlobal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"swapnil\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "3b047b21-f508-4ba4-bef5-3486c18f4ab3",
                    "parentUUID": "de507d45-cd10-45cd-a3a9-affbe9545571",
                    "skipped": true
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 95000,
                "file": "/test.js",
                "uuid": "de507d45-cd10-45cd-a3a9-affbe9545571",
                "fullFile": "/home/ss/Documents/backend/test.js",
                "passes": [],
                "failures": [],
                "skipped": [
                  {
                    "title": "should be able to have only globaly unique objects per user",
                    "fullTitle": "Uniqueness Global unique should be able to have only globaly unique objects per user",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">35000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, classGlobal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, <span class=\"hljs-string\">''</span>, app.api_key, classGlobal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: [<br>\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t]<br>\t\t}<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classGlobal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t\t}<br>\t}, tenant1.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classGlobal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t\t}<br>\t}, tenant1.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: [<br>\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t]<br>\t\t}<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "3eeb6689-3714-4490-bf14-5c4f49a78ce4",
                    "parentUUID": "de507d45-cd10-45cd-a3a9-affbe9545571",
                    "skipped": true
                  },
                  {
                    "title": "should provide an error message for global object already present",
                    "fullTitle": "Uniqueness Global unique should provide an error message for global object already present",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classGlobal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"swapnil\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "3b047b21-f508-4ba4-bef5-3486c18f4ab3",
                    "parentUUID": "de507d45-cd10-45cd-a3a9-affbe9545571",
                    "skipped": true
                  }
                ],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 2,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": true,
                "duration": 0
              },
              {
                "title": "Change uniquness",
                "suites": [],
                "tests": [
                  {
                    "title": "should not be able to uniquness change local to global on class",
                    "fullTitle": "Uniqueness Change uniquness should not be able to uniquness change local to global on class",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"uniqueclass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"uniqueclass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}]<br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tclassUnique = res.body.class<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'global'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, classUnique.uid, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t}]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}))<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class updated successfully!'</span>)<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'global'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tdone()<br>\t\t\t\t\t})<br>\t\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t\t})",
                    "isRoot": false,
                    "uuid": "5286b725-e8f8-4f97-a407-e0c56b57f6d9",
                    "parentUUID": "c677bc1a-0ad4-490e-b50a-da6b7ee38aec",
                    "skipped": true
                  },
                  {
                    "title": "should be able to change uniquness local to null on class",
                    "fullTitle": "Uniqueness Change uniquness should be able to change uniquness local to null on class",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"uniqueClass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"uniqueClass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}]<br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t\tclassUnique = res.body.class<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'local'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, classUnique.uid, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t}]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}))<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class updated successfully!'</span>)<br>\t\t\t\t\t\tclassUpdated = res.body.class<br>\t\t\t\t\t\tshould.not.exist(classUpdated.schema[<span class=\"hljs-number\">0</span>].unique)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tdone()<br>\t\t\t\t\t})<br>\t\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t\t})",
                    "isRoot": false,
                    "uuid": "697a23f9-809a-46b3-9f2f-77c4bc3c845e",
                    "parentUUID": "c677bc1a-0ad4-490e-b50a-da6b7ee38aec",
                    "skipped": true
                  },
                  {
                    "title": "should be able to change uniquness global to null on class",
                    "fullTitle": "Uniqueness Change uniquness should be able to change uniquness global to null on class",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"uniqueClass2\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"uniqueClass2\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}]<br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t\tclassUnique = res.body.class<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'global'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, classUnique.uid, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t}]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}))<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class updated successfully!'</span>)<br>\t\t\t\t\t\tclassUpdated = res.body.class<br>\t\t\t\t\t\tshould.not.exist(classUpdated.schema[<span class=\"hljs-number\">0</span>].unique)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tdone()<br>\t\t\t\t\t})<br>\t\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t\t})",
                    "isRoot": false,
                    "uuid": "99f169bc-20fb-4e95-9c59-0d4f94713e93",
                    "parentUUID": "c677bc1a-0ad4-490e-b50a-da6b7ee38aec",
                    "skipped": true
                  },
                  {
                    "title": "should be able to update class with other unique fields and create objects",
                    "fullTitle": "Uniqueness Change uniquness should be able to update class with other unique fields and create objects",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">25000</span>)<br><span class=\"hljs-comment\">// grp Golbal fields local</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grpClass\"</span>,<br>\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"grpClass\"</span>,<br>\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t}<br>\t\t}, {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"group\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t},<br>\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t}<br>\t\t\t}, {<br>\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t}<br>\t\t\t}]<br>\t\t}]<br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tclassUpdate = res.body.class<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid123\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"1\"</span>, <span class=\"hljs-string\">\"2\"</span>, <span class=\"hljs-string\">\"3\"</span>]<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser6.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid123\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"3\"</span>, <span class=\"hljs-string\">\"2\"</span>, <span class=\"hljs-string\">\"1\"</span>]<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, <span class=\"hljs-string\">'built_io_application_user'</span>, {<br>\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"grpClass\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grpclass\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"inbuilt_class\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"group\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t},<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}]<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"age\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"age\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t}<br>\t\t\t\t}]<br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser6.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid456\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"4\"</span>, <span class=\"hljs-string\">\"5\"</span>, <span class=\"hljs-string\">\"6\"</span>]<br>\t\t\t\t},<br>\t\t\t\t<span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">10</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid456\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"4\"</span>, <span class=\"hljs-string\">\"5\"</span>, <span class=\"hljs-string\">\"6\"</span>]<br>\t\t\t\t},<br>\t\t\t\t<span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">10</span> <span class=\"hljs-comment\">//checking</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "1ec9250f-498b-43ff-9733-38097e9a9614",
                    "parentUUID": "c677bc1a-0ad4-490e-b50a-da6b7ee38aec",
                    "skipped": true
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 95000,
                "file": "/test.js",
                "uuid": "c677bc1a-0ad4-490e-b50a-da6b7ee38aec",
                "fullFile": "/home/ss/Documents/backend/test.js",
                "passes": [],
                "failures": [],
                "skipped": [
                  {
                    "title": "should not be able to uniquness change local to global on class",
                    "fullTitle": "Uniqueness Change uniquness should not be able to uniquness change local to global on class",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"uniqueclass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"uniqueclass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}]<br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tclassUnique = res.body.class<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'global'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, classUnique.uid, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t}]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}))<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class updated successfully!'</span>)<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'global'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tdone()<br>\t\t\t\t\t})<br>\t\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t\t})",
                    "isRoot": false,
                    "uuid": "5286b725-e8f8-4f97-a407-e0c56b57f6d9",
                    "parentUUID": "c677bc1a-0ad4-490e-b50a-da6b7ee38aec",
                    "skipped": true
                  },
                  {
                    "title": "should be able to change uniquness local to null on class",
                    "fullTitle": "Uniqueness Change uniquness should be able to change uniquness local to null on class",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"uniqueClass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"uniqueClass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}]<br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t\tclassUnique = res.body.class<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'local'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, classUnique.uid, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t}]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}))<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class updated successfully!'</span>)<br>\t\t\t\t\t\tclassUpdated = res.body.class<br>\t\t\t\t\t\tshould.not.exist(classUpdated.schema[<span class=\"hljs-number\">0</span>].unique)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tdone()<br>\t\t\t\t\t})<br>\t\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t\t})",
                    "isRoot": false,
                    "uuid": "697a23f9-809a-46b3-9f2f-77c4bc3c845e",
                    "parentUUID": "c677bc1a-0ad4-490e-b50a-da6b7ee38aec",
                    "skipped": true
                  },
                  {
                    "title": "should be able to change uniquness global to null on class",
                    "fullTitle": "Uniqueness Change uniquness should be able to change uniquness global to null on class",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"uniqueClass2\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"uniqueClass2\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}]<br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t\tclassUnique = res.body.class<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'global'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, classUnique.uid, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t}]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}))<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class updated successfully!'</span>)<br>\t\t\t\t\t\tclassUpdated = res.body.class<br>\t\t\t\t\t\tshould.not.exist(classUpdated.schema[<span class=\"hljs-number\">0</span>].unique)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tdone()<br>\t\t\t\t\t})<br>\t\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t\t})",
                    "isRoot": false,
                    "uuid": "99f169bc-20fb-4e95-9c59-0d4f94713e93",
                    "parentUUID": "c677bc1a-0ad4-490e-b50a-da6b7ee38aec",
                    "skipped": true
                  },
                  {
                    "title": "should be able to update class with other unique fields and create objects",
                    "fullTitle": "Uniqueness Change uniquness should be able to update class with other unique fields and create objects",
                    "timedOut": false,
                    "duration": 0,
                    "pass": false,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">25000</span>)<br><span class=\"hljs-comment\">// grp Golbal fields local</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grpClass\"</span>,<br>\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"grpClass\"</span>,<br>\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t}<br>\t\t}, {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"group\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t},<br>\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t}<br>\t\t\t}, {<br>\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t}<br>\t\t\t}]<br>\t\t}]<br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tclassUpdate = res.body.class<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid123\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"1\"</span>, <span class=\"hljs-string\">\"2\"</span>, <span class=\"hljs-string\">\"3\"</span>]<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser6.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid123\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"3\"</span>, <span class=\"hljs-string\">\"2\"</span>, <span class=\"hljs-string\">\"1\"</span>]<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, <span class=\"hljs-string\">'built_io_application_user'</span>, {<br>\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"grpClass\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grpclass\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"inbuilt_class\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"group\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t},<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}]<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"age\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"age\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t}<br>\t\t\t\t}]<br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser6.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid456\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"4\"</span>, <span class=\"hljs-string\">\"5\"</span>, <span class=\"hljs-string\">\"6\"</span>]<br>\t\t\t\t},<br>\t\t\t\t<span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">10</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid456\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"4\"</span>, <span class=\"hljs-string\">\"5\"</span>, <span class=\"hljs-string\">\"6\"</span>]<br>\t\t\t\t},<br>\t\t\t\t<span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">10</span> <span class=\"hljs-comment\">//checking</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "1ec9250f-498b-43ff-9733-38097e9a9614",
                    "parentUUID": "c677bc1a-0ad4-490e-b50a-da6b7ee38aec",
                    "skipped": true
                  }
                ],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 0,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 4,
                "hasPasses": false,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": true,
                "duration": 0
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "519f7df9-c5b3-4a7d-aeb7-384bd5e09862",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "System class group fields",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get application user object and check group fields present",
                "fullTitle": "Objects --- System class group fields should be able to get application user object and check group fields present",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, sys_user1.authtoken, app.api_key))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobject = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'group1'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_field1'</span>, <span class=\"hljs-string\">'g1_field2'</span>, <span class=\"hljs-string\">'g1_group1'</span>, <span class=\"hljs-string\">'g1_group2'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_field1'</span>, <span class=\"hljs-string\">'g1_g1_group1'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1.g1_g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_g1_field1'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>, <span class=\"hljs-string\">'g1_g2_group1'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>].g1_g2_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>])<br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject.group1.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"g1_field1\"</span>: <span class=\"hljs-string\">\"group 1 field 1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_field2\"</span>: <span class=\"hljs-number\">100</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_field1\"</span>: <span class=\"hljs-string\">\"group 1 group 1 field1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g1_g1_field1\"</span>: <span class=\"hljs-string\">\"group 1 group 1 group 1 field1\"</span><br>\t\t\t\t}<br>\t\t\t},<br>\t\t\t<span class=\"hljs-string\">\"g1_group2\"</span>: [{<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-number\">100</span>,<br>\t\t\t\t\t<span class=\"hljs-number\">100</span><br>\t\t\t\t],<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"abcde\"</span><br>\t\t\t\t\t]<br>\t\t\t\t}<br>\t\t\t}]<br>\t\t})<br>\t\tobject.username.should.be.equal(userObj.username)<br>\t\tobject.email.should.be.equal(userObj.email)<br>\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\tobject.uid.should.be.equal(userObj.uid)<br>\t\tobject.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject.ACL.should.be.deep.equal({})<br>\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\tobject.tags.should.be.deep.equal([])<br>\t\tshould.not.exist(object.__loc)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "7b03be09-5608-4f3b-ab0b-d5bbbd96dd30",
                "parentUUID": "df71e818-09b1-4abe-9ac1-7ed6f8b6b3bc",
                "skipped": true
              },
              {
                "title": "should update application user objects group fields present ",
                "fullTitle": "Objects --- System class group fields should update application user objects group fields present ",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, sys_user1.authtoken, app.api_key, userObj.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"group1\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 field 1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_field2\"</span>: <span class=\"hljs-string\">\"900\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 field1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 group 1 field1\"</span><br>\t\t\t\t}<br>\t\t\t},<br>\t\t\t<span class=\"hljs-string\">\"g1_group2\"</span>: [{<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-string\">\"900\"</span>, <span class=\"hljs-string\">\"900\"</span>, <span class=\"hljs-string\">\"900\"</span>],<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-string\">\"zxcvb\"</span>]<br>\t\t\t\t}<br>\t\t\t}]<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.object<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t<span class=\"hljs-comment\">// key assertion </span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'group1'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_field1'</span>, <span class=\"hljs-string\">'g1_field2'</span>, <span class=\"hljs-string\">'g1_group2'</span>, <span class=\"hljs-string\">'g1_group1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_field1'</span>, <span class=\"hljs-string\">'g1_g1_group1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1.g1_g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_g1_field1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>, <span class=\"hljs-string\">'g1_g2_group1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>].g1_g2_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>])<br>\t<span class=\"hljs-comment\">// value assertion</span><br>\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\tobject.group1.should.be.deep.equal({<br>\t\t<span class=\"hljs-string\">\"g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 field 1\"</span>,<br>\t\t<span class=\"hljs-string\">\"g1_field2\"</span>: <span class=\"hljs-number\">900</span>,<br>\t\t<span class=\"hljs-string\">\"g1_group1\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 field1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_g1_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 group 1 field1\"</span><br>\t\t\t}<br>\t\t},<br>\t\t<span class=\"hljs-string\">\"g1_group2\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-number\">900</span>, <span class=\"hljs-number\">900</span>, <span class=\"hljs-number\">900</span>],<br>\t\t\t<span class=\"hljs-string\">\"g1_g2_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-string\">\"zxcvb\"</span>]<br>\t\t\t}<br>\t\t}]<br>\t})<br>\tobject.username.should.be.equal(userObj.username)<br>\tobject.email.should.be.equal(userObj.email)<br>\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\tobject.created_by.should.be.equal(object.updated_by)<br>\tobject.created_at.should.be.not.equal(object.updated_at)<br>\tobject.uid.should.be.equal(userObj.uid)<br>\tobject.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\tobject.ACL.should.be.deep.equal({})<br>\tobject._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\tobject.tags.should.be.deep.equal([])<br>\tshould.not.exist(object.__loc)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "4f49ad2f-506f-447f-8dfd-97b98814e4aa",
                "parentUUID": "df71e818-09b1-4abe-9ac1-7ed6f8b6b3bc",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "df71e818-09b1-4abe-9ac1-7ed6f8b6b3bc",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get application user object and check group fields present",
                "fullTitle": "Objects --- System class group fields should be able to get application user object and check group fields present",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, sys_user1.authtoken, app.api_key))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobject = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'group1'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_field1'</span>, <span class=\"hljs-string\">'g1_field2'</span>, <span class=\"hljs-string\">'g1_group1'</span>, <span class=\"hljs-string\">'g1_group2'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_field1'</span>, <span class=\"hljs-string\">'g1_g1_group1'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1.g1_g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_g1_field1'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>, <span class=\"hljs-string\">'g1_g2_group1'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>].g1_g2_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>])<br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject.group1.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"g1_field1\"</span>: <span class=\"hljs-string\">\"group 1 field 1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_field2\"</span>: <span class=\"hljs-number\">100</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_field1\"</span>: <span class=\"hljs-string\">\"group 1 group 1 field1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g1_g1_field1\"</span>: <span class=\"hljs-string\">\"group 1 group 1 group 1 field1\"</span><br>\t\t\t\t}<br>\t\t\t},<br>\t\t\t<span class=\"hljs-string\">\"g1_group2\"</span>: [{<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-number\">100</span>,<br>\t\t\t\t\t<span class=\"hljs-number\">100</span><br>\t\t\t\t],<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"abcde\"</span><br>\t\t\t\t\t]<br>\t\t\t\t}<br>\t\t\t}]<br>\t\t})<br>\t\tobject.username.should.be.equal(userObj.username)<br>\t\tobject.email.should.be.equal(userObj.email)<br>\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\tobject.uid.should.be.equal(userObj.uid)<br>\t\tobject.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject.ACL.should.be.deep.equal({})<br>\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\tobject.tags.should.be.deep.equal([])<br>\t\tshould.not.exist(object.__loc)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "7b03be09-5608-4f3b-ab0b-d5bbbd96dd30",
                "parentUUID": "df71e818-09b1-4abe-9ac1-7ed6f8b6b3bc",
                "skipped": true
              },
              {
                "title": "should update application user objects group fields present ",
                "fullTitle": "Objects --- System class group fields should update application user objects group fields present ",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, sys_user1.authtoken, app.api_key, userObj.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"group1\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 field 1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_field2\"</span>: <span class=\"hljs-string\">\"900\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 field1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 group 1 field1\"</span><br>\t\t\t\t}<br>\t\t\t},<br>\t\t\t<span class=\"hljs-string\">\"g1_group2\"</span>: [{<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-string\">\"900\"</span>, <span class=\"hljs-string\">\"900\"</span>, <span class=\"hljs-string\">\"900\"</span>],<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-string\">\"zxcvb\"</span>]<br>\t\t\t\t}<br>\t\t\t}]<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.object<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t<span class=\"hljs-comment\">// key assertion </span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'group1'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_field1'</span>, <span class=\"hljs-string\">'g1_field2'</span>, <span class=\"hljs-string\">'g1_group2'</span>, <span class=\"hljs-string\">'g1_group1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_field1'</span>, <span class=\"hljs-string\">'g1_g1_group1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1.g1_g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_g1_field1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>, <span class=\"hljs-string\">'g1_g2_group1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>].g1_g2_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>])<br>\t<span class=\"hljs-comment\">// value assertion</span><br>\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\tobject.group1.should.be.deep.equal({<br>\t\t<span class=\"hljs-string\">\"g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 field 1\"</span>,<br>\t\t<span class=\"hljs-string\">\"g1_field2\"</span>: <span class=\"hljs-number\">900</span>,<br>\t\t<span class=\"hljs-string\">\"g1_group1\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 field1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_g1_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 group 1 field1\"</span><br>\t\t\t}<br>\t\t},<br>\t\t<span class=\"hljs-string\">\"g1_group2\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-number\">900</span>, <span class=\"hljs-number\">900</span>, <span class=\"hljs-number\">900</span>],<br>\t\t\t<span class=\"hljs-string\">\"g1_g2_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-string\">\"zxcvb\"</span>]<br>\t\t\t}<br>\t\t}]<br>\t})<br>\tobject.username.should.be.equal(userObj.username)<br>\tobject.email.should.be.equal(userObj.email)<br>\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\tobject.created_by.should.be.equal(object.updated_by)<br>\tobject.created_at.should.be.not.equal(object.updated_at)<br>\tobject.uid.should.be.equal(userObj.uid)<br>\tobject.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\tobject.ACL.should.be.deep.equal({})<br>\tobject._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\tobject.tags.should.be.deep.equal([])<br>\tshould.not.exist(object.__loc)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "4f49ad2f-506f-447f-8dfd-97b98814e4aa",
                "parentUUID": "df71e818-09b1-4abe-9ac1-7ed6f8b6b3bc",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "5e5ab39b-611d-465e-a268-527098120956",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "System roles --- ",
        "suites": [
          {
            "title": "Create an system roles",
            "suites": [],
            "tests": [
              {
                "title": "should be able to create a system roles for an app",
                "fullTitle": "System roles ---  Create an system roles should be able to create a system roles for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> role = res.body.system_role<br>\t\t\t<span class=\"hljs-comment\">//console.log(res.body)</span><br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(role).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(role.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was created successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\trole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\trole.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\trole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\trole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\trole.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\trole.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\trole.application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\trole.name.should.be.equal(<span class=\"hljs-string\">'role_test'</span>)<br>\t\trole.owner.should.be.equal(email)<br>\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t<span class=\"hljs-comment\">//role.application.created_at.should.be.equal(role.application.updated_at)</span><br>\t\trole.application.uid.should.be.equal(appuid)<br>\t\trole.application.name.should.be.equal(appname)<br>\t\trole.application.api_key.should.be.equal(api_key)<br>\t\trole.application.owner_uid.should.be.equal(userUID)<br>\t\trole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\trole.application.master_key.should.be.equal(master_key)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "27e5e483-65a6-46fd-817f-68a4e72796b7",
                "parentUUID": "6eddf172-c2e3-4d46-8922-5face34e2456",
                "skipped": true
              },
              {
                "title": "should provide error message for mandetory field",
                "fullTitle": "System roles ---  Create an system roles should provide error message for mandetory field",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tR.pretty(res.body)<br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. System creation failed. Please try again.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">157</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t\t    ]<br>\t\t  }<br>\t\t})<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "ad649b26-7f0d-4b56-884e-2e2cbf299e88",
                "parentUUID": "6eddf172-c2e3-4d46-8922-5face34e2456",
                "skipped": true
              },
              {
                "title": "should provide error message for unique name",
                "fullTitle": "System roles ---  Create an system roles should provide error message for unique name",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tfactories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t\t})<br>\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\tR.pretty(res.body)<br>\t\t\tres.body.should.be.deep.equal({<br>\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. System creation failed. Please try again.\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">157</span>,<br>\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t    ]<br>\t\t\t  }<br>\t\t\t})<br>\t\t\tdone(err)<br>\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "8480d011-86a5-499e-9200-b40f35e286fd",
                "parentUUID": "6eddf172-c2e3-4d46-8922-5face34e2456",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "6eddf172-c2e3-4d46-8922-5face34e2456",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to create a system roles for an app",
                "fullTitle": "System roles ---  Create an system roles should be able to create a system roles for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> role = res.body.system_role<br>\t\t\t<span class=\"hljs-comment\">//console.log(res.body)</span><br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(role).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(role.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was created successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\trole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\trole.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\trole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\trole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\trole.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\trole.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\trole.application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\trole.name.should.be.equal(<span class=\"hljs-string\">'role_test'</span>)<br>\t\trole.owner.should.be.equal(email)<br>\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t<span class=\"hljs-comment\">//role.application.created_at.should.be.equal(role.application.updated_at)</span><br>\t\trole.application.uid.should.be.equal(appuid)<br>\t\trole.application.name.should.be.equal(appname)<br>\t\trole.application.api_key.should.be.equal(api_key)<br>\t\trole.application.owner_uid.should.be.equal(userUID)<br>\t\trole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\trole.application.master_key.should.be.equal(master_key)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "27e5e483-65a6-46fd-817f-68a4e72796b7",
                "parentUUID": "6eddf172-c2e3-4d46-8922-5face34e2456",
                "skipped": true
              },
              {
                "title": "should provide error message for mandetory field",
                "fullTitle": "System roles ---  Create an system roles should provide error message for mandetory field",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tR.pretty(res.body)<br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. System creation failed. Please try again.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">157</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t\t    ]<br>\t\t  }<br>\t\t})<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "ad649b26-7f0d-4b56-884e-2e2cbf299e88",
                "parentUUID": "6eddf172-c2e3-4d46-8922-5face34e2456",
                "skipped": true
              },
              {
                "title": "should provide error message for unique name",
                "fullTitle": "System roles ---  Create an system roles should provide error message for unique name",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tfactories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t\t})<br>\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\tR.pretty(res.body)<br>\t\t\tres.body.should.be.deep.equal({<br>\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. System creation failed. Please try again.\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">157</span>,<br>\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t    ]<br>\t\t\t  }<br>\t\t\t})<br>\t\t\tdone(err)<br>\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "8480d011-86a5-499e-9200-b40f35e286fd",
                "parentUUID": "6eddf172-c2e3-4d46-8922-5face34e2456",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 3,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Get system_roles",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all system roles created for an app",
                "fullTitle": "System roles ---  Get system_roles should be able to get all system roles created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"dev manager\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> role1 = res.body.system_role.name<br>\t\tfactories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"content manager\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> role2 = res1.body.system_role.name<br>\t\t\t\tfactories.create(<span class=\"hljs-string\">'Get_system_roles'</span>, authtoken, api_key)<br>\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res3</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> allroles = res3.body.system_roles<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(allroles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(allroles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(allroles[<span class=\"hljs-number\">0</span>].application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br><br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'role_test'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].owner.should.be.equal(email)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//allroles[0].application.created_at.should.be.equal(allroles[0].application.updated_at)</span><br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.uid.should.be.equal(appuid)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.name.should.be.equal(appname)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.api_key.should.be.equal(api_key)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.owner_uid.should.be.equal(userUID)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.master_key.should.be.equal(master_key)<br>\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t})<br>\t\t\t})<br><br>\t})",
                "isRoot": false,
                "uuid": "b515d038-8df5-4147-8da6-08b90f3c65fa",
                "parentUUID": "1f7ffb81-e1bc-4ddc-bd9f-159a729c2fe0",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "1f7ffb81-e1bc-4ddc-bd9f-159a729c2fe0",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get all system roles created for an app",
                "fullTitle": "System roles ---  Get system_roles should be able to get all system roles created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"dev manager\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> role1 = res.body.system_role.name<br>\t\tfactories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"content manager\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> role2 = res1.body.system_role.name<br>\t\t\t\tfactories.create(<span class=\"hljs-string\">'Get_system_roles'</span>, authtoken, api_key)<br>\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res3</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> allroles = res3.body.system_roles<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(allroles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(allroles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(allroles[<span class=\"hljs-number\">0</span>].application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br><br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'role_test'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].owner.should.be.equal(email)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//allroles[0].application.created_at.should.be.equal(allroles[0].application.updated_at)</span><br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.uid.should.be.equal(appuid)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.name.should.be.equal(appname)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.api_key.should.be.equal(api_key)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.owner_uid.should.be.equal(userUID)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.master_key.should.be.equal(master_key)<br>\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t})<br>\t\t\t})<br><br>\t})",
                "isRoot": false,
                "uuid": "b515d038-8df5-4147-8da6-08b90f3c65fa",
                "parentUUID": "1f7ffb81-e1bc-4ddc-bd9f-159a729c2fe0",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Get single system role",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get single system_role created for an app",
                "fullTitle": "System roles ---  Get single system role should be able to get single system_role created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res.body.system_role.uid<br><br>\t\tfactories.create(<span class=\"hljs-string\">'Get_single_role'</span>, authtoken, api_key, role_uid)<br>\t\t\t<span class=\"hljs-comment\">// .expect(200)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> roleobject = res1.body.system_role<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roleobject).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roleobject).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roleobject.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\troleobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troleobject.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troleobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troleobject.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troleobject.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\troleobject.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troleobject.application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\troleobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\troleobject.owner.should.be.equal(email)<br>\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t<span class=\"hljs-comment\">//roleobject.application.created_at.should.be.equal(roleobject.application.updated_at)</span><br>\t\t\t\troleobject.application.uid.should.be.equal(appuid)<br>\t\t\t\troleobject.application.name.should.be.equal(appname)<br>\t\t\t\troleobject.application.api_key.should.be.equal(api_key)<br>\t\t\t\troleobject.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\troleobject.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\troleobject.application.master_key.should.be.equal(master_key)<br>\t\t\t\tdone(err)<br>\t\t\t});<br>\t});",
                "isRoot": false,
                "uuid": "dcde6356-7160-4796-a3a9-278df37e4d52",
                "parentUUID": "7e2b2109-78e0-4e94-b6df-bb430ec88645",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid uid for get operation",
                "fullTitle": "System roles ---  Get single system role should provide an error message for invalid uid for get operation",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_single_role'</span>, authtoken, api_key, <span class=\"hljs-string\">'asdardf'</span>)<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The system role was not found. Please try again.\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">158</span>,<br>\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t})<br>\t\tdone(err)<br>\t});",
                "isRoot": false,
                "uuid": "be292fd1-1174-4d39-b185-d06223e1e0f9",
                "parentUUID": "7e2b2109-78e0-4e94-b6df-bb430ec88645",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid authtoken",
                "fullTitle": "System roles ---  Get single system role should provide an error message for invalid authtoken",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_single_role'</span>, <span class=\"hljs-string\">'blt69cf33d54698aaeca4fd5c9a'</span>, api_key, role_uid)<br>\t<span class=\"hljs-comment\">// .expect(200)</span><br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\tdone(err)<br>\t});",
                "isRoot": false,
                "uuid": "caded283-e94e-4d1f-ac0d-b1ad7ecaa732",
                "parentUUID": "7e2b2109-78e0-4e94-b6df-bb430ec88645",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "7e2b2109-78e0-4e94-b6df-bb430ec88645",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get single system_role created for an app",
                "fullTitle": "System roles ---  Get single system role should be able to get single system_role created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res.body.system_role.uid<br><br>\t\tfactories.create(<span class=\"hljs-string\">'Get_single_role'</span>, authtoken, api_key, role_uid)<br>\t\t\t<span class=\"hljs-comment\">// .expect(200)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> roleobject = res1.body.system_role<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roleobject).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roleobject).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roleobject.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\troleobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troleobject.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troleobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troleobject.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troleobject.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\troleobject.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troleobject.application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\troleobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\troleobject.owner.should.be.equal(email)<br>\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t<span class=\"hljs-comment\">//roleobject.application.created_at.should.be.equal(roleobject.application.updated_at)</span><br>\t\t\t\troleobject.application.uid.should.be.equal(appuid)<br>\t\t\t\troleobject.application.name.should.be.equal(appname)<br>\t\t\t\troleobject.application.api_key.should.be.equal(api_key)<br>\t\t\t\troleobject.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\troleobject.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\troleobject.application.master_key.should.be.equal(master_key)<br>\t\t\t\tdone(err)<br>\t\t\t});<br>\t});",
                "isRoot": false,
                "uuid": "dcde6356-7160-4796-a3a9-278df37e4d52",
                "parentUUID": "7e2b2109-78e0-4e94-b6df-bb430ec88645",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid uid for get operation",
                "fullTitle": "System roles ---  Get single system role should provide an error message for invalid uid for get operation",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_single_role'</span>, authtoken, api_key, <span class=\"hljs-string\">'asdardf'</span>)<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The system role was not found. Please try again.\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">158</span>,<br>\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t})<br>\t\tdone(err)<br>\t});",
                "isRoot": false,
                "uuid": "be292fd1-1174-4d39-b185-d06223e1e0f9",
                "parentUUID": "7e2b2109-78e0-4e94-b6df-bb430ec88645",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid authtoken",
                "fullTitle": "System roles ---  Get single system role should provide an error message for invalid authtoken",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_single_role'</span>, <span class=\"hljs-string\">'blt69cf33d54698aaeca4fd5c9a'</span>, api_key, role_uid)<br>\t<span class=\"hljs-comment\">// .expect(200)</span><br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\tdone(err)<br>\t});",
                "isRoot": false,
                "uuid": "caded283-e94e-4d1f-ac0d-b1ad7ecaa732",
                "parentUUID": "7e2b2109-78e0-4e94-b6df-bb430ec88645",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 3,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Update system role",
            "suites": [],
            "tests": [
              {
                "title": "should be able to update system role created for an app",
                "fullTitle": "System roles ---  Update system role should be able to update system role created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"managers\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res1.body.system_role.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Update_system_role'</span>, authtoken, api_key, role_uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> updatedRole = res2.body.system_role<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was updated successfully.'</span>)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\tupdatedRole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\tupdatedRole.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tupdatedRole.name.should.be.equal(<span class=\"hljs-string\">'developers'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.equal(email)<br>\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t<span class=\"hljs-comment\">//updatedRole.application.created_at.should.be.equal(updatedRole.application.updated_at)</span><br>\t\t\t\tupdatedRole.application.uid.should.be.equal(appuid)<br>\t\t\t\tupdatedRole.application.name.should.be.equal(appname)<br>\t\t\t\tupdatedRole.application.api_key.should.be.equal(api_key)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\tupdatedRole.application.master_key.should.be.equal(master_key)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "c278a438-1120-4e98-ab25-201b4fe7de67",
                "parentUUID": "eef68f77-e5d0-4d93-9c21-6f02f6b173cb",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid uid whlie updating system roles",
                "fullTitle": "System roles ---  Update system role should provide an error message for invalid uid whlie updating system roles",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_system_role'</span>, authtoken, api_key, <span class=\"hljs-string\">'ddfbkdfkjf'</span>, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The system role was not found. Please try again.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">158</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\tdone(err)<br>\t});",
                "isRoot": false,
                "uuid": "09a75849-2b30-4481-add9-24546ee9e5e1",
                "parentUUID": "eef68f77-e5d0-4d93-9c21-6f02f6b173cb",
                "skipped": true
              },
              {
                "title": "should be able to update role as collaborator when not restricted",
                "fullTitle": "System roles ---  Update system role should be able to update role as collaborator when not restricted",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"QA_manager\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res1.body.system_role.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Update_system_role'</span>, sys_user2.authtoken, api_key, role_uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Tester\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> updatedRole = res2.body.system_role<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was updated successfully.'</span>)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\tupdatedRole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\tupdatedRole.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// updatedRole.application.master_key.should.be.a('string')</span><br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tupdatedRole.name.should.be.equal(<span class=\"hljs-string\">'Tester'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.equal(email)<br>\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t<span class=\"hljs-comment\">//updatedRole.application.created_at.should.be.equal(updatedRole.application.updated_at)</span><br>\t\t\t\tupdatedRole.application.uid.should.be.equal(appuid)<br>\t\t\t\tupdatedRole.application.name.should.be.equal(appname)<br>\t\t\t\tupdatedRole.application.api_key.should.be.equal(api_key)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\t<span class=\"hljs-comment\">// updatedRole.application.master_key.should.be.equal(master_key)</span><br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "f81f26a7-d028-4027-9531-0b8595351148",
                "parentUUID": "eef68f77-e5d0-4d93-9c21-6f02f6b173cb",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "eef68f77-e5d0-4d93-9c21-6f02f6b173cb",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to update system role created for an app",
                "fullTitle": "System roles ---  Update system role should be able to update system role created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"managers\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res1.body.system_role.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Update_system_role'</span>, authtoken, api_key, role_uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> updatedRole = res2.body.system_role<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was updated successfully.'</span>)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\tupdatedRole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\tupdatedRole.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tupdatedRole.name.should.be.equal(<span class=\"hljs-string\">'developers'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.equal(email)<br>\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t<span class=\"hljs-comment\">//updatedRole.application.created_at.should.be.equal(updatedRole.application.updated_at)</span><br>\t\t\t\tupdatedRole.application.uid.should.be.equal(appuid)<br>\t\t\t\tupdatedRole.application.name.should.be.equal(appname)<br>\t\t\t\tupdatedRole.application.api_key.should.be.equal(api_key)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\tupdatedRole.application.master_key.should.be.equal(master_key)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "c278a438-1120-4e98-ab25-201b4fe7de67",
                "parentUUID": "eef68f77-e5d0-4d93-9c21-6f02f6b173cb",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid uid whlie updating system roles",
                "fullTitle": "System roles ---  Update system role should provide an error message for invalid uid whlie updating system roles",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_system_role'</span>, authtoken, api_key, <span class=\"hljs-string\">'ddfbkdfkjf'</span>, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The system role was not found. Please try again.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">158</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\tdone(err)<br>\t});",
                "isRoot": false,
                "uuid": "09a75849-2b30-4481-add9-24546ee9e5e1",
                "parentUUID": "eef68f77-e5d0-4d93-9c21-6f02f6b173cb",
                "skipped": true
              },
              {
                "title": "should be able to update role as collaborator when not restricted",
                "fullTitle": "System roles ---  Update system role should be able to update role as collaborator when not restricted",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"QA_manager\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res1.body.system_role.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Update_system_role'</span>, sys_user2.authtoken, api_key, role_uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Tester\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> updatedRole = res2.body.system_role<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was updated successfully.'</span>)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\tupdatedRole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\tupdatedRole.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// updatedRole.application.master_key.should.be.a('string')</span><br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tupdatedRole.name.should.be.equal(<span class=\"hljs-string\">'Tester'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.equal(email)<br>\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t<span class=\"hljs-comment\">//updatedRole.application.created_at.should.be.equal(updatedRole.application.updated_at)</span><br>\t\t\t\tupdatedRole.application.uid.should.be.equal(appuid)<br>\t\t\t\tupdatedRole.application.name.should.be.equal(appname)<br>\t\t\t\tupdatedRole.application.api_key.should.be.equal(api_key)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\t<span class=\"hljs-comment\">// updatedRole.application.master_key.should.be.equal(master_key)</span><br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "f81f26a7-d028-4027-9531-0b8595351148",
                "parentUUID": "eef68f77-e5d0-4d93-9c21-6f02f6b173cb",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 3,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Delete system role",
            "suites": [],
            "tests": [
              {
                "title": "should be able to delete a system role created for an app",
                "fullTitle": "System roles ---  Delete system role should be able to delete a system role created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"clients\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res1.body.system_role.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'delete_system_role'</span>, authtoken, api_key, role_uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-comment\">//var updatedRole = res2.body.system_role</span><br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was deleted successfully.'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "27a2f8a5-80a5-47e1-a016-61504981a4d2",
                "parentUUID": "8ae0a171-fa1c-4f4d-86cd-d485a7000d0b",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid uid for delete operation",
                "fullTitle": "System roles ---  Delete system role should provide an error message for invalid uid for delete operation",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_system_role'</span>, authtoken, api_key, <span class=\"hljs-string\">'ddfbkdfkjf'</span>, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The system role was not found. Please try again.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">158</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\tdone(err)<br>\t});",
                "isRoot": false,
                "uuid": "9fc49979-16f3-4b3d-b2d3-8372faa2e74d",
                "parentUUID": "8ae0a171-fa1c-4f4d-86cd-d485a7000d0b",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "8ae0a171-fa1c-4f4d-86cd-d485a7000d0b",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to delete a system role created for an app",
                "fullTitle": "System roles ---  Delete system role should be able to delete a system role created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"clients\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res1.body.system_role.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'delete_system_role'</span>, authtoken, api_key, role_uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-comment\">//var updatedRole = res2.body.system_role</span><br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was deleted successfully.'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "27a2f8a5-80a5-47e1-a016-61504981a4d2",
                "parentUUID": "8ae0a171-fa1c-4f4d-86cd-d485a7000d0b",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid uid for delete operation",
                "fullTitle": "System roles ---  Delete system role should provide an error message for invalid uid for delete operation",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_system_role'</span>, authtoken, api_key, <span class=\"hljs-string\">'ddfbkdfkjf'</span>, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The system role was not found. Please try again.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">158</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\tdone(err)<br>\t});",
                "isRoot": false,
                "uuid": "9fc49979-16f3-4b3d-b2d3-8372faa2e74d",
                "parentUUID": "8ae0a171-fa1c-4f4d-86cd-d485a7000d0b",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "dfff1cc5-27d6-4247-bdfa-f5d0bdf356be",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Tenants new ---",
        "suites": [
          {
            "title": "Get single tenant",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get single tenant created for an app",
                "fullTitle": "Tenants new --- Get single tenant should be able to get single tenant created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_single_tenant'</span>, user.authtoken, app.api_key, myTenant.uid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> tenant = res1.body.tenant<br>\t\t\t\t\t<span class=\"hljs-comment\">// var id     = res1.body.tenant.uid</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenant).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.equal(res1.body.tenant.updated_at)<br>\t\t\t\t\ttenant.uid.should.be.equal(myTenant.uid)<br>\t\t\t\t\ttenant.name.should.be.equal(myTenant.name)<br>\t\t\t\t\ttenant.description.should.be.equal(<span class=\"hljs-string\">'supertest tenant is created by supertest'</span>)<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, tenant.uid)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "58ca656a-193e-4a47-ae0e-726b23805c98",
                "parentUUID": "1c3d656e-5085-4917-ab2b-6571fd40096d",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid tenant uid",
                "fullTitle": "Tenants new --- Get single tenant should provide an error message for invalid tenant uid",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_single_tenant'</span>, user.authtoken, app.api_key, <span class=\"hljs-string\">\"asd\"</span>)<br>\t\t\t\t.expect(<span class=\"hljs-number\">422</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Tenant was not found. Please try again.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">166</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})\t\t<br>\t\t\t\t\t<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "f0b24143-8c77-4803-a1fb-7c495b4c4750",
                "parentUUID": "1c3d656e-5085-4917-ab2b-6571fd40096d",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "1c3d656e-5085-4917-ab2b-6571fd40096d",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get single tenant created for an app",
                "fullTitle": "Tenants new --- Get single tenant should be able to get single tenant created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_single_tenant'</span>, user.authtoken, app.api_key, myTenant.uid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> tenant = res1.body.tenant<br>\t\t\t\t\t<span class=\"hljs-comment\">// var id     = res1.body.tenant.uid</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenant).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.equal(res1.body.tenant.updated_at)<br>\t\t\t\t\ttenant.uid.should.be.equal(myTenant.uid)<br>\t\t\t\t\ttenant.name.should.be.equal(myTenant.name)<br>\t\t\t\t\ttenant.description.should.be.equal(<span class=\"hljs-string\">'supertest tenant is created by supertest'</span>)<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, tenant.uid)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "58ca656a-193e-4a47-ae0e-726b23805c98",
                "parentUUID": "1c3d656e-5085-4917-ab2b-6571fd40096d",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid tenant uid",
                "fullTitle": "Tenants new --- Get single tenant should provide an error message for invalid tenant uid",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_single_tenant'</span>, user.authtoken, app.api_key, <span class=\"hljs-string\">\"asd\"</span>)<br>\t\t\t\t.expect(<span class=\"hljs-number\">422</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Tenant was not found. Please try again.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">166</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})\t\t<br>\t\t\t\t\t<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "f0b24143-8c77-4803-a1fb-7c495b4c4750",
                "parentUUID": "1c3d656e-5085-4917-ab2b-6571fd40096d",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Create tenants",
            "suites": [],
            "tests": [
              {
                "title": "should be able to create tenants for an app",
                "fullTitle": "Tenants new --- Create tenants should be able to create tenants for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tenantId   = <span class=\"hljs-string\">\"mumbai\"</span>;<br>\t\t\t<span class=\"hljs-keyword\">var</span> tenantName = <span class=\"hljs-string\">\"mumbai\"</span>;<br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: tenantId,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: tenantName,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"mumbai tenant\"</span><br>\t\t\t\t\t}<br>\t\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The tenant was created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> tenant = res.body.tenant<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id     = res.body.tenant.uid<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenant).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.equal(res.body.tenant.updated_at)<br>\t\t\t\t\ttenant.uid.should.be.equal(tenantId)<br>\t\t\t\t\ttenant.name.should.be.equal(tenantName)<br>\t\t\t\t\ttenant.description.should.be.equal(<span class=\"hljs-string\">'mumbai tenant'</span>)<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "09521774-93cd-49b2-9869-1fb8d2ba9b5b",
                "parentUUID": "7f7bd2c7-0dc8-4a04-bbde-17a7247ecb7a",
                "skipped": true
              },
              {
                "title": "should provide an error message when auto_create_tenants setting is false",
                "fullTitle": "Tenants new --- Create tenants should provide an error message when auto_create_tenants setting is false",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tenantId   = <span class=\"hljs-string\">\"virar\"</span>;<br><span class=\"hljs-keyword\">var</span> tenantName = <span class=\"hljs-string\">\"virar\"</span>;<br>factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, <span class=\"hljs-string\">''</span>, app.api_key, {<br>\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: tenantId,<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: tenantName,<br>\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"mumbai tenant\"</span><br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">401</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\t<br>\t\tdone(err)<br>\t<br>\t})",
                "isRoot": false,
                "uuid": "864fff89-7562-4b1e-9c5c-d7e239c1d63f",
                "parentUUID": "7f7bd2c7-0dc8-4a04-bbde-17a7247ecb7a",
                "skipped": true
              },
              {
                "title": "should provide an error message for unique tenant name",
                "fullTitle": "Tenants new --- Create tenants should provide an error message for unique tenant name",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Kokan tenant\"</span><br>\t\t\t\t\t}<br>\t\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"Kokan\"</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">422</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\tres1.body.should.be.deep.equal({<br>\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Tenant creation failed. Please try again.\"</span>,<br>\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">164</span>,<br>\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t\t\t\t    ]<br>\t\t\t\t\t\t\t  }<br>\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "0c1638d9-f760-4959-b4a3-e3ec9ca8b954",
                "parentUUID": "7f7bd2c7-0dc8-4a04-bbde-17a7247ecb7a",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "7f7bd2c7-0dc8-4a04-bbde-17a7247ecb7a",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to create tenants for an app",
                "fullTitle": "Tenants new --- Create tenants should be able to create tenants for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tenantId   = <span class=\"hljs-string\">\"mumbai\"</span>;<br>\t\t\t<span class=\"hljs-keyword\">var</span> tenantName = <span class=\"hljs-string\">\"mumbai\"</span>;<br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: tenantId,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: tenantName,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"mumbai tenant\"</span><br>\t\t\t\t\t}<br>\t\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The tenant was created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> tenant = res.body.tenant<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id     = res.body.tenant.uid<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenant).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.equal(res.body.tenant.updated_at)<br>\t\t\t\t\ttenant.uid.should.be.equal(tenantId)<br>\t\t\t\t\ttenant.name.should.be.equal(tenantName)<br>\t\t\t\t\ttenant.description.should.be.equal(<span class=\"hljs-string\">'mumbai tenant'</span>)<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "09521774-93cd-49b2-9869-1fb8d2ba9b5b",
                "parentUUID": "7f7bd2c7-0dc8-4a04-bbde-17a7247ecb7a",
                "skipped": true
              },
              {
                "title": "should provide an error message when auto_create_tenants setting is false",
                "fullTitle": "Tenants new --- Create tenants should provide an error message when auto_create_tenants setting is false",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tenantId   = <span class=\"hljs-string\">\"virar\"</span>;<br><span class=\"hljs-keyword\">var</span> tenantName = <span class=\"hljs-string\">\"virar\"</span>;<br>factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, <span class=\"hljs-string\">''</span>, app.api_key, {<br>\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: tenantId,<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: tenantName,<br>\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"mumbai tenant\"</span><br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">401</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\t<br>\t\tdone(err)<br>\t<br>\t})",
                "isRoot": false,
                "uuid": "864fff89-7562-4b1e-9c5c-d7e239c1d63f",
                "parentUUID": "7f7bd2c7-0dc8-4a04-bbde-17a7247ecb7a",
                "skipped": true
              },
              {
                "title": "should provide an error message for unique tenant name",
                "fullTitle": "Tenants new --- Create tenants should provide an error message for unique tenant name",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Kokan tenant\"</span><br>\t\t\t\t\t}<br>\t\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"Kokan\"</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">422</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\tres1.body.should.be.deep.equal({<br>\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Tenant creation failed. Please try again.\"</span>,<br>\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">164</span>,<br>\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t\t\t\t    ]<br>\t\t\t\t\t\t\t  }<br>\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "0c1638d9-f760-4959-b4a3-e3ec9ca8b954",
                "parentUUID": "7f7bd2c7-0dc8-4a04-bbde-17a7247ecb7a",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 3,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Update tenant",
            "suites": [],
            "tests": [
              {
                "title": "should be able to update created tenant object",
                "fullTitle": "Tenants new --- Update tenant should be able to update created tenant object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'update_tenant'</span>, user.authtoken, app.api_key, id, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Kokan tenant\"</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id1 = res1.body.tenant.uid<br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> tenant = res1.body.tenant<br>\t\t\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The tenant was updated successfully.'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenant).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\t\t\t\ttenant.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\ttenant.created_at.should.not.equal(res1.body.tenant.updated_at)<br>\t\t\t\t\t\t\ttenant.uid.should.be.equal(id)<br>\t\t\t\t\t\t\ttenant.name.should.be.equal(<span class=\"hljs-string\">'Kokan'</span>)<br>\t\t\t\t\t\t\ttenant.description.should.be.equal(<span class=\"hljs-string\">'Kokan tenant'</span>)<br>\t\t\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id1)<br>\t\t\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "84234da7-ce9e-48aa-8eae-3c8e2f2e1d66",
                "parentUUID": "acb58527-d36d-4198-9c27-01c0bbf5e79d",
                "skipped": true
              },
              {
                "title": "should provide an error message when app user updates tenant object",
                "fullTitle": "Tenants new --- Update tenant should provide an error message when app user updates tenant object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'update_tenant'</span>, appUser1.authtoken, app.api_key, id, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Kokan tenant\"</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\tres1.body.should.be.deep.equal({<br>\t\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id)<br>\t\t\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "c8b98113-1c2c-4c1e-a8da-d45efe77227b",
                "parentUUID": "acb58527-d36d-4198-9c27-01c0bbf5e79d",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "acb58527-d36d-4198-9c27-01c0bbf5e79d",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to update created tenant object",
                "fullTitle": "Tenants new --- Update tenant should be able to update created tenant object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'update_tenant'</span>, user.authtoken, app.api_key, id, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Kokan tenant\"</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id1 = res1.body.tenant.uid<br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> tenant = res1.body.tenant<br>\t\t\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The tenant was updated successfully.'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenant).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\t\t\t\ttenant.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\ttenant.created_at.should.not.equal(res1.body.tenant.updated_at)<br>\t\t\t\t\t\t\ttenant.uid.should.be.equal(id)<br>\t\t\t\t\t\t\ttenant.name.should.be.equal(<span class=\"hljs-string\">'Kokan'</span>)<br>\t\t\t\t\t\t\ttenant.description.should.be.equal(<span class=\"hljs-string\">'Kokan tenant'</span>)<br>\t\t\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id1)<br>\t\t\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "84234da7-ce9e-48aa-8eae-3c8e2f2e1d66",
                "parentUUID": "acb58527-d36d-4198-9c27-01c0bbf5e79d",
                "skipped": true
              },
              {
                "title": "should provide an error message when app user updates tenant object",
                "fullTitle": "Tenants new --- Update tenant should provide an error message when app user updates tenant object",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'update_tenant'</span>, appUser1.authtoken, app.api_key, id, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Kokan tenant\"</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\tres1.body.should.be.deep.equal({<br>\t\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id)<br>\t\t\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "c8b98113-1c2c-4c1e-a8da-d45efe77227b",
                "parentUUID": "acb58527-d36d-4198-9c27-01c0bbf5e79d",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Get all tenants",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all created tenant as a list",
                "fullTitle": "Tenants new --- Get all tenants should be able to get all created tenant as a list",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Get all tenants\"</span><br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tfactories.create(<span class=\"hljs-string\">'Get_tenants_list'</span>, user.authtoken, app.api_key)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> tenants = res2.body.tenants<br>\t\t\t\ttenants.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenants[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].created_at.should.be.equal(res2.body.tenants[<span class=\"hljs-number\">0</span>].updated_at)<br>\t\t\t\t<span class=\"hljs-comment\">// tenants[0].uid.should.be.equal('supertest')</span><br>\t\t\t\t<span class=\"hljs-comment\">// tenants[0].name.should.be.equal('supertest')</span><br>\t\t\t\t<span class=\"hljs-comment\">// tenants[0].description.should.be.equal('Get all tenants')</span><br><br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "6b986c5b-59e7-42e3-a2f9-4b89f6f2a806",
                "parentUUID": "a5b7d068-dd52-4cf0-8260-567595a691cb",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "a5b7d068-dd52-4cf0-8260-567595a691cb",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get all created tenant as a list",
                "fullTitle": "Tenants new --- Get all tenants should be able to get all created tenant as a list",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Get all tenants\"</span><br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tfactories.create(<span class=\"hljs-string\">'Get_tenants_list'</span>, user.authtoken, app.api_key)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> tenants = res2.body.tenants<br>\t\t\t\ttenants.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenants[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].created_at.should.be.equal(res2.body.tenants[<span class=\"hljs-number\">0</span>].updated_at)<br>\t\t\t\t<span class=\"hljs-comment\">// tenants[0].uid.should.be.equal('supertest')</span><br>\t\t\t\t<span class=\"hljs-comment\">// tenants[0].name.should.be.equal('supertest')</span><br>\t\t\t\t<span class=\"hljs-comment\">// tenants[0].description.should.be.equal('Get all tenants')</span><br><br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "6b986c5b-59e7-42e3-a2f9-4b89f6f2a806",
                "parentUUID": "a5b7d068-dd52-4cf0-8260-567595a691cb",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Delete tenant",
            "suites": [],
            "tests": [
              {
                "title": "should be able to delete created tenant",
                "fullTitle": "Tenants new --- Delete tenant should be able to delete created tenant",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key)<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The tenant was deleted successfully.'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t\t<br>\t});",
                "isRoot": false,
                "uuid": "43a7d00b-e520-42d2-8067-f4e06a2aa1a6",
                "parentUUID": "6d2c5c6a-fca3-42b7-bd9d-b01c58ae5110",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "6d2c5c6a-fca3-42b7-bd9d-b01c58ae5110",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to delete created tenant",
                "fullTitle": "Tenants new --- Delete tenant should be able to delete created tenant",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key)<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The tenant was deleted successfully.'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t\t<br>\t});",
                "isRoot": false,
                "uuid": "43a7d00b-e520-42d2-8067-f4e06a2aa1a6",
                "parentUUID": "6d2c5c6a-fca3-42b7-bd9d-b01c58ae5110",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "de903712-4247-4fd0-abb6-13f43e6b8a41",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Uploads --- ",
        "suites": [
          {
            "title": "Get Uploads",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all created uploads for an app",
                "fullTitle": "Uploads ---  Get Uploads should be able to get all created uploads for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_uploads'</span>, authtoken, api_key)<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\t\tuploadID = res.body.uploads[<span class=\"hljs-number\">0</span>].uid<br>\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tupload.uid.should.be.equal(uploadID)<br>\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\tupload.created_by.should.be.equal(userUID)<br>\t\tupload.updated_by.should.be.equal(userUID)<br>\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'application/json'</span>)<br><br>\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.filename.should.be.equal(uploadName)</span><br><br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "cec80d36-16f3-4009-b80b-16c37cb8bec2",
                "parentUUID": "0f304dc6-da22-4ac7-afe3-12c10f830835",
                "skipped": true
              },
              {
                "title": "should be able to get single upload created for an app",
                "fullTitle": "Uploads ---  Get Uploads should be able to get single upload created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_single_upload'</span>, authtoken, api_key, uploadUID)<br>.expect(<span class=\"hljs-number\">200</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tupload = res.body.upload<br>\tuploadID = res.body.upload.uid<br>\t<span class=\"hljs-comment\">// key assertion </span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t<span class=\"hljs-comment\">// Data assertion</span><br>\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\tupload.uid.should.be.equal(uploadID)<br>\tupload.created_at.should.be.equal(upload.updated_at)<br>\tupload.created_by.should.be.equal(upload.updated_by)<br>\tupload.created_by.should.be.equal(userUID)<br>\tupload.updated_by.should.be.equal(userUID)<br>\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br><br>\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\tupload.filename.should.be.equal(uploadName)<br><br>\tdone(err)<br>})",
                "isRoot": false,
                "uuid": "cf6a55f7-5273-4b8f-abbd-67356c99e839",
                "parentUUID": "0f304dc6-da22-4ac7-afe3-12c10f830835",
                "skipped": true
              },
              {
                "title": "should provided an error message for invalid upload uid",
                "fullTitle": "Uploads ---  Get Uploads should provided an error message for invalid upload uid",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_single_upload'</span>, authtoken, api_key, <span class=\"hljs-string\">'asdasd'</span>)<br>.expect(<span class=\"hljs-number\">404</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Oops! That file was not found.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">145</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br><br>\tdone(err)<br>})",
                "isRoot": false,
                "uuid": "9252d7c9-e5ed-417d-b1a4-f6e7ef11a812",
                "parentUUID": "0f304dc6-da22-4ac7-afe3-12c10f830835",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "0f304dc6-da22-4ac7-afe3-12c10f830835",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get all created uploads for an app",
                "fullTitle": "Uploads ---  Get Uploads should be able to get all created uploads for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_uploads'</span>, authtoken, api_key)<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\t\tuploadID = res.body.uploads[<span class=\"hljs-number\">0</span>].uid<br>\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tupload.uid.should.be.equal(uploadID)<br>\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\tupload.created_by.should.be.equal(userUID)<br>\t\tupload.updated_by.should.be.equal(userUID)<br>\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'application/json'</span>)<br><br>\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.filename.should.be.equal(uploadName)</span><br><br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "cec80d36-16f3-4009-b80b-16c37cb8bec2",
                "parentUUID": "0f304dc6-da22-4ac7-afe3-12c10f830835",
                "skipped": true
              },
              {
                "title": "should be able to get single upload created for an app",
                "fullTitle": "Uploads ---  Get Uploads should be able to get single upload created for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_single_upload'</span>, authtoken, api_key, uploadUID)<br>.expect(<span class=\"hljs-number\">200</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tupload = res.body.upload<br>\tuploadID = res.body.upload.uid<br>\t<span class=\"hljs-comment\">// key assertion </span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t<span class=\"hljs-comment\">// Data assertion</span><br>\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\tupload.uid.should.be.equal(uploadID)<br>\tupload.created_at.should.be.equal(upload.updated_at)<br>\tupload.created_by.should.be.equal(upload.updated_by)<br>\tupload.created_by.should.be.equal(userUID)<br>\tupload.updated_by.should.be.equal(userUID)<br>\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br><br>\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\tupload.filename.should.be.equal(uploadName)<br><br>\tdone(err)<br>})",
                "isRoot": false,
                "uuid": "cf6a55f7-5273-4b8f-abbd-67356c99e839",
                "parentUUID": "0f304dc6-da22-4ac7-afe3-12c10f830835",
                "skipped": true
              },
              {
                "title": "should provided an error message for invalid upload uid",
                "fullTitle": "Uploads ---  Get Uploads should provided an error message for invalid upload uid",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_single_upload'</span>, authtoken, api_key, <span class=\"hljs-string\">'asdasd'</span>)<br>.expect(<span class=\"hljs-number\">404</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Oops! That file was not found.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">145</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br><br>\tdone(err)<br>})",
                "isRoot": false,
                "uuid": "9252d7c9-e5ed-417d-b1a4-f6e7ef11a812",
                "parentUUID": "0f304dc6-da22-4ac7-afe3-12c10f830835",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 3,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Get images and videos",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all images uploaded for an app",
                "fullTitle": "Uploads ---  Get images and videos should be able to get all images uploaded for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_uploads_images'</span>, authtoken, api_key)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\t\tuploadID = res.body.uploads[<span class=\"hljs-number\">0</span>].uid<br>\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tupload.uid.should.be.equal(uploadID)<br>\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\tupload.created_by.should.be.equal(collaborator.uid)<br>\t\tupload.updated_by.should.be.equal(collaborator.uid)<br>\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br><br>\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.filename.should.be.equal(uploadName)</span><br><br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "24f78ae9-1cd3-441f-bb23-06a5b8362d23",
                "parentUUID": "146a8cf2-4cc1-4bfa-ac9e-f6844faa0f6d",
                "skipped": true
              },
              {
                "title": "should be able to get all videos uploaded for an app",
                "fullTitle": "Uploads ---  Get images and videos should be able to get all videos uploaded for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_uploads_videos'</span>, authtoken, api_key)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<br>\t\t\t\t\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.uid.should.be.equal(uploadVideo.uid)<br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'video/x-ms-wmv'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename2)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "75e1eea7-8fec-4d48-8846-fc58a2fec831",
                "parentUUID": "146a8cf2-4cc1-4bfa-ac9e-f6844faa0f6d",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "146a8cf2-4cc1-4bfa-ac9e-f6844faa0f6d",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get all images uploaded for an app",
                "fullTitle": "Uploads ---  Get images and videos should be able to get all images uploaded for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_uploads_images'</span>, authtoken, api_key)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\t\tuploadID = res.body.uploads[<span class=\"hljs-number\">0</span>].uid<br>\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tupload.uid.should.be.equal(uploadID)<br>\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\tupload.created_by.should.be.equal(collaborator.uid)<br>\t\tupload.updated_by.should.be.equal(collaborator.uid)<br>\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br><br>\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.filename.should.be.equal(uploadName)</span><br><br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "24f78ae9-1cd3-441f-bb23-06a5b8362d23",
                "parentUUID": "146a8cf2-4cc1-4bfa-ac9e-f6844faa0f6d",
                "skipped": true
              },
              {
                "title": "should be able to get all videos uploaded for an app",
                "fullTitle": "Uploads ---  Get images and videos should be able to get all videos uploaded for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_uploads_videos'</span>, authtoken, api_key)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<br>\t\t\t\t\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.uid.should.be.equal(uploadVideo.uid)<br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'video/x-ms-wmv'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename2)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "75e1eea7-8fec-4d48-8846-fc58a2fec831",
                "parentUUID": "146a8cf2-4cc1-4bfa-ac9e-f6844faa0f6d",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "create_upload",
            "suites": [],
            "tests": [
              {
                "title": "should be able to create an upload(system) for an app",
                "fullTitle": "Uploads ---  create_upload should be able to create an upload(system) for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'jpg_1.JPG'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'create_upload'</span>, authtoken, api_key, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tupload = res.body.upload<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tupload.ACL.should.to.be.deep.equal({})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "0fa21222-95af-40b4-a12b-a85876e975cb",
                "parentUUID": "38207867-4876-4453-b8b3-561b4363f8f7",
                "skipped": true
              },
              {
                "title": "should be able to create an upload(collaborator) for an app",
                "fullTitle": "Uploads ---  create_upload should be able to create an upload(collaborator) for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'jpg_2.jpg'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'create_upload'</span>, collaborator.authtoken, api_key, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tupload = res.body.upload<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(collaborator.uid)<br>\t\t\t\t\tupload.updated_by.should.be.equal(collaborator.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tupload.ACL.should.to.be.deep.equal({})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "9002cfab-1091-41da-aac1-8ec4c0db7380",
                "parentUUID": "38207867-4876-4453-b8b3-561b4363f8f7",
                "skipped": true
              },
              {
                "title": "should be able to create an upload(anonymous) for an app",
                "fullTitle": "Uploads ---  create_upload should be able to create an upload(anonymous) for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'jpg_1.JPG'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'create_upload'</span>, <span class=\"hljs-string\">''</span>, api_key, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tupload = res.body.upload<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.ACL.can.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// value assretion </span><br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tshould.not.exist(upload.created_by)<br>\t\t\t\t\tshould.not.exist(upload.updated_by)<br>\t\t\t\t\tshould.not.exist(upload.app_user_object_uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tupload.ACL.can.should.to.be.deep.equal([<span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "842bb722-73fd-4f81-b572-cdaf57f0028e",
                "parentUUID": "38207867-4876-4453-b8b3-561b4363f8f7",
                "skipped": true
              },
              {
                "title": "should be able to create an upload(application user) for an app",
                "fullTitle": "Uploads ---  create_upload should be able to create an upload(application user) for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename = <span class=\"hljs-string\">'json_1.json'</span><br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, app_user.authtoken, api_key, filename))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> upload = res.body.upload<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.ACL.can.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// value assretion </span><br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tshould.not.exist(upload.created_by)<br>\t\t\t\t\tshould.not.exist(upload.updated_by)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(app_user.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'application/json'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename)<br>\t\t\t\t\tupload.ACL.can.should.to.be.deep.equal([<span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "f9082d86-87d4-4828-8a7c-bfca93310739",
                "parentUUID": "38207867-4876-4453-b8b3-561b4363f8f7",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "38207867-4876-4453-b8b3-561b4363f8f7",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to create an upload(system) for an app",
                "fullTitle": "Uploads ---  create_upload should be able to create an upload(system) for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'jpg_1.JPG'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'create_upload'</span>, authtoken, api_key, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tupload = res.body.upload<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tupload.ACL.should.to.be.deep.equal({})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "0fa21222-95af-40b4-a12b-a85876e975cb",
                "parentUUID": "38207867-4876-4453-b8b3-561b4363f8f7",
                "skipped": true
              },
              {
                "title": "should be able to create an upload(collaborator) for an app",
                "fullTitle": "Uploads ---  create_upload should be able to create an upload(collaborator) for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'jpg_2.jpg'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'create_upload'</span>, collaborator.authtoken, api_key, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tupload = res.body.upload<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(collaborator.uid)<br>\t\t\t\t\tupload.updated_by.should.be.equal(collaborator.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tupload.ACL.should.to.be.deep.equal({})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "9002cfab-1091-41da-aac1-8ec4c0db7380",
                "parentUUID": "38207867-4876-4453-b8b3-561b4363f8f7",
                "skipped": true
              },
              {
                "title": "should be able to create an upload(anonymous) for an app",
                "fullTitle": "Uploads ---  create_upload should be able to create an upload(anonymous) for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'jpg_1.JPG'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'create_upload'</span>, <span class=\"hljs-string\">''</span>, api_key, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tupload = res.body.upload<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.ACL.can.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// value assretion </span><br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tshould.not.exist(upload.created_by)<br>\t\t\t\t\tshould.not.exist(upload.updated_by)<br>\t\t\t\t\tshould.not.exist(upload.app_user_object_uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tupload.ACL.can.should.to.be.deep.equal([<span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "842bb722-73fd-4f81-b572-cdaf57f0028e",
                "parentUUID": "38207867-4876-4453-b8b3-561b4363f8f7",
                "skipped": true
              },
              {
                "title": "should be able to create an upload(application user) for an app",
                "fullTitle": "Uploads ---  create_upload should be able to create an upload(application user) for an app",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename = <span class=\"hljs-string\">'json_1.json'</span><br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, app_user.authtoken, api_key, filename))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> upload = res.body.upload<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.ACL.can.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// value assretion </span><br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tshould.not.exist(upload.created_by)<br>\t\t\t\t\tshould.not.exist(upload.updated_by)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(app_user.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'application/json'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename)<br>\t\t\t\t\tupload.ACL.can.should.to.be.deep.equal([<span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "f9082d86-87d4-4828-8a7c-bfca93310739",
                "parentUUID": "38207867-4876-4453-b8b3-561b4363f8f7",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 4,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Uploads tags",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get a list of all tags created for an upload",
                "fullTitle": "Uploads ---  Uploads tags should be able to get a list of all tags created for an upload",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_upload_tags'</span>, authtoken, api_key)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\tres.body.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest'</span>, <span class=\"hljs-string\">'backend'</span>])<br>\tdone(err)<br>})",
                "isRoot": false,
                "uuid": "e9bb79d4-ea48-4a99-a22d-276059c9bd52",
                "parentUUID": "7fd5d1e6-6cb8-4bfc-ba3f-e2492c471ea9",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "7fd5d1e6-6cb8-4bfc-ba3f-e2492c471ea9",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get a list of all tags created for an upload",
                "fullTitle": "Uploads ---  Uploads tags should be able to get a list of all tags created for an upload",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_upload_tags'</span>, authtoken, api_key)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\tres.body.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest'</span>, <span class=\"hljs-string\">'backend'</span>])<br>\tdone(err)<br>})",
                "isRoot": false,
                "uuid": "e9bb79d4-ea48-4a99-a22d-276059c9bd52",
                "parentUUID": "7fd5d1e6-6cb8-4bfc-ba3f-e2492c471ea9",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 1,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "Update upload",
            "suites": [],
            "tests": [
              {
                "title": "should be able to update given upload object as a collaborator",
                "fullTitle": "Uploads ---  Update upload should be able to update given upload object as a collaborator",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, collaborator.authtoken, api_key, uploadUID, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File updated successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> upload = res.body.upload<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.uid.should.be.equal(uploadUID)<br>\t\t\t\t\tupload.created_at.should.be.not.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.not.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.updated_by.should.be.equal(collaborator.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'text/csv'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "5ee09c86-fa19-41be-8882-369b3ab2cbc0",
                "parentUUID": "f84a9e7a-264d-4c16-8553-f50229fc62e9",
                "skipped": true
              },
              {
                "title": "should be able to provide an error message when application user updates upload object created by sysuser",
                "fullTitle": "Uploads ---  Update upload should be able to provide an error message when application user updates upload object created by sysuser",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, api_key, uploadUID1, filename1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.error_message.should.be.equal(<span class=\"hljs-string\">'Access denied. You have insufficient permissions to perform this operation.'</span>)<br>\t\t\t\t\tres.body.error_code.should.be.equal(<span class=\"hljs-number\">162</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "6dcf5dc2-99d6-4de2-82fa-b73a16a9788f",
                "parentUUID": "f84a9e7a-264d-4c16-8553-f50229fc62e9",
                "skipped": true
              },
              {
                "title": "should be able to update upload object as a application user",
                "fullTitle": "Uploads ---  Update upload should be able to update upload object as a application user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename9 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\t<br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, api_key, uploadAppuser.uid, filename9)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File updated successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> upload = res.body.upload<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.ACL.can.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// value assretion </span><br>\t\t\t\t\tupload.created_at.should.be.not.equal(upload.updated_at)<br>\t\t\t\t\tshould.not.exist(upload.created_by)<br>\t\t\t\t\tshould.not.exist(upload.updated_by)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(app_user.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'text/csv'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename9)<br>\t\t\t\t\tupload.ACL.can.should.to.be.deep.equal([<span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "3506638a-824a-4ff5-b00a-0d9a513686a1",
                "parentUUID": "f84a9e7a-264d-4c16-8553-f50229fc62e9",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid update upload",
                "fullTitle": "Uploads ---  Update upload should provide an error message for invalid update upload",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, api_key, <span class=\"hljs-string\">'asd'</span>, filename1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">404</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Oops! That file was not found.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">145</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "84de1f8d-3ad8-4820-bc82-c68d9869de35",
                "parentUUID": "f84a9e7a-264d-4c16-8553-f50229fc62e9",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid api key for update upload",
                "fullTitle": "Uploads ---  Update upload should provide an error message for invalid api key for update upload",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, <span class=\"hljs-string\">'asdasdad'</span>, <span class=\"hljs-string\">'asd'</span>, filename1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">412</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bad news! We can't find that application. Please try again.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">109</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"api_key\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "0406607d-924d-4435-a14d-65cf7c1fee82",
                "parentUUID": "f84a9e7a-264d-4c16-8553-f50229fc62e9",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 7000,
            "file": "/test.js",
            "uuid": "f84a9e7a-264d-4c16-8553-f50229fc62e9",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to update given upload object as a collaborator",
                "fullTitle": "Uploads ---  Update upload should be able to update given upload object as a collaborator",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, collaborator.authtoken, api_key, uploadUID, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File updated successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> upload = res.body.upload<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.uid.should.be.equal(uploadUID)<br>\t\t\t\t\tupload.created_at.should.be.not.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.not.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.updated_by.should.be.equal(collaborator.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'text/csv'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "5ee09c86-fa19-41be-8882-369b3ab2cbc0",
                "parentUUID": "f84a9e7a-264d-4c16-8553-f50229fc62e9",
                "skipped": true
              },
              {
                "title": "should be able to provide an error message when application user updates upload object created by sysuser",
                "fullTitle": "Uploads ---  Update upload should be able to provide an error message when application user updates upload object created by sysuser",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, api_key, uploadUID1, filename1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.error_message.should.be.equal(<span class=\"hljs-string\">'Access denied. You have insufficient permissions to perform this operation.'</span>)<br>\t\t\t\t\tres.body.error_code.should.be.equal(<span class=\"hljs-number\">162</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "6dcf5dc2-99d6-4de2-82fa-b73a16a9788f",
                "parentUUID": "f84a9e7a-264d-4c16-8553-f50229fc62e9",
                "skipped": true
              },
              {
                "title": "should be able to update upload object as a application user",
                "fullTitle": "Uploads ---  Update upload should be able to update upload object as a application user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename9 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\t<br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, api_key, uploadAppuser.uid, filename9)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File updated successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> upload = res.body.upload<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.ACL.can.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// value assretion </span><br>\t\t\t\t\tupload.created_at.should.be.not.equal(upload.updated_at)<br>\t\t\t\t\tshould.not.exist(upload.created_by)<br>\t\t\t\t\tshould.not.exist(upload.updated_by)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(app_user.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'text/csv'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename9)<br>\t\t\t\t\tupload.ACL.can.should.to.be.deep.equal([<span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "3506638a-824a-4ff5-b00a-0d9a513686a1",
                "parentUUID": "f84a9e7a-264d-4c16-8553-f50229fc62e9",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid update upload",
                "fullTitle": "Uploads ---  Update upload should provide an error message for invalid update upload",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, api_key, <span class=\"hljs-string\">'asd'</span>, filename1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">404</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Oops! That file was not found.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">145</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "84de1f8d-3ad8-4820-bc82-c68d9869de35",
                "parentUUID": "f84a9e7a-264d-4c16-8553-f50229fc62e9",
                "skipped": true
              },
              {
                "title": "should provide an error message for invalid api key for update upload",
                "fullTitle": "Uploads ---  Update upload should provide an error message for invalid api key for update upload",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, <span class=\"hljs-string\">'asdasdad'</span>, <span class=\"hljs-string\">'asd'</span>, filename1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">412</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bad news! We can't find that application. Please try again.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">109</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"api_key\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "0406607d-924d-4435-a14d-65cf7c1fee82",
                "parentUUID": "f84a9e7a-264d-4c16-8553-f50229fc62e9",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 5,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "delete upload",
            "suites": [],
            "tests": [
              {
                "title": "should be able to delete given upload object as a collaborator",
                "fullTitle": "Uploads ---  delete upload should be able to delete given upload object as a collaborator",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, collaborator.authtoken, api_key, uploadUID)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File deleted successfully.'</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "a0419e62-c100-46fc-a693-786aabc5aa97",
                "parentUUID": "c2425e1a-5bfc-46d4-bed8-1cfddf8fc706",
                "skipped": true
              },
              {
                "title": "should be able to provide an error message when delete object(system) as a application user",
                "fullTitle": "Uploads ---  delete upload should be able to provide an error message when delete object(system) as a application user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, app_user.authtoken, api_key, uploadUID1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.error_message.should.be.equal(<span class=\"hljs-string\">'Access denied. You have insufficient permissions to perform this operation.'</span>)<br>\t\t\t\t\tres.body.error_code.should.be.equal(<span class=\"hljs-number\">162</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "2d80f051-422a-40b4-b728-6a38ea722c02",
                "parentUUID": "c2425e1a-5bfc-46d4-bed8-1cfddf8fc706",
                "skipped": true
              },
              {
                "title": "should provide error message invalid upload delete",
                "fullTitle": "Uploads ---  delete upload should provide error message invalid upload delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, app_user.authtoken, api_key, <span class=\"hljs-string\">'asd'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// .expect(200)</span><br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Oops! That file was not found.\"</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">145</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t\t    ]<br>\t\t\t\t\t\t  }<br>\t\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "ef3fd65d-11bc-4243-bb30-59174219dc90",
                "parentUUID": "c2425e1a-5bfc-46d4-bed8-1cfddf8fc706",
                "skipped": true
              },
              {
                "title": "should provide error message invalid user authtoken for upload delete",
                "fullTitle": "Uploads ---  delete upload should provide error message invalid user authtoken for upload delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, <span class=\"hljs-string\">''</span>, api_key, uploadAppuser.uid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "6253434d-bd40-42af-936e-5da54a40c9eb",
                "parentUUID": "c2425e1a-5bfc-46d4-bed8-1cfddf8fc706",
                "skipped": true
              },
              {
                "title": "should be able to delete upload object as a application user",
                "fullTitle": "Uploads ---  delete upload should be able to delete upload object as a application user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, app_user.authtoken, api_key, uploadAppuser.uid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File deleted successfully.'</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "cca99aed-db2e-4f70-8f1e-a1ede640cf21",
                "parentUUID": "c2425e1a-5bfc-46d4-bed8-1cfddf8fc706",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 15000,
            "file": "/test.js",
            "uuid": "c2425e1a-5bfc-46d4-bed8-1cfddf8fc706",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to delete given upload object as a collaborator",
                "fullTitle": "Uploads ---  delete upload should be able to delete given upload object as a collaborator",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, collaborator.authtoken, api_key, uploadUID)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File deleted successfully.'</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "a0419e62-c100-46fc-a693-786aabc5aa97",
                "parentUUID": "c2425e1a-5bfc-46d4-bed8-1cfddf8fc706",
                "skipped": true
              },
              {
                "title": "should be able to provide an error message when delete object(system) as a application user",
                "fullTitle": "Uploads ---  delete upload should be able to provide an error message when delete object(system) as a application user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, app_user.authtoken, api_key, uploadUID1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.error_message.should.be.equal(<span class=\"hljs-string\">'Access denied. You have insufficient permissions to perform this operation.'</span>)<br>\t\t\t\t\tres.body.error_code.should.be.equal(<span class=\"hljs-number\">162</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "2d80f051-422a-40b4-b728-6a38ea722c02",
                "parentUUID": "c2425e1a-5bfc-46d4-bed8-1cfddf8fc706",
                "skipped": true
              },
              {
                "title": "should provide error message invalid upload delete",
                "fullTitle": "Uploads ---  delete upload should provide error message invalid upload delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, app_user.authtoken, api_key, <span class=\"hljs-string\">'asd'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// .expect(200)</span><br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Oops! That file was not found.\"</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">145</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t\t    ]<br>\t\t\t\t\t\t  }<br>\t\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "ef3fd65d-11bc-4243-bb30-59174219dc90",
                "parentUUID": "c2425e1a-5bfc-46d4-bed8-1cfddf8fc706",
                "skipped": true
              },
              {
                "title": "should provide error message invalid user authtoken for upload delete",
                "fullTitle": "Uploads ---  delete upload should provide error message invalid user authtoken for upload delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, <span class=\"hljs-string\">''</span>, api_key, uploadAppuser.uid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "6253434d-bd40-42af-936e-5da54a40c9eb",
                "parentUUID": "c2425e1a-5bfc-46d4-bed8-1cfddf8fc706",
                "skipped": true
              },
              {
                "title": "should be able to delete upload object as a application user",
                "fullTitle": "Uploads ---  delete upload should be able to delete upload object as a application user",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, app_user.authtoken, api_key, uploadAppuser.uid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File deleted successfully.'</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "cca99aed-db2e-4f70-8f1e-a1ede640cf21",
                "parentUUID": "c2425e1a-5bfc-46d4-bed8-1cfddf8fc706",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 5,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          },
          {
            "title": "uploads default_acl",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get the default ACL set for an uploads",
                "fullTitle": "Uploads ---  uploads default_acl should be able to get the default ACL set for an uploads",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_default_acl'</span>, authtoken, api_key)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\t<span class=\"hljs-keyword\">var</span> acl = res.body.DEFAULT_ACL<br>\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t<span class=\"hljs-comment\">// data assertion</span><br>\t\tacl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tacl.others.read.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tacl.others.create.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion </span><br>\t\tacl.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tacl.others.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "393e0cce-0711-4e12-99aa-bfb76f92df1a",
                "parentUUID": "2b39c42a-9b91-470d-b863-85fa405e3663",
                "skipped": true
              },
              {
                "title": "should be able to specify a default ACL for uploads",
                "fullTitle": "Uploads ---  uploads default_acl should be able to specify a default ACL for uploads",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'set_default_acl'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"DEFAULT_ACL\"</span>: {<br>\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t},<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"anonymous\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t}],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: []<br>\t}<br>})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Default ACL updated successfully.'</span>)<br>\t\t<span class=\"hljs-keyword\">var</span> acl = res.body.DEFAULT_ACL<br>\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'users'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl.others).should.to.be.deep.equal([<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl.users[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t<span class=\"hljs-comment\">// data assertion</span><br>\t\tacl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tacl.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tacl.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion </span><br>\t\tacl.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tacl.others.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'anonymous'</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "ed4e07e3-df40-459e-8212-1ba83a7d1e89",
                "parentUUID": "2b39c42a-9b91-470d-b863-85fa405e3663",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "2b39c42a-9b91-470d-b863-85fa405e3663",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get the default ACL set for an uploads",
                "fullTitle": "Uploads ---  uploads default_acl should be able to get the default ACL set for an uploads",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_default_acl'</span>, authtoken, api_key)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\t<span class=\"hljs-keyword\">var</span> acl = res.body.DEFAULT_ACL<br>\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t<span class=\"hljs-comment\">// data assertion</span><br>\t\tacl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tacl.others.read.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tacl.others.create.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion </span><br>\t\tacl.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tacl.others.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "393e0cce-0711-4e12-99aa-bfb76f92df1a",
                "parentUUID": "2b39c42a-9b91-470d-b863-85fa405e3663",
                "skipped": true
              },
              {
                "title": "should be able to specify a default ACL for uploads",
                "fullTitle": "Uploads ---  uploads default_acl should be able to specify a default ACL for uploads",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'set_default_acl'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"DEFAULT_ACL\"</span>: {<br>\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t},<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"anonymous\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t}],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: []<br>\t}<br>})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Default ACL updated successfully.'</span>)<br>\t\t<span class=\"hljs-keyword\">var</span> acl = res.body.DEFAULT_ACL<br>\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'users'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl.others).should.to.be.deep.equal([<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl.users[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t<span class=\"hljs-comment\">// data assertion</span><br>\t\tacl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tacl.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tacl.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion </span><br>\t\tacl.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tacl.others.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'anonymous'</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "ed4e07e3-df40-459e-8212-1ba83a7d1e89",
                "parentUUID": "2b39c42a-9b91-470d-b863-85fa405e3663",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 2,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "9fe54616-1ee0-4298-9505-ac4400b58887",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 95000,
    "uuid": "f5ed2c88-17cd-4cd3-96ec-2e6d450f2ded",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should provide an error message for min value for given text field",
      "fullTitle": "Text should provide an error message for min value for given text field",
      "timedOut": false,
      "duration": 1635,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asd\"</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is less than the minimum value 5\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "d0260e04-fc5f-4219-b07f-5a325e153b06",
      "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
      "skipped": false
    },
    {
      "title": "should provide an error message for max value for given text field",
      "fullTitle": "Text should provide an error message for max value for given text field",
      "timedOut": false,
      "duration": 1621,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asdsfsdd5555\"</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is greater than the maximum value 10\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "dbe242ad-cf0a-4bdd-8709-861cbe4c6b2e",
      "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
      "skipped": false
    },
    {
      "title": "should provide an error message for mandatory value for given text field",
      "fullTitle": "Text should provide an error message for mandatory value for given text field",
      "timedOut": false,
      "duration": 1600,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "b664e3b2-ac17-4e3b-a320-3f409676a576",
      "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
      "skipped": false
    },
    {
      "title": "should provide an error message for object value for given text field",
      "fullTitle": "Text should provide an error message for object value for given text field",
      "timedOut": false,
      "duration": 1636,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: {<span class=\"hljs-string\">\"testing\"</span>: <span class=\"hljs-string\">\"backend\"</span>}\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not text\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "9f8bac60-dd75-436c-82e7-0ecb03dac382",
      "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
      "skipped": false
    },
    {
      "title": "should provide an error message for array value for given text field",
      "fullTitle": "Text should provide an error message for array value for given text field",
      "timedOut": false,
      "duration": 2810,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"testing\"</span>, <span class=\"hljs-string\">\"backend\"</span>]\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"should be a single value instead of multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "947bd540-3ff8-4c13-b87a-be6c309b853d",
      "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
      "skipped": false
    },
    {
      "title": "should provide an error message for null value for given text field",
      "fullTitle": "Text should provide an error message for null value for given text field",
      "timedOut": false,
      "duration": 2670,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-literal\">null</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "5cfa3909-0ff0-4fc5-b4df-44e25ced78b0",
      "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
      "skipped": false
    },
    {
      "title": "should provide an error message for blank array when field is mandatory",
      "fullTitle": "Text Multiple and field format  should provide an error message for blank array when field is mandatory",
      "timedOut": false,
      "duration": 1667,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: []<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "0d53302e-3210-46a3-9381-e56e2fe404ce",
      "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
      "skipped": false
    },
    {
      "title": "should provide an error message for multiple field when array is not provided",
      "fullTitle": "Text Multiple and field format  should provide an error message for multiple field when array is not provided",
      "timedOut": false,
      "duration": 1586,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asd\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "7029b333-484b-45d7-8294-cdebcda40913",
      "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
      "skipped": false
    },
    {
      "title": "should provide an error message for multiple field if blank",
      "fullTitle": "Text Multiple and field format  should provide an error message for multiple field if blank",
      "timedOut": false,
      "duration": 1557,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "34b4a9ac-5bf2-4025-83fc-92eb79ac0071",
      "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
      "skipped": false
    },
    {
      "title": "should be able to create object with valid format",
      "fullTitle": "Text Multiple and field format  should be able to create object with valid format",
      "timedOut": false,
      "duration": 2670,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>    <span class=\"hljs-string\">\"object\"</span>: {<br>        <span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"ASD\"</span>],<br>        <span class=\"hljs-string\">\"list\"</span>: [<span class=\"hljs-literal\">null</span>]<br>    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tres.body.object.textfield[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'ASD'</span>)<br>\tres.body.object.app_user_object_uid.should.be.equal(appUser1.uid)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "e72bdfc8-5a84-4859-873c-07571b1424d4",
      "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid value format for field",
      "fullTitle": "Text Multiple and field format  should provide an error message for invalid value format for field",
      "timedOut": false,
      "duration": 1734,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"asdasd\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"does not match the required format for the field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "08fb8e97-7dcd-4739-8835-dd15b3a48cb5",
      "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid value format in array field",
      "fullTitle": "Text Multiple and field format  should provide an error message for invalid value format in array field",
      "timedOut": false,
      "duration": 1637,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"ADS\"</span>, <span class=\"hljs-string\">\"asdasd\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.1\"</span>: [<br>\t      <span class=\"hljs-string\">\"does not match the required format for the field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "0e86a55d-4f64-4d23-b266-17c6382e2727",
      "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
      "skipped": false
    },
    {
      "title": "should provide an error message for object value inside array field",
      "fullTitle": "Text Multiple and field format  should provide an error message for object value inside array field",
      "timedOut": false,
      "duration": 1553,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [{<span class=\"hljs-string\">\"ASD\"</span>: <span class=\"hljs-string\">\"AD\"</span>}]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not text\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "08f5fb2d-f55a-4c5a-b428-d9da51395323",
      "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should provide an error message for min value for given text field",
      "fullTitle": "Text should provide an error message for min value for given text field",
      "timedOut": false,
      "duration": 1635,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asd\"</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is less than the minimum value 5\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "60430620-ff95-4019-91c9-fd19c5081bde",
      "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
      "skipped": false
    },
    {
      "title": "should provide an error message for max value for given text field",
      "fullTitle": "Text should provide an error message for max value for given text field",
      "timedOut": false,
      "duration": 1621,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asdsfsdd5555\"</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is greater than the maximum value 10\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "968bded5-73bd-4fff-a55c-37065ee69ed9",
      "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
      "skipped": false
    },
    {
      "title": "should provide an error message for mandatory value for given text field",
      "fullTitle": "Text should provide an error message for mandatory value for given text field",
      "timedOut": false,
      "duration": 1600,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "1a4f8502-70f5-42cc-a92b-514f72d74430",
      "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
      "skipped": false
    },
    {
      "title": "should provide an error message for object value for given text field",
      "fullTitle": "Text should provide an error message for object value for given text field",
      "timedOut": false,
      "duration": 1636,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: {<span class=\"hljs-string\">\"testing\"</span>: <span class=\"hljs-string\">\"backend\"</span>}\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not text\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "1141b7fc-16e0-4250-bc27-5966e246ff18",
      "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
      "skipped": false
    },
    {
      "title": "should provide an error message for array value for given text field",
      "fullTitle": "Text should provide an error message for array value for given text field",
      "timedOut": false,
      "duration": 2810,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"testing\"</span>, <span class=\"hljs-string\">\"backend\"</span>]\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"should be a single value instead of multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "4a5e3a7d-19f9-4f5c-9117-3eab078d5bc4",
      "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
      "skipped": false
    },
    {
      "title": "should provide an error message for null value for given text field",
      "fullTitle": "Text should provide an error message for null value for given text field",
      "timedOut": false,
      "duration": 2670,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-literal\">null</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "ea7bafdb-144d-466e-bcfe-4fdf0a1b4a22",
      "parentUUID": "b80928ed-bdbe-4314-9020-6e6e567fdc9c",
      "skipped": false
    },
    {
      "title": "should provide an error message for blank array when field is mandatory",
      "fullTitle": "Text Multiple and field format  should provide an error message for blank array when field is mandatory",
      "timedOut": false,
      "duration": 1667,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: []<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "9cdbf25e-57d0-4ab5-8c43-6a62b676aa73",
      "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
      "skipped": false
    },
    {
      "title": "should provide an error message for multiple field when array is not provided",
      "fullTitle": "Text Multiple and field format  should provide an error message for multiple field when array is not provided",
      "timedOut": false,
      "duration": 1586,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asd\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "a4d152bd-783e-4cd5-bb95-1726b782bfcb",
      "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
      "skipped": false
    },
    {
      "title": "should provide an error message for multiple field if blank",
      "fullTitle": "Text Multiple and field format  should provide an error message for multiple field if blank",
      "timedOut": false,
      "duration": 1557,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "e8872bb8-2e70-4615-ab81-005e48823ed7",
      "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
      "skipped": false
    },
    {
      "title": "should be able to create object with valid format",
      "fullTitle": "Text Multiple and field format  should be able to create object with valid format",
      "timedOut": false,
      "duration": 2670,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>    <span class=\"hljs-string\">\"object\"</span>: {<br>        <span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"ASD\"</span>],<br>        <span class=\"hljs-string\">\"list\"</span>: [<span class=\"hljs-literal\">null</span>]<br>    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tres.body.object.textfield[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'ASD'</span>)<br>\tres.body.object.app_user_object_uid.should.be.equal(appUser1.uid)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "569b3a37-8dd7-4cec-9b8e-06ead7258fd0",
      "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid value format for field",
      "fullTitle": "Text Multiple and field format  should provide an error message for invalid value format for field",
      "timedOut": false,
      "duration": 1734,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"asdasd\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"does not match the required format for the field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "6daa0539-338a-493e-89ad-33d51a3c155e",
      "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid value format in array field",
      "fullTitle": "Text Multiple and field format  should provide an error message for invalid value format in array field",
      "timedOut": false,
      "duration": 1637,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"ADS\"</span>, <span class=\"hljs-string\">\"asdasd\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.1\"</span>: [<br>\t      <span class=\"hljs-string\">\"does not match the required format for the field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "ae3b14be-20c4-444a-acf3-167c05b40332",
      "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
      "skipped": false
    },
    {
      "title": "should provide an error message for object value inside array field",
      "fullTitle": "Text Multiple and field format  should provide an error message for object value inside array field",
      "timedOut": false,
      "duration": 1553,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [{<span class=\"hljs-string\">\"ASD\"</span>: <span class=\"hljs-string\">\"AD\"</span>}]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not text\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "99d2fadb-3721-4946-9c39-bf45ecabfb64",
      "parentUUID": "3c88188c-ddbd-4bb3-b89b-d5127f2e9dd1",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}