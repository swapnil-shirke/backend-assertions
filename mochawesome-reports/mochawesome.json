{
  "reportTitle": "backend",
  "stats": {
    "suites": 104,
    "tests": 297,
    "passes": 290,
    "pending": 2,
    "failures": 5,
    "start": "2016-09-16T06:53:31.689Z",
    "end": "2016-09-16T07:15:09.556Z",
    "duration": 1297867,
    "testsRegistered": 306,
    "passPercent": 95.4,
    "pendingPercent": 0.7,
    "other": 1,
    "hasOther": true,
    "skipped": 9,
    "hasSkipped": true,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "App users ---",
        "suites": [
          {
            "title": "App user Object",
            "suites": [],
            "tests": [
              {
                "title": "should be able to create application user as an object",
                "fullTitle": "App users --- App user Object should be able to create application user as an object",
                "timedOut": false,
                "duration": 1673,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUserName,<br>    <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>  <span class=\"hljs-keyword\">var</span> object = res.body.object<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>  <span class=\"hljs-comment\">// Keys assertion</span><br>  <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'_version'</span>])<br>  <span class=\"hljs-comment\">// Data type assertion</span><br>  object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>  object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  object.ACL.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  object.ACL.others.read.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.others.update.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.others.delete.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br><br>  <span class=\"hljs-comment\">// Value assertion</span><br>  object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  object.__loc[<span class=\"hljs-number\">0</span>].should.be.equal(-<span class=\"hljs-number\">122.4431164995849</span>)<br>  object.__loc[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-number\">37.74045209829323</span>)<br>  object.username.should.be.equal(appUserName)<br>  object.email.should.be.equal(appUseremail)<br>  object.first_name.should.be.equal(<span class=\"hljs-string\">'james'</span>)<br>  object.last_name.should.be.equal(<span class=\"hljs-string\">'bond'</span>)<br>  object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>  object.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(roleId)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>  object.created_by.should.be.equal(userUID)<br>  object.updated_by.should.be.equal(object.created_by)<br>  object.created_at.should.be.equal(object.updated_at)<br><br>  object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>  object.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "d017f5e8-1605-48ba-9990-74504e17f336",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should provide an error message for mandetory fields(email)",
                "fullTitle": "App users --- App user Object should provide an error message for mandetory fields(email)",
                "timedOut": false,
                "duration": 1517,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-comment\">// \"email\": appUseremail,</span><br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"email\"</span>: [<br>        <span class=\"hljs-string\">\"is a required field\"</span><br>      ]<br>    }<br>  })<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "4ce129c6-aa3e-4512-bd70-ea34f5f94985",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should provide an error message for unique email",
                "fullTitle": "App users --- App user Object should provide an error message for unique email",
                "timedOut": false,
                "duration": 1666,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUserName,<br>    <span class=\"hljs-string\">\"email\"</span>: appUser1.email,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"email\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "b25c8355-de56-4e62-b6aa-224e3e6edd06",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should provide an error message for unique username",
                "fullTitle": "App users --- App user Object should provide an error message for unique username",
                "timedOut": false,
                "duration": 1670,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUser1.username,<br>    <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"username\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "47931c7e-59c7-4164-9028-274483bb5715",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid authtoken(app user)",
                "fullTitle": "App users --- App user Object should provide an error message for invalid authtoken(app user)",
                "timedOut": false,
                "duration": 1519,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, <span class=\"hljs-string\">'fhts2323432'</span>, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUserName,<br>    <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.expect(<span class=\"hljs-number\">401</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "1a2de595-ead3-49aa-8490-3049ccb5f557",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to get all application user objects present",
                "fullTitle": "App users --- App user Object should be able to get all application user objects present",
                "timedOut": false,
                "duration": 2594,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key)<br>        .expect(<span class=\"hljs-number\">200</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          <span class=\"hljs-keyword\">var</span> object = R.last(res.body.objects)<br>          <span class=\"hljs-comment\">// Keys assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>          <span class=\"hljs-comment\">// Data type assertion</span><br>          object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          <span class=\"hljs-comment\">// Value assertion</span><br>          object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          object.__loc.should.be.deep.equal(appUser.__loc)<br>          <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>          <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>          object.username.should.be.equal(appUser.username)<br>          object.email.should.be.equal(appUser.email)<br>          object.first_name.should.be.equal(appUser.first_name)<br>          object.last_name.should.be.equal(appUser.last_name)<br>          object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          object.created_by.should.be.equal(userUID)<br>          object.updated_by.should.be.equal(object.created_by)<br>          object.created_at.should.be.equal(object.updated_at)<br>          object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>          object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "42a63f4b-115e-4e91-a78f-5b7106e3a48e",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to get single application user object",
                "fullTitle": "App users --- App user Object should be able to get single application user object",
                "timedOut": false,
                "duration": 3814,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_object_app_user'</span>, authtoken, api_key, appUser1.uid)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          <span class=\"hljs-keyword\">var</span> object = res.body.object<br>          <span class=\"hljs-comment\">// Keys assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>          <span class=\"hljs-comment\">// Data type assertion</span><br>          object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          <span class=\"hljs-comment\">// Value assertion</span><br>          object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          object.__loc.should.be.deep.equal(appUser1.__loc)<br>          <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>          <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>          object.username.should.be.equal(appUser1.username)<br>          object.email.should.be.equal(appUser1.email)<br>          object.first_name.should.be.equal(appUser1.first_name)<br>          object.last_name.should.be.equal(appUser1.last_name)<br>          object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          object.created_by.should.be.equal(userUID)<br>          object.updated_by.should.be.equal(object.created_by)<br>          object.created_at.should.be.equal(object.updated_at)<br>          object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>          object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "fae6369e-653a-423f-bfeb-8a3885ea2a6b",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid uid",
                "fullTitle": "App users --- App user Object should provide an error message for invalid uid",
                "timedOut": false,
                "duration": 4981,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_object_app_user'</span>, authtoken, api_key, <span class=\"hljs-string\">'adafewt34vf'</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "391620e1-2543-44c8-9e99-1b5d72ca11e5",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to update application user object",
                "fullTitle": "App users --- App user Object should be able to update application user object",
                "timedOut": false,
                "duration": 2573,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, authtoken, api_key, appUser1.uid, {<br>        <span class=\"hljs-string\">\"object\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span><br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.object<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal(appUser1.__loc)<br>        <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>        <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>        object.username.should.be.equal(appUser1.username)<br>        object.email.should.be.equal(appUser1.email)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(object.created_by)<br>        object.created_at.should.be.not.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "3577644d-0517-4236-a162-ad1e9e10ba06",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid authtoken(app user) for update",
                "fullTitle": "App users --- App user Object should provide an error message for invalid authtoken(app user) for update",
                "timedOut": false,
                "duration": 1498,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, <span class=\"hljs-string\">'asdafe2323dfr445'</span>, api_key, appUser1.uid, {<br>        <span class=\"hljs-string\">\"object\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span><br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">401</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "a461c398-3ded-490e-9d47-b1411f2fb8eb",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid uid for update",
                "fullTitle": "App users --- App user Object should provide an error message for invalid uid for update",
                "timedOut": false,
                "duration": 1682,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, authtoken, api_key, <span class=\"hljs-string\">'asfa323dfgs'</span>, {<br>        <span class=\"hljs-string\">\"object\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span><br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "97f1abb3-297e-4657-8aa6-b902b26cf69e",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to search application users using query",
                "fullTitle": "App users --- App user Object should be able to search application users using query",
                "timedOut": false,
                "duration": 2018,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, { query: {<span class=\"hljs-string\">\"email\"</span>: appUser.email } })<br>        .expect(<span class=\"hljs-number\">200</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          <br>          <span class=\"hljs-keyword\">var</span> object = R.last(res.body.objects)<br>          <br>          <span class=\"hljs-comment\">// Keys assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>          <span class=\"hljs-comment\">// Data type assertion</span><br>          object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          <span class=\"hljs-comment\">// Value assertion</span><br>          object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          object.__loc.should.be.deep.equal(appUser.__loc)<br>          <br>          object.username.should.be.equal(appUser.username)<br>          object.email.should.be.equal(appUser.email)<br>          object.first_name.should.be.equal(appUser.first_name)<br>          object.last_name.should.be.equal(appUser.last_name)<br>          object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          object.created_by.should.be.equal(userUID)<br>          object.updated_by.should.be.equal(object.created_by)<br>          object.created_at.should.be.equal(object.updated_at)<br>          object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>          object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "2340cf35-290a-46d3-8a4a-4d542e56600a",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid authtoken for delete",
                "fullTitle": "App users --- App user Object should provide an error message for invalid authtoken for delete",
                "timedOut": false,
                "duration": 2201,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_object_app_user'</span>, <span class=\"hljs-string\">'asdwvf434vdfv'</span>, api_key, appUser1.uid)<br>        .expect(<span class=\"hljs-number\">401</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t})<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "eccc8b55-2716-4062-afcd-e31c50352e6b",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to delete application user object",
                "fullTitle": "App users --- App user Object should be able to delete application user object",
                "timedOut": false,
                "duration": 2496,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_object_app_user'</span>, authtoken, api_key, appUser1.uid)<br>      .expect(<span class=\"hljs-number\">200</span>)  <br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "3ab44ec8-e0d2-4141-956f-ec78caf04e98",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid uid for delete",
                "fullTitle": "App users --- App user Object should provide an error message for invalid uid for delete",
                "timedOut": false,
                "duration": 2360,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_object_app_user'</span>, authtoken, api_key, <span class=\"hljs-string\">'adf34d34d'</span>)<br>        .expect(<span class=\"hljs-number\">422</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "f629a383-a42a-4049-a156-61e1de63adaf",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to get application user objects count",
                "fullTitle": "App users --- App user Object should be able to get application user objects count",
                "timedOut": false,
                "duration": 2963,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <br>        res.body.objects.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "08a8d982-75d7-4652-86d9-cdf91b47076e",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to get application user objects includeing count",
                "fullTitle": "App users --- App user Object should be able to get application user objects includeing count",
                "timedOut": false,
                "duration": 1722,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        <span class=\"hljs-keyword\">var</span> object = R.last(res.body.objects)<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal(appUser.__loc)<br>        <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>        <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>        object.username.should.be.equal(appUser.username)<br>        object.email.should.be.equal(appUser.email)<br>        object.first_name.should.be.equal(appUser.first_name)<br>        object.last_name.should.be.equal(appUser.last_name)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(object.created_by)<br>        object.created_at.should.be.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "7c41847b-403d-4592-ae42-08d8f829bf9f",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to get application user objects using skip and count",
                "fullTitle": "App users --- App user Object should be able to get application user objects using skip and count",
                "timedOut": false,
                "duration": 4271,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.objects.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "11b72a97-4ca7-41c6-a872-028dcd5f87a0",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to get application user objects using limit and count",
                "fullTitle": "App users --- App user Object should be able to get application user objects using limit and count",
                "timedOut": false,
                "duration": 1524,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.objects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "9d3ab84b-1845-495c-9d5a-2f7d4e53f662",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to get application user objects using skip",
                "fullTitle": "App users --- App user Object should be able to get application user objects using skip",
                "timedOut": false,
                "duration": 1605,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span>,<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.objects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "42bb1abe-6221-4165-b1d5-b310fe40af14",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to get application user objects using -ve skip value",
                "fullTitle": "App users --- App user Object should be able to get application user objects using -ve skip value",
                "timedOut": false,
                "duration": 1495,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"skip\"</span>: -<span class=\"hljs-number\">2</span><br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Failed to fetch objects. Please try again with valid parameters.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"params\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"has an invalid operation.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "93ec7051-aa49-4487-948c-31974a84432e",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to get application user objects using -ve limit value",
                "fullTitle": "App users --- App user Object should be able to get application user objects using -ve limit value",
                "timedOut": false,
                "duration": 1882,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"limit\"</span>: -<span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">1</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        <span class=\"hljs-keyword\">var</span> object = res.body.objects[<span class=\"hljs-number\">0</span>]<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'_version'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal(object.__loc)<br>        <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>        <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>        object.username.should.be.equal(object.username)<br>        object.email.should.be.equal(object.email)<br>        object.first_name.should.be.equal(object.first_name)<br>        object.last_name.should.be.equal(object.last_name)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'android'</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(object.created_by)<br>        object.created_at.should.be.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">'catwoman'</span>, <span class=\"hljs-string\">'backend'</span>])<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "fba93868-6e27-41cf-b743-aa77be527401",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "59a39f17-6b55-43be-8e81-eb2fde48d638",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to create application user as an object",
                "fullTitle": "App users --- App user Object should be able to create application user as an object",
                "timedOut": false,
                "duration": 1673,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUserName,<br>    <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>  <span class=\"hljs-keyword\">var</span> object = res.body.object<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>  <span class=\"hljs-comment\">// Keys assertion</span><br>  <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'_version'</span>])<br>  <span class=\"hljs-comment\">// Data type assertion</span><br>  object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>  object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  object.ACL.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  object.ACL.others.read.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.others.update.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.others.delete.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br><br>  <span class=\"hljs-comment\">// Value assertion</span><br>  object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  object.__loc[<span class=\"hljs-number\">0</span>].should.be.equal(-<span class=\"hljs-number\">122.4431164995849</span>)<br>  object.__loc[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-number\">37.74045209829323</span>)<br>  object.username.should.be.equal(appUserName)<br>  object.email.should.be.equal(appUseremail)<br>  object.first_name.should.be.equal(<span class=\"hljs-string\">'james'</span>)<br>  object.last_name.should.be.equal(<span class=\"hljs-string\">'bond'</span>)<br>  object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>  object.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(roleId)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>  object.created_by.should.be.equal(userUID)<br>  object.updated_by.should.be.equal(object.created_by)<br>  object.created_at.should.be.equal(object.updated_at)<br><br>  object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>  object.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "d017f5e8-1605-48ba-9990-74504e17f336",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should provide an error message for mandetory fields(email)",
                "fullTitle": "App users --- App user Object should provide an error message for mandetory fields(email)",
                "timedOut": false,
                "duration": 1517,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-comment\">// \"email\": appUseremail,</span><br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"email\"</span>: [<br>        <span class=\"hljs-string\">\"is a required field\"</span><br>      ]<br>    }<br>  })<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "4ce129c6-aa3e-4512-bd70-ea34f5f94985",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should provide an error message for unique email",
                "fullTitle": "App users --- App user Object should provide an error message for unique email",
                "timedOut": false,
                "duration": 1666,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUserName,<br>    <span class=\"hljs-string\">\"email\"</span>: appUser1.email,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"email\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "b25c8355-de56-4e62-b6aa-224e3e6edd06",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should provide an error message for unique username",
                "fullTitle": "App users --- App user Object should provide an error message for unique username",
                "timedOut": false,
                "duration": 1670,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUser1.username,<br>    <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"username\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "47931c7e-59c7-4164-9028-274483bb5715",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid authtoken(app user)",
                "fullTitle": "App users --- App user Object should provide an error message for invalid authtoken(app user)",
                "timedOut": false,
                "duration": 1519,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, <span class=\"hljs-string\">'fhts2323432'</span>, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUserName,<br>    <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.expect(<span class=\"hljs-number\">401</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "1a2de595-ead3-49aa-8490-3049ccb5f557",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to get all application user objects present",
                "fullTitle": "App users --- App user Object should be able to get all application user objects present",
                "timedOut": false,
                "duration": 2594,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key)<br>        .expect(<span class=\"hljs-number\">200</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          <span class=\"hljs-keyword\">var</span> object = R.last(res.body.objects)<br>          <span class=\"hljs-comment\">// Keys assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>          <span class=\"hljs-comment\">// Data type assertion</span><br>          object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          <span class=\"hljs-comment\">// Value assertion</span><br>          object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          object.__loc.should.be.deep.equal(appUser.__loc)<br>          <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>          <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>          object.username.should.be.equal(appUser.username)<br>          object.email.should.be.equal(appUser.email)<br>          object.first_name.should.be.equal(appUser.first_name)<br>          object.last_name.should.be.equal(appUser.last_name)<br>          object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          object.created_by.should.be.equal(userUID)<br>          object.updated_by.should.be.equal(object.created_by)<br>          object.created_at.should.be.equal(object.updated_at)<br>          object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>          object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "42a63f4b-115e-4e91-a78f-5b7106e3a48e",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to get single application user object",
                "fullTitle": "App users --- App user Object should be able to get single application user object",
                "timedOut": false,
                "duration": 3814,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_object_app_user'</span>, authtoken, api_key, appUser1.uid)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          <span class=\"hljs-keyword\">var</span> object = res.body.object<br>          <span class=\"hljs-comment\">// Keys assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>          <span class=\"hljs-comment\">// Data type assertion</span><br>          object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          <span class=\"hljs-comment\">// Value assertion</span><br>          object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          object.__loc.should.be.deep.equal(appUser1.__loc)<br>          <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>          <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>          object.username.should.be.equal(appUser1.username)<br>          object.email.should.be.equal(appUser1.email)<br>          object.first_name.should.be.equal(appUser1.first_name)<br>          object.last_name.should.be.equal(appUser1.last_name)<br>          object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          object.created_by.should.be.equal(userUID)<br>          object.updated_by.should.be.equal(object.created_by)<br>          object.created_at.should.be.equal(object.updated_at)<br>          object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>          object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "fae6369e-653a-423f-bfeb-8a3885ea2a6b",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid uid",
                "fullTitle": "App users --- App user Object should provide an error message for invalid uid",
                "timedOut": false,
                "duration": 4981,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_object_app_user'</span>, authtoken, api_key, <span class=\"hljs-string\">'adafewt34vf'</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "391620e1-2543-44c8-9e99-1b5d72ca11e5",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to update application user object",
                "fullTitle": "App users --- App user Object should be able to update application user object",
                "timedOut": false,
                "duration": 2573,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, authtoken, api_key, appUser1.uid, {<br>        <span class=\"hljs-string\">\"object\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span><br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.object<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal(appUser1.__loc)<br>        <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>        <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>        object.username.should.be.equal(appUser1.username)<br>        object.email.should.be.equal(appUser1.email)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(object.created_by)<br>        object.created_at.should.be.not.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "3577644d-0517-4236-a162-ad1e9e10ba06",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid authtoken(app user) for update",
                "fullTitle": "App users --- App user Object should provide an error message for invalid authtoken(app user) for update",
                "timedOut": false,
                "duration": 1498,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, <span class=\"hljs-string\">'asdafe2323dfr445'</span>, api_key, appUser1.uid, {<br>        <span class=\"hljs-string\">\"object\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span><br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">401</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "a461c398-3ded-490e-9d47-b1411f2fb8eb",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid uid for update",
                "fullTitle": "App users --- App user Object should provide an error message for invalid uid for update",
                "timedOut": false,
                "duration": 1682,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, authtoken, api_key, <span class=\"hljs-string\">'asfa323dfgs'</span>, {<br>        <span class=\"hljs-string\">\"object\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span><br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "97f1abb3-297e-4657-8aa6-b902b26cf69e",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to search application users using query",
                "fullTitle": "App users --- App user Object should be able to search application users using query",
                "timedOut": false,
                "duration": 2018,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, { query: {<span class=\"hljs-string\">\"email\"</span>: appUser.email } })<br>        .expect(<span class=\"hljs-number\">200</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          <br>          <span class=\"hljs-keyword\">var</span> object = R.last(res.body.objects)<br>          <br>          <span class=\"hljs-comment\">// Keys assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>          <span class=\"hljs-comment\">// Data type assertion</span><br>          object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          <span class=\"hljs-comment\">// Value assertion</span><br>          object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          object.__loc.should.be.deep.equal(appUser.__loc)<br>          <br>          object.username.should.be.equal(appUser.username)<br>          object.email.should.be.equal(appUser.email)<br>          object.first_name.should.be.equal(appUser.first_name)<br>          object.last_name.should.be.equal(appUser.last_name)<br>          object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          object.created_by.should.be.equal(userUID)<br>          object.updated_by.should.be.equal(object.created_by)<br>          object.created_at.should.be.equal(object.updated_at)<br>          object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>          object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "2340cf35-290a-46d3-8a4a-4d542e56600a",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid authtoken for delete",
                "fullTitle": "App users --- App user Object should provide an error message for invalid authtoken for delete",
                "timedOut": false,
                "duration": 2201,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_object_app_user'</span>, <span class=\"hljs-string\">'asdwvf434vdfv'</span>, api_key, appUser1.uid)<br>        .expect(<span class=\"hljs-number\">401</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t})<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "eccc8b55-2716-4062-afcd-e31c50352e6b",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to delete application user object",
                "fullTitle": "App users --- App user Object should be able to delete application user object",
                "timedOut": false,
                "duration": 2496,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_object_app_user'</span>, authtoken, api_key, appUser1.uid)<br>      .expect(<span class=\"hljs-number\">200</span>)  <br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "3ab44ec8-e0d2-4141-956f-ec78caf04e98",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid uid for delete",
                "fullTitle": "App users --- App user Object should provide an error message for invalid uid for delete",
                "timedOut": false,
                "duration": 2360,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_object_app_user'</span>, authtoken, api_key, <span class=\"hljs-string\">'adf34d34d'</span>)<br>        .expect(<span class=\"hljs-number\">422</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "f629a383-a42a-4049-a156-61e1de63adaf",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to get application user objects count",
                "fullTitle": "App users --- App user Object should be able to get application user objects count",
                "timedOut": false,
                "duration": 2963,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <br>        res.body.objects.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "08a8d982-75d7-4652-86d9-cdf91b47076e",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to get application user objects includeing count",
                "fullTitle": "App users --- App user Object should be able to get application user objects includeing count",
                "timedOut": false,
                "duration": 1722,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        <span class=\"hljs-keyword\">var</span> object = R.last(res.body.objects)<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal(appUser.__loc)<br>        <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>        <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>        object.username.should.be.equal(appUser.username)<br>        object.email.should.be.equal(appUser.email)<br>        object.first_name.should.be.equal(appUser.first_name)<br>        object.last_name.should.be.equal(appUser.last_name)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(object.created_by)<br>        object.created_at.should.be.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "7c41847b-403d-4592-ae42-08d8f829bf9f",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to get application user objects using skip and count",
                "fullTitle": "App users --- App user Object should be able to get application user objects using skip and count",
                "timedOut": false,
                "duration": 4271,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.objects.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "11b72a97-4ca7-41c6-a872-028dcd5f87a0",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to get application user objects using limit and count",
                "fullTitle": "App users --- App user Object should be able to get application user objects using limit and count",
                "timedOut": false,
                "duration": 1524,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.objects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "9d3ab84b-1845-495c-9d5a-2f7d4e53f662",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to get application user objects using skip",
                "fullTitle": "App users --- App user Object should be able to get application user objects using skip",
                "timedOut": false,
                "duration": 1605,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span>,<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.objects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "42bb1abe-6221-4165-b1d5-b310fe40af14",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to get application user objects using -ve skip value",
                "fullTitle": "App users --- App user Object should be able to get application user objects using -ve skip value",
                "timedOut": false,
                "duration": 1495,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"skip\"</span>: -<span class=\"hljs-number\">2</span><br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Failed to fetch objects. Please try again with valid parameters.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"params\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"has an invalid operation.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "93ec7051-aa49-4487-948c-31974a84432e",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              },
              {
                "title": "should be able to get application user objects using -ve limit value",
                "fullTitle": "App users --- App user Object should be able to get application user objects using -ve limit value",
                "timedOut": false,
                "duration": 1882,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"limit\"</span>: -<span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">1</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        <span class=\"hljs-keyword\">var</span> object = res.body.objects[<span class=\"hljs-number\">0</span>]<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'_version'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal(object.__loc)<br>        <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>        <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>        object.username.should.be.equal(object.username)<br>        object.email.should.be.equal(object.email)<br>        object.first_name.should.be.equal(object.first_name)<br>        object.last_name.should.be.equal(object.last_name)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'android'</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(object.created_by)<br>        object.created_at.should.be.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">'catwoman'</span>, <span class=\"hljs-string\">'backend'</span>])<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "fba93868-6e27-41cf-b743-aa77be527401",
                "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 22,
            "totalPasses": 22,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 49724
          },
          {
            "title": "App users registration",
            "suites": [],
            "tests": [
              {
                "title": "should be able to register application users",
                "fullTitle": "App users --- App users registration should be able to register application users",
                "timedOut": false,
                "duration": 1953,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUserName<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.application_user<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! You have successfully registered!'</span>)<br>        <span class=\"hljs-comment\">// // Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>        <span class=\"hljs-comment\">// // Data type assertion</span><br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.active.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        should.not.exist(object.updated_by)<br>        should.not.exist(object.created_by)<br>        should.not.exist(object.__loc)<br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.email.should.be.equal(appUseremail)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'john'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'smith'</span>)<br>        object.username.should.be.equal(appUserName)<br>        object.active.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_at.should.be.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        object.tags.should.be.deep.equal([])<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "803b8f8b-f5a7-4cd9-aa57-0019140d9a7d",
                "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
                "skipped": false
              },
              {
                "title": "should provide error message for password confirmation",
                "fullTitle": "App users --- App users registration should provide error message for password confirmation",
                "timedOut": false,
                "duration": 1959,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw1234\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUserName<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't sign you up. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">192</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"password_confirmation\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"password and password_confirmation must match\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "c3c7fdf7-54cf-42ef-808f-c1417b34cecf",
                "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
                "skipped": false
              },
              {
                "title": "should provide error message for register unique username",
                "fullTitle": "App users --- App users registration should provide error message for register unique username",
                "timedOut": false,
                "duration": 1627,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUser2.username<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    \t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't sign you up. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">127</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"username\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "c36b3cc0-2776-4a58-8a40-683de8eb22e9",
                "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
                "skipped": false
              },
              {
                "title": "should provide error message for register unique email",
                "fullTitle": "App users --- App users registration should provide error message for register unique email",
                "timedOut": false,
                "duration": 1885,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUser2.email,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUserName<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    \t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't sign you up. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">127</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"email\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "30cd6b7a-13ad-4c8d-8142-14fbe1289051",
                "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
                "skipped": false
              },
              {
                "title": "should be able to update registered application user",
                "fullTitle": "App users --- App users registration should be able to update registered application user",
                "timedOut": false,
                "duration": 1509,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser_authtoken, api_key, appUser2.uid, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.application_user<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        <span class=\"hljs-comment\">// value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>        object.email.should.be.equal(appUser2.email)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.username.should.be.equal(appUser2.username)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">\"testuser\"</span>, <span class=\"hljs-string\">\"backend\"</span>])<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(userUID)<br>        object.created_at.should.be.not.equal(object.updated_at)<br>        object.uid.should.be.equal(appUser2.uid)<br>        object.ACL.can[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'update'</span>)<br>        object.ACL.can[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'delete'</span>)<br>        object._version.should.be.equal(<span class=\"hljs-number\">3</span>)<br>        <span class=\"hljs-comment\">// object.last_login_at.should.be.equal('string')</span><br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "5dde99e8-0dc6-4fc7-a3c8-0a6f544adecb",
                "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid app user authtoken ",
                "fullTitle": "App users --- App users registration should provide an error message for invalid app user authtoken ",
                "timedOut": false,
                "duration": 1678,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, <span class=\"hljs-string\">''</span>, api_key, appUser2.uid, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "f69d09f9-6c7d-46fa-bd2c-67ace9e951a5",
                "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
                "skipped": false
              },
              {
                "title": "should be able to get registered application user",
                "fullTitle": "App users --- App users registration should be able to get registered application user",
                "timedOut": false,
                "duration": 1462,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_register_app_user'</span>, appUser_authtoken, api_key, appUser2.uid)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.application_user<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        <span class=\"hljs-comment\">// value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>        object.email.should.be.equal(appUser2.email)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.username.should.be.equal(appUser2.username)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">\"testuser\"</span>, <span class=\"hljs-string\">\"backend\"</span>])<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(userUID)<br>        object.created_at.should.be.not.equal(object.updated_at)<br>        object.uid.should.be.equal(appUser2.uid)<br>        object.ACL.can[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'update'</span>)<br>        object.ACL.can[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'delete'</span>)<br>        object._version.should.be.equal(<span class=\"hljs-number\">3</span>)<br>        <span class=\"hljs-comment\">// object.last_login_at.should.be.equal('string')</span><br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "a2ee6fa4-eefa-4350-8a30-36f040285fbd",
                "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
                "skipped": false
              },
              {
                "title": "should be able to deactivate an existing application user",
                "fullTitle": "App users --- App users registration should be able to deactivate an existing application user",
                "timedOut": false,
                "duration": 1692,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_register_app_user'</span>, appUser_authtoken, api_key, appUser2.uid)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "439a6a61-f72d-459c-9b3d-123ab3888916",
                "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to register application users",
                "fullTitle": "App users --- App users registration should be able to register application users",
                "timedOut": false,
                "duration": 1953,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUserName<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.application_user<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! You have successfully registered!'</span>)<br>        <span class=\"hljs-comment\">// // Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>        <span class=\"hljs-comment\">// // Data type assertion</span><br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.active.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        should.not.exist(object.updated_by)<br>        should.not.exist(object.created_by)<br>        should.not.exist(object.__loc)<br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.email.should.be.equal(appUseremail)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'john'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'smith'</span>)<br>        object.username.should.be.equal(appUserName)<br>        object.active.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_at.should.be.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        object.tags.should.be.deep.equal([])<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "803b8f8b-f5a7-4cd9-aa57-0019140d9a7d",
                "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
                "skipped": false
              },
              {
                "title": "should provide error message for password confirmation",
                "fullTitle": "App users --- App users registration should provide error message for password confirmation",
                "timedOut": false,
                "duration": 1959,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw1234\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUserName<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't sign you up. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">192</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"password_confirmation\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"password and password_confirmation must match\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "c3c7fdf7-54cf-42ef-808f-c1417b34cecf",
                "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
                "skipped": false
              },
              {
                "title": "should provide error message for register unique username",
                "fullTitle": "App users --- App users registration should provide error message for register unique username",
                "timedOut": false,
                "duration": 1627,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUser2.username<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    \t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't sign you up. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">127</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"username\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "c36b3cc0-2776-4a58-8a40-683de8eb22e9",
                "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
                "skipped": false
              },
              {
                "title": "should provide error message for register unique email",
                "fullTitle": "App users --- App users registration should provide error message for register unique email",
                "timedOut": false,
                "duration": 1885,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUser2.email,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUserName<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    \t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't sign you up. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">127</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"email\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "30cd6b7a-13ad-4c8d-8142-14fbe1289051",
                "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
                "skipped": false
              },
              {
                "title": "should be able to update registered application user",
                "fullTitle": "App users --- App users registration should be able to update registered application user",
                "timedOut": false,
                "duration": 1509,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser_authtoken, api_key, appUser2.uid, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.application_user<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        <span class=\"hljs-comment\">// value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>        object.email.should.be.equal(appUser2.email)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.username.should.be.equal(appUser2.username)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">\"testuser\"</span>, <span class=\"hljs-string\">\"backend\"</span>])<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(userUID)<br>        object.created_at.should.be.not.equal(object.updated_at)<br>        object.uid.should.be.equal(appUser2.uid)<br>        object.ACL.can[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'update'</span>)<br>        object.ACL.can[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'delete'</span>)<br>        object._version.should.be.equal(<span class=\"hljs-number\">3</span>)<br>        <span class=\"hljs-comment\">// object.last_login_at.should.be.equal('string')</span><br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "5dde99e8-0dc6-4fc7-a3c8-0a6f544adecb",
                "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid app user authtoken ",
                "fullTitle": "App users --- App users registration should provide an error message for invalid app user authtoken ",
                "timedOut": false,
                "duration": 1678,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, <span class=\"hljs-string\">''</span>, api_key, appUser2.uid, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "f69d09f9-6c7d-46fa-bd2c-67ace9e951a5",
                "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
                "skipped": false
              },
              {
                "title": "should be able to get registered application user",
                "fullTitle": "App users --- App users registration should be able to get registered application user",
                "timedOut": false,
                "duration": 1462,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_register_app_user'</span>, appUser_authtoken, api_key, appUser2.uid)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.application_user<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        <span class=\"hljs-comment\">// value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>        object.email.should.be.equal(appUser2.email)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.username.should.be.equal(appUser2.username)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">\"testuser\"</span>, <span class=\"hljs-string\">\"backend\"</span>])<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(userUID)<br>        object.created_at.should.be.not.equal(object.updated_at)<br>        object.uid.should.be.equal(appUser2.uid)<br>        object.ACL.can[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'update'</span>)<br>        object.ACL.can[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'delete'</span>)<br>        object._version.should.be.equal(<span class=\"hljs-number\">3</span>)<br>        <span class=\"hljs-comment\">// object.last_login_at.should.be.equal('string')</span><br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "a2ee6fa4-eefa-4350-8a30-36f040285fbd",
                "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
                "skipped": false
              },
              {
                "title": "should be able to deactivate an existing application user",
                "fullTitle": "App users --- App users registration should be able to deactivate an existing application user",
                "timedOut": false,
                "duration": 1692,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_register_app_user'</span>, appUser_authtoken, api_key, appUser2.uid)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "439a6a61-f72d-459c-9b3d-123ab3888916",
                "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 8,
            "totalPasses": 8,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 13765
          },
          {
            "title": "App user login/logout",
            "suites": [],
            "tests": [
              {
                "title": "should provide error message for invalid application user login operation",
                "fullTitle": "App users --- App user login/logout should provide error message for invalid application user login operation",
                "timedOut": false,
                "duration": 1441,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"asd\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {<br>            <span class=\"hljs-string\">\"auth\"</span>: [<br>              <span class=\"hljs-string\">\"Looks like your email or password is invalid\"</span><br>            ]<br>          }<br>        })<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "27a18d2a-15e8-4a19-9d3b-525325929c48",
                "parentUUID": "d8e0be76-df5b-491e-80e4-e3d433f962b8",
                "skipped": false
              },
              {
                "title": "should be able to login users registered for an application",
                "fullTitle": "App users --- App user login/logout should be able to login users registered for an application",
                "timedOut": false,
                "duration": 1487,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUser3.email,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>        }<br>      })<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Logged in successfully!'</span>)<br>          user = res.body.application_user<br>          userAuthtoken = res.body.application_user.authtoken<br>          <span class=\"hljs-comment\">// key assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(user).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>, <span class=\"hljs-string\">'authtoken'</span>])<br>          <span class=\"hljs-comment\">// data assertion</span><br>          user.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          user.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          user.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          user.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.active.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          user.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          user._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          user.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.authtoken.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          <span class=\"hljs-comment\">// value assertion</span><br>          user.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          user.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>          user.email.should.be.equal(appUser3.email)<br>          user.first_name.should.be.equal(appUser3.first_name)<br>          user.last_name.should.be.equal(appUser3.last_name)<br>          user.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          user.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          user.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          user.created_by.should.be.equal(userUID)<br>          user.updated_by.should.be.equal(userUID)<br>          user.created_at.should.be.not.equal(user.updated_at)<br>          user.uid.should.be.equal(appUser3.uid)<br>          user.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          user.ACL.should.be.deep.equal({<span class=\"hljs-string\">\"can\"</span>: []})<br>          user._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "bfc4035e-f0d5-4227-a447-34c9310a56f1",
                "parentUUID": "d8e0be76-df5b-491e-80e4-e3d433f962b8",
                "skipped": false
              },
              {
                "title": "should provide error message for invalid application user logout operation",
                "fullTitle": "App users --- App user login/logout should provide error message for invalid application user logout operation",
                "timedOut": false,
                "duration": 1455,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'logout_app_user'</span>, <span class=\"hljs-string\">\"userAuthtoken\"</span>, api_key)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          res.body.error_message.should.be.equal(<span class=\"hljs-string\">'Access denied. You have insufficient permissions to perform this operation.'</span>)<br>          res.body.error_code.should.be.equal(<span class=\"hljs-number\">162</span>)<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "ebb9ceae-70c6-466f-b7da-2fc8d7406af1",
                "parentUUID": "d8e0be76-df5b-491e-80e4-e3d433f962b8",
                "skipped": false
              },
              {
                "title": "should be able to logout application user from an application",
                "fullTitle": "App users --- App user login/logout should be able to logout application user from an application",
                "timedOut": false,
                "duration": 3154,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'login_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUser3.email,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>        }<br>      }))<br>        .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>          <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'logout_app_user'</span>, res.body.application_user.authtoken, api_key))<br>        })<br>        .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>          res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Logged out successfully.'</span>)<br>        })<br>        .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>          done()<br>        })<br>        .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>          <span class=\"hljs-built_in\">console</span>.log(err)<br>        })",
                "isRoot": false,
                "uuid": "e92598ef-c1c3-4ed1-9431-ea7faf19652f",
                "parentUUID": "d8e0be76-df5b-491e-80e4-e3d433f962b8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "d8e0be76-df5b-491e-80e4-e3d433f962b8",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should provide error message for invalid application user login operation",
                "fullTitle": "App users --- App user login/logout should provide error message for invalid application user login operation",
                "timedOut": false,
                "duration": 1441,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"asd\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {<br>            <span class=\"hljs-string\">\"auth\"</span>: [<br>              <span class=\"hljs-string\">\"Looks like your email or password is invalid\"</span><br>            ]<br>          }<br>        })<br>        done(err)<br>      })",
                "isRoot": false,
                "uuid": "27a18d2a-15e8-4a19-9d3b-525325929c48",
                "parentUUID": "d8e0be76-df5b-491e-80e4-e3d433f962b8",
                "skipped": false
              },
              {
                "title": "should be able to login users registered for an application",
                "fullTitle": "App users --- App user login/logout should be able to login users registered for an application",
                "timedOut": false,
                "duration": 1487,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUser3.email,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>        }<br>      })<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Logged in successfully!'</span>)<br>          user = res.body.application_user<br>          userAuthtoken = res.body.application_user.authtoken<br>          <span class=\"hljs-comment\">// key assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(user).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>, <span class=\"hljs-string\">'authtoken'</span>])<br>          <span class=\"hljs-comment\">// data assertion</span><br>          user.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          user.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          user.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          user.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.active.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          user.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          user._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          user.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.authtoken.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          <span class=\"hljs-comment\">// value assertion</span><br>          user.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          user.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>          user.email.should.be.equal(appUser3.email)<br>          user.first_name.should.be.equal(appUser3.first_name)<br>          user.last_name.should.be.equal(appUser3.last_name)<br>          user.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          user.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          user.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          user.created_by.should.be.equal(userUID)<br>          user.updated_by.should.be.equal(userUID)<br>          user.created_at.should.be.not.equal(user.updated_at)<br>          user.uid.should.be.equal(appUser3.uid)<br>          user.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          user.ACL.should.be.deep.equal({<span class=\"hljs-string\">\"can\"</span>: []})<br>          user._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "bfc4035e-f0d5-4227-a447-34c9310a56f1",
                "parentUUID": "d8e0be76-df5b-491e-80e4-e3d433f962b8",
                "skipped": false
              },
              {
                "title": "should provide error message for invalid application user logout operation",
                "fullTitle": "App users --- App user login/logout should provide error message for invalid application user logout operation",
                "timedOut": false,
                "duration": 1455,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'logout_app_user'</span>, <span class=\"hljs-string\">\"userAuthtoken\"</span>, api_key)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          res.body.error_message.should.be.equal(<span class=\"hljs-string\">'Access denied. You have insufficient permissions to perform this operation.'</span>)<br>          res.body.error_code.should.be.equal(<span class=\"hljs-number\">162</span>)<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "ebb9ceae-70c6-466f-b7da-2fc8d7406af1",
                "parentUUID": "d8e0be76-df5b-491e-80e4-e3d433f962b8",
                "skipped": false
              },
              {
                "title": "should be able to logout application user from an application",
                "fullTitle": "App users --- App user login/logout should be able to logout application user from an application",
                "timedOut": false,
                "duration": 3154,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'login_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUser3.email,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>        }<br>      }))<br>        .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>          <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'logout_app_user'</span>, res.body.application_user.authtoken, api_key))<br>        })<br>        .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>          res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Logged out successfully.'</span>)<br>        })<br>        .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>          done()<br>        })<br>        .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>          <span class=\"hljs-built_in\">console</span>.log(err)<br>        })",
                "isRoot": false,
                "uuid": "e92598ef-c1c3-4ed1-9431-ea7faf19652f",
                "parentUUID": "d8e0be76-df5b-491e-80e4-e3d433f962b8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 7537
          },
          {
            "title": "App user token/uid",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get current logged in application user",
                "fullTitle": "App users --- App user token/uid should be able to get current logged in application user",
                "timedOut": false,
                "duration": 1719,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">30000</span>)<br><br>R.Promisify(factories.create(<span class=\"hljs-string\">'get_current_app_user'</span>, userAuthtoken1, api_key))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    userAuthtoken = res.body.application_user.authtoken<br>    <span class=\"hljs-comment\">// key assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(user).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>, <span class=\"hljs-string\">'isApplicationUser'</span>, <span class=\"hljs-string\">'authtoken'</span>])<br>    <span class=\"hljs-comment\">// data assertion</span><br>    user.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    user.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    user.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    user.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.active.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    user.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    user._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>    user.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.isApplicationUser.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    user.authtoken.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    <span class=\"hljs-comment\">// value assertion</span><br>    user.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    user.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>    user.email.should.be.equal(appUser4.email)<br>    user.first_name.should.be.equal(appUser4.first_name)<br>    user.last_name.should.be.equal(appUser4.last_name)<br>    user.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>    user.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>    user.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>    user.created_by.should.be.equal(userUID)<br>    user.updated_by.should.be.equal(userUID)<br>    user.created_at.should.be.not.equal(user.updated_at)<br>    user.uid.should.be.equal(appUser4.uid)<br>    user.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    user.ACL.should.be.deep.equal({ })<br>    user._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>    user.isApplicationUser.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "9d36b30a-cbaa-42e0-8c0e-3408e6442730",
                "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid application user authtoken",
                "fullTitle": "App users --- App user token/uid should provide an error message for invalid application user authtoken",
                "timedOut": false,
                "duration": 1434,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">30000</span>)<br><br>R.Promisify(factories.create(<span class=\"hljs-string\">'get_current_app_user'</span>, <span class=\"hljs-string\">'899769kjnkj'</span>, api_key))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    res.status.should.be.equal(<span class=\"hljs-number\">422</span>)<br>    res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t})<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "1ce8253f-51e9-4a13-b840-8a98fcf44e54",
                "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
                "skipped": false
              },
              {
                "title": "should be able to retrieve application user uid",
                "fullTitle": "App users --- App user token/uid should be able to retrieve application user uid",
                "timedOut": false,
                "duration": 1610,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'app_user_retrieve_user_uid'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"email\"</span>: appUser4.email<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.uid.should.be.equal(appUser4.uid)<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "ab21b23f-c998-4a27-8a02-81fc2713b8b3",
                "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
                "skipped": false
              },
              {
                "title": "should be able to an application user token by using an application`s master key",
                "fullTitle": "App users --- App user token/uid should be able to an application user token by using an application`s master key",
                "timedOut": false,
                "duration": 2083,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'app_user_token'</span>, master_key, api_key, appUser4.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <br>  res.body.token.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  done()<br>})",
                "isRoot": false,
                "uuid": "7575f483-4da0-407d-828c-ad7ac5e723f0",
                "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
                "skipped": false
              },
              {
                "title": "should provide an error message for an invalid application`s master key",
                "fullTitle": "App users --- App user token/uid should provide an error message for an invalid application`s master key",
                "timedOut": false,
                "duration": 1473,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'app_user_token'</span>, <span class=\"hljs-string\">'kdsj43fvbgkj'</span>, api_key, appUser4.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  <span class=\"hljs-comment\">// res.body.token.should.be.a('string')</span><br>  done()<br>})",
                "isRoot": false,
                "uuid": "6e0a00b1-76f5-4883-918e-de7c54df53e9",
                "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 25000,
            "file": "/test.js",
            "uuid": "6ce69b46-b664-4d91-b1ad-18420b096369",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get current logged in application user",
                "fullTitle": "App users --- App user token/uid should be able to get current logged in application user",
                "timedOut": false,
                "duration": 1719,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">30000</span>)<br><br>R.Promisify(factories.create(<span class=\"hljs-string\">'get_current_app_user'</span>, userAuthtoken1, api_key))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    userAuthtoken = res.body.application_user.authtoken<br>    <span class=\"hljs-comment\">// key assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(user).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>, <span class=\"hljs-string\">'isApplicationUser'</span>, <span class=\"hljs-string\">'authtoken'</span>])<br>    <span class=\"hljs-comment\">// data assertion</span><br>    user.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    user.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    user.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    user.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.active.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    user.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    user._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>    user.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.isApplicationUser.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    user.authtoken.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    <span class=\"hljs-comment\">// value assertion</span><br>    user.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    user.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>    user.email.should.be.equal(appUser4.email)<br>    user.first_name.should.be.equal(appUser4.first_name)<br>    user.last_name.should.be.equal(appUser4.last_name)<br>    user.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>    user.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>    user.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>    user.created_by.should.be.equal(userUID)<br>    user.updated_by.should.be.equal(userUID)<br>    user.created_at.should.be.not.equal(user.updated_at)<br>    user.uid.should.be.equal(appUser4.uid)<br>    user.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    user.ACL.should.be.deep.equal({ })<br>    user._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>    user.isApplicationUser.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "9d36b30a-cbaa-42e0-8c0e-3408e6442730",
                "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid application user authtoken",
                "fullTitle": "App users --- App user token/uid should provide an error message for invalid application user authtoken",
                "timedOut": false,
                "duration": 1434,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">30000</span>)<br><br>R.Promisify(factories.create(<span class=\"hljs-string\">'get_current_app_user'</span>, <span class=\"hljs-string\">'899769kjnkj'</span>, api_key))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    res.status.should.be.equal(<span class=\"hljs-number\">422</span>)<br>    res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t})<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "1ce8253f-51e9-4a13-b840-8a98fcf44e54",
                "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
                "skipped": false
              },
              {
                "title": "should be able to retrieve application user uid",
                "fullTitle": "App users --- App user token/uid should be able to retrieve application user uid",
                "timedOut": false,
                "duration": 1610,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'app_user_retrieve_user_uid'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"email\"</span>: appUser4.email<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.uid.should.be.equal(appUser4.uid)<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "ab21b23f-c998-4a27-8a02-81fc2713b8b3",
                "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
                "skipped": false
              },
              {
                "title": "should be able to an application user token by using an application`s master key",
                "fullTitle": "App users --- App user token/uid should be able to an application user token by using an application`s master key",
                "timedOut": false,
                "duration": 2083,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'app_user_token'</span>, master_key, api_key, appUser4.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <br>  res.body.token.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  done()<br>})",
                "isRoot": false,
                "uuid": "7575f483-4da0-407d-828c-ad7ac5e723f0",
                "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
                "skipped": false
              },
              {
                "title": "should provide an error message for an invalid application`s master key",
                "fullTitle": "App users --- App user token/uid should provide an error message for an invalid application`s master key",
                "timedOut": false,
                "duration": 1473,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'app_user_token'</span>, <span class=\"hljs-string\">'kdsj43fvbgkj'</span>, api_key, appUser4.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  <span class=\"hljs-comment\">// res.body.token.should.be.a('string')</span><br>  done()<br>})",
                "isRoot": false,
                "uuid": "6e0a00b1-76f5-4883-918e-de7c54df53e9",
                "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8319
          },
          {
            "title": "App user activations",
            "suites": [],
            "tests": [
              {
                "title": "should be able to activate app user`s account",
                "fullTitle": "App users --- App user activations should be able to activate app user`s account",
                "timedOut": false,
                "duration": 1501,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'activate_app_user'</span>, api_key, appUser5.uid, token))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Account activated successfully!'</span>)<br>  done()<br>})",
                "isRoot": false,
                "uuid": "e07d1a49-7821-424c-9384-1471f0c2a8cd",
                "parentUUID": "221c4c39-8375-46cc-84b2-397e441427f8",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid token",
                "fullTitle": "App users --- App user activations should provide an error message for invalid token",
                "timedOut": false,
                "duration": 1749,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'activate_app_user'</span>, api_key, appUser5.uid, <span class=\"hljs-string\">'4569y8zvzkdfgzdf'</span>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.status.should.be.equal(<span class=\"hljs-number\">422</span>)<br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't retreive the token for you.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">147</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"token\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"Bummer. The token provided is invalid. Please try again.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "1c58b2cf-3b25-4ed6-975f-0f4453a42b61",
                "parentUUID": "221c4c39-8375-46cc-84b2-397e441427f8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "221c4c39-8375-46cc-84b2-397e441427f8",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to activate app user`s account",
                "fullTitle": "App users --- App user activations should be able to activate app user`s account",
                "timedOut": false,
                "duration": 1501,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'activate_app_user'</span>, api_key, appUser5.uid, token))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Account activated successfully!'</span>)<br>  done()<br>})",
                "isRoot": false,
                "uuid": "e07d1a49-7821-424c-9384-1471f0c2a8cd",
                "parentUUID": "221c4c39-8375-46cc-84b2-397e441427f8",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid token",
                "fullTitle": "App users --- App user activations should provide an error message for invalid token",
                "timedOut": false,
                "duration": 1749,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'activate_app_user'</span>, api_key, appUser5.uid, <span class=\"hljs-string\">'4569y8zvzkdfgzdf'</span>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.status.should.be.equal(<span class=\"hljs-number\">422</span>)<br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't retreive the token for you.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">147</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"token\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"Bummer. The token provided is invalid. Please try again.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "1c58b2cf-3b25-4ed6-975f-0f4453a42b61",
                "parentUUID": "221c4c39-8375-46cc-84b2-397e441427f8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3250
          },
          {
            "title": "App user requests",
            "suites": [],
            "tests": [
              {
                "title": "should be able to request reset password, for an application",
                "fullTitle": "App users --- App user requests should be able to request reset password, for an application",
                "timedOut": false,
                "duration": 1657,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'req_forgot_password'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"email\"</span>: appUser6.email<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'OK! We\\'ve sent you an email. Please check it for further instructions.'</span>)<br>  <br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "4e9ff7c6-27c9-491b-82d3-f455e6e813e4",
                "parentUUID": "ecd2cd96-803b-451b-b654-10907ad987bd",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid email for forgot password",
                "fullTitle": "App users --- App user requests should provide an error message for invalid email for forgot password",
                "timedOut": false,
                "duration": 1472,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'req_forgot_password'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't help you with your password. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">148</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"email\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "af3b1437-310b-4eb0-b090-46a6fbf4e5e0",
                "parentUUID": "ecd2cd96-803b-451b-b654-10907ad987bd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "ecd2cd96-803b-451b-b654-10907ad987bd",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to request reset password, for an application",
                "fullTitle": "App users --- App user requests should be able to request reset password, for an application",
                "timedOut": false,
                "duration": 1657,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'req_forgot_password'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"email\"</span>: appUser6.email<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'OK! We\\'ve sent you an email. Please check it for further instructions.'</span>)<br>  <br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "4e9ff7c6-27c9-491b-82d3-f455e6e813e4",
                "parentUUID": "ecd2cd96-803b-451b-b654-10907ad987bd",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid email for forgot password",
                "fullTitle": "App users --- App user requests should provide an error message for invalid email for forgot password",
                "timedOut": false,
                "duration": 1472,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'req_forgot_password'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't help you with your password. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">148</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"email\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "af3b1437-310b-4eb0-b090-46a6fbf4e5e0",
                "parentUUID": "ecd2cd96-803b-451b-b654-10907ad987bd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3129
          },
          {
            "title": "App user forgot password",
            "suites": [],
            "tests": [
              {
                "title": "should be able to reset password using provided token",
                "fullTitle": "App users --- App user forgot password should be able to reset password using provided token",
                "timedOut": false,
                "duration": 1485,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'reset_password_app_user'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"reset_password_token\"</span>: token,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! You\\'ve successfully reset your password.'</span>)<br>  <br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "80d8865d-a7e5-4054-8b4d-c20a3ec2bc1d",
                "parentUUID": "f3176f0e-ae33-4afb-8637-a7005ffe226e",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid reset password token",
                "fullTitle": "App users --- App user forgot password should provide an error message for invalid reset password token",
                "timedOut": false,
                "duration": 1788,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'reset_password_app_user'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"reset_password_token\"</span>: <span class=\"hljs-string\">\"swapnil\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't reset your password. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">149</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"reset_password_token\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"Bummer. The token provided is invalid. Please try again.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "1e0e4e3f-8ce2-4981-94ac-3a86c8400f21",
                "parentUUID": "f3176f0e-ae33-4afb-8637-a7005ffe226e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "f3176f0e-ae33-4afb-8637-a7005ffe226e",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to reset password using provided token",
                "fullTitle": "App users --- App user forgot password should be able to reset password using provided token",
                "timedOut": false,
                "duration": 1485,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'reset_password_app_user'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"reset_password_token\"</span>: token,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! You\\'ve successfully reset your password.'</span>)<br>  <br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "80d8865d-a7e5-4054-8b4d-c20a3ec2bc1d",
                "parentUUID": "f3176f0e-ae33-4afb-8637-a7005ffe226e",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid reset password token",
                "fullTitle": "App users --- App user forgot password should provide an error message for invalid reset password token",
                "timedOut": false,
                "duration": 1788,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'reset_password_app_user'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"reset_password_token\"</span>: <span class=\"hljs-string\">\"swapnil\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't reset your password. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">149</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"reset_password_token\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"Bummer. The token provided is invalid. Please try again.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "1e0e4e3f-8ce2-4981-94ac-3a86c8400f21",
                "parentUUID": "f3176f0e-ae33-4afb-8637-a7005ffe226e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3273
          },
          {
            "title": "App user validate_token",
            "suites": [],
            "tests": [
              {
                "title": "should be able to check whether reset password token is valid or not",
                "fullTitle": "App users --- App user validate_token should be able to check whether reset password token is valid or not",
                "timedOut": false,
                "duration": 1757,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'validate_token_app_user'</span>, api_key, { <span class=\"hljs-string\">'application_user[reset_password_token]'</span>: token }))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'That token works!'</span>)<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "b6d33ea9-489e-4fd3-a9d2-747bd6c45653",
                "parentUUID": "34eb9474-218e-47bc-8f42-19a8ced504e2",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid provided token",
                "fullTitle": "App users --- App user validate_token should provide an error message for invalid provided token",
                "timedOut": false,
                "duration": 1847,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'validate_token_app_user'</span>, api_key, { <span class=\"hljs-string\">'application_user[reset_password_token]'</span>: <span class=\"hljs-string\">'swapnil'</span> }))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The token provided is invalid. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">210</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"reset_password_token\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not valid, or it might have expired\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "6ab5bd73-623d-4c3e-a8b9-ebc3cb9dfc2b",
                "parentUUID": "34eb9474-218e-47bc-8f42-19a8ced504e2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "34eb9474-218e-47bc-8f42-19a8ced504e2",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to check whether reset password token is valid or not",
                "fullTitle": "App users --- App user validate_token should be able to check whether reset password token is valid or not",
                "timedOut": false,
                "duration": 1757,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'validate_token_app_user'</span>, api_key, { <span class=\"hljs-string\">'application_user[reset_password_token]'</span>: token }))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'That token works!'</span>)<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "b6d33ea9-489e-4fd3-a9d2-747bd6c45653",
                "parentUUID": "34eb9474-218e-47bc-8f42-19a8ced504e2",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid provided token",
                "fullTitle": "App users --- App user validate_token should provide an error message for invalid provided token",
                "timedOut": false,
                "duration": 1847,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'validate_token_app_user'</span>, api_key, { <span class=\"hljs-string\">'application_user[reset_password_token]'</span>: <span class=\"hljs-string\">'swapnil'</span> }))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The token provided is invalid. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">210</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"reset_password_token\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not valid, or it might have expired\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "6ab5bd73-623d-4c3e-a8b9-ebc3cb9dfc2b",
                "parentUUID": "34eb9474-218e-47bc-8f42-19a8ced504e2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3604
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "e3264eb1-499c-4209-9a4c-c198d9ae40b2",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "General app settings ---",
        "suites": [
          {
            "title": "uploads whitelist restrictions",
            "suites": [],
            "tests": [
              {
                "title": "should be able to restricted whitelisted files only",
                "fullTitle": "General app settings --- uploads whitelist restrictions should be able to restricted whitelisted files only",
                "timedOut": false,
                "duration": 8299,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, sys_user1.authtoken, app1.api_key, filename2))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser2.authtoken, app1.api_key, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File creation failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">142</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "03825128-6773-42a4-9b6a-ab7e8dbce9cb",
                "parentUUID": "24a77326-d8c3-41bd-9716-374cde59e5e9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "24a77326-d8c3-41bd-9716-374cde59e5e9",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to restricted whitelisted files only",
                "fullTitle": "General app settings --- uploads whitelist restrictions should be able to restricted whitelisted files only",
                "timedOut": false,
                "duration": 8299,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, sys_user1.authtoken, app1.api_key, filename2))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser2.authtoken, app1.api_key, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File creation failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">142</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "03825128-6773-42a4-9b6a-ab7e8dbce9cb",
                "parentUUID": "24a77326-d8c3-41bd-9716-374cde59e5e9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8299
          },
          {
            "title": "uploads blacklist restrictions",
            "suites": [],
            "tests": [
              {
                "title": "should be able to restrict blackted files only",
                "fullTitle": "General app settings --- uploads blacklist restrictions should be able to restrict blackted files only",
                "timedOut": false,
                "duration": 9829,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File creation failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">142</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, sys_user1.authtoken, app1.api_key, filename2))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File creation failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">142</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser2.authtoken, app1.api_key, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'application/json'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, sys_user1.authtoken, app1.api_key, filename4))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'application/pdf'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "73abc887-a8d7-468a-9309-8b6bdb89d602",
                "parentUUID": "82a262bd-6cc5-45cb-80d6-37ff4dbe813b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "82a262bd-6cc5-45cb-80d6-37ff4dbe813b",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to restrict blackted files only",
                "fullTitle": "General app settings --- uploads blacklist restrictions should be able to restrict blackted files only",
                "timedOut": false,
                "duration": 9829,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File creation failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">142</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, sys_user1.authtoken, app1.api_key, filename2))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File creation failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">142</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser2.authtoken, app1.api_key, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'application/json'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, sys_user1.authtoken, app1.api_key, filename4))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'application/pdf'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "73abc887-a8d7-468a-9309-8b6bdb89d602",
                "parentUUID": "82a262bd-6cc5-45cb-80d6-37ff4dbe813b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 9829
          },
          {
            "title": "uploads restrictions on update object",
            "suites": [],
            "tests": [
              {
                "title": "should be able to restrict whitelisted files only on update upload object",
                "fullTitle": "General app settings --- uploads restrictions on update object should be able to restrict whitelisted files only on update upload object",
                "timedOut": false,
                "duration": 4047,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br>    userFile = res.body.upload<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_upload'</span>, sys_user1.authtoken, app1.api_key, userFile.uid, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File update failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">143</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "da61d8fb-1f04-4ec4-8cbb-93b9d1cd47d9",
                "parentUUID": "f30573b8-70d5-4dc5-8671-47e7db21d930",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "f30573b8-70d5-4dc5-8671-47e7db21d930",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to restrict whitelisted files only on update upload object",
                "fullTitle": "General app settings --- uploads restrictions on update object should be able to restrict whitelisted files only on update upload object",
                "timedOut": false,
                "duration": 4047,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br>    userFile = res.body.upload<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_upload'</span>, sys_user1.authtoken, app1.api_key, userFile.uid, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File update failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">143</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "da61d8fb-1f04-4ec4-8cbb-93b9d1cd47d9",
                "parentUUID": "f30573b8-70d5-4dc5-8671-47e7db21d930",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4047
          },
          {
            "title": "uploads disable restrictions",
            "suites": [],
            "tests": [
              {
                "title": "should be able to disable restrictions on whitelisted files",
                "fullTitle": "General app settings --- uploads disable restrictions should be able to disable restrictions on whitelisted files",
                "timedOut": false,
                "duration": 5829,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br>    userFile = res.body.upload<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_upload'</span>, sys_user1.authtoken, app1.api_key, userFile.uid, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.deep.equal(<span class=\"hljs-string\">'Woot! File updated successfully.'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "6e873caf-1384-4232-9747-4ce7c4b542f0",
                "parentUUID": "114e040f-cf0c-4e5d-89ac-da1691cf4c3b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "114e040f-cf0c-4e5d-89ac-da1691cf4c3b",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to disable restrictions on whitelisted files",
                "fullTitle": "General app settings --- uploads disable restrictions should be able to disable restrictions on whitelisted files",
                "timedOut": false,
                "duration": 5829,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br>    userFile = res.body.upload<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_upload'</span>, sys_user1.authtoken, app1.api_key, userFile.uid, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.deep.equal(<span class=\"hljs-string\">'Woot! File updated successfully.'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "6e873caf-1384-4232-9747-4ce7c4b542f0",
                "parentUUID": "114e040f-cf0c-4e5d-89ac-da1691cf4c3b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5829
          },
          {
            "title": "users profile whitelist restrictions",
            "suites": [],
            "tests": [
              {
                "title": "should be able to restricted whitelisted files only",
                "fullTitle": "General app settings --- users profile whitelist restrictions should be able to restricted whitelisted files only",
                "timedOut": false,
                "duration": 1480,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser2.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"superman\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    user.username.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    user.first_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    <span class=\"hljs-comment\">// user.last_name.should.be.equal('superman')</span><br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err.trace)<br>  })",
                "isRoot": false,
                "uuid": "4124bda2-84d5-4089-bff5-80532091eff5",
                "parentUUID": "eba5a843-ffea-4a1d-a480-44f0a0404bd2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "eba5a843-ffea-4a1d-a480-44f0a0404bd2",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to restricted whitelisted files only",
                "fullTitle": "General app settings --- users profile whitelist restrictions should be able to restricted whitelisted files only",
                "timedOut": false,
                "duration": 1480,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser2.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"superman\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    user.username.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    user.first_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    <span class=\"hljs-comment\">// user.last_name.should.be.equal('superman')</span><br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err.trace)<br>  })",
                "isRoot": false,
                "uuid": "4124bda2-84d5-4089-bff5-80532091eff5",
                "parentUUID": "eba5a843-ffea-4a1d-a480-44f0a0404bd2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1480
          },
          {
            "title": "users profile blacklist restrictions",
            "suites": [],
            "tests": [
              {
                "title": "should be able to restrict whitelisted uploads files only",
                "fullTitle": "General app settings --- users profile blacklist restrictions should be able to restrict whitelisted uploads files only",
                "timedOut": false,
                "duration": 1692,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser1.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"superman\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    user.username.should.be.equal(user1.username)<br>    user.last_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "184d586d-3e65-45c7-81d7-df42a02e6dd6",
                "parentUUID": "a548b2c8-0324-46e0-a022-d1bcc7e32c19",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "a548b2c8-0324-46e0-a022-d1bcc7e32c19",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to restrict whitelisted uploads files only",
                "fullTitle": "General app settings --- users profile blacklist restrictions should be able to restrict whitelisted uploads files only",
                "timedOut": false,
                "duration": 1692,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser1.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"superman\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    user.username.should.be.equal(user1.username)<br>    user.last_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "184d586d-3e65-45c7-81d7-df42a02e6dd6",
                "parentUUID": "a548b2c8-0324-46e0-a022-d1bcc7e32c19",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1692
          },
          {
            "title": "users profile disable restrictions",
            "suites": [],
            "tests": [
              {
                "title": "should be able to restrict whitelisted user profile only",
                "fullTitle": "General app settings --- users profile disable restrictions should be able to restrict whitelisted user profile only",
                "timedOut": false,
                "duration": 1726,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser2.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"superman\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    user.username.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    user.first_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    user.last_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "597f5c71-515c-46d6-8ac1-cbbfa4bb132c",
                "parentUUID": "cbbdc6e2-3040-4c39-aea7-57ddd8950e70",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "cbbdc6e2-3040-4c39-aea7-57ddd8950e70",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to restrict whitelisted user profile only",
                "fullTitle": "General app settings --- users profile disable restrictions should be able to restrict whitelisted user profile only",
                "timedOut": false,
                "duration": 1726,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser2.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"superman\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    user.username.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    user.first_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    user.last_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "597f5c71-515c-46d6-8ac1-cbbfa4bb132c",
                "parentUUID": "cbbdc6e2-3040-4c39-aea7-57ddd8950e70",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1726
          },
          {
            "title": "users restricted profile ",
            "suites": [],
            "tests": [
              {
                "title": "should be update by only system user",
                "fullTitle": "General app settings --- users restricted profile  should be update by only system user",
                "timedOut": false,
                "duration": 1644,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">30000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, sys_user1.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"object\"</span>: {<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"hulk\"</span>,<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"hulk\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"hulk\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.object<br>    user.username.should.be.equal(<span class=\"hljs-string\">'hulk'</span>)<br>    user.first_name.should.be.equal(<span class=\"hljs-string\">'hulk'</span>)<br>    user.last_name.should.be.equal(<span class=\"hljs-string\">'hulk'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "14f95580-d303-4512-a613-59f1c737aa5a",
                "parentUUID": "da1bdb97-78b5-43c8-9470-add8f30df9e1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "da1bdb97-78b5-43c8-9470-add8f30df9e1",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be update by only system user",
                "fullTitle": "General app settings --- users restricted profile  should be update by only system user",
                "timedOut": false,
                "duration": 1644,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">30000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, sys_user1.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"object\"</span>: {<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"hulk\"</span>,<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"hulk\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"hulk\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.object<br>    user.username.should.be.equal(<span class=\"hljs-string\">'hulk'</span>)<br>    user.first_name.should.be.equal(<span class=\"hljs-string\">'hulk'</span>)<br>    user.last_name.should.be.equal(<span class=\"hljs-string\">'hulk'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
                "isRoot": false,
                "uuid": "14f95580-d303-4512-a613-59f1c737aa5a",
                "parentUUID": "da1bdb97-78b5-43c8-9470-add8f30df9e1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1644
          },
          {
            "title": "Enable or disable, Permitted login schemes",
            "suites": [],
            "tests": [
              {
                "title": "should be able to disable traditional login",
                "fullTitle": "General app settings --- Enable or disable, Permitted login schemes should be able to disable traditional login",
                "timedOut": false,
                "duration": 1626,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'login_app_user'</span>, app1.api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"email\"</span>: user2.email,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via traditional is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "e0d0c39b-d9b0-465f-83b3-f1f86c06b0ab",
                "parentUUID": "b629e8e9-bb4a-45fa-be56-349305f069cb",
                "skipped": false
              },
              {
                "title": "should be able to disable Google login",
                "fullTitle": "General app settings --- Enable or disable, Permitted login schemes should be able to disable Google login",
                "timedOut": false,
                "duration": 1450,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'register_app_user'</span>, app1.api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"auth_data\"</span>: {<br>      <span class=\"hljs-string\">\"google\"</span>: {<br>          <span class=\"hljs-string\">\"access_token\"</span>: <span class=\"hljs-string\">\"ya29.CjHeAiM_voLZbQFdGxlzuHW1sweJFFzWfK5mHZn5Q5wkxTnnnZFa7axbhxEbuJ8cJz-N\"</span><br>      }<br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via google is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "65c9d984-0de8-4af3-9c4f-b4cc5c81c469",
                "parentUUID": "b629e8e9-bb4a-45fa-be56-349305f069cb",
                "skipped": false
              },
              {
                "title": "should be able to disable facebook login",
                "fullTitle": "General app settings --- Enable or disable, Permitted login schemes should be able to disable facebook login",
                "timedOut": false,
                "duration": 1464,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'register_app_user'</span>, app1.api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"auth_data\"</span>: {<br>      <span class=\"hljs-string\">\"facebook\"</span>: {<br>        <span class=\"hljs-string\">\"access_token\"</span>: <span class=\"hljs-string\">\"ya29.AHES6ZSvSaMpLeToKeNVowjHEZrJA_J0k8\"</span><br>      }<br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via facebook is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "a3215f5b-cfd6-495f-acd6-5a4cc1a5fd91",
                "parentUUID": "b629e8e9-bb4a-45fa-be56-349305f069cb",
                "skipped": false
              },
              {
                "title": "should be able to disable twitter login",
                "fullTitle": "General app settings --- Enable or disable, Permitted login schemes should be able to disable twitter login",
                "timedOut": false,
                "duration": 1443,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'register_app_user'</span>, app1.api_key, {<br><span class=\"hljs-string\">\"application_user\"</span>: {<br>  <span class=\"hljs-string\">\"auth_data\"</span>: {<br>      <span class=\"hljs-string\">\"twitter\"</span>: {<br>        <span class=\"hljs-string\">\"token\"</span>: <span class=\"hljs-string\">\"ya29.AHES6ZSvSaMpLeToKeNVowjHEZrJA_J0k8\"</span>,<br>        <span class=\"hljs-string\">\"token_secret\"</span>: <span class=\"hljs-string\">\"aMpLeToKeNVowjHEZrJA_J0k8\"</span>,<br>        <span class=\"hljs-string\">\"consumer_key\"</span>: <span class=\"hljs-string\">\"aMpLeToKeNVowjHEZrJA_J0k8kjfs78\"</span>,<br>        <span class=\"hljs-string\">\"consumer_secret\"</span>: <span class=\"hljs-string\">\"aMpLeToKeNVowjHEZrJA_J0kfd878\"</span><br>      }<br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via twitter is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "85e61fbd-6fff-4de1-b115-7a8458326e02",
                "parentUUID": "b629e8e9-bb4a-45fa-be56-349305f069cb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "b629e8e9-bb4a-45fa-be56-349305f069cb",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to disable traditional login",
                "fullTitle": "General app settings --- Enable or disable, Permitted login schemes should be able to disable traditional login",
                "timedOut": false,
                "duration": 1626,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'login_app_user'</span>, app1.api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"email\"</span>: user2.email,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via traditional is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "e0d0c39b-d9b0-465f-83b3-f1f86c06b0ab",
                "parentUUID": "b629e8e9-bb4a-45fa-be56-349305f069cb",
                "skipped": false
              },
              {
                "title": "should be able to disable Google login",
                "fullTitle": "General app settings --- Enable or disable, Permitted login schemes should be able to disable Google login",
                "timedOut": false,
                "duration": 1450,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'register_app_user'</span>, app1.api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"auth_data\"</span>: {<br>      <span class=\"hljs-string\">\"google\"</span>: {<br>          <span class=\"hljs-string\">\"access_token\"</span>: <span class=\"hljs-string\">\"ya29.CjHeAiM_voLZbQFdGxlzuHW1sweJFFzWfK5mHZn5Q5wkxTnnnZFa7axbhxEbuJ8cJz-N\"</span><br>      }<br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via google is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "65c9d984-0de8-4af3-9c4f-b4cc5c81c469",
                "parentUUID": "b629e8e9-bb4a-45fa-be56-349305f069cb",
                "skipped": false
              },
              {
                "title": "should be able to disable facebook login",
                "fullTitle": "General app settings --- Enable or disable, Permitted login schemes should be able to disable facebook login",
                "timedOut": false,
                "duration": 1464,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'register_app_user'</span>, app1.api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"auth_data\"</span>: {<br>      <span class=\"hljs-string\">\"facebook\"</span>: {<br>        <span class=\"hljs-string\">\"access_token\"</span>: <span class=\"hljs-string\">\"ya29.AHES6ZSvSaMpLeToKeNVowjHEZrJA_J0k8\"</span><br>      }<br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via facebook is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "a3215f5b-cfd6-495f-acd6-5a4cc1a5fd91",
                "parentUUID": "b629e8e9-bb4a-45fa-be56-349305f069cb",
                "skipped": false
              },
              {
                "title": "should be able to disable twitter login",
                "fullTitle": "General app settings --- Enable or disable, Permitted login schemes should be able to disable twitter login",
                "timedOut": false,
                "duration": 1443,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'register_app_user'</span>, app1.api_key, {<br><span class=\"hljs-string\">\"application_user\"</span>: {<br>  <span class=\"hljs-string\">\"auth_data\"</span>: {<br>      <span class=\"hljs-string\">\"twitter\"</span>: {<br>        <span class=\"hljs-string\">\"token\"</span>: <span class=\"hljs-string\">\"ya29.AHES6ZSvSaMpLeToKeNVowjHEZrJA_J0k8\"</span>,<br>        <span class=\"hljs-string\">\"token_secret\"</span>: <span class=\"hljs-string\">\"aMpLeToKeNVowjHEZrJA_J0k8\"</span>,<br>        <span class=\"hljs-string\">\"consumer_key\"</span>: <span class=\"hljs-string\">\"aMpLeToKeNVowjHEZrJA_J0k8kjfs78\"</span>,<br>        <span class=\"hljs-string\">\"consumer_secret\"</span>: <span class=\"hljs-string\">\"aMpLeToKeNVowjHEZrJA_J0kfd878\"</span><br>      }<br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via twitter is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "85e61fbd-6fff-4de1-b115-7a8458326e02",
                "parentUUID": "b629e8e9-bb4a-45fa-be56-349305f069cb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5983
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "50119779-285b-469d-aff7-fe4ef50ce504",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Applications ---",
        "suites": [
          {
            "title": "Get restricted uids",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get list of all restricted uids for an application",
                "fullTitle": "Applications --- Get restricted uids should be able to get list of all restricted uids for an application",
                "timedOut": false,
                "duration": 1422,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(api.get(config.endpoints.restricted_uids)<br>.set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>.expect(<span class=\"hljs-number\">200</span>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"restricted\"</span>: [<br>      <span class=\"hljs-string\">\"published\"</span>,<br>      <span class=\"hljs-string\">\"uid\"</span>,<br>      <span class=\"hljs-string\">\"created_at\"</span>,<br>      <span class=\"hljs-string\">\"deleted_at\"</span>,<br>      <span class=\"hljs-string\">\"updated_at\"</span>,<br>      <span class=\"hljs-string\">\"tags_array\"</span>,<br>      <span class=\"hljs-string\">\"klass_id\"</span>,<br>      <span class=\"hljs-string\">\"applikation_id\"</span>,<br>      <span class=\"hljs-string\">\"*_ids\"</span>,<br>      <span class=\"hljs-string\">\"id\"</span>,<br>      <span class=\"hljs-string\">\"_id\"</span>,<br>      <span class=\"hljs-string\">\"ACL\"</span>,<br>      <span class=\"hljs-string\">\"SYS_ACL\"</span>,<br>      <span class=\"hljs-string\">\"DEFAULT_ACL\"</span>,<br>      <span class=\"hljs-string\">\"app_user_object_uid\"</span>,<br>      <span class=\"hljs-string\">\"built_io_upload\"</span>,<br>      <span class=\"hljs-string\">\"__loc\"</span>,<br>      <span class=\"hljs-string\">\"tags\"</span>,<br>      <span class=\"hljs-string\">\"_owner\"</span>,<br>      <span class=\"hljs-string\">\"_version\"</span>,<br>      <span class=\"hljs-string\">\"toJSON\"</span>,<br>      <span class=\"hljs-string\">\"save\"</span>,<br>      <span class=\"hljs-string\">\"update\"</span>,<br>      <span class=\"hljs-string\">\"domain\"</span>,<br>      <span class=\"hljs-string\">\"shard_account\"</span>,<br>      <span class=\"hljs-string\">\"shard_app\"</span>,<br>      <span class=\"hljs-string\">\"shard_random\"</span>,<br>      <span class=\"hljs-string\">\"hook\"</span>,<br>      <span class=\"hljs-string\">\"__indexes\"</span>,<br>      <span class=\"hljs-string\">\"__meta\"</span>,<br>      <span class=\"hljs-string\">\"created_by\"</span>,<br>      <span class=\"hljs-string\">\"updated_by\"</span>,<br>      <span class=\"hljs-string\">\"inbuilt_class\"</span>,<br>      <span class=\"hljs-string\">\"tenant_id\"</span>,<br>      <span class=\"hljs-string\">\"isSystemUser\"</span>,<br>      <span class=\"hljs-string\">\"isApplicationUser\"</span>,<br>      <span class=\"hljs-string\">\"isNew\"</span>,<br>      <span class=\"hljs-string\">\"_shouldLean\"</span>,<br>      <span class=\"hljs-string\">\"_shouldFilter\"</span>,<br>      <span class=\"hljs-string\">\"_shouldSyncPostHooks\"</span>,<br>      <span class=\"hljs-string\">\"_skip_transformations\"</span>,<br>      <span class=\"hljs-string\">\"_filterOptions\"</span>,<br>      <span class=\"hljs-string\">\"options\"</span>,<br>      <span class=\"hljs-string\">\"_version\"</span>,<br>      <span class=\"hljs-string\">\"__v\"</span><br>    ]<br>  })<br>  <br>  done()<br>});",
                "isRoot": false,
                "uuid": "69eb27bc-c03d-4d31-a4c3-82eb84f7f2d0",
                "parentUUID": "d33d91bb-9e9f-486a-a0e0-433d3dad050d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "d33d91bb-9e9f-486a-a0e0-433d3dad050d",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get list of all restricted uids for an application",
                "fullTitle": "Applications --- Get restricted uids should be able to get list of all restricted uids for an application",
                "timedOut": false,
                "duration": 1422,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(api.get(config.endpoints.restricted_uids)<br>.set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>.expect(<span class=\"hljs-number\">200</span>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"restricted\"</span>: [<br>      <span class=\"hljs-string\">\"published\"</span>,<br>      <span class=\"hljs-string\">\"uid\"</span>,<br>      <span class=\"hljs-string\">\"created_at\"</span>,<br>      <span class=\"hljs-string\">\"deleted_at\"</span>,<br>      <span class=\"hljs-string\">\"updated_at\"</span>,<br>      <span class=\"hljs-string\">\"tags_array\"</span>,<br>      <span class=\"hljs-string\">\"klass_id\"</span>,<br>      <span class=\"hljs-string\">\"applikation_id\"</span>,<br>      <span class=\"hljs-string\">\"*_ids\"</span>,<br>      <span class=\"hljs-string\">\"id\"</span>,<br>      <span class=\"hljs-string\">\"_id\"</span>,<br>      <span class=\"hljs-string\">\"ACL\"</span>,<br>      <span class=\"hljs-string\">\"SYS_ACL\"</span>,<br>      <span class=\"hljs-string\">\"DEFAULT_ACL\"</span>,<br>      <span class=\"hljs-string\">\"app_user_object_uid\"</span>,<br>      <span class=\"hljs-string\">\"built_io_upload\"</span>,<br>      <span class=\"hljs-string\">\"__loc\"</span>,<br>      <span class=\"hljs-string\">\"tags\"</span>,<br>      <span class=\"hljs-string\">\"_owner\"</span>,<br>      <span class=\"hljs-string\">\"_version\"</span>,<br>      <span class=\"hljs-string\">\"toJSON\"</span>,<br>      <span class=\"hljs-string\">\"save\"</span>,<br>      <span class=\"hljs-string\">\"update\"</span>,<br>      <span class=\"hljs-string\">\"domain\"</span>,<br>      <span class=\"hljs-string\">\"shard_account\"</span>,<br>      <span class=\"hljs-string\">\"shard_app\"</span>,<br>      <span class=\"hljs-string\">\"shard_random\"</span>,<br>      <span class=\"hljs-string\">\"hook\"</span>,<br>      <span class=\"hljs-string\">\"__indexes\"</span>,<br>      <span class=\"hljs-string\">\"__meta\"</span>,<br>      <span class=\"hljs-string\">\"created_by\"</span>,<br>      <span class=\"hljs-string\">\"updated_by\"</span>,<br>      <span class=\"hljs-string\">\"inbuilt_class\"</span>,<br>      <span class=\"hljs-string\">\"tenant_id\"</span>,<br>      <span class=\"hljs-string\">\"isSystemUser\"</span>,<br>      <span class=\"hljs-string\">\"isApplicationUser\"</span>,<br>      <span class=\"hljs-string\">\"isNew\"</span>,<br>      <span class=\"hljs-string\">\"_shouldLean\"</span>,<br>      <span class=\"hljs-string\">\"_shouldFilter\"</span>,<br>      <span class=\"hljs-string\">\"_shouldSyncPostHooks\"</span>,<br>      <span class=\"hljs-string\">\"_skip_transformations\"</span>,<br>      <span class=\"hljs-string\">\"_filterOptions\"</span>,<br>      <span class=\"hljs-string\">\"options\"</span>,<br>      <span class=\"hljs-string\">\"_version\"</span>,<br>      <span class=\"hljs-string\">\"__v\"</span><br>    ]<br>  })<br>  <br>  done()<br>});",
                "isRoot": false,
                "uuid": "69eb27bc-c03d-4d31-a4c3-82eb84f7f2d0",
                "parentUUID": "d33d91bb-9e9f-486a-a0e0-433d3dad050d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1422
          },
          {
            "title": "App creation",
            "suites": [],
            "tests": [
              {
                "title": "should be able to create an application as a system user",
                "fullTitle": "Applications --- App creation should be able to create an application as a system user",
                "timedOut": false,
                "duration": 3662,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appName = <span class=\"hljs-string\">\"Post App\"</span><br>      factories.create(<span class=\"hljs-string\">'Create_application'</span>, authtoken, {<br>          <span class=\"hljs-string\">\"name\"</span>: appName<br>      })<br>      .expect(<span class=\"hljs-number\">201</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> application = res.body.application<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Hurray! Application created successfully.'</span>)<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>        application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        application.name.should.be.equal(appName)<br>        application.created_at.should.be.equal(application.updated_at)<br>        application.owner_uid.should.be.equal(userUID)<br>        application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>        factories.create(<span class=\"hljs-string\">'Delete_application'</span>, authtoken, application.api_key)<br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>            <br>            done(err)<br>          })<br>      })",
                "isRoot": false,
                "uuid": "ef3b3f1b-86d8-4e8e-847a-b4b4d0c7cd09",
                "parentUUID": "5a19d2e9-fa9b-4e52-9f01-7bd3d0b04341",
                "skipped": false
              },
              {
                "title": "should provide error message for invalid authtoken while creating application",
                "fullTitle": "Applications --- App creation should provide error message for invalid authtoken while creating application",
                "timedOut": false,
                "duration": 1456,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appName = <span class=\"hljs-string\">\"Post App\"</span><br>      factories.create(<span class=\"hljs-string\">'Create_application'</span>, <span class=\"hljs-string\">\"asdasd\"</span>, {<br>          <span class=\"hljs-string\">\"name\"</span>: appName<br>      })<br>      .expect(<span class=\"hljs-number\">401</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {}<br>        })<br>         done(err)<br>      })",
                "isRoot": false,
                "uuid": "bd1e3ddb-3b15-4214-ad5b-010746fb639a",
                "parentUUID": "5a19d2e9-fa9b-4e52-9f01-7bd3d0b04341",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "5a19d2e9-fa9b-4e52-9f01-7bd3d0b04341",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to create an application as a system user",
                "fullTitle": "Applications --- App creation should be able to create an application as a system user",
                "timedOut": false,
                "duration": 3662,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appName = <span class=\"hljs-string\">\"Post App\"</span><br>      factories.create(<span class=\"hljs-string\">'Create_application'</span>, authtoken, {<br>          <span class=\"hljs-string\">\"name\"</span>: appName<br>      })<br>      .expect(<span class=\"hljs-number\">201</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> application = res.body.application<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Hurray! Application created successfully.'</span>)<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>        application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        application.name.should.be.equal(appName)<br>        application.created_at.should.be.equal(application.updated_at)<br>        application.owner_uid.should.be.equal(userUID)<br>        application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>        factories.create(<span class=\"hljs-string\">'Delete_application'</span>, authtoken, application.api_key)<br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>            <br>            done(err)<br>          })<br>      })",
                "isRoot": false,
                "uuid": "ef3b3f1b-86d8-4e8e-847a-b4b4d0c7cd09",
                "parentUUID": "5a19d2e9-fa9b-4e52-9f01-7bd3d0b04341",
                "skipped": false
              },
              {
                "title": "should provide error message for invalid authtoken while creating application",
                "fullTitle": "Applications --- App creation should provide error message for invalid authtoken while creating application",
                "timedOut": false,
                "duration": 1456,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appName = <span class=\"hljs-string\">\"Post App\"</span><br>      factories.create(<span class=\"hljs-string\">'Create_application'</span>, <span class=\"hljs-string\">\"asdasd\"</span>, {<br>          <span class=\"hljs-string\">\"name\"</span>: appName<br>      })<br>      .expect(<span class=\"hljs-number\">401</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {}<br>        })<br>         done(err)<br>      })",
                "isRoot": false,
                "uuid": "bd1e3ddb-3b15-4214-ad5b-010746fb639a",
                "parentUUID": "5a19d2e9-fa9b-4e52-9f01-7bd3d0b04341",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5118
          },
          {
            "title": "Get applications",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all applications",
                "fullTitle": "Applications --- Get applications should be able to get all applications",
                "timedOut": false,
                "duration": 1678,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br><br>    <span class=\"hljs-keyword\">var</span> application = res.body.applications[<span class=\"hljs-number\">0</span>]<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    application.api_key.should.be.equal(api_key)<br>    application.created_at.should.be.equal(application.updated_at)<br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br><br><br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "0931dd3e-a911-4ca6-a26a-4c7ec077c3d6",
                "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
                "skipped": false
              },
              {
                "title": "should be able to get count of applications created",
                "fullTitle": "Applications --- Get applications should be able to get count of applications created",
                "timedOut": false,
                "duration": 1638,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-literal\">true</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(res.body).should.to.be.deep.equal([<span class=\"hljs-string\">'applications'</span>])<br>    res.body.applications.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "962de08d-cea7-4f67-b5bc-8b5a6884a678",
                "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
                "skipped": false
              },
              {
                "title": "should be able to get an application using query",
                "fullTitle": "Applications --- Get applications should be able to get an application using query",
                "timedOut": false,
                "duration": 1693,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"query\"</span>: {<br>      <span class=\"hljs-string\">\"api_key\"</span>: api_key<br>    }<br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br><br>    <span class=\"hljs-keyword\">var</span> application = res.body.applications[<span class=\"hljs-number\">0</span>]<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    application.api_key.should.be.equal(api_key)<br>    application.created_at.should.be.equal(application.updated_at)<br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br><br><br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "4b40720f-27fd-4754-a140-c57d242ef92c",
                "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
                "skipped": false
              },
              {
                "title": "should be able to provide an applications count in response",
                "fullTitle": "Applications --- Get applications should be able to provide an applications count in response",
                "timedOut": false,
                "duration": 1577,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-literal\">true</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> response = res.body<br>    <br>    response.applications.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>    response.applications.should.not.equal(<span class=\"hljs-number\">0</span>)<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "8cce53b3-bf17-4a35-949e-f20dc300bd9e",
                "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
                "skipped": false
              },
              {
                "title": "should be able to get an applications including collaborators info in response",
                "fullTitle": "Applications --- Get applications should be able to get an applications including collaborators info in response",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">25000</span>)<br>factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>        <span class=\"hljs-string\">\"emails\"</span>: [<br>          res.body.user.email<br>        ]<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        <br>        factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>            <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>            <span class=\"hljs-string\">\"include_collaborators\"</span>: <span class=\"hljs-literal\">true</span>,<br>            <span class=\"hljs-string\">\"query\"</span>: {<br>              <span class=\"hljs-string\">\"api_key\"</span>: api_key<br>            }<br>          })<br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>            <br>            <span class=\"hljs-keyword\">var</span> application = res2.body.applications[<span class=\"hljs-number\">0</span>]<br>            <br>          <span class=\"hljs-comment\">// Keys assertion</span><br>            <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'collaborators'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>            <span class=\"hljs-built_in\">Object</span>.keys(application.collaborators[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>, <span class=\"hljs-string\">'is_owner'</span>, <span class=\"hljs-string\">'roles'</span>])<br>            <span class=\"hljs-built_in\">Object</span>.keys(application.collaborators[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>, <span class=\"hljs-string\">'roles'</span>])<br>              <span class=\"hljs-comment\">// Data type assertion</span><br>            application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].plan_id.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].plan_id.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].is_owner.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            <span class=\"hljs-comment\">//application.collaborators[1].roles[0].should.be.a('string') </span><br>            application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>            application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>            application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>            <span class=\"hljs-comment\">// Value assertion</span><br>            application.api_key.should.be.equal(api_key)<br>            application.owner_uid.should.be.equal(userUID)<br>            application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>            application.collaborators[<span class=\"hljs-number\">1</span>].uid.should.be.equal(userUID)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].uid.should.not.be.equal(userUID)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'free_trial'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'free_trial'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].username.should.be.equal(username)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].email.should.be.equal(email)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].is_owner.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>            <span class=\"hljs-comment\">//application.created_at.should.be.equal(application.updated_at)</span><br>            done(err)<br>          })<br>      })<br>  })",
                "err": {
                  "name": "AssertionError",
                  "message": "expected [ Array(9) ] to deeply equal [ Array(8) ]",
                  "stack": "AssertionError: expected [ Array(9) ] to deeply equal [ Array(8) ]<br>    at assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/addMethod.js:41:25)<br>    at doAsserterAsyncAndAddThen (node_modules/chai-as-promised/lib/chai-as-promised.js:292:33)<br>    at null.&lt;anonymous&gt; (node_modules/chai-as-promised/lib/chai-as-promised.js:251:21)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at somethingMethod (node_modules/chai-things/lib/chai-things.js:97:25)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at allMethod (node_modules/chai-things/lib/chai-things.js:165:25)<br>    at ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at Test.&lt;anonymous&gt; (spec/application/application_spec.js:348:79)<br>    at Test.assert (node_modules/supertest/lib/test.js:156:6)<br>    at assert (node_modules/supertest/lib/test.js:127:12)<br>    at node_modules/supertest/lib/test.js:124:5<br>    at Test.Request.callback (node_modules/supertest/node_modules/superagent/lib/node/index.js:785:12)<br>    at Stream.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/index.js:990:12)<br>    at Unzip.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/utils.js:108:12)<br>    at endReadableNT (_stream_readable.js:913:12)"
                },
                "isRoot": false,
                "uuid": "8794bcdd-ae26-415f-aeb1-f32c91f64ce0",
                "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
                "skipped": false
              },
              {
                "title": "should be able to get an application including application variables in response.",
                "fullTitle": "Applications --- Get applications should be able to get an application including application variables in response.",
                "timedOut": false,
                "duration": 3158,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_app_settings'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"app_settings\"</span>: {<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"test_tool\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>      }<br>    }<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    <br>    factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>        <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>        <span class=\"hljs-string\">\"include_application_variables\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>        <span class=\"hljs-comment\">//res2.body.applications.length.should.be.equal(1)</span><br>        <br>        <span class=\"hljs-keyword\">var</span> application = R.last(res2.body.applications)<br>        <br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(application.application_variables).should.to.be.deep.equal([<span class=\"hljs-string\">'test_tool'</span>])<br>        <br>          <span class=\"hljs-comment\">// Data type assertion</span><br>        application.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        <br>        application.application_variables.test_tool.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br><br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "0a69adc5-1ad5-4969-92ef-1d5af6e7b8c0",
                "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get all applications",
                "fullTitle": "Applications --- Get applications should be able to get all applications",
                "timedOut": false,
                "duration": 1678,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br><br>    <span class=\"hljs-keyword\">var</span> application = res.body.applications[<span class=\"hljs-number\">0</span>]<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    application.api_key.should.be.equal(api_key)<br>    application.created_at.should.be.equal(application.updated_at)<br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br><br><br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "0931dd3e-a911-4ca6-a26a-4c7ec077c3d6",
                "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
                "skipped": false
              },
              {
                "title": "should be able to get count of applications created",
                "fullTitle": "Applications --- Get applications should be able to get count of applications created",
                "timedOut": false,
                "duration": 1638,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-literal\">true</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(res.body).should.to.be.deep.equal([<span class=\"hljs-string\">'applications'</span>])<br>    res.body.applications.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "962de08d-cea7-4f67-b5bc-8b5a6884a678",
                "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
                "skipped": false
              },
              {
                "title": "should be able to get an application using query",
                "fullTitle": "Applications --- Get applications should be able to get an application using query",
                "timedOut": false,
                "duration": 1693,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"query\"</span>: {<br>      <span class=\"hljs-string\">\"api_key\"</span>: api_key<br>    }<br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br><br>    <span class=\"hljs-keyword\">var</span> application = res.body.applications[<span class=\"hljs-number\">0</span>]<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    application.api_key.should.be.equal(api_key)<br>    application.created_at.should.be.equal(application.updated_at)<br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br><br><br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "4b40720f-27fd-4754-a140-c57d242ef92c",
                "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
                "skipped": false
              },
              {
                "title": "should be able to provide an applications count in response",
                "fullTitle": "Applications --- Get applications should be able to provide an applications count in response",
                "timedOut": false,
                "duration": 1577,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-literal\">true</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> response = res.body<br>    <br>    response.applications.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>    response.applications.should.not.equal(<span class=\"hljs-number\">0</span>)<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "8cce53b3-bf17-4a35-949e-f20dc300bd9e",
                "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
                "skipped": false
              },
              {
                "title": "should be able to get an application including application variables in response.",
                "fullTitle": "Applications --- Get applications should be able to get an application including application variables in response.",
                "timedOut": false,
                "duration": 3158,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_app_settings'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"app_settings\"</span>: {<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"test_tool\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>      }<br>    }<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    <br>    factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>        <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>        <span class=\"hljs-string\">\"include_application_variables\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>        <span class=\"hljs-comment\">//res2.body.applications.length.should.be.equal(1)</span><br>        <br>        <span class=\"hljs-keyword\">var</span> application = R.last(res2.body.applications)<br>        <br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(application.application_variables).should.to.be.deep.equal([<span class=\"hljs-string\">'test_tool'</span>])<br>        <br>          <span class=\"hljs-comment\">// Data type assertion</span><br>        application.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        <br>        application.application_variables.test_tool.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br><br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "0a69adc5-1ad5-4969-92ef-1d5af6e7b8c0",
                "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
                "skipped": false
              }
            ],
            "failures": [
              {
                "title": "should be able to get an applications including collaborators info in response",
                "fullTitle": "Applications --- Get applications should be able to get an applications including collaborators info in response",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">25000</span>)<br>factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>        <span class=\"hljs-string\">\"emails\"</span>: [<br>          res.body.user.email<br>        ]<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        <br>        factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>            <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>            <span class=\"hljs-string\">\"include_collaborators\"</span>: <span class=\"hljs-literal\">true</span>,<br>            <span class=\"hljs-string\">\"query\"</span>: {<br>              <span class=\"hljs-string\">\"api_key\"</span>: api_key<br>            }<br>          })<br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>            <br>            <span class=\"hljs-keyword\">var</span> application = res2.body.applications[<span class=\"hljs-number\">0</span>]<br>            <br>          <span class=\"hljs-comment\">// Keys assertion</span><br>            <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'collaborators'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>            <span class=\"hljs-built_in\">Object</span>.keys(application.collaborators[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>, <span class=\"hljs-string\">'is_owner'</span>, <span class=\"hljs-string\">'roles'</span>])<br>            <span class=\"hljs-built_in\">Object</span>.keys(application.collaborators[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>, <span class=\"hljs-string\">'roles'</span>])<br>              <span class=\"hljs-comment\">// Data type assertion</span><br>            application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].plan_id.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].plan_id.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].is_owner.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            <span class=\"hljs-comment\">//application.collaborators[1].roles[0].should.be.a('string') </span><br>            application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>            application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>            application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>            <span class=\"hljs-comment\">// Value assertion</span><br>            application.api_key.should.be.equal(api_key)<br>            application.owner_uid.should.be.equal(userUID)<br>            application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>            application.collaborators[<span class=\"hljs-number\">1</span>].uid.should.be.equal(userUID)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].uid.should.not.be.equal(userUID)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'free_trial'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'free_trial'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].username.should.be.equal(username)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].email.should.be.equal(email)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].is_owner.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>            <span class=\"hljs-comment\">//application.created_at.should.be.equal(application.updated_at)</span><br>            done(err)<br>          })<br>      })<br>  })",
                "err": {
                  "name": "AssertionError",
                  "message": "expected [ Array(9) ] to deeply equal [ Array(8) ]",
                  "stack": "AssertionError: expected [ Array(9) ] to deeply equal [ Array(8) ]<br>    at assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/addMethod.js:41:25)<br>    at doAsserterAsyncAndAddThen (node_modules/chai-as-promised/lib/chai-as-promised.js:292:33)<br>    at null.&lt;anonymous&gt; (node_modules/chai-as-promised/lib/chai-as-promised.js:251:21)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at somethingMethod (node_modules/chai-things/lib/chai-things.js:97:25)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at allMethod (node_modules/chai-things/lib/chai-things.js:165:25)<br>    at ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at Test.&lt;anonymous&gt; (spec/application/application_spec.js:348:79)<br>    at Test.assert (node_modules/supertest/lib/test.js:156:6)<br>    at assert (node_modules/supertest/lib/test.js:127:12)<br>    at node_modules/supertest/lib/test.js:124:5<br>    at Test.Request.callback (node_modules/supertest/node_modules/superagent/lib/node/index.js:785:12)<br>    at Stream.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/index.js:990:12)<br>    at Unzip.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/utils.js:108:12)<br>    at endReadableNT (_stream_readable.js:913:12)"
                },
                "isRoot": false,
                "uuid": "8794bcdd-ae26-415f-aeb1-f32c91f64ce0",
                "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 6,
            "totalPasses": 5,
            "totalFailures": 1,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 9744
          },
          {
            "title": "Get an applications skip/limit",
            "suites": [],
            "tests": [
              {
                "title": "should be able to skip number of applications while getting all apps",
                "fullTitle": "Applications --- Get an applications skip/limit should be able to skip number of applications while getting all apps",
                "timedOut": false,
                "duration": 1492,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">3</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-keyword\">var</span> application = res.body.applications<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "92f7802b-2443-4748-9a34-53c7c70839c6",
                "parentUUID": "550eeb5f-6e6a-48f8-8e55-18ab9a0738ea",
                "skipped": false
              },
              {
                "title": "should be able to limit number of applications while getting all apps",
                "fullTitle": "Applications --- Get an applications skip/limit should be able to limit number of applications while getting all apps",
                "timedOut": false,
                "duration": 1654,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">20000</span>)<br>factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-string\">\"2\"</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>    <br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "9a85be64-c447-41d9-a209-a71cd08d4990",
                "parentUUID": "550eeb5f-6e6a-48f8-8e55-18ab9a0738ea",
                "skipped": false
              },
              {
                "title": "should provide error message for -ve skip/limit values while getting all apps",
                "fullTitle": "Applications --- Get an applications skip/limit should provide error message for -ve skip/limit values while getting all apps",
                "timedOut": false,
                "duration": 1616,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"skip\"</span>: -<span class=\"hljs-number\">2</span>,<br>    <span class=\"hljs-string\">\"limit\"</span>: -<span class=\"hljs-number\">2</span><br>  })<br>.expect(<span class=\"hljs-number\">422</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Failed to fetch applications. Please try again with valid parameters.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">109</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"params\"</span>: [<br>        <span class=\"hljs-string\">\"has an invalid operation.\"</span><br>      ]<br>    }<br>  })<br>  <br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "7ff7e03d-99c6-474b-94c1-414a73cacec2",
                "parentUUID": "550eeb5f-6e6a-48f8-8e55-18ab9a0738ea",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "550eeb5f-6e6a-48f8-8e55-18ab9a0738ea",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to skip number of applications while getting all apps",
                "fullTitle": "Applications --- Get an applications skip/limit should be able to skip number of applications while getting all apps",
                "timedOut": false,
                "duration": 1492,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">3</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-keyword\">var</span> application = res.body.applications<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "92f7802b-2443-4748-9a34-53c7c70839c6",
                "parentUUID": "550eeb5f-6e6a-48f8-8e55-18ab9a0738ea",
                "skipped": false
              },
              {
                "title": "should be able to limit number of applications while getting all apps",
                "fullTitle": "Applications --- Get an applications skip/limit should be able to limit number of applications while getting all apps",
                "timedOut": false,
                "duration": 1654,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">20000</span>)<br>factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-string\">\"2\"</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>    <br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "9a85be64-c447-41d9-a209-a71cd08d4990",
                "parentUUID": "550eeb5f-6e6a-48f8-8e55-18ab9a0738ea",
                "skipped": false
              },
              {
                "title": "should provide error message for -ve skip/limit values while getting all apps",
                "fullTitle": "Applications --- Get an applications skip/limit should provide error message for -ve skip/limit values while getting all apps",
                "timedOut": false,
                "duration": 1616,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"skip\"</span>: -<span class=\"hljs-number\">2</span>,<br>    <span class=\"hljs-string\">\"limit\"</span>: -<span class=\"hljs-number\">2</span><br>  })<br>.expect(<span class=\"hljs-number\">422</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Failed to fetch applications. Please try again with valid parameters.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">109</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"params\"</span>: [<br>        <span class=\"hljs-string\">\"has an invalid operation.\"</span><br>      ]<br>    }<br>  })<br>  <br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "7ff7e03d-99c6-474b-94c1-414a73cacec2",
                "parentUUID": "550eeb5f-6e6a-48f8-8e55-18ab9a0738ea",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4762
          },
          {
            "title": "Get valid field types for an application",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get field datatypes supported and the various options for these fields",
                "fullTitle": "Applications --- Get valid field types for an application should be able to get field datatypes supported and the various options for these fields",
                "timedOut": false,
                "duration": 1635,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "api.get(config.endpoints.applications + config.endpoints.valid_field_types)<br>  .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>  .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>  .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"field_types\"</span>: [<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Text\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this datatype we can enter string literals for the field. Additionaly you can also assign blob data.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"isodate\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"ISODate\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this datatype you can assign either date, time or datetime values for the particular field.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"file\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"File\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"When you upload any asset in your built.io application, you can apply that upload's UID to this field. This will form a link between that asset and the object.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"boolean\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Boolean\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Use this datatype when you would like to add fields that can act as a switch for you. For Example: In an Invoice class, there can be a boolean field called, 'paid'\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"reference\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Reference\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"You can refer to objects of other classes in your application, when you use this field.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"group\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Group\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this field, you can group other fields into this one. An example usage can be, an address field, which is a composite of streeet address, city, state.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"link\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Link\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this field you can save hyperlinks into your objects. The link field itself is composite of two fields, link title and link href.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Number\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"This datatype can be used to store numerical values.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"mixed\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Mixed\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"This datatype helps you save a key-value store in your object.\"</span><br>        }<br>      ]<br>    })<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "85d60661-368b-4043-aea3-054142240ea9",
                "parentUUID": "55410991-7f0a-4e08-8a55-11e3ba1c56aa",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "55410991-7f0a-4e08-8a55-11e3ba1c56aa",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get field datatypes supported and the various options for these fields",
                "fullTitle": "Applications --- Get valid field types for an application should be able to get field datatypes supported and the various options for these fields",
                "timedOut": false,
                "duration": 1635,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "api.get(config.endpoints.applications + config.endpoints.valid_field_types)<br>  .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>  .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>  .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"field_types\"</span>: [<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Text\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this datatype we can enter string literals for the field. Additionaly you can also assign blob data.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"isodate\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"ISODate\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this datatype you can assign either date, time or datetime values for the particular field.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"file\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"File\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"When you upload any asset in your built.io application, you can apply that upload's UID to this field. This will form a link between that asset and the object.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"boolean\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Boolean\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Use this datatype when you would like to add fields that can act as a switch for you. For Example: In an Invoice class, there can be a boolean field called, 'paid'\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"reference\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Reference\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"You can refer to objects of other classes in your application, when you use this field.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"group\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Group\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this field, you can group other fields into this one. An example usage can be, an address field, which is a composite of streeet address, city, state.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"link\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Link\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this field you can save hyperlinks into your objects. The link field itself is composite of two fields, link title and link href.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Number\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"This datatype can be used to store numerical values.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"mixed\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Mixed\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"This datatype helps you save a key-value store in your object.\"</span><br>        }<br>      ]<br>    })<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "85d60661-368b-4043-aea3-054142240ea9",
                "parentUUID": "55410991-7f0a-4e08-8a55-11e3ba1c56aa",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1635
          },
          {
            "title": "Get app",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get application as an owner",
                "fullTitle": "Applications --- Get app should be able to get application as an owner",
                "timedOut": false,
                "duration": 7745,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_application'</span>, authtoken)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> app = res.body.application<br>    factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, app.api_key)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> application = res1.body.application<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>        application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        application.api_key.should.be.equal(app.api_key)<br>          <span class=\"hljs-comment\">// bug</span><br>          <span class=\"hljs-comment\">//application.created_at.should.be.equal(application.updated_at)</span><br>        application.owner_uid.should.be.equal(userUID)<br>        application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>        factories.create(<span class=\"hljs-string\">'Delete_application'</span>, authtoken, app.api_key)<br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>            done(err)<br>          })<br><br>      })<br>  });",
                "isRoot": false,
                "uuid": "0c4956e4-c0c3-4afa-b2f9-b892dab3e228",
                "parentUUID": "05cc5d88-4600-482c-b994-ad99838e0b59",
                "skipped": false
              },
              {
                "title": "should be able to get application as a collaborator without master_key in response",
                "fullTitle": "Applications --- Get app should be able to get application as a collaborator without master_key in response",
                "timedOut": false,
                "duration": 1691,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken1, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    <span class=\"hljs-keyword\">var</span> application = res.body.application<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    application.user_uids.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    application.api_key.should.be.equal(api_key)<br>    <span class=\"hljs-comment\">//bug</span><br>    <span class=\"hljs-comment\">//application.created_at.should.be.equal(application.updated_at)</span><br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>    application.owner_uid.should.not.equal(application.user_uids[<span class=\"hljs-number\">1</span>])<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "82105300-c5c4-4d91-a520-f8376748bcbf",
                "parentUUID": "05cc5d88-4600-482c-b994-ad99838e0b59",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "05cc5d88-4600-482c-b994-ad99838e0b59",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get application as an owner",
                "fullTitle": "Applications --- Get app should be able to get application as an owner",
                "timedOut": false,
                "duration": 7745,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_application'</span>, authtoken)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> app = res.body.application<br>    factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, app.api_key)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> application = res1.body.application<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>        application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        application.api_key.should.be.equal(app.api_key)<br>          <span class=\"hljs-comment\">// bug</span><br>          <span class=\"hljs-comment\">//application.created_at.should.be.equal(application.updated_at)</span><br>        application.owner_uid.should.be.equal(userUID)<br>        application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>        factories.create(<span class=\"hljs-string\">'Delete_application'</span>, authtoken, app.api_key)<br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>            done(err)<br>          })<br><br>      })<br>  });",
                "isRoot": false,
                "uuid": "0c4956e4-c0c3-4afa-b2f9-b892dab3e228",
                "parentUUID": "05cc5d88-4600-482c-b994-ad99838e0b59",
                "skipped": false
              },
              {
                "title": "should be able to get application as a collaborator without master_key in response",
                "fullTitle": "Applications --- Get app should be able to get application as a collaborator without master_key in response",
                "timedOut": false,
                "duration": 1691,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken1, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    <span class=\"hljs-keyword\">var</span> application = res.body.application<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    application.user_uids.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    application.api_key.should.be.equal(api_key)<br>    <span class=\"hljs-comment\">//bug</span><br>    <span class=\"hljs-comment\">//application.created_at.should.be.equal(application.updated_at)</span><br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>    application.owner_uid.should.not.equal(application.user_uids[<span class=\"hljs-number\">1</span>])<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "82105300-c5c4-4d91-a520-f8376748bcbf",
                "parentUUID": "05cc5d88-4600-482c-b994-ad99838e0b59",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 9436
          },
          {
            "title": "Update app",
            "suites": [],
            "tests": [
              {
                "title": "should be able to update created application",
                "fullTitle": "Applications --- Update app should be able to update created application",
                "timedOut": false,
                "duration": 1454,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_application'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    <span class=\"hljs-keyword\">var</span> application = res.body.application<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    <span class=\"hljs-comment\">// application.user_uids[0].length.should.be.a('string')</span><br>    <span class=\"hljs-comment\">// console.log(\"==\", application.user_uids)</span><br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Awesome! Application updated successfully.'</span>)<br>    application.name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>    application.api_key.should.be.equal(api_key)<br>    application.created_at.should.be.not.equal(application.updated_at)<br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "6ea0a616-4015-4084-85b3-f006b6cc9bd8",
                "parentUUID": "e7444b60-0020-4df7-b396-5211e15b89e5",
                "skipped": false
              },
              {
                "title": "should not be able to update application as a collaborator",
                "fullTitle": "Applications --- Update app should not be able to update application as a collaborator",
                "timedOut": false,
                "duration": 4911,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'Update_application'</span>, res.body.user.authtoken, api_key, {<br>                  <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated by collaborator\"</span><br>                })<br>                .expect(<span class=\"hljs-number\">422</span>) <span class=\"hljs-comment\">//need to fix in factory</span><br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.error_message.should.to.be.equal(<span class=\"hljs-string\">'Bummer. Access denied. It seems you are not the owner of the app.'</span>)<br>                  done(err)<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "e2954520-d218-40c5-b9dd-c71259f1ba86",
                "parentUUID": "e7444b60-0020-4df7-b396-5211e15b89e5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "e7444b60-0020-4df7-b396-5211e15b89e5",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to update created application",
                "fullTitle": "Applications --- Update app should be able to update created application",
                "timedOut": false,
                "duration": 1454,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_application'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    <span class=\"hljs-keyword\">var</span> application = res.body.application<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    <span class=\"hljs-comment\">// application.user_uids[0].length.should.be.a('string')</span><br>    <span class=\"hljs-comment\">// console.log(\"==\", application.user_uids)</span><br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Awesome! Application updated successfully.'</span>)<br>    application.name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>    application.api_key.should.be.equal(api_key)<br>    application.created_at.should.be.not.equal(application.updated_at)<br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "6ea0a616-4015-4084-85b3-f006b6cc9bd8",
                "parentUUID": "e7444b60-0020-4df7-b396-5211e15b89e5",
                "skipped": false
              },
              {
                "title": "should not be able to update application as a collaborator",
                "fullTitle": "Applications --- Update app should not be able to update application as a collaborator",
                "timedOut": false,
                "duration": 4911,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'Update_application'</span>, res.body.user.authtoken, api_key, {<br>                  <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated by collaborator\"</span><br>                })<br>                .expect(<span class=\"hljs-number\">422</span>) <span class=\"hljs-comment\">//need to fix in factory</span><br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.error_message.should.to.be.equal(<span class=\"hljs-string\">'Bummer. Access denied. It seems you are not the owner of the app.'</span>)<br>                  done(err)<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "e2954520-d218-40c5-b9dd-c71259f1ba86",
                "parentUUID": "e7444b60-0020-4df7-b396-5211e15b89e5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6365
          },
          {
            "title": "Delete app",
            "suites": [],
            "tests": [
              {
                "title": "should be able to delete careated application",
                "fullTitle": "Applications --- Delete app should be able to delete careated application",
                "timedOut": false,
                "duration": 3767,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appName = <span class=\"hljs-string\">\"Delete App\"</span><br>      factories.create(<span class=\"hljs-string\">'Create_application'</span>, authtoken, {<br>          <span class=\"hljs-string\">\"name\"</span>: appName<br>        })<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          <span class=\"hljs-keyword\">var</span> application = res.body.application<br>          res.body.notice.should.be.equal(<span class=\"hljs-string\">'Hurray! Application created successfully.'</span>)<br>          factories.create(<span class=\"hljs-string\">'Delete_application'</span>, authtoken, application.api_key)<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              res1.body.notice.should.be.equal(<span class=\"hljs-string\">'That worked. Application deleted successfully!'</span>)<br>              done(err)<br>            })<br>        })",
                "isRoot": false,
                "uuid": "0a0baefb-b94f-4f37-8384-6ef42bedc8bf",
                "parentUUID": "83ba1904-ea0a-486d-895c-8244b2945520",
                "skipped": false
              },
              {
                "title": "should not be able to delete application as a collaborator",
                "fullTitle": "Applications --- Delete app should not be able to delete application as a collaborator",
                "timedOut": false,
                "duration": 4796,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>        <span class=\"hljs-string\">\"emails\"</span>: [<br>          res.body.user.email<br>        ]<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        factories.create(<span class=\"hljs-string\">'Delete_application'</span>, res.body.user.authtoken, api_key)<br>          .expect(<span class=\"hljs-number\">422</span>) <span class=\"hljs-comment\">//need to fix in factory</span><br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> response = res2.body<br>            response.error_message.should.to.be.equal(<span class=\"hljs-string\">'Bummer. Access denied. It seems you are not the owner of the app.'</span>)<br>            done(err)<br>          })<br>      })<br>  })",
                "isRoot": false,
                "uuid": "8447a218-76fc-4982-bca5-45cb2dc8a817",
                "parentUUID": "83ba1904-ea0a-486d-895c-8244b2945520",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "83ba1904-ea0a-486d-895c-8244b2945520",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to delete careated application",
                "fullTitle": "Applications --- Delete app should be able to delete careated application",
                "timedOut": false,
                "duration": 3767,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> appName = <span class=\"hljs-string\">\"Delete App\"</span><br>      factories.create(<span class=\"hljs-string\">'Create_application'</span>, authtoken, {<br>          <span class=\"hljs-string\">\"name\"</span>: appName<br>        })<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          <span class=\"hljs-keyword\">var</span> application = res.body.application<br>          res.body.notice.should.be.equal(<span class=\"hljs-string\">'Hurray! Application created successfully.'</span>)<br>          factories.create(<span class=\"hljs-string\">'Delete_application'</span>, authtoken, application.api_key)<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              res1.body.notice.should.be.equal(<span class=\"hljs-string\">'That worked. Application deleted successfully!'</span>)<br>              done(err)<br>            })<br>        })",
                "isRoot": false,
                "uuid": "0a0baefb-b94f-4f37-8384-6ef42bedc8bf",
                "parentUUID": "83ba1904-ea0a-486d-895c-8244b2945520",
                "skipped": false
              },
              {
                "title": "should not be able to delete application as a collaborator",
                "fullTitle": "Applications --- Delete app should not be able to delete application as a collaborator",
                "timedOut": false,
                "duration": 4796,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>        <span class=\"hljs-string\">\"emails\"</span>: [<br>          res.body.user.email<br>        ]<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        factories.create(<span class=\"hljs-string\">'Delete_application'</span>, res.body.user.authtoken, api_key)<br>          .expect(<span class=\"hljs-number\">422</span>) <span class=\"hljs-comment\">//need to fix in factory</span><br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> response = res2.body<br>            response.error_message.should.to.be.equal(<span class=\"hljs-string\">'Bummer. Access denied. It seems you are not the owner of the app.'</span>)<br>            done(err)<br>          })<br>      })<br>  })",
                "isRoot": false,
                "uuid": "8447a218-76fc-4982-bca5-45cb2dc8a817",
                "parentUUID": "83ba1904-ea0a-486d-895c-8244b2945520",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8563
          },
          {
            "title": "Reset app master key",
            "suites": [],
            "tests": [
              {
                "title": "should be able to reset app master key as a owner",
                "fullTitle": "Applications --- Reset app master key should be able to reset app master key as a owner",
                "timedOut": false,
                "duration": 2909,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.reset_master_key)<br>  .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>  .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>  .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'OK, we\\'ve generated a new master key for you.'</span>)<br>    factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> application = res1.body.application<br>        application.master_key.should.be.not.equal(master_key)<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "f868ef9b-2c60-46c8-bdac-720e0575a9ac",
                "parentUUID": "cbae1fe4-af1a-4de0-9e80-1916b43b2520",
                "skipped": false
              },
              {
                "title": "should not be able to reset app master key as a collaborator",
                "fullTitle": "Applications --- Reset app master key should not be able to reset app master key as a collaborator",
                "timedOut": false,
                "duration": 1686,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.reset_master_key)<br>  .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>  .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken3)<br>  .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>  .expect(<span class=\"hljs-number\">422</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Access denied. It seems you are not the owner of the app.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">133</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {}<br>    })          <br>    done(err)<br>    <br>  })",
                "isRoot": false,
                "uuid": "b9b43287-be32-490c-a84e-b9d6a80299de",
                "parentUUID": "cbae1fe4-af1a-4de0-9e80-1916b43b2520",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "cbae1fe4-af1a-4de0-9e80-1916b43b2520",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to reset app master key as a owner",
                "fullTitle": "Applications --- Reset app master key should be able to reset app master key as a owner",
                "timedOut": false,
                "duration": 2909,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.reset_master_key)<br>  .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>  .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>  .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'OK, we\\'ve generated a new master key for you.'</span>)<br>    factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> application = res1.body.application<br>        application.master_key.should.be.not.equal(master_key)<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "f868ef9b-2c60-46c8-bdac-720e0575a9ac",
                "parentUUID": "cbae1fe4-af1a-4de0-9e80-1916b43b2520",
                "skipped": false
              },
              {
                "title": "should not be able to reset app master key as a collaborator",
                "fullTitle": "Applications --- Reset app master key should not be able to reset app master key as a collaborator",
                "timedOut": false,
                "duration": 1686,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.reset_master_key)<br>  .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>  .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken3)<br>  .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>  .expect(<span class=\"hljs-number\">422</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Access denied. It seems you are not the owner of the app.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">133</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {}<br>    })          <br>    done(err)<br>    <br>  })",
                "isRoot": false,
                "uuid": "b9b43287-be32-490c-a84e-b9d6a80299de",
                "parentUUID": "cbae1fe4-af1a-4de0-9e80-1916b43b2520",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4595
          },
          {
            "title": "App settings",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get application settings",
                "fullTitle": "Applications --- App settings should be able to get application settings",
                "timedOut": false,
                "duration": 1436,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_app_settings'</span>, authtoken, api_key)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>  <span class=\"hljs-keyword\">var</span> settings = res.body.app_settings<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>  <span class=\"hljs-built_in\">Object</span>.keys(settings).should.to.be.deep.equal([<span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>, <span class=\"hljs-string\">'smtp_settings'</span>, <span class=\"hljs-string\">'login_schemes'</span>, <span class=\"hljs-string\">'upload_type_restriction'</span>, <span class=\"hljs-string\">'restricted_profile_update'</span>, <span class=\"hljs-string\">'hide_email'</span>, <span class=\"hljs-string\">'allow_client_notifications'</span>, <span class=\"hljs-string\">'active_user_threshold'</span>, <span class=\"hljs-string\">'auto_create_tenants'</span>, <span class=\"hljs-string\">'activation_template'</span>, <span class=\"hljs-string\">'welcome_template'</span>, <span class=\"hljs-string\">'forgot_password_template'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.login_schemes).should.to.be.deep.equal([<span class=\"hljs-string\">'google'</span>, <span class=\"hljs-string\">'facebook'</span>, <span class=\"hljs-string\">'twitter'</span>, <span class=\"hljs-string\">'tibbr'</span>, <span class=\"hljs-string\">'traditional'</span>, <span class=\"hljs-string\">'anyauth'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.upload_type_restriction).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'list'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.restricted_profile_update).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'keys'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.activation_template).should.to.be.deep.equal([<span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.welcome_template).should.to.be.deep.equal([<span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.forgot_password_template).should.to.be.deep.equal([<span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'template'</span>])<br><br>  <span class=\"hljs-comment\">// Data type assertion</span><br>  settings.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.login_schemes.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.upload_type_restriction.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.restricted_profile_update.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.hide_email.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.allow_client_notifications.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.active_user_threshold.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>  settings.auto_create_tenants.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.activation_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.welcome_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.forgot_password_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.login_schemes.google.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.facebook.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.twitter.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.tibbr.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.traditional.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.anyauth.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.upload_type_restriction.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.upload_type_restriction.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.upload_type_restriction.list.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  settings.restricted_profile_update.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.restricted_profile_update.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.restricted_profile_update.keys.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  settings.activation_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.activation_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.activation_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.activation_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.welcome_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.welcome_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.welcome_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.welcome_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.forgot_password_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.forgot_password_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.forgot_password_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>  <span class=\"hljs-comment\">// Value assertion</span><br>  settings.login_schemes.google.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.facebook.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.twitter.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.tibbr.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.traditional.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.anyauth.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.upload_type_restriction.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.upload_type_restriction.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.upload_type_restriction.list.should.be.deep.equal([])<br>  settings.restricted_profile_update.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.restricted_profile_update.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.restricted_profile_update.keys.should.be.deep.equal([])<br><br>  settings.hide_email.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.allow_client_notifications.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.active_user_threshold.should.be.equal(<span class=\"hljs-number\">15</span>)<br>  settings.auto_create_tenants.should.be.equal(<span class=\"hljs-literal\">false</span>)<br><br>  settings.activation_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>  settings.activation_template.subject.should.be.equal(<span class=\"hljs-string\">'Activate Your Account'</span>)<br>  settings.activation_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;Hi!&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Thank you for creating an account!\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Please &lt;a href=\"{{confirm_link}}\"&gt;confirm&lt;/a&gt; your account to continue.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\nIf you have any problems, please feel free to contact us.\\n&lt;/p&gt;\\n\\n&lt;br/&gt;\\n\\n&lt;p&gt;\\n  Cheers.\\n&lt;/p&gt;'</span>)<br>  settings.activation_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.welcome_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>  settings.welcome_template.subject.should.be.equal(<span class=\"hljs-string\">'Welcome!'</span>)<br>  settings.welcome_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;\\n  Hi!\\n&lt;/p&gt;\\n&lt;p&gt;\\n  Welcome to {{app_name}}.\\n  &lt;br/&gt;\\n  &lt;br/&gt;\\n  Your registration has been confirmed successfully.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Cheers\\n&lt;/p&gt;'</span>)<br>  settings.welcome_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.forgot_password_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>  settings.forgot_password_template.subject.should.be.equal(<span class=\"hljs-string\">'Reset Your Password'</span>)<br>  settings.forgot_password_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;Hi!&lt;/p&gt;\\n\\n&lt;p&gt;\\n  You (or someone else) have requested to reset your password for {{app_name}}.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  If you follow the link below you will be able to personally reset your password\\n&lt;/p&gt;\\n\\n&lt;br /&gt;\\n{{reset_password_link}}\\n\\n&lt;p&gt;Cheers&lt;/p&gt;'</span>)<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "5ba96426-b4e4-4459-83ce-9cfa617b6d5e",
                "parentUUID": "97c07ea4-479d-4e74-bc41-a221a780f95e",
                "skipped": false
              },
              {
                "title": "should be able to update application settings",
                "fullTitle": "Applications --- App settings should be able to update application settings",
                "timedOut": false,
                "duration": 1614,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_app_settings'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"app_settings\"</span>: {<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"test_tool\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>      },<br>      <span class=\"hljs-string\">\"discrete_variables\"</span>: {<br>        <span class=\"hljs-string\">\"supertest\"</span>: <span class=\"hljs-string\">\"is a nodejs test tool\"</span><br>      },<br>      <span class=\"hljs-string\">\"activation_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"activation_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail activation template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"welcome_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"welcome_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail welcome template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"forgot_password_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"forgot_password_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"forgot password template\"</span><br>      },<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"testing_tool\"</span>: <span class=\"hljs-string\">\"using supertest and mocha\"</span><br>      },<br>      <span class=\"hljs-string\">\"allow_client_notifications\"</span>: <span class=\"hljs-string\">\"true\"</span>,<br>      <span class=\"hljs-string\">\"active_user_threshold\"</span>: <span class=\"hljs-string\">\"20\"</span>,<br>      <span class=\"hljs-string\">\"auto_create_tenants\"</span>: <span class=\"hljs-string\">\"false\"</span><br>    }<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> settings = res.body.app_settings<br>    <br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Awesome! The application settings were updated successfully.'</span>)<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(settings).should.to.be.deep.equal([<span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>, <span class=\"hljs-string\">'smtp_settings'</span>, <span class=\"hljs-string\">'login_schemes'</span>, <span class=\"hljs-string\">'upload_type_restriction'</span>, <span class=\"hljs-string\">'restricted_profile_update'</span>, <span class=\"hljs-string\">'hide_email'</span>, <span class=\"hljs-string\">'allow_client_notifications'</span>, <span class=\"hljs-string\">'active_user_threshold'</span>, <span class=\"hljs-string\">'auto_create_tenants'</span>, <span class=\"hljs-string\">'activation_template'</span>, <span class=\"hljs-string\">'welcome_template'</span>, <span class=\"hljs-string\">'forgot_password_template'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.login_schemes).should.to.be.deep.equal([<span class=\"hljs-string\">'google'</span>, <span class=\"hljs-string\">'facebook'</span>, <span class=\"hljs-string\">'twitter'</span>, <span class=\"hljs-string\">'tibbr'</span>, <span class=\"hljs-string\">'traditional'</span>, <span class=\"hljs-string\">'anyauth'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.upload_type_restriction).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'list'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.restricted_profile_update).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'keys'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.activation_template).should.to.be.deep.equal([<span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.welcome_template).should.to.be.deep.equal([<span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.forgot_password_template).should.to.be.deep.equal([<span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'template'</span>])<br><br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    settings.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.login_schemes.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.upload_type_restriction.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.restricted_profile_update.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.hide_email.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.allow_client_notifications.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.active_user_threshold.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>    settings.auto_create_tenants.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.activation_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.welcome_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.forgot_password_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.login_schemes.google.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.facebook.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.twitter.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.tibbr.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.traditional.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.anyauth.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.upload_type_restriction.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.upload_type_restriction.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.upload_type_restriction.list.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    settings.restricted_profile_update.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.restricted_profile_update.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.restricted_profile_update.keys.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    settings.activation_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.activation_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.activation_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.activation_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.welcome_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.welcome_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.welcome_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.welcome_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.forgot_password_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.forgot_password_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.forgot_password_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>    <span class=\"hljs-comment\">// Value assertion</span><br>    settings.login_schemes.google.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.facebook.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.twitter.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.tibbr.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.traditional.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.anyauth.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.upload_type_restriction.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.upload_type_restriction.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.upload_type_restriction.list.should.be.deep.equal([])<br>    settings.restricted_profile_update.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.restricted_profile_update.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.restricted_profile_update.keys.should.be.deep.equal([])<br>    settings.hide_email.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.allow_client_notifications.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.active_user_threshold.should.be.equal(<span class=\"hljs-number\">20</span>)<br>    settings.auto_create_tenants.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.activation_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>    settings.activation_template.subject.should.be.equal(<span class=\"hljs-string\">'activation_template'</span>)<br>    settings.activation_template.template.should.be.equal(<span class=\"hljs-string\">'the mail activation template'</span>)<br>    settings.activation_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.welcome_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>    settings.welcome_template.subject.should.be.equal(<span class=\"hljs-string\">'welcome_template'</span>)<br>    settings.welcome_template.template.should.be.equal(<span class=\"hljs-string\">'the mail welcome template'</span>)<br>    settings.welcome_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.forgot_password_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>    settings.forgot_password_template.subject.should.be.equal(<span class=\"hljs-string\">'forgot_password_template'</span>)<br>    settings.forgot_password_template.template.should.be.equal(<span class=\"hljs-string\">'forgot password template'</span>)<br>    settings.application_variables.testing_tool.should.be.equal(<span class=\"hljs-string\">'using supertest and mocha'</span>)<br>    settings.discrete_variables.supertest.should.be.equal(<span class=\"hljs-string\">'is a nodejs test tool'</span>)<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "102a9149-05d8-4c87-a6e6-2e903b3a14aa",
                "parentUUID": "97c07ea4-479d-4e74-bc41-a221a780f95e",
                "skipped": false
              },
              {
                "title": "should be able to reset application settings",
                "fullTitle": "Applications --- App settings should be able to reset application settings",
                "timedOut": false,
                "duration": 3182,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_app_settings'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"app_settings\"</span>: {<br>      <span class=\"hljs-string\">\"activation_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"activation_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail activation template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"welcome_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"welcome_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail welcome template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"forgot_password_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"forgot_password_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"forgot password template\"</span><br>      },<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"testing_tool\"</span>: <span class=\"hljs-string\">\"using 'supertest and mocha'\"</span><br>      },<br>      <span class=\"hljs-string\">\"allow_client_notifications\"</span>: <span class=\"hljs-string\">\"true\"</span>,<br>      <span class=\"hljs-string\">\"active_user_threshold\"</span>: <span class=\"hljs-string\">\"20\"</span>,<br>      <span class=\"hljs-string\">\"auto_create_tenants\"</span>: <span class=\"hljs-string\">\"false\"</span><br>    }<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    factories.create(<span class=\"hljs-string\">'reset_app_settings'</span>, authtoken, api_key, {<br>        <span class=\"hljs-string\">\"scope\"</span>: {<br>          <span class=\"hljs-string\">\"activation_template\"</span>: []<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> settings = res.body.app_settings<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Awesome! The application settings were updated successfully.'</span>)<br>        <br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(settings).should.to.be.deep.equal([<span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>, <span class=\"hljs-string\">'smtp_settings'</span>, <span class=\"hljs-string\">'login_schemes'</span>, <span class=\"hljs-string\">'upload_type_restriction'</span>, <span class=\"hljs-string\">'restricted_profile_update'</span>, <span class=\"hljs-string\">'hide_email'</span>, <span class=\"hljs-string\">'allow_client_notifications'</span>, <span class=\"hljs-string\">'active_user_threshold'</span>, <span class=\"hljs-string\">'auto_create_tenants'</span>, <span class=\"hljs-string\">'activation_template'</span>, <span class=\"hljs-string\">'welcome_template'</span>, <span class=\"hljs-string\">'forgot_password_template'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(settings.login_schemes).should.to.be.deep.equal([<span class=\"hljs-string\">'google'</span>, <span class=\"hljs-string\">'facebook'</span>, <span class=\"hljs-string\">'twitter'</span>, <span class=\"hljs-string\">'tibbr'</span>, <span class=\"hljs-string\">'traditional'</span>, <span class=\"hljs-string\">'anyauth'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(settings.upload_type_restriction).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'list'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(settings.restricted_profile_update).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'keys'</span>])<br>        <span class=\"hljs-comment\">// order is not static need to change</span><br>        <span class=\"hljs-comment\">// Object.keys(settings.activation_template).should.to.be.deep.equal(['subject', 'reply_to', 'template', 'use'])</span><br>        <span class=\"hljs-comment\">// Object.keys(settings.welcome_template).should.to.be.equal(['subject', 'template', 'use', 'reply_to'])</span><br>        <span class=\"hljs-comment\">// Object.keys(settings.forgot_password_template).should.to.be.equal(['reply_to', 'subject', 'template'])</span><br><br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        settings.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.login_schemes.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.upload_type_restriction.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.restricted_profile_update.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.hide_email.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.allow_client_notifications.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.active_user_threshold.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        settings.auto_create_tenants.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.activation_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.welcome_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.forgot_password_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.login_schemes.google.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.facebook.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.twitter.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.tibbr.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.traditional.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.anyauth.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.upload_type_restriction.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.upload_type_restriction.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.upload_type_restriction.list.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        settings.restricted_profile_update.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.restricted_profile_update.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.restricted_profile_update.keys.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        settings.activation_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.activation_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.activation_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.activation_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.welcome_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.welcome_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.welcome_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.welcome_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.forgot_password_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.forgot_password_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.forgot_password_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>        <span class=\"hljs-comment\">// Value assertion</span><br>        settings.login_schemes.google.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.facebook.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.twitter.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.tibbr.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.traditional.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.anyauth.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.upload_type_restriction.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        settings.upload_type_restriction.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.upload_type_restriction.list.should.be.deep.equal([])<br>        settings.restricted_profile_update.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        settings.restricted_profile_update.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.restricted_profile_update.keys.should.be.deep.equal([])<br><br>        settings.hide_email.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        settings.allow_client_notifications.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.active_user_threshold.should.be.equal(<span class=\"hljs-number\">20</span>)<br>        settings.auto_create_tenants.should.be.equal(<span class=\"hljs-literal\">false</span>)<br><br>        settings.activation_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>        settings.activation_template.subject.should.be.equal(<span class=\"hljs-string\">'Activate Your Account'</span>)<br>        settings.activation_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;Hi!&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Thank you for creating an account!\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Please &lt;a href=\"{{confirm_link}}\"&gt;confirm&lt;/a&gt; your account to continue.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\nIf you have any problems, please feel free to contact us.\\n&lt;/p&gt;\\n\\n&lt;br/&gt;\\n\\n&lt;p&gt;\\n  Cheers.\\n&lt;/p&gt;'</span>)<br>        settings.activation_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.welcome_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>        settings.welcome_template.subject.should.be.equal(<span class=\"hljs-string\">'welcome_template'</span>)<br>        settings.welcome_template.template.should.be.equal(<span class=\"hljs-string\">'the mail welcome template'</span>)<br>        settings.welcome_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.forgot_password_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>        settings.forgot_password_template.subject.should.be.equal(<span class=\"hljs-string\">'forgot_password_template'</span>)<br>        settings.forgot_password_template.template.should.be.equal(<span class=\"hljs-string\">'forgot password template'</span>)<br>        done(err)<br>      });<br>  });",
                "isRoot": false,
                "uuid": "62c5f537-b47d-49f8-a5e4-1a0e0564bf13",
                "parentUUID": "97c07ea4-479d-4e74-bc41-a221a780f95e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "97c07ea4-479d-4e74-bc41-a221a780f95e",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get application settings",
                "fullTitle": "Applications --- App settings should be able to get application settings",
                "timedOut": false,
                "duration": 1436,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_app_settings'</span>, authtoken, api_key)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>  <span class=\"hljs-keyword\">var</span> settings = res.body.app_settings<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>  <span class=\"hljs-built_in\">Object</span>.keys(settings).should.to.be.deep.equal([<span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>, <span class=\"hljs-string\">'smtp_settings'</span>, <span class=\"hljs-string\">'login_schemes'</span>, <span class=\"hljs-string\">'upload_type_restriction'</span>, <span class=\"hljs-string\">'restricted_profile_update'</span>, <span class=\"hljs-string\">'hide_email'</span>, <span class=\"hljs-string\">'allow_client_notifications'</span>, <span class=\"hljs-string\">'active_user_threshold'</span>, <span class=\"hljs-string\">'auto_create_tenants'</span>, <span class=\"hljs-string\">'activation_template'</span>, <span class=\"hljs-string\">'welcome_template'</span>, <span class=\"hljs-string\">'forgot_password_template'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.login_schemes).should.to.be.deep.equal([<span class=\"hljs-string\">'google'</span>, <span class=\"hljs-string\">'facebook'</span>, <span class=\"hljs-string\">'twitter'</span>, <span class=\"hljs-string\">'tibbr'</span>, <span class=\"hljs-string\">'traditional'</span>, <span class=\"hljs-string\">'anyauth'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.upload_type_restriction).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'list'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.restricted_profile_update).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'keys'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.activation_template).should.to.be.deep.equal([<span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.welcome_template).should.to.be.deep.equal([<span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.forgot_password_template).should.to.be.deep.equal([<span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'template'</span>])<br><br>  <span class=\"hljs-comment\">// Data type assertion</span><br>  settings.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.login_schemes.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.upload_type_restriction.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.restricted_profile_update.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.hide_email.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.allow_client_notifications.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.active_user_threshold.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>  settings.auto_create_tenants.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.activation_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.welcome_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.forgot_password_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.login_schemes.google.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.facebook.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.twitter.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.tibbr.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.traditional.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.anyauth.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.upload_type_restriction.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.upload_type_restriction.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.upload_type_restriction.list.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  settings.restricted_profile_update.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.restricted_profile_update.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.restricted_profile_update.keys.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  settings.activation_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.activation_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.activation_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.activation_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.welcome_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.welcome_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.welcome_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.welcome_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.forgot_password_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.forgot_password_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.forgot_password_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>  <span class=\"hljs-comment\">// Value assertion</span><br>  settings.login_schemes.google.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.facebook.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.twitter.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.tibbr.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.traditional.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.anyauth.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.upload_type_restriction.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.upload_type_restriction.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.upload_type_restriction.list.should.be.deep.equal([])<br>  settings.restricted_profile_update.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.restricted_profile_update.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.restricted_profile_update.keys.should.be.deep.equal([])<br><br>  settings.hide_email.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.allow_client_notifications.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.active_user_threshold.should.be.equal(<span class=\"hljs-number\">15</span>)<br>  settings.auto_create_tenants.should.be.equal(<span class=\"hljs-literal\">false</span>)<br><br>  settings.activation_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>  settings.activation_template.subject.should.be.equal(<span class=\"hljs-string\">'Activate Your Account'</span>)<br>  settings.activation_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;Hi!&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Thank you for creating an account!\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Please &lt;a href=\"{{confirm_link}}\"&gt;confirm&lt;/a&gt; your account to continue.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\nIf you have any problems, please feel free to contact us.\\n&lt;/p&gt;\\n\\n&lt;br/&gt;\\n\\n&lt;p&gt;\\n  Cheers.\\n&lt;/p&gt;'</span>)<br>  settings.activation_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.welcome_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>  settings.welcome_template.subject.should.be.equal(<span class=\"hljs-string\">'Welcome!'</span>)<br>  settings.welcome_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;\\n  Hi!\\n&lt;/p&gt;\\n&lt;p&gt;\\n  Welcome to {{app_name}}.\\n  &lt;br/&gt;\\n  &lt;br/&gt;\\n  Your registration has been confirmed successfully.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Cheers\\n&lt;/p&gt;'</span>)<br>  settings.welcome_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.forgot_password_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>  settings.forgot_password_template.subject.should.be.equal(<span class=\"hljs-string\">'Reset Your Password'</span>)<br>  settings.forgot_password_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;Hi!&lt;/p&gt;\\n\\n&lt;p&gt;\\n  You (or someone else) have requested to reset your password for {{app_name}}.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  If you follow the link below you will be able to personally reset your password\\n&lt;/p&gt;\\n\\n&lt;br /&gt;\\n{{reset_password_link}}\\n\\n&lt;p&gt;Cheers&lt;/p&gt;'</span>)<br>  done(err)<br>})",
                "isRoot": false,
                "uuid": "5ba96426-b4e4-4459-83ce-9cfa617b6d5e",
                "parentUUID": "97c07ea4-479d-4e74-bc41-a221a780f95e",
                "skipped": false
              },
              {
                "title": "should be able to update application settings",
                "fullTitle": "Applications --- App settings should be able to update application settings",
                "timedOut": false,
                "duration": 1614,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_app_settings'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"app_settings\"</span>: {<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"test_tool\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>      },<br>      <span class=\"hljs-string\">\"discrete_variables\"</span>: {<br>        <span class=\"hljs-string\">\"supertest\"</span>: <span class=\"hljs-string\">\"is a nodejs test tool\"</span><br>      },<br>      <span class=\"hljs-string\">\"activation_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"activation_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail activation template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"welcome_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"welcome_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail welcome template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"forgot_password_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"forgot_password_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"forgot password template\"</span><br>      },<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"testing_tool\"</span>: <span class=\"hljs-string\">\"using supertest and mocha\"</span><br>      },<br>      <span class=\"hljs-string\">\"allow_client_notifications\"</span>: <span class=\"hljs-string\">\"true\"</span>,<br>      <span class=\"hljs-string\">\"active_user_threshold\"</span>: <span class=\"hljs-string\">\"20\"</span>,<br>      <span class=\"hljs-string\">\"auto_create_tenants\"</span>: <span class=\"hljs-string\">\"false\"</span><br>    }<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> settings = res.body.app_settings<br>    <br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Awesome! The application settings were updated successfully.'</span>)<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(settings).should.to.be.deep.equal([<span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>, <span class=\"hljs-string\">'smtp_settings'</span>, <span class=\"hljs-string\">'login_schemes'</span>, <span class=\"hljs-string\">'upload_type_restriction'</span>, <span class=\"hljs-string\">'restricted_profile_update'</span>, <span class=\"hljs-string\">'hide_email'</span>, <span class=\"hljs-string\">'allow_client_notifications'</span>, <span class=\"hljs-string\">'active_user_threshold'</span>, <span class=\"hljs-string\">'auto_create_tenants'</span>, <span class=\"hljs-string\">'activation_template'</span>, <span class=\"hljs-string\">'welcome_template'</span>, <span class=\"hljs-string\">'forgot_password_template'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.login_schemes).should.to.be.deep.equal([<span class=\"hljs-string\">'google'</span>, <span class=\"hljs-string\">'facebook'</span>, <span class=\"hljs-string\">'twitter'</span>, <span class=\"hljs-string\">'tibbr'</span>, <span class=\"hljs-string\">'traditional'</span>, <span class=\"hljs-string\">'anyauth'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.upload_type_restriction).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'list'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.restricted_profile_update).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'keys'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.activation_template).should.to.be.deep.equal([<span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.welcome_template).should.to.be.deep.equal([<span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.forgot_password_template).should.to.be.deep.equal([<span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'template'</span>])<br><br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    settings.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.login_schemes.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.upload_type_restriction.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.restricted_profile_update.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.hide_email.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.allow_client_notifications.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.active_user_threshold.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>    settings.auto_create_tenants.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.activation_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.welcome_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.forgot_password_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.login_schemes.google.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.facebook.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.twitter.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.tibbr.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.traditional.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.anyauth.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.upload_type_restriction.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.upload_type_restriction.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.upload_type_restriction.list.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    settings.restricted_profile_update.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.restricted_profile_update.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.restricted_profile_update.keys.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    settings.activation_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.activation_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.activation_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.activation_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.welcome_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.welcome_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.welcome_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.welcome_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.forgot_password_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.forgot_password_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.forgot_password_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>    <span class=\"hljs-comment\">// Value assertion</span><br>    settings.login_schemes.google.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.facebook.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.twitter.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.tibbr.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.traditional.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.anyauth.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.upload_type_restriction.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.upload_type_restriction.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.upload_type_restriction.list.should.be.deep.equal([])<br>    settings.restricted_profile_update.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.restricted_profile_update.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.restricted_profile_update.keys.should.be.deep.equal([])<br>    settings.hide_email.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.allow_client_notifications.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.active_user_threshold.should.be.equal(<span class=\"hljs-number\">20</span>)<br>    settings.auto_create_tenants.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.activation_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>    settings.activation_template.subject.should.be.equal(<span class=\"hljs-string\">'activation_template'</span>)<br>    settings.activation_template.template.should.be.equal(<span class=\"hljs-string\">'the mail activation template'</span>)<br>    settings.activation_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.welcome_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>    settings.welcome_template.subject.should.be.equal(<span class=\"hljs-string\">'welcome_template'</span>)<br>    settings.welcome_template.template.should.be.equal(<span class=\"hljs-string\">'the mail welcome template'</span>)<br>    settings.welcome_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.forgot_password_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>    settings.forgot_password_template.subject.should.be.equal(<span class=\"hljs-string\">'forgot_password_template'</span>)<br>    settings.forgot_password_template.template.should.be.equal(<span class=\"hljs-string\">'forgot password template'</span>)<br>    settings.application_variables.testing_tool.should.be.equal(<span class=\"hljs-string\">'using supertest and mocha'</span>)<br>    settings.discrete_variables.supertest.should.be.equal(<span class=\"hljs-string\">'is a nodejs test tool'</span>)<br>    done(err)<br>  })",
                "isRoot": false,
                "uuid": "102a9149-05d8-4c87-a6e6-2e903b3a14aa",
                "parentUUID": "97c07ea4-479d-4e74-bc41-a221a780f95e",
                "skipped": false
              },
              {
                "title": "should be able to reset application settings",
                "fullTitle": "Applications --- App settings should be able to reset application settings",
                "timedOut": false,
                "duration": 3182,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_app_settings'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"app_settings\"</span>: {<br>      <span class=\"hljs-string\">\"activation_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"activation_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail activation template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"welcome_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"welcome_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail welcome template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"forgot_password_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"forgot_password_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"forgot password template\"</span><br>      },<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"testing_tool\"</span>: <span class=\"hljs-string\">\"using 'supertest and mocha'\"</span><br>      },<br>      <span class=\"hljs-string\">\"allow_client_notifications\"</span>: <span class=\"hljs-string\">\"true\"</span>,<br>      <span class=\"hljs-string\">\"active_user_threshold\"</span>: <span class=\"hljs-string\">\"20\"</span>,<br>      <span class=\"hljs-string\">\"auto_create_tenants\"</span>: <span class=\"hljs-string\">\"false\"</span><br>    }<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    factories.create(<span class=\"hljs-string\">'reset_app_settings'</span>, authtoken, api_key, {<br>        <span class=\"hljs-string\">\"scope\"</span>: {<br>          <span class=\"hljs-string\">\"activation_template\"</span>: []<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> settings = res.body.app_settings<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Awesome! The application settings were updated successfully.'</span>)<br>        <br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(settings).should.to.be.deep.equal([<span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>, <span class=\"hljs-string\">'smtp_settings'</span>, <span class=\"hljs-string\">'login_schemes'</span>, <span class=\"hljs-string\">'upload_type_restriction'</span>, <span class=\"hljs-string\">'restricted_profile_update'</span>, <span class=\"hljs-string\">'hide_email'</span>, <span class=\"hljs-string\">'allow_client_notifications'</span>, <span class=\"hljs-string\">'active_user_threshold'</span>, <span class=\"hljs-string\">'auto_create_tenants'</span>, <span class=\"hljs-string\">'activation_template'</span>, <span class=\"hljs-string\">'welcome_template'</span>, <span class=\"hljs-string\">'forgot_password_template'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(settings.login_schemes).should.to.be.deep.equal([<span class=\"hljs-string\">'google'</span>, <span class=\"hljs-string\">'facebook'</span>, <span class=\"hljs-string\">'twitter'</span>, <span class=\"hljs-string\">'tibbr'</span>, <span class=\"hljs-string\">'traditional'</span>, <span class=\"hljs-string\">'anyauth'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(settings.upload_type_restriction).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'list'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(settings.restricted_profile_update).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'keys'</span>])<br>        <span class=\"hljs-comment\">// order is not static need to change</span><br>        <span class=\"hljs-comment\">// Object.keys(settings.activation_template).should.to.be.deep.equal(['subject', 'reply_to', 'template', 'use'])</span><br>        <span class=\"hljs-comment\">// Object.keys(settings.welcome_template).should.to.be.equal(['subject', 'template', 'use', 'reply_to'])</span><br>        <span class=\"hljs-comment\">// Object.keys(settings.forgot_password_template).should.to.be.equal(['reply_to', 'subject', 'template'])</span><br><br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        settings.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.login_schemes.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.upload_type_restriction.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.restricted_profile_update.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.hide_email.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.allow_client_notifications.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.active_user_threshold.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        settings.auto_create_tenants.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.activation_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.welcome_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.forgot_password_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.login_schemes.google.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.facebook.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.twitter.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.tibbr.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.traditional.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.anyauth.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.upload_type_restriction.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.upload_type_restriction.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.upload_type_restriction.list.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        settings.restricted_profile_update.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.restricted_profile_update.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.restricted_profile_update.keys.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        settings.activation_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.activation_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.activation_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.activation_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.welcome_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.welcome_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.welcome_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.welcome_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.forgot_password_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.forgot_password_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.forgot_password_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>        <span class=\"hljs-comment\">// Value assertion</span><br>        settings.login_schemes.google.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.facebook.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.twitter.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.tibbr.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.traditional.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.anyauth.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.upload_type_restriction.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        settings.upload_type_restriction.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.upload_type_restriction.list.should.be.deep.equal([])<br>        settings.restricted_profile_update.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        settings.restricted_profile_update.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.restricted_profile_update.keys.should.be.deep.equal([])<br><br>        settings.hide_email.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        settings.allow_client_notifications.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.active_user_threshold.should.be.equal(<span class=\"hljs-number\">20</span>)<br>        settings.auto_create_tenants.should.be.equal(<span class=\"hljs-literal\">false</span>)<br><br>        settings.activation_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>        settings.activation_template.subject.should.be.equal(<span class=\"hljs-string\">'Activate Your Account'</span>)<br>        settings.activation_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;Hi!&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Thank you for creating an account!\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Please &lt;a href=\"{{confirm_link}}\"&gt;confirm&lt;/a&gt; your account to continue.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\nIf you have any problems, please feel free to contact us.\\n&lt;/p&gt;\\n\\n&lt;br/&gt;\\n\\n&lt;p&gt;\\n  Cheers.\\n&lt;/p&gt;'</span>)<br>        settings.activation_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.welcome_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>        settings.welcome_template.subject.should.be.equal(<span class=\"hljs-string\">'welcome_template'</span>)<br>        settings.welcome_template.template.should.be.equal(<span class=\"hljs-string\">'the mail welcome template'</span>)<br>        settings.welcome_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.forgot_password_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>        settings.forgot_password_template.subject.should.be.equal(<span class=\"hljs-string\">'forgot_password_template'</span>)<br>        settings.forgot_password_template.template.should.be.equal(<span class=\"hljs-string\">'forgot password template'</span>)<br>        done(err)<br>      });<br>  });",
                "isRoot": false,
                "uuid": "62c5f537-b47d-49f8-a5e4-1a0e0564bf13",
                "parentUUID": "97c07ea4-479d-4e74-bc41-a221a780f95e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6232
          },
          {
            "title": "Collaborators invite and unaccepted_invitations",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all collaborators present in an application",
                "fullTitle": "Applications --- Collaborators invite and unaccepted_invitations should be able to get all collaborators present in an application",
                "timedOut": true,
                "duration": 60050,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">60000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  collaborator = res.body.user<br>  <span class=\"hljs-keyword\">return</span> res<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"emails\"</span>: [<br>      res.body.user.email<br>    ]<br>  }))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Get_collaborators'</span>, authtoken, api_key)) <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  users = res.body.users<br>  <span class=\"hljs-built_in\">Object</span>.keys(users[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'email'</span>,<span class=\"hljs-string\">'username'</span>,<span class=\"hljs-string\">'company'</span>,<span class=\"hljs-string\">'plan_id'</span>,<span class=\"hljs-string\">'roles'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(users[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'email'</span>,<span class=\"hljs-string\">'username'</span>,<span class=\"hljs-string\">'plan_id'</span>,<span class=\"hljs-string\">'is_owner'</span>,<span class=\"hljs-string\">'roles'</span>])<br>  users[<span class=\"hljs-number\">0</span>].email.should.be.equal(collaborator.email)<br>  users[<span class=\"hljs-number\">1</span>].email.should.be.equal(email)<br>  users[<span class=\"hljs-number\">1</span>].is_owner.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "err": {
                  "name": "Error",
                  "message": "timeout of 60000ms exceeded. Ensure the done() callback is being called in this test.",
                  "stack": "<span class=\"hljs-built_in\">Error</span>: timeout <span class=\"hljs-keyword\">of</span> <span class=\"hljs-number\">60000</span>ms exceeded. Ensure the done() callback is being called <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">this</span> test."
                },
                "isRoot": false,
                "uuid": "fcd3529d-1def-4fb3-8048-9597ec89bce3",
                "parentUUID": "ee0922bb-d23b-4069-86af-be83617d5015",
                "skipped": false
              },
              {
                "title": "should be able to invite collaborators for an application",
                "fullTitle": "Applications --- Collaborators invite and unaccepted_invitations should be able to invite collaborators for an application",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"emails\"</span>: [<br>      <span class=\"hljs-string\">\"test1user@mailinator.com\"</span>,<br>      <span class=\"hljs-string\">\"test2user@mailinator.com\"</span><br>    ]<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> response = res.body<br>    response.notice.should.be.equal(<span class=\"hljs-string\">'The invitation has been sent successfully.'</span>)<br>    done(err)<br>  })",
                "err": {
                  "name": "TypeError",
                  "message": "Cannot read property 'should' of undefined",
                  "stack": "<span class=\"hljs-built_in\">TypeError</span>: Cannot read property <span class=\"hljs-string\">'should'</span> <span class=\"hljs-keyword\">of</span> <span class=\"hljs-literal\">undefined</span><br>    at Test.&lt;anonymous&gt; (spec/application/application_spec.js:<span class=\"hljs-number\">1532</span>:<span class=\"hljs-number\">26</span>)<br>    at Test.assert (node_modules/supertest/lib/test.js:<span class=\"hljs-number\">156</span>:<span class=\"hljs-number\">6</span>)<br>    at assert (node_modules/supertest/lib/test.js:<span class=\"hljs-number\">127</span>:<span class=\"hljs-number\">12</span>)<br>    at node_modules/supertest/lib/test.js:<span class=\"hljs-number\">124</span>:<span class=\"hljs-number\">5</span><br>    at Test.Request.callback (node_modules/supertest/node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">785</span>:<span class=\"hljs-number\">12</span>)<br>    at IncomingMessage.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">990</span>:<span class=\"hljs-number\">12</span>)<br>    at endReadableNT (_stream_readable.js:<span class=\"hljs-number\">913</span>:<span class=\"hljs-number\">12</span>)"
                },
                "isRoot": false,
                "uuid": "2753a469-6997-41b9-bc8b-3382a0afd5b9",
                "parentUUID": "ee0922bb-d23b-4069-86af-be83617d5015",
                "skipped": false
              },
              {
                "title": "should be able to get unaccepted invitations for an application",
                "fullTitle": "Applications --- Collaborators invite and unaccepted_invitations should be able to get unaccepted invitations for an application",
                "timedOut": false,
                "duration": 1594,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "api.get(config.endpoints.applications + <span class=\"hljs-string\">\"/\"</span> + api_key + config.endpoints.unaccepted_invitations)<br>        .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>        .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>        .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>        .expect(<span class=\"hljs-number\">200</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>          <span class=\"hljs-keyword\">var</span> response = res1.body<br>          response.emails.should.be.deep.equal([<br>            <span class=\"hljs-string\">\"test1user@mailinator.com\"</span>,<br>            <span class=\"hljs-string\">\"test2user@mailinator.com\"</span><br>          ])<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "1a4fa761-be6e-4bed-8cb6-e9f49e424c3a",
                "parentUUID": "ee0922bb-d23b-4069-86af-be83617d5015",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "ee0922bb-d23b-4069-86af-be83617d5015",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get unaccepted invitations for an application",
                "fullTitle": "Applications --- Collaborators invite and unaccepted_invitations should be able to get unaccepted invitations for an application",
                "timedOut": false,
                "duration": 1594,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "api.get(config.endpoints.applications + <span class=\"hljs-string\">\"/\"</span> + api_key + config.endpoints.unaccepted_invitations)<br>        .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>        .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>        .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>        .expect(<span class=\"hljs-number\">200</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>          <span class=\"hljs-keyword\">var</span> response = res1.body<br>          response.emails.should.be.deep.equal([<br>            <span class=\"hljs-string\">\"test1user@mailinator.com\"</span>,<br>            <span class=\"hljs-string\">\"test2user@mailinator.com\"</span><br>          ])<br>          done(err)<br>        })",
                "isRoot": false,
                "uuid": "1a4fa761-be6e-4bed-8cb6-e9f49e424c3a",
                "parentUUID": "ee0922bb-d23b-4069-86af-be83617d5015",
                "skipped": false
              }
            ],
            "failures": [
              {
                "title": "should be able to get all collaborators present in an application",
                "fullTitle": "Applications --- Collaborators invite and unaccepted_invitations should be able to get all collaborators present in an application",
                "timedOut": true,
                "duration": 60050,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">60000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  collaborator = res.body.user<br>  <span class=\"hljs-keyword\">return</span> res<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"emails\"</span>: [<br>      res.body.user.email<br>    ]<br>  }))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Get_collaborators'</span>, authtoken, api_key)) <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  users = res.body.users<br>  <span class=\"hljs-built_in\">Object</span>.keys(users[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'email'</span>,<span class=\"hljs-string\">'username'</span>,<span class=\"hljs-string\">'company'</span>,<span class=\"hljs-string\">'plan_id'</span>,<span class=\"hljs-string\">'roles'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(users[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'email'</span>,<span class=\"hljs-string\">'username'</span>,<span class=\"hljs-string\">'plan_id'</span>,<span class=\"hljs-string\">'is_owner'</span>,<span class=\"hljs-string\">'roles'</span>])<br>  users[<span class=\"hljs-number\">0</span>].email.should.be.equal(collaborator.email)<br>  users[<span class=\"hljs-number\">1</span>].email.should.be.equal(email)<br>  users[<span class=\"hljs-number\">1</span>].is_owner.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "err": {
                  "name": "Error",
                  "message": "timeout of 60000ms exceeded. Ensure the done() callback is being called in this test.",
                  "stack": "<span class=\"hljs-built_in\">Error</span>: timeout <span class=\"hljs-keyword\">of</span> <span class=\"hljs-number\">60000</span>ms exceeded. Ensure the done() callback is being called <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">this</span> test."
                },
                "isRoot": false,
                "uuid": "fcd3529d-1def-4fb3-8048-9597ec89bce3",
                "parentUUID": "ee0922bb-d23b-4069-86af-be83617d5015",
                "skipped": false
              },
              {
                "title": "should be able to invite collaborators for an application",
                "fullTitle": "Applications --- Collaborators invite and unaccepted_invitations should be able to invite collaborators for an application",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"emails\"</span>: [<br>      <span class=\"hljs-string\">\"test1user@mailinator.com\"</span>,<br>      <span class=\"hljs-string\">\"test2user@mailinator.com\"</span><br>    ]<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> response = res.body<br>    response.notice.should.be.equal(<span class=\"hljs-string\">'The invitation has been sent successfully.'</span>)<br>    done(err)<br>  })",
                "err": {
                  "name": "TypeError",
                  "message": "Cannot read property 'should' of undefined",
                  "stack": "<span class=\"hljs-built_in\">TypeError</span>: Cannot read property <span class=\"hljs-string\">'should'</span> <span class=\"hljs-keyword\">of</span> <span class=\"hljs-literal\">undefined</span><br>    at Test.&lt;anonymous&gt; (spec/application/application_spec.js:<span class=\"hljs-number\">1532</span>:<span class=\"hljs-number\">26</span>)<br>    at Test.assert (node_modules/supertest/lib/test.js:<span class=\"hljs-number\">156</span>:<span class=\"hljs-number\">6</span>)<br>    at assert (node_modules/supertest/lib/test.js:<span class=\"hljs-number\">127</span>:<span class=\"hljs-number\">12</span>)<br>    at node_modules/supertest/lib/test.js:<span class=\"hljs-number\">124</span>:<span class=\"hljs-number\">5</span><br>    at Test.Request.callback (node_modules/supertest/node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">785</span>:<span class=\"hljs-number\">12</span>)<br>    at IncomingMessage.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">990</span>:<span class=\"hljs-number\">12</span>)<br>    at endReadableNT (_stream_readable.js:<span class=\"hljs-number\">913</span>:<span class=\"hljs-number\">12</span>)"
                },
                "isRoot": false,
                "uuid": "2753a469-6997-41b9-bc8b-3382a0afd5b9",
                "parentUUID": "ee0922bb-d23b-4069-86af-be83617d5015",
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 1,
            "totalFailures": 2,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 61644
          },
          {
            "title": "App unshare",
            "suites": [],
            "tests": [
              {
                "title": "should be able to unshare application from collaborator as a system user",
                "fullTitle": "Applications --- App unshare should be able to unshare application from collaborator as a system user",
                "timedOut": false,
                "duration": 15759,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, authtoken, api_key, {<br>                  <span class=\"hljs-string\">\"unshare_from\"</span>: res.body.user.email<br>                })<br>                .expect(<span class=\"hljs-number\">200</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.notice.should.to.be.equal(<span class=\"hljs-string\">'The application has been successfully unshared.'</span>)<br>                  done(err)<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "67f6713a-8431-4786-983b-efcef8a5ec9f",
                "parentUUID": "f18c8ac3-f801-45bb-b050-6adfb4dd7f0b",
                "skipped": false
              },
              {
                "title": "should be able to unshare collaborator application as a collaborator",
                "fullTitle": "Applications --- App unshare should be able to unshare collaborator application as a collaborator",
                "timedOut": false,
                "duration": 8305,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                .expect(<span class=\"hljs-number\">200</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.notice.should.to.be.equal(<span class=\"hljs-string\">'The application has been successfully unshared.'</span>)<br>                  done(err)<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "4db057d6-7640-4eff-b369-9890c38d1bbb",
                "parentUUID": "f18c8ac3-f801-45bb-b050-6adfb4dd7f0b",
                "skipped": false
              },
              {
                "title": "should provide error message when collaborators email is invalid",
                "fullTitle": "Applications --- App unshare should provide error message when collaborators email is invalid",
                "timedOut": false,
                "duration": 10348,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                <span class=\"hljs-string\">\"swapnil@mailinator.com\"</span><br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                .expect(<span class=\"hljs-number\">422</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res3</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res3.body<br>                  <br>                  response.should.to.be.deep.equal({<br>                    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Access denied. You need to be a collaborator before accessing this app.\"</span>,<br>                    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">133</span>,<br>                    <span class=\"hljs-string\">\"errors\"</span>: {}<br>                  })<br>                  done(err)<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "47626b61-acca-4b4e-a095-3170366e0113",
                "parentUUID": "f18c8ac3-f801-45bb-b050-6adfb4dd7f0b",
                "skipped": false
              },
              {
                "title": "should provide error message when user is not a collaborator for given application",
                "fullTitle": "Applications --- App unshare should provide error message when user is not a collaborator for given application",
                "timedOut": false,
                "duration": 9527,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                .expect(<span class=\"hljs-number\">200</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.notice.should.to.be.equal(<span class=\"hljs-string\">'The application has been successfully unshared.'</span>)<br>                  factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>                    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>                    res.body.should.be.deep.equal({<br>                      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Access denied. You need to be a collaborator before accessing this app.\"</span>,<br>                      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">133</span>,<br>                      <span class=\"hljs-string\">\"errors\"</span>: {}<br>                    })<br>                    done(err)<br>                  })<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "f837898c-cc04-45e2-a047-27919b67fdec",
                "parentUUID": "f18c8ac3-f801-45bb-b050-6adfb4dd7f0b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "f18c8ac3-f801-45bb-b050-6adfb4dd7f0b",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to unshare application from collaborator as a system user",
                "fullTitle": "Applications --- App unshare should be able to unshare application from collaborator as a system user",
                "timedOut": false,
                "duration": 15759,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, authtoken, api_key, {<br>                  <span class=\"hljs-string\">\"unshare_from\"</span>: res.body.user.email<br>                })<br>                .expect(<span class=\"hljs-number\">200</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.notice.should.to.be.equal(<span class=\"hljs-string\">'The application has been successfully unshared.'</span>)<br>                  done(err)<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "67f6713a-8431-4786-983b-efcef8a5ec9f",
                "parentUUID": "f18c8ac3-f801-45bb-b050-6adfb4dd7f0b",
                "skipped": false
              },
              {
                "title": "should be able to unshare collaborator application as a collaborator",
                "fullTitle": "Applications --- App unshare should be able to unshare collaborator application as a collaborator",
                "timedOut": false,
                "duration": 8305,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                .expect(<span class=\"hljs-number\">200</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.notice.should.to.be.equal(<span class=\"hljs-string\">'The application has been successfully unshared.'</span>)<br>                  done(err)<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "4db057d6-7640-4eff-b369-9890c38d1bbb",
                "parentUUID": "f18c8ac3-f801-45bb-b050-6adfb4dd7f0b",
                "skipped": false
              },
              {
                "title": "should provide error message when collaborators email is invalid",
                "fullTitle": "Applications --- App unshare should provide error message when collaborators email is invalid",
                "timedOut": false,
                "duration": 10348,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                <span class=\"hljs-string\">\"swapnil@mailinator.com\"</span><br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                .expect(<span class=\"hljs-number\">422</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res3</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res3.body<br>                  <br>                  response.should.to.be.deep.equal({<br>                    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Access denied. You need to be a collaborator before accessing this app.\"</span>,<br>                    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">133</span>,<br>                    <span class=\"hljs-string\">\"errors\"</span>: {}<br>                  })<br>                  done(err)<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "47626b61-acca-4b4e-a095-3170366e0113",
                "parentUUID": "f18c8ac3-f801-45bb-b050-6adfb4dd7f0b",
                "skipped": false
              },
              {
                "title": "should provide error message when user is not a collaborator for given application",
                "fullTitle": "Applications --- App unshare should provide error message when user is not a collaborator for given application",
                "timedOut": false,
                "duration": 9527,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                .expect(<span class=\"hljs-number\">200</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.notice.should.to.be.equal(<span class=\"hljs-string\">'The application has been successfully unshared.'</span>)<br>                  factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>                    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>                    res.body.should.be.deep.equal({<br>                      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Access denied. You need to be a collaborator before accessing this app.\"</span>,<br>                      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">133</span>,<br>                      <span class=\"hljs-string\">\"errors\"</span>: {}<br>                    })<br>                    done(err)<br>                  })<br>                })<br>            })<br>        })",
                "isRoot": false,
                "uuid": "f837898c-cc04-45e2-a047-27919b67fdec",
                "parentUUID": "f18c8ac3-f801-45bb-b050-6adfb4dd7f0b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 43939
          },
          {
            "title": "App Transfer/Accept Ownership",
            "suites": [],
            "tests": [
              {
                "title": "should be able to transfer app ownership to registered system users",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to transfer app ownership to registered system users",
                "timedOut": false,
                "duration": 6803,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: email<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'An email has been sent to '</span>+ config.user2.email +<span class=\"hljs-string\">' about transferring ownership of \\''</span> + res1.body.application.name + <span class=\"hljs-string\">'\\'. The ownership will be transferred after the other user accepts ownership.'</span>)<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "8b541375-77ae-450d-99ae-1a13733ae8c5",
                "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
                "skipped": false
              },
              {
                "title": "should give error for transfer app ownership to non-registered system users",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should give error for transfer app ownership to non-registered system users",
                "timedOut": false,
                "duration": 3240,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: <span class=\"hljs-string\">\"non_registered@mailinator.com\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Sorry about that. non_registered@mailinator.com is not registered in Built.io Backend. Create an account first.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">179</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {}<br>        })<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "6fb02c58-22cc-47cc-b648-630e6e5f3104",
                "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
                "skipped": false
              },
              {
                "title": "should be able to accept application ownership",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to accept application ownership",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "c6f45ea0-a0dc-42f3-b35f-1066e03083e7",
                "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "should be able to accept application ownership",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to accept application ownership",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "c6f45ea0-a0dc-42f3-b35f-1066e03083e7",
                "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to transfer app ownership to registered system users",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to transfer app ownership to registered system users",
                "timedOut": false,
                "duration": 6803,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: email<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'An email has been sent to '</span>+ config.user2.email +<span class=\"hljs-string\">' about transferring ownership of \\''</span> + res1.body.application.name + <span class=\"hljs-string\">'\\'. The ownership will be transferred after the other user accepts ownership.'</span>)<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "8b541375-77ae-450d-99ae-1a13733ae8c5",
                "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
                "skipped": false
              },
              {
                "title": "should give error for transfer app ownership to non-registered system users",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should give error for transfer app ownership to non-registered system users",
                "timedOut": false,
                "duration": 3240,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: <span class=\"hljs-string\">\"non_registered@mailinator.com\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Sorry about that. non_registered@mailinator.com is not registered in Built.io Backend. Create an account first.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">179</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {}<br>        })<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "6fb02c58-22cc-47cc-b648-630e6e5f3104",
                "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 10043
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "f710213e-427f-45bd-ab63-ef29a99355d3",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "App user roles ---",
        "suites": [
          {
            "title": "Application user roles",
            "suites": [],
            "tests": [
              {
                "title": "should be able to create application user role",
                "fullTitle": "App user roles --- Application user roles should be able to create application user role",
                "timedOut": false,
                "duration": 4579,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_app_user_role'</span>, appUser1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"createRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\trole1 = res.body.object<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role1).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole1.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole1.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole1.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole1.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole1.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole1._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole1.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole1.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole1.name.should.be.equal(<span class=\"hljs-string\">\"createRole\"</span>)<br>\trole1.users.should.be.deep.equal([])<br>\trole1.roles.should.be.deep.equal([])<br>\trole1.app_user_object_uid.should.be.equal(appUser1.uid)<br>\texpect(role1.created_by).to.be.null<br>\texpect(role1.created_by).to.be.null<br>\trole1.created_at.should.be.equal(role1.updated_at)<br>\trole1._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'delete_role'</span>, appUser1.authtoken, app.api_key, role1.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err.trace)<br>})",
                "isRoot": false,
                "uuid": "dfd8ff52-15bc-43a2-be45-a195cb81eb6c",
                "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
                "skipped": false
              },
              {
                "title": "should provide error for invalid role field",
                "fullTitle": "App user roles --- Application user roles should provide error for invalid role field",
                "timedOut": false,
                "duration": 1509,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">45000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_app_user_role'</span>, appUser1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-comment\">// \"name\": \"createRole\",</span><br>\t\t<span class=\"hljs-string\">\"users\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "33326a54-5ba5-4e39-bfc0-6c890b5fcf43",
                "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
                "skipped": false
              },
              {
                "title": "should be able to get all application user roles created",
                "fullTitle": "App user roles --- Application user roles should be able to get all application user roles created",
                "timedOut": false,
                "duration": 1680,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_app_user_roles'</span>, appUser2.authtoken, app.api_key))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\trole2 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role2).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'users'</span>,<span class=\"hljs-string\">'roles'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole2.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole2.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole2.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole2.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole2.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// role2.created_by.should.be.a('string')</span><br>\t<span class=\"hljs-comment\">// role2.updated_by.should.be.a('string')</span><br>\trole2.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole2._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole2.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole2.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole2.name.should.be.equal(roleName)<br>\trole2.users.should.be.deep.equal([])<br>\trole2.roles.should.be.deep.equal([])<br>\trole2.app_user_object_uid.should.be.equal(appUser1.uid)<br>\texpect(role2.created_by).to.be.null<br>\texpect(role2.created_by).to.be.null<br>\trole2.created_at.should.be.equal(role2.updated_at)<br>\trole2._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "13217c3f-5d06-4b23-bdb2-52e091116cb7",
                "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
                "skipped": false
              },
              {
                "title": "should be able to get single application user role",
                "fullTitle": "App user roles --- Application user roles should be able to get single application user role",
                "timedOut": false,
                "duration": 1473,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_single_role'</span>, appUser1.authtoken, app.api_key, roleUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t<br>\trole3 = res.body.object<br>\t<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role3).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole3.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole3.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole3.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole3.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole3.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole3._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole3.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole3.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole3.name.should.be.equal(roleName)<br>\trole3.users.should.be.deep.equal([])<br>\trole3.roles.should.be.deep.equal([])<br>\trole3.app_user_object_uid.should.be.equal(appUser1.uid)<br>\texpect(role3.created_by).to.be.null<br>\texpect(role3.created_by).to.be.null<br>\trole3.created_at.should.be.equal(role3.updated_at)<br>\trole3._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "36dd5114-4142-4721-95f1-289085b16f5c",
                "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
                "skipped": false
              },
              {
                "title": "should be able to update application user role",
                "fullTitle": "App user roles --- Application user roles should be able to update application user role",
                "timedOut": false,
                "duration": 1526,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_app_user_role'</span>, sys_user.authtoken, app.api_key, roleUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updateRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [appUser2.uid],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [roleUid]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\trole4 = res.body.object<br>\t<span class=\"hljs-comment\">//Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role4).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'users'</span>,<span class=\"hljs-string\">'roles'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole4.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole4.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// role4.created_by.should.be.a('string')</span><br>\trole4.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole4._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole4.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.users.should.be.deep.equal([appUser2.uid])<br>\trole4.roles.should.be.deep.equal([roleUid])<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole4.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole4.name.should.be.equal(<span class=\"hljs-string\">\"updateRole\"</span>)<br>\t<span class=\"hljs-comment\">// role4.users.should.be.equal('array')</span><br>\t<span class=\"hljs-comment\">// role4.roles.should.be.equal('array')</span><br>\trole4.app_user_object_uid.should.be.equal(appUser1.uid)<br>\t<br>\t<span class=\"hljs-comment\">// expect(role4.created_by).should.to.be.null</span><br>\t<br>\trole4.updated_by.should.be.equal(sys_user.uid)<br>\trole4.created_at.should.not.equal(role4.updated_at)<br>\trole4._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "84f5d792-5a92-4b8c-bb33-3e561772971e",
                "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
                "skipped": false
              },
              {
                "title": "should proide error message for invalid role uid while updating role",
                "fullTitle": "App user roles --- Application user roles should proide error message for invalid role uid while updating role",
                "timedOut": false,
                "duration": 1517,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_app_user_role'</span>, sys_user.authtoken, app.api_key, <span class=\"hljs-string\">\"asd\"</span>, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updateRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [appUser2.uid],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [roleUid]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "36222eab-067c-4fdb-b861-66893fbb6adc",
                "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
                "skipped": false
              },
              {
                "title": "should be able to delete application user role created",
                "fullTitle": "App user roles --- Application user roles should be able to delete application user role created",
                "timedOut": false,
                "duration": 3325,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_app_user_role'</span>, appUser1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"createRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\trole5 = res.body.object<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-comment\">// Object.keys(role5).should.to.be.deep.equal(['published', '__loc', 'name', 'users', 'roles', 'app_user_object_uid', 'created_at', 'updated_at', 'uid', 'ACL', '_version', 'created_by', 'updated_by', 'tags'])</span><br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'delete_role'</span>, appUser1.authtoken, app.api_key, role5.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "c70551f0-3a60-4d85-946f-e9186385e29c",
                "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
                "skipped": false
              },
              {
                "title": "should proide error message for invalid role uid while deleting role",
                "fullTitle": "App user roles --- Application user roles should proide error message for invalid role uid while deleting role",
                "timedOut": false,
                "duration": 2613,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'delete_role'</span>, appUser1.authtoken, app.api_key, <span class=\"hljs-string\">\"asd\"</span>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "5a361154-3f97-416e-9df3-f146104f9cd6",
                "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to create application user role",
                "fullTitle": "App user roles --- Application user roles should be able to create application user role",
                "timedOut": false,
                "duration": 4579,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_app_user_role'</span>, appUser1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"createRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\trole1 = res.body.object<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role1).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole1.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole1.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole1.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole1.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole1.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole1._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole1.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole1.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole1.name.should.be.equal(<span class=\"hljs-string\">\"createRole\"</span>)<br>\trole1.users.should.be.deep.equal([])<br>\trole1.roles.should.be.deep.equal([])<br>\trole1.app_user_object_uid.should.be.equal(appUser1.uid)<br>\texpect(role1.created_by).to.be.null<br>\texpect(role1.created_by).to.be.null<br>\trole1.created_at.should.be.equal(role1.updated_at)<br>\trole1._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'delete_role'</span>, appUser1.authtoken, app.api_key, role1.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err.trace)<br>})",
                "isRoot": false,
                "uuid": "dfd8ff52-15bc-43a2-be45-a195cb81eb6c",
                "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
                "skipped": false
              },
              {
                "title": "should provide error for invalid role field",
                "fullTitle": "App user roles --- Application user roles should provide error for invalid role field",
                "timedOut": false,
                "duration": 1509,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">45000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_app_user_role'</span>, appUser1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-comment\">// \"name\": \"createRole\",</span><br>\t\t<span class=\"hljs-string\">\"users\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "33326a54-5ba5-4e39-bfc0-6c890b5fcf43",
                "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
                "skipped": false
              },
              {
                "title": "should be able to get all application user roles created",
                "fullTitle": "App user roles --- Application user roles should be able to get all application user roles created",
                "timedOut": false,
                "duration": 1680,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_app_user_roles'</span>, appUser2.authtoken, app.api_key))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\trole2 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role2).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'users'</span>,<span class=\"hljs-string\">'roles'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole2.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole2.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole2.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole2.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole2.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// role2.created_by.should.be.a('string')</span><br>\t<span class=\"hljs-comment\">// role2.updated_by.should.be.a('string')</span><br>\trole2.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole2._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole2.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole2.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole2.name.should.be.equal(roleName)<br>\trole2.users.should.be.deep.equal([])<br>\trole2.roles.should.be.deep.equal([])<br>\trole2.app_user_object_uid.should.be.equal(appUser1.uid)<br>\texpect(role2.created_by).to.be.null<br>\texpect(role2.created_by).to.be.null<br>\trole2.created_at.should.be.equal(role2.updated_at)<br>\trole2._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "13217c3f-5d06-4b23-bdb2-52e091116cb7",
                "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
                "skipped": false
              },
              {
                "title": "should be able to get single application user role",
                "fullTitle": "App user roles --- Application user roles should be able to get single application user role",
                "timedOut": false,
                "duration": 1473,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_single_role'</span>, appUser1.authtoken, app.api_key, roleUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t<br>\trole3 = res.body.object<br>\t<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role3).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole3.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole3.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole3.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole3.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole3.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole3._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole3.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole3.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole3.name.should.be.equal(roleName)<br>\trole3.users.should.be.deep.equal([])<br>\trole3.roles.should.be.deep.equal([])<br>\trole3.app_user_object_uid.should.be.equal(appUser1.uid)<br>\texpect(role3.created_by).to.be.null<br>\texpect(role3.created_by).to.be.null<br>\trole3.created_at.should.be.equal(role3.updated_at)<br>\trole3._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "36dd5114-4142-4721-95f1-289085b16f5c",
                "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
                "skipped": false
              },
              {
                "title": "should be able to update application user role",
                "fullTitle": "App user roles --- Application user roles should be able to update application user role",
                "timedOut": false,
                "duration": 1526,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_app_user_role'</span>, sys_user.authtoken, app.api_key, roleUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updateRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [appUser2.uid],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [roleUid]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\trole4 = res.body.object<br>\t<span class=\"hljs-comment\">//Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role4).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'users'</span>,<span class=\"hljs-string\">'roles'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole4.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole4.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// role4.created_by.should.be.a('string')</span><br>\trole4.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole4._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole4.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.users.should.be.deep.equal([appUser2.uid])<br>\trole4.roles.should.be.deep.equal([roleUid])<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole4.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole4.name.should.be.equal(<span class=\"hljs-string\">\"updateRole\"</span>)<br>\t<span class=\"hljs-comment\">// role4.users.should.be.equal('array')</span><br>\t<span class=\"hljs-comment\">// role4.roles.should.be.equal('array')</span><br>\trole4.app_user_object_uid.should.be.equal(appUser1.uid)<br>\t<br>\t<span class=\"hljs-comment\">// expect(role4.created_by).should.to.be.null</span><br>\t<br>\trole4.updated_by.should.be.equal(sys_user.uid)<br>\trole4.created_at.should.not.equal(role4.updated_at)<br>\trole4._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "84f5d792-5a92-4b8c-bb33-3e561772971e",
                "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
                "skipped": false
              },
              {
                "title": "should proide error message for invalid role uid while updating role",
                "fullTitle": "App user roles --- Application user roles should proide error message for invalid role uid while updating role",
                "timedOut": false,
                "duration": 1517,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_app_user_role'</span>, sys_user.authtoken, app.api_key, <span class=\"hljs-string\">\"asd\"</span>, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updateRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [appUser2.uid],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [roleUid]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "36222eab-067c-4fdb-b861-66893fbb6adc",
                "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
                "skipped": false
              },
              {
                "title": "should be able to delete application user role created",
                "fullTitle": "App user roles --- Application user roles should be able to delete application user role created",
                "timedOut": false,
                "duration": 3325,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_app_user_role'</span>, appUser1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"createRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\trole5 = res.body.object<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-comment\">// Object.keys(role5).should.to.be.deep.equal(['published', '__loc', 'name', 'users', 'roles', 'app_user_object_uid', 'created_at', 'updated_at', 'uid', 'ACL', '_version', 'created_by', 'updated_by', 'tags'])</span><br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'delete_role'</span>, appUser1.authtoken, app.api_key, role5.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "c70551f0-3a60-4d85-946f-e9186385e29c",
                "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
                "skipped": false
              },
              {
                "title": "should proide error message for invalid role uid while deleting role",
                "fullTitle": "App user roles --- Application user roles should proide error message for invalid role uid while deleting role",
                "timedOut": false,
                "duration": 2613,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'delete_role'</span>, appUser1.authtoken, app.api_key, <span class=\"hljs-string\">\"asd\"</span>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "5a361154-3f97-416e-9df3-f146104f9cd6",
                "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 8,
            "totalPasses": 8,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 18222
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "b5c1542b-52f7-496a-968f-364625aebdaf",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "classes ---",
        "suites": [
          {
            "title": "Get classes(inbuilt)",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all classes present",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get all classes present",
                "timedOut": false,
                "duration": 1720,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> app_user = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> app_user_role = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> installation_data = res.body.classes[<span class=\"hljs-number\">2</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> upload_class = res.body.classes[<span class=\"hljs-number\">3</span>]<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user_role).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation_data).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<br>\t\t<span class=\"hljs-comment\">//console.log(app_user.schema[0])</span><br>\t\t<span class=\"hljs-comment\">// Keys assertion schema</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user_role.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation_data.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>])<br>\t\t<span class=\"hljs-comment\">// Object.keys(upload_class.schema[0]).should.to.be.deep.equal(['display_name', 'uid', 'data_type', 'field_metadata', 'multiple', 'mandatory'])</span><br><br><br>\t\tapp_user.schema.length.should.be.equal(<span class=\"hljs-number\">9</span>)<br>\t\tapp_user_role.schema.length.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\tinstallation_data.schema.length.should.be.equal(<span class=\"hljs-number\">7</span>)<br>\t\t<span class=\"hljs-comment\">// upload_class.schema.length.should.be.equal(3)</span><br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\tapp_user.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tapp_user.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user_role.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user_role.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tapp_user_role.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user_role.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user_role.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user_role.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tinstallation_data.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tinstallation_data.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tinstallation_data.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tinstallation_data.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tinstallation_data.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tinstallation_data.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t<span class=\"hljs-comment\">// upload_class.created_at.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.updated_at.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.title.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.uid.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.inbuilt_class.should.be.a('boolean')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.schema.should.be.a('array')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.maintain_revisions.should.be.a('boolean')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.abilities.should.be.a('object')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.DEFAULT_ACL.should.be.a('object')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.SYS_ACL.should.be.a('object')</span><br><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tapp_user.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\tapp_user.title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\tapp_user.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tapp_user_role.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\tapp_user_role.title.should.be.equal(<span class=\"hljs-string\">'Application User Role'</span>)<br>\t\tapp_user_role.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tinstallation_data.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\tinstallation_data.title.should.be.equal(<span class=\"hljs-string\">'Installation Data'</span>)<br>\t\tinstallation_data.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t<span class=\"hljs-comment\">// upload_class.uid.should.be.equal('built_io_upload')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.title.should.be.equal('built.io Uploads')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.inbuilt_class.should.be.equal(true)</span><br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "ceb16e4d-4045-421e-9f8b-c5a9ea9e8fe3",
                "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
                "skipped": false
              },
              {
                "title": "should be able to get count for the classes present",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get count for the classes present",
                "timedOut": false,
                "duration": 1674,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-literal\">true</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">//console.log(res.body)</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body).should.to.be.deep.equal([<span class=\"hljs-string\">'classes'</span>])<br>\t\tres.body.classes.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\tres.body.classes.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "09b1b7e9-6454-48a9-a002-f6d17a98f949",
                "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
                "skipped": false
              },
              {
                "title": "should be able to get classes using limit param",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get classes using limit param",
                "timedOut": false,
                "duration": 2860,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> response = res.body.classes<br>\t\tresponse.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(response[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tresponse[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\tresponse[<span class=\"hljs-number\">0</span>].title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\tresponse[<span class=\"hljs-number\">0</span>].inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "53e1f87a-245b-42bd-9fb8-588c36d2e462",
                "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
                "skipped": false
              },
              {
                "title": "should be able to get classes using skip param",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get classes using skip param",
                "timedOut": false,
                "duration": 1697,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> classes = res.body.classes<br>\t\tclasses.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tclasses[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].title.should.be.equal(<span class=\"hljs-string\">'Installation Data'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "ded64027-e255-4721-b9fc-a2a880be1bd3",
                "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
                "skipped": false
              },
              {
                "title": "should be able to get classes simple query",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get classes simple query",
                "timedOut": false,
                "duration": 1514,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>\t}<br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">//console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> classes = res.body.classes<br>\t\tclasses.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tclasses[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].title.should.be.equal(<span class=\"hljs-string\">'Application User Role'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "c3e3e001-1f00-43fd-85df-453a6fb350c5",
                "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
                "skipped": false
              },
              {
                "title": "should provide error message for -ve skip/limit value",
                "fullTitle": "classes --- Get classes(inbuilt) should provide error message for -ve skip/limit value",
                "timedOut": false,
                "duration": 1484,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"skip\"</span>: -<span class=\"hljs-number\">3</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">422</span>) <br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Failed to fetch classes. Please try again with valid parameters.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"params\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"has an invalid operation.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "8db051be-e6c7-42f3-b1ac-09d2008ee0c3",
                "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get all classes present",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get all classes present",
                "timedOut": false,
                "duration": 1720,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> app_user = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> app_user_role = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> installation_data = res.body.classes[<span class=\"hljs-number\">2</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> upload_class = res.body.classes[<span class=\"hljs-number\">3</span>]<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user_role).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation_data).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<br>\t\t<span class=\"hljs-comment\">//console.log(app_user.schema[0])</span><br>\t\t<span class=\"hljs-comment\">// Keys assertion schema</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user_role.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation_data.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>])<br>\t\t<span class=\"hljs-comment\">// Object.keys(upload_class.schema[0]).should.to.be.deep.equal(['display_name', 'uid', 'data_type', 'field_metadata', 'multiple', 'mandatory'])</span><br><br><br>\t\tapp_user.schema.length.should.be.equal(<span class=\"hljs-number\">9</span>)<br>\t\tapp_user_role.schema.length.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\tinstallation_data.schema.length.should.be.equal(<span class=\"hljs-number\">7</span>)<br>\t\t<span class=\"hljs-comment\">// upload_class.schema.length.should.be.equal(3)</span><br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\tapp_user.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tapp_user.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user_role.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user_role.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tapp_user_role.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user_role.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user_role.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user_role.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tinstallation_data.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tinstallation_data.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tinstallation_data.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tinstallation_data.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tinstallation_data.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tinstallation_data.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t<span class=\"hljs-comment\">// upload_class.created_at.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.updated_at.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.title.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.uid.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.inbuilt_class.should.be.a('boolean')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.schema.should.be.a('array')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.maintain_revisions.should.be.a('boolean')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.abilities.should.be.a('object')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.DEFAULT_ACL.should.be.a('object')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.SYS_ACL.should.be.a('object')</span><br><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tapp_user.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\tapp_user.title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\tapp_user.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tapp_user_role.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\tapp_user_role.title.should.be.equal(<span class=\"hljs-string\">'Application User Role'</span>)<br>\t\tapp_user_role.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tinstallation_data.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\tinstallation_data.title.should.be.equal(<span class=\"hljs-string\">'Installation Data'</span>)<br>\t\tinstallation_data.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t<span class=\"hljs-comment\">// upload_class.uid.should.be.equal('built_io_upload')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.title.should.be.equal('built.io Uploads')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.inbuilt_class.should.be.equal(true)</span><br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "ceb16e4d-4045-421e-9f8b-c5a9ea9e8fe3",
                "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
                "skipped": false
              },
              {
                "title": "should be able to get count for the classes present",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get count for the classes present",
                "timedOut": false,
                "duration": 1674,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-literal\">true</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">//console.log(res.body)</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body).should.to.be.deep.equal([<span class=\"hljs-string\">'classes'</span>])<br>\t\tres.body.classes.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\tres.body.classes.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "09b1b7e9-6454-48a9-a002-f6d17a98f949",
                "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
                "skipped": false
              },
              {
                "title": "should be able to get classes using limit param",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get classes using limit param",
                "timedOut": false,
                "duration": 2860,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> response = res.body.classes<br>\t\tresponse.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(response[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tresponse[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\tresponse[<span class=\"hljs-number\">0</span>].title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\tresponse[<span class=\"hljs-number\">0</span>].inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "53e1f87a-245b-42bd-9fb8-588c36d2e462",
                "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
                "skipped": false
              },
              {
                "title": "should be able to get classes using skip param",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get classes using skip param",
                "timedOut": false,
                "duration": 1697,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> classes = res.body.classes<br>\t\tclasses.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tclasses[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].title.should.be.equal(<span class=\"hljs-string\">'Installation Data'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "ded64027-e255-4721-b9fc-a2a880be1bd3",
                "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
                "skipped": false
              },
              {
                "title": "should be able to get classes simple query",
                "fullTitle": "classes --- Get classes(inbuilt) should be able to get classes simple query",
                "timedOut": false,
                "duration": 1514,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>\t}<br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">//console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> classes = res.body.classes<br>\t\tclasses.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tclasses[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].title.should.be.equal(<span class=\"hljs-string\">'Application User Role'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "c3e3e001-1f00-43fd-85df-453a6fb350c5",
                "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
                "skipped": false
              },
              {
                "title": "should provide error message for -ve skip/limit value",
                "fullTitle": "classes --- Get classes(inbuilt) should provide error message for -ve skip/limit value",
                "timedOut": false,
                "duration": 1484,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"skip\"</span>: -<span class=\"hljs-number\">3</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">422</span>) <br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Failed to fetch classes. Please try again with valid parameters.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"params\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"has an invalid operation.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "8db051be-e6c7-42f3-b1ac-09d2008ee0c3",
                "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 6,
            "totalPasses": 6,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 10949
          },
          {
            "title": "Class creation",
            "suites": [],
            "tests": [
              {
                "title": "should be able to create a class for given app",
                "fullTitle": "classes --- Class creation should be able to create a class for given app",
                "timedOut": false,
                "duration": 1567,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> res = res.body<br>\t\t\t\t\tres.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class created successfully!'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">//console.log(res)</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.schema[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.abilities).should.be.deep.equal([<span class=\"hljs-string\">'get_one_object'</span>, <span class=\"hljs-string\">'get_all_objects'</span>, <span class=\"hljs-string\">'create_object'</span>, <span class=\"hljs-string\">'update_object'</span>, <span class=\"hljs-string\">'delete_object'</span>, <span class=\"hljs-string\">'delete_all_objects'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.DEFAULT_ACL).should.be.deep.equal([<span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.DEFAULT_ACL.others).should.be.deep.equal([<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tres.class.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tres.class.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tres.class.last_activity.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tres.class.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tres.class.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tres.class.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tres.class.schema.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tres.class.title.should.be.equal(<span class=\"hljs-string\">'class_name'</span>)<br>\t\t\t\t\tres.class.uid.should.be.equal(<span class=\"hljs-string\">'class_uid'</span>)<br>\t\t\t\t\tres.class.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tres.class.maintain_revisions.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tres.class.abilities.get_one_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.get_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.create_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.update_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.delete_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.delete_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.DEFAULT_ACL.others.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.DEFAULT_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// res.class.SYS_ACL.should.be.equal({})</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// res.class.DEFAULT_ACL.length.should.be.equal('others')</span><br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "a4fc936b-f4dc-4967-88c9-a7e480874b32",
                "parentUUID": "1c9cf3dd-a011-4bf5-9bdd-4506f6734cde",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid json param",
                "fullTitle": "classes --- Class creation should provide an error message for invalid json param",
                "timedOut": false,
                "duration": 1470,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t<span class=\"hljs-comment\">// .expect(201)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Please send your attributes wrapped in 'class'\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "37adb2be-e0fb-4e6a-8c08-26b9ac31e314",
                "parentUUID": "1c9cf3dd-a011-4bf5-9bdd-4506f6734cde",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid schema",
                "fullTitle": "classes --- Class creation should provide an error message for invalid schema",
                "timedOut": false,
                "duration": 1555,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span><br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t<span class=\"hljs-comment\">// .expect(201)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class creation failed. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">115</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"schema\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"should have a group schema\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "1473b161-412f-4f31-a861-f10ffdfff90e",
                "parentUUID": "1c9cf3dd-a011-4bf5-9bdd-4506f6734cde",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid authtoken",
                "fullTitle": "classes --- Class creation should provide an error message for invalid authtoken",
                "timedOut": false,
                "duration": 1703,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, <span class=\"hljs-string\">''</span>, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t<span class=\"hljs-comment\">// .expect(201)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "49649ed3-2191-44ac-bc25-0beeff2ea5db",
                "parentUUID": "1c9cf3dd-a011-4bf5-9bdd-4506f6734cde",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "1c9cf3dd-a011-4bf5-9bdd-4506f6734cde",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to create a class for given app",
                "fullTitle": "classes --- Class creation should be able to create a class for given app",
                "timedOut": false,
                "duration": 1567,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> res = res.body<br>\t\t\t\t\tres.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class created successfully!'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">//console.log(res)</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.schema[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.abilities).should.be.deep.equal([<span class=\"hljs-string\">'get_one_object'</span>, <span class=\"hljs-string\">'get_all_objects'</span>, <span class=\"hljs-string\">'create_object'</span>, <span class=\"hljs-string\">'update_object'</span>, <span class=\"hljs-string\">'delete_object'</span>, <span class=\"hljs-string\">'delete_all_objects'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.DEFAULT_ACL).should.be.deep.equal([<span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.DEFAULT_ACL.others).should.be.deep.equal([<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tres.class.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tres.class.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tres.class.last_activity.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tres.class.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tres.class.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tres.class.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tres.class.schema.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tres.class.title.should.be.equal(<span class=\"hljs-string\">'class_name'</span>)<br>\t\t\t\t\tres.class.uid.should.be.equal(<span class=\"hljs-string\">'class_uid'</span>)<br>\t\t\t\t\tres.class.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tres.class.maintain_revisions.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tres.class.abilities.get_one_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.get_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.create_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.update_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.delete_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.delete_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.DEFAULT_ACL.others.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.DEFAULT_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// res.class.SYS_ACL.should.be.equal({})</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// res.class.DEFAULT_ACL.length.should.be.equal('others')</span><br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "a4fc936b-f4dc-4967-88c9-a7e480874b32",
                "parentUUID": "1c9cf3dd-a011-4bf5-9bdd-4506f6734cde",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid json param",
                "fullTitle": "classes --- Class creation should provide an error message for invalid json param",
                "timedOut": false,
                "duration": 1470,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t<span class=\"hljs-comment\">// .expect(201)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Please send your attributes wrapped in 'class'\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "37adb2be-e0fb-4e6a-8c08-26b9ac31e314",
                "parentUUID": "1c9cf3dd-a011-4bf5-9bdd-4506f6734cde",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid schema",
                "fullTitle": "classes --- Class creation should provide an error message for invalid schema",
                "timedOut": false,
                "duration": 1555,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span><br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t<span class=\"hljs-comment\">// .expect(201)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class creation failed. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">115</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"schema\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"should have a group schema\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "1473b161-412f-4f31-a861-f10ffdfff90e",
                "parentUUID": "1c9cf3dd-a011-4bf5-9bdd-4506f6734cde",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid authtoken",
                "fullTitle": "classes --- Class creation should provide an error message for invalid authtoken",
                "timedOut": false,
                "duration": 1703,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, <span class=\"hljs-string\">''</span>, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t<span class=\"hljs-comment\">// .expect(201)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "49649ed3-2191-44ac-bc25-0beeff2ea5db",
                "parentUUID": "1c9cf3dd-a011-4bf5-9bdd-4506f6734cde",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6295
          },
          {
            "title": "Get class",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get single(built_io_installation_data) class",
                "fullTitle": "classes --- Get class should be able to get single(built_io_installation_data) class",
                "timedOut": false,
                "duration": 2309,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_installation_data\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> installation = res.body.class<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>])<br>\t\t\t\t\tinstallation.schema.length.should.be.equal(<span class=\"hljs-number\">7</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tinstallation.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tinstallation.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tinstallation.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tinstallation.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tinstallation.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tinstallation.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tinstallation.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\t\t\t\tinstallation.title.should.be.equal(<span class=\"hljs-string\">'Installation Data'</span>)<br>\t\t\t\t\tinstallation.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "62a9bf0e-c6ce-4c85-ad73-0c406cc9e927",
                "parentUUID": "5b36cf9f-90b6-4d82-b423-121773a2f9ea",
                "skipped": false
              },
              {
                "title": "should be able to get single(built_io_application_user_role) class",
                "fullTitle": "classes --- Get class should be able to get single(built_io_application_user_role) class",
                "timedOut": false,
                "duration": 2099,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> appUserRole = res.body.class<br>\t\t\t\t\t\t<span class=\"hljs-comment\">//console.log(appUserRole)</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserRole).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserRole.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>])<br>\t\t\t\t\tappUserRole.schema.length.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tappUserRole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserRole.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tappUserRole.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserRole.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserRole.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserRole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tappUserRole.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\t\t\t\tappUserRole.title.should.be.equal(<span class=\"hljs-string\">'Application User Role'</span>)<br>\t\t\t\t\tappUserRole.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "ae2c119a-fda2-4f5b-804d-f6484141fdb3",
                "parentUUID": "5b36cf9f-90b6-4d82-b423-121773a2f9ea",
                "skipped": false
              },
              {
                "title": "should be able to get single(built_io_application_user) class",
                "fullTitle": "classes --- Get class should be able to get single(built_io_application_user) class",
                "timedOut": false,
                "duration": 1471,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> appUserClass = res.body.class<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserClass).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserClass.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>])<br>\t\t\t\t\tappUserClass.schema.length.should.be.equal(<span class=\"hljs-number\">9</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tappUserClass.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserClass.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tappUserClass.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserClass.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserClass.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserClass.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tappUserClass.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tappUserClass.title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\t\t\t\tappUserClass.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "f7d1c9ee-b5e5-498a-8a8b-4c5c523f4c7a",
                "parentUUID": "5b36cf9f-90b6-4d82-b423-121773a2f9ea",
                "skipped": false
              },
              {
                "title": "should be able to get single(inbuilt) class",
                "fullTitle": "classes --- Get class should be able to get single(inbuilt) class",
                "timedOut": false,
                "duration": 1851,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> uploadClass = res.body.class<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(uploadClass).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(uploadClass.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// console.log(uploadClass.schema.length)</span><br>\t\t\t\t\tuploadClass.schema.length.should.be.equal(<span class=\"hljs-number\">9</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tuploadClass.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tuploadClass.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tuploadClass.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tuploadClass.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tuploadClass.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tuploadClass.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tuploadClass.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tuploadClass.title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\t\t\t\tuploadClass.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "9f9e3375-56e6-4854-b4d2-33380eb1582a",
                "parentUUID": "5b36cf9f-90b6-4d82-b423-121773a2f9ea",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "5b36cf9f-90b6-4d82-b423-121773a2f9ea",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get single(built_io_installation_data) class",
                "fullTitle": "classes --- Get class should be able to get single(built_io_installation_data) class",
                "timedOut": false,
                "duration": 2309,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_installation_data\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> installation = res.body.class<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>])<br>\t\t\t\t\tinstallation.schema.length.should.be.equal(<span class=\"hljs-number\">7</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tinstallation.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tinstallation.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tinstallation.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tinstallation.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tinstallation.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tinstallation.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tinstallation.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\t\t\t\tinstallation.title.should.be.equal(<span class=\"hljs-string\">'Installation Data'</span>)<br>\t\t\t\t\tinstallation.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "62a9bf0e-c6ce-4c85-ad73-0c406cc9e927",
                "parentUUID": "5b36cf9f-90b6-4d82-b423-121773a2f9ea",
                "skipped": false
              },
              {
                "title": "should be able to get single(built_io_application_user_role) class",
                "fullTitle": "classes --- Get class should be able to get single(built_io_application_user_role) class",
                "timedOut": false,
                "duration": 2099,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> appUserRole = res.body.class<br>\t\t\t\t\t\t<span class=\"hljs-comment\">//console.log(appUserRole)</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserRole).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserRole.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>])<br>\t\t\t\t\tappUserRole.schema.length.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tappUserRole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserRole.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tappUserRole.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserRole.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserRole.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserRole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tappUserRole.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\t\t\t\tappUserRole.title.should.be.equal(<span class=\"hljs-string\">'Application User Role'</span>)<br>\t\t\t\t\tappUserRole.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "ae2c119a-fda2-4f5b-804d-f6484141fdb3",
                "parentUUID": "5b36cf9f-90b6-4d82-b423-121773a2f9ea",
                "skipped": false
              },
              {
                "title": "should be able to get single(built_io_application_user) class",
                "fullTitle": "classes --- Get class should be able to get single(built_io_application_user) class",
                "timedOut": false,
                "duration": 1471,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> appUserClass = res.body.class<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserClass).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserClass.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>])<br>\t\t\t\t\tappUserClass.schema.length.should.be.equal(<span class=\"hljs-number\">9</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tappUserClass.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserClass.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tappUserClass.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserClass.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserClass.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserClass.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tappUserClass.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tappUserClass.title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\t\t\t\tappUserClass.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "f7d1c9ee-b5e5-498a-8a8b-4c5c523f4c7a",
                "parentUUID": "5b36cf9f-90b6-4d82-b423-121773a2f9ea",
                "skipped": false
              },
              {
                "title": "should be able to get single(inbuilt) class",
                "fullTitle": "classes --- Get class should be able to get single(inbuilt) class",
                "timedOut": false,
                "duration": 1851,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> uploadClass = res.body.class<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(uploadClass).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(uploadClass.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// console.log(uploadClass.schema.length)</span><br>\t\t\t\t\tuploadClass.schema.length.should.be.equal(<span class=\"hljs-number\">9</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tuploadClass.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tuploadClass.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tuploadClass.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tuploadClass.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tuploadClass.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tuploadClass.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tuploadClass.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tuploadClass.title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\t\t\t\tuploadClass.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "9f9e3375-56e6-4854-b4d2-33380eb1582a",
                "parentUUID": "5b36cf9f-90b6-4d82-b423-121773a2f9ea",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 7730
          },
          {
            "title": "Update class",
            "suites": [],
            "tests": [
              {
                "title": "should be able to update the given class",
                "fullTitle": "classes --- Update class should be able to update the given class",
                "timedOut": false,
                "duration": 3545,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"testclas\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"testclass\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classUid = res1.body.class.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Update_class'</span>, authtoken, api_key, classUid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"changed\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"count\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"count\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t]<br>\t\t\t\t\t\t}<br>\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> updatedClss = res2.body.class<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.schema[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.abilities).should.be.deep.equal([<span class=\"hljs-string\">'get_one_object'</span>, <span class=\"hljs-string\">'get_all_objects'</span>, <span class=\"hljs-string\">'create_object'</span>, <span class=\"hljs-string\">'update_object'</span>, <span class=\"hljs-string\">'delete_object'</span>, <span class=\"hljs-string\">'delete_all_objects'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.DEFAULT_ACL).should.be.deep.equal([<span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.DEFAULT_ACL.others).should.be.deep.equal([<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t\t\tupdatedClss.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tupdatedClss.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tupdatedClss.last_activity.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tupdatedClss.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tupdatedClss.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tupdatedClss.schema.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\tupdatedClss.title.should.be.equal(<span class=\"hljs-string\">'changed'</span>)<br>\t\t\t\t\t\t\tupdatedClss.uid.should.be.equal(<span class=\"hljs-string\">'testclass'</span>)<br>\t\t\t\t\t\t\tupdatedClss.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tupdatedClss.maintain_revisions.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.get_one_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.get_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.create_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.update_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.delete_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.delete_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.DEFAULT_ACL.others.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.DEFAULT_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "223b7935-41ea-4519-9a34-52b81d030b8d",
                "parentUUID": "4da90a46-5de1-46bd-afe8-15a19778eae4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "4da90a46-5de1-46bd-afe8-15a19778eae4",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to update the given class",
                "fullTitle": "classes --- Update class should be able to update the given class",
                "timedOut": false,
                "duration": 3545,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"testclas\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"testclass\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classUid = res1.body.class.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Update_class'</span>, authtoken, api_key, classUid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"changed\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"count\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"count\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t]<br>\t\t\t\t\t\t}<br>\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> updatedClss = res2.body.class<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.schema[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.abilities).should.be.deep.equal([<span class=\"hljs-string\">'get_one_object'</span>, <span class=\"hljs-string\">'get_all_objects'</span>, <span class=\"hljs-string\">'create_object'</span>, <span class=\"hljs-string\">'update_object'</span>, <span class=\"hljs-string\">'delete_object'</span>, <span class=\"hljs-string\">'delete_all_objects'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.DEFAULT_ACL).should.be.deep.equal([<span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.DEFAULT_ACL.others).should.be.deep.equal([<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t\t\tupdatedClss.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tupdatedClss.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tupdatedClss.last_activity.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tupdatedClss.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tupdatedClss.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tupdatedClss.schema.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\tupdatedClss.title.should.be.equal(<span class=\"hljs-string\">'changed'</span>)<br>\t\t\t\t\t\t\tupdatedClss.uid.should.be.equal(<span class=\"hljs-string\">'testclass'</span>)<br>\t\t\t\t\t\t\tupdatedClss.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tupdatedClss.maintain_revisions.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.get_one_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.get_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.create_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.update_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.delete_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.delete_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.DEFAULT_ACL.others.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.DEFAULT_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "223b7935-41ea-4519-9a34-52b81d030b8d",
                "parentUUID": "4da90a46-5de1-46bd-afe8-15a19778eae4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3545
          },
          {
            "title": "Delete Class",
            "suites": [],
            "tests": [
              {
                "title": "should be able to delete class",
                "fullTitle": "classes --- Delete Class should be able to delete class",
                "timedOut": false,
                "duration": 3001,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"new class\"</span>,<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"new_class\"</span>,<br>\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t}]<br>\t}<br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br><br>\t\t<span class=\"hljs-keyword\">var</span> classUid = res1.body.class.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class deleted successfully!'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br><br>\t})",
                "isRoot": false,
                "uuid": "d1346540-f513-4808-9ab1-04f701d41485",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on application user class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on application user class delete",
                "timedOut": false,
                "duration": 1631,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "0be3095b-98b7-4d55-84be-bdab89bbacc1",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on application user role class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on application user role class delete",
                "timedOut": false,
                "duration": 1592,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "b9616162-6e45-45ca-bbf2-680fc26c4209",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on upload class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "9ee9b38d-a19a-42ab-98a6-938087ab914a",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on upload class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
                "timedOut": false,
                "duration": 1483,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_installation_data\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "6c446b0b-ecfa-4ed4-931e-82cf2e40d28d",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "should provide an error messgae on upload class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "9ee9b38d-a19a-42ab-98a6-938087ab914a",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "3028a635-df64-426e-9fd5-d49475fbd210",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to delete class",
                "fullTitle": "classes --- Delete Class should be able to delete class",
                "timedOut": false,
                "duration": 3001,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"new class\"</span>,<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"new_class\"</span>,<br>\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t}]<br>\t}<br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br><br>\t\t<span class=\"hljs-keyword\">var</span> classUid = res1.body.class.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class deleted successfully!'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br><br>\t})",
                "isRoot": false,
                "uuid": "d1346540-f513-4808-9ab1-04f701d41485",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on application user class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on application user class delete",
                "timedOut": false,
                "duration": 1631,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "0be3095b-98b7-4d55-84be-bdab89bbacc1",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on application user role class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on application user role class delete",
                "timedOut": false,
                "duration": 1592,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "b9616162-6e45-45ca-bbf2-680fc26c4209",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on upload class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
                "timedOut": false,
                "duration": 1483,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_installation_data\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "6c446b0b-ecfa-4ed4-931e-82cf2e40d28d",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 7707
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "e511663d-7caa-4967-92f1-29acc39f1e95",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Bulk sys ACL --- ",
        "suites": [
          {
            "title": "Classes Bulk sys ACL",
            "suites": [],
            "tests": [
              {
                "title": "should apply bulk sys ACL on given classes",
                "fullTitle": "Bulk sys ACL ---  Classes Bulk sys ACL should apply bulk sys ACL on given classes",
                "timedOut": false,
                "duration": 1573,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'apply_bulk_sys_acl'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_application_user\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_application_user_role\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_installation_data\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_upload\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: classUid,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}]<br>\t\t\t})<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes1 = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes2 = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes3 = res.body.classes[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes4 = res.body.classes[<span class=\"hljs-number\">3</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes5 = res.body.classes[<span class=\"hljs-number\">4</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tclasses1.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses2.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses3.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses4.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses5.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tclasses1.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tclasses2.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\t\t\t\tclasses3.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\t\t\t\tclasses4.uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\t\tclasses5.uid.should.be.equal(<span class=\"hljs-string\">'supertest_class'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].uid.should.be.equal(contentRole)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">//</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.read.should.be.equal(false)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.update.should.be.equal(false)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.delete.should.be.equal(false)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.create.should.be.equal(false)</span><br>\t\t\t\t\tdone()<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "2454edf1-2583-4455-9868-f3c49f9295ef",
                "parentUUID": "36ac7ff5-4cff-4d29-9d29-1244c00fd5be",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "36ac7ff5-4cff-4d29-9d29-1244c00fd5be",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should apply bulk sys ACL on given classes",
                "fullTitle": "Bulk sys ACL ---  Classes Bulk sys ACL should apply bulk sys ACL on given classes",
                "timedOut": false,
                "duration": 1573,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'apply_bulk_sys_acl'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_application_user\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_application_user_role\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_installation_data\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_upload\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: classUid,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}]<br>\t\t\t})<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes1 = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes2 = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes3 = res.body.classes[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes4 = res.body.classes[<span class=\"hljs-number\">3</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes5 = res.body.classes[<span class=\"hljs-number\">4</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tclasses1.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses2.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses3.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses4.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses5.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tclasses1.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tclasses2.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\t\t\t\tclasses3.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\t\t\t\tclasses4.uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\t\tclasses5.uid.should.be.equal(<span class=\"hljs-string\">'supertest_class'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].uid.should.be.equal(contentRole)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">//</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.read.should.be.equal(false)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.update.should.be.equal(false)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.delete.should.be.equal(false)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.create.should.be.equal(false)</span><br>\t\t\t\t\tdone()<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "2454edf1-2583-4455-9868-f3c49f9295ef",
                "parentUUID": "36ac7ff5-4cff-4d29-9d29-1244c00fd5be",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1573
          },
          {
            "title": "Get classes bulk acl",
            "suites": [],
            "tests": [
              {
                "title": "should get bulk sys ACL applied on classes",
                "fullTitle": "Bulk sys ACL ---  Get classes bulk acl should get bulk sys ACL applied on classes",
                "timedOut": false,
                "duration": 1695,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_bulk_sys_acl'</span>, authtoken, api_key)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes1 = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes2 = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes3 = res.body.classes[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes4 = res.body.classes[<span class=\"hljs-number\">3</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes5 = res.body.classes[<span class=\"hljs-number\">4</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tclasses1.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tclasses2.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\t\t\t\tclasses3.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\t\t\t\tclasses4.uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\t\tclasses5.uid.should.be.equal(<span class=\"hljs-string\">'supertest_class'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">//</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "544a83c9-2601-42fd-9c4f-bfa1acc1c15b",
                "parentUUID": "6ea90d2e-f486-42ee-83c7-4aedb693d3fa",
                "skipped": false
              },
              {
                "title": "should get bulk sys ACL applied on specified class",
                "fullTitle": "Bulk sys ACL ---  Get classes bulk acl should get bulk sys ACL applied on specified class",
                "timedOut": false,
                "duration": 1497,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_bulk_sys_acl'</span>, authtoken, api_key, {<br>\t\t\t\tclass_uids: <span class=\"hljs-string\">'[\"supertest_class\", \"built_io_upload\"]'</span><br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> classes1 = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> classes2 = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1]).should.to.be.deep.equal(['uid', 'read', 'update', 'delete', 'sub_acl'])</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1].sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1]).should.to.be.deep.equal(['uid', 'read', 'update', 'delete', 'sub_acl'])</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1].sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br>\t\t\t\t<span class=\"hljs-comment\">// data assertion</span><br>\t\t\t\tclasses1.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tclasses2.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tclasses1.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].should.be.a('object')</span><br>\t\t\t\t<span class=\"hljs-comment\">// value assertion\t</span><br>\t\t\t\tclasses1.uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\tclasses2.uid.should.be.equal(<span class=\"hljs-string\">'supertest_class'</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t<span class=\"hljs-comment\">// classes1.SYS_ACL.roles[1].uid.should.be.equal(contentRole)</span><br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].uid.should.be.equal(contentRole)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].read.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].update.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].delete.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.read.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.update.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.delete.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.create.should.be.equal(false)</span><br>\t\t\t\tdone()<br>\t\t\t})",
                "isRoot": false,
                "uuid": "fc023ea4-4825-4963-8ec8-c74be6d3a88e",
                "parentUUID": "6ea90d2e-f486-42ee-83c7-4aedb693d3fa",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "6ea90d2e-f486-42ee-83c7-4aedb693d3fa",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should get bulk sys ACL applied on classes",
                "fullTitle": "Bulk sys ACL ---  Get classes bulk acl should get bulk sys ACL applied on classes",
                "timedOut": false,
                "duration": 1695,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_bulk_sys_acl'</span>, authtoken, api_key)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes1 = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes2 = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes3 = res.body.classes[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes4 = res.body.classes[<span class=\"hljs-number\">3</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes5 = res.body.classes[<span class=\"hljs-number\">4</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tclasses1.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tclasses2.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\t\t\t\tclasses3.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\t\t\t\tclasses4.uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\t\tclasses5.uid.should.be.equal(<span class=\"hljs-string\">'supertest_class'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">//</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "544a83c9-2601-42fd-9c4f-bfa1acc1c15b",
                "parentUUID": "6ea90d2e-f486-42ee-83c7-4aedb693d3fa",
                "skipped": false
              },
              {
                "title": "should get bulk sys ACL applied on specified class",
                "fullTitle": "Bulk sys ACL ---  Get classes bulk acl should get bulk sys ACL applied on specified class",
                "timedOut": false,
                "duration": 1497,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_bulk_sys_acl'</span>, authtoken, api_key, {<br>\t\t\t\tclass_uids: <span class=\"hljs-string\">'[\"supertest_class\", \"built_io_upload\"]'</span><br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> classes1 = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> classes2 = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1]).should.to.be.deep.equal(['uid', 'read', 'update', 'delete', 'sub_acl'])</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1].sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1]).should.to.be.deep.equal(['uid', 'read', 'update', 'delete', 'sub_acl'])</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1].sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br>\t\t\t\t<span class=\"hljs-comment\">// data assertion</span><br>\t\t\t\tclasses1.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tclasses2.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tclasses1.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].should.be.a('object')</span><br>\t\t\t\t<span class=\"hljs-comment\">// value assertion\t</span><br>\t\t\t\tclasses1.uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\tclasses2.uid.should.be.equal(<span class=\"hljs-string\">'supertest_class'</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t<span class=\"hljs-comment\">// classes1.SYS_ACL.roles[1].uid.should.be.equal(contentRole)</span><br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].uid.should.be.equal(contentRole)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].read.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].update.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].delete.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.read.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.update.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.delete.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.create.should.be.equal(false)</span><br>\t\t\t\tdone()<br>\t\t\t})",
                "isRoot": false,
                "uuid": "fc023ea4-4825-4963-8ec8-c74be6d3a88e",
                "parentUUID": "6ea90d2e-f486-42ee-83c7-4aedb693d3fa",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3192
          },
          {
            "title": "Collaborators permissions",
            "suites": [],
            "tests": [
              {
                "title": "should set roles to collaborators in bulk",
                "fullTitle": "Bulk sys ACL ---  Collaborators permissions should set roles to collaborators in bulk",
                "timedOut": false,
                "duration": 1505,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// console.log(userUID_2)</span><br><span class=\"hljs-comment\">// console.log(email_2)</span><br><span class=\"hljs-comment\">// console.log(supertestRole)</span><br><span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">55000</span>)<br><span class=\"hljs-keyword\">var</span> users = {}<br>users[userUID_2] = [<br>\tsupertestRole,<br>\tcontentRole<br>]<br>factories.create(<span class=\"hljs-string\">'set_role_collaborator'</span>, authtoken, api_key, {<br>\tusers: users<br>})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">\"The roles were applied successfully.\"</span>)<br>\t\t<span class=\"hljs-keyword\">var</span> users1 = res.body.users[<span class=\"hljs-number\">1</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> users2 = res.body.users[<span class=\"hljs-number\">0</span>]<br>\t\t<br>\t<span class=\"hljs-comment\">// // key assertions</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users2).should.to.be.deep.equal(['uid', 'created_at', 'updated_at', 'email', 'username', 'plan_id', 'roles'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users2.roles[0]).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users2.roles[1]).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users1).should.to.be.deep.equal(['uid', 'created_at', 'updated_at', 'email', 'username', 'plan_id', 'roles'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users1.roles[0]).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL'])</span><br>\t<span class=\"hljs-comment\">// \t// value assertions</span><br>\t<span class=\"hljs-comment\">// \tusers2.uid.should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.email.should.be.equal(email_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.username.should.be.equal(username_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].uid.should.be.equal(devRole)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].users[0].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].owner.should.be.equal(email)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.api_key.should.be.equal(api_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.owner_uid.should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.master_key.should.be.equal(master_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.user_uids[0].should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.user_uids[1].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.user_uids[2].should.be.equal(userUID_2)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].uid.should.be.equal(contentRole)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].users[0].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].owner.should.be.equal(email)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].application.api_key.should.be.equal(api_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.master_key.should.be.equal(master_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].application.owner_uid.should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers1.uid.should.be.equal(userUID_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.email.should.be.equal(email_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.username.should.be.equal(username_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].uid.should.be.equal(supertestRole)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].users[0].should.be.equal(userUID_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].owner.should.be.equal(email)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.api_key.should.be.equal(api_key)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.owner_uid.should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.master_key.should.be.equal(master_key)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.user_uids[0].should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.user_uids[1].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.user_uids[2].should.be.equal(userUID_2)</span><br><br><br>\t\tdone()<br>\t})",
                "isRoot": false,
                "uuid": "c06287d5-e879-4a61-967f-8b2a6fe44271",
                "parentUUID": "868128ef-1fd3-4d7b-af81-f46e29f1a26e",
                "skipped": false
              },
              {
                "title": "should Fetch permissions for one or more users",
                "fullTitle": "Bulk sys ACL ---  Collaborators permissions should Fetch permissions for one or more users",
                "timedOut": false,
                "duration": 1497,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_permissions_user'</span>, authtoken, api_key, {<br>\t\t\t\tusers: [userUID, userUID_2]<br>\t\t\t})<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body, err)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> users1 = res.body.users[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> users2 = res.body.users[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(users1)</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users2).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'classes'</span>, <span class=\"hljs-string\">'isOwner'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users2.classes).should.to.be.deep.equal([<span class=\"hljs-string\">'built_io_application_user'</span>, <span class=\"hljs-string\">'built_io_application_user_role'</span>, <span class=\"hljs-string\">'built_io_installation_data'</span>, <span class=\"hljs-string\">'built_io_upload'</span>, <span class=\"hljs-string\">'supertest_class'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users1).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'classes'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users1.classes).should.to.be.deep.equal([<span class=\"hljs-string\">'built_io_application_user'</span>, <span class=\"hljs-string\">'built_io_application_user_role'</span>, <span class=\"hljs-string\">'built_io_installation_data'</span>, <span class=\"hljs-string\">'built_io_upload'</span>, <span class=\"hljs-string\">'supertest_class'</span>])<br>\t\t\t\t\tdone()<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "e81678bc-eefd-434c-ba5b-8130a9877841",
                "parentUUID": "868128ef-1fd3-4d7b-af81-f46e29f1a26e",
                "skipped": false
              },
              {
                "title": "should Fetch permissions for one or more users after updating role",
                "fullTitle": "Bulk sys ACL ---  Collaborators permissions should Fetch permissions for one or more users after updating role",
                "timedOut": false,
                "duration": 2902,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Update_system_role'</span>, authtoken, api_key, supertestRole.uid, {<br>\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"testRole\"</span><br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> factories.create(<span class=\"hljs-string\">'Get_system_roles'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"include_permissions\"</span>: <span class=\"hljs-literal\">true</span><br>\t}) <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t<span class=\"hljs-keyword\">var</span> roles = res.body.system_roles[<span class=\"hljs-number\">0</span>]<br><span class=\"hljs-comment\">// // key assertion</span><br><span class=\"hljs-comment\">// \tObject.keys(roles).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL', 'permissions'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[0]).should.to.be.deep.equal(['class_uid', 'SYS_ACL'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[1]).should.to.be.deep.equal(['class_uid', 'SYS_ACL'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[0].SYS_ACL).should.to.be.deep.equal(['read', 'update', 'delete', 'sub_acl'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[0].SYS_ACL.sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[1].SYS_ACL).should.to.be.deep.equal(['read', 'update', 'delete', 'sub_acl'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[1].SYS_ACL.sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br><span class=\"hljs-comment\">// \t// Data assertion</span><br><span class=\"hljs-comment\">// \troles.uid.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.name.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.users.should.be.a('array')</span><br><span class=\"hljs-comment\">// \troles.roles.should.be.a('array')</span><br><span class=\"hljs-comment\">// \troles.created_at.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.updated_at.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.owner.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.application.should.be.a('object')</span><br><span class=\"hljs-comment\">// \troles.SYS_ACL.should.be.a('object')</span><br><span class=\"hljs-comment\">// \troles.permissions.should.be.a('array')</span><br><span class=\"hljs-comment\">// \t// value assertion</span><br><span class=\"hljs-comment\">// \troles.uid.should.be.equal(devRole1)</span><br><span class=\"hljs-comment\">// \troles.created_at.should.be.equal(roles.updated_at)</span><br><span class=\"hljs-comment\">// \troles.owner.should.be.equal(email)</span><br><span class=\"hljs-comment\">// \troles.application.api_key.should.be.equal(api_key1)</span><br><span class=\"hljs-comment\">// \troles.application.owner_uid.should.be.equal(userUID)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].class_uid.should.be.equal(classUid1)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.read.should.be.equal(true)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.read.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.create.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].class_uid.should.be.equal('built_io_upload')</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.read.should.be.equal(true)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.read.should.be.equal(true)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.create.should.be.equal(false)</span><br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "a0fab4f0-ebe9-4c88-ab39-09bdb9329301",
                "parentUUID": "868128ef-1fd3-4d7b-af81-f46e29f1a26e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "868128ef-1fd3-4d7b-af81-f46e29f1a26e",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should set roles to collaborators in bulk",
                "fullTitle": "Bulk sys ACL ---  Collaborators permissions should set roles to collaborators in bulk",
                "timedOut": false,
                "duration": 1505,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// console.log(userUID_2)</span><br><span class=\"hljs-comment\">// console.log(email_2)</span><br><span class=\"hljs-comment\">// console.log(supertestRole)</span><br><span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">55000</span>)<br><span class=\"hljs-keyword\">var</span> users = {}<br>users[userUID_2] = [<br>\tsupertestRole,<br>\tcontentRole<br>]<br>factories.create(<span class=\"hljs-string\">'set_role_collaborator'</span>, authtoken, api_key, {<br>\tusers: users<br>})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">\"The roles were applied successfully.\"</span>)<br>\t\t<span class=\"hljs-keyword\">var</span> users1 = res.body.users[<span class=\"hljs-number\">1</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> users2 = res.body.users[<span class=\"hljs-number\">0</span>]<br>\t\t<br>\t<span class=\"hljs-comment\">// // key assertions</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users2).should.to.be.deep.equal(['uid', 'created_at', 'updated_at', 'email', 'username', 'plan_id', 'roles'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users2.roles[0]).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users2.roles[1]).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users1).should.to.be.deep.equal(['uid', 'created_at', 'updated_at', 'email', 'username', 'plan_id', 'roles'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users1.roles[0]).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL'])</span><br>\t<span class=\"hljs-comment\">// \t// value assertions</span><br>\t<span class=\"hljs-comment\">// \tusers2.uid.should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.email.should.be.equal(email_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.username.should.be.equal(username_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].uid.should.be.equal(devRole)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].users[0].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].owner.should.be.equal(email)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.api_key.should.be.equal(api_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.owner_uid.should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.master_key.should.be.equal(master_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.user_uids[0].should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.user_uids[1].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.user_uids[2].should.be.equal(userUID_2)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].uid.should.be.equal(contentRole)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].users[0].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].owner.should.be.equal(email)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].application.api_key.should.be.equal(api_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.master_key.should.be.equal(master_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].application.owner_uid.should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers1.uid.should.be.equal(userUID_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.email.should.be.equal(email_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.username.should.be.equal(username_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].uid.should.be.equal(supertestRole)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].users[0].should.be.equal(userUID_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].owner.should.be.equal(email)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.api_key.should.be.equal(api_key)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.owner_uid.should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.master_key.should.be.equal(master_key)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.user_uids[0].should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.user_uids[1].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.user_uids[2].should.be.equal(userUID_2)</span><br><br><br>\t\tdone()<br>\t})",
                "isRoot": false,
                "uuid": "c06287d5-e879-4a61-967f-8b2a6fe44271",
                "parentUUID": "868128ef-1fd3-4d7b-af81-f46e29f1a26e",
                "skipped": false
              },
              {
                "title": "should Fetch permissions for one or more users",
                "fullTitle": "Bulk sys ACL ---  Collaborators permissions should Fetch permissions for one or more users",
                "timedOut": false,
                "duration": 1497,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_permissions_user'</span>, authtoken, api_key, {<br>\t\t\t\tusers: [userUID, userUID_2]<br>\t\t\t})<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body, err)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> users1 = res.body.users[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> users2 = res.body.users[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(users1)</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users2).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'classes'</span>, <span class=\"hljs-string\">'isOwner'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users2.classes).should.to.be.deep.equal([<span class=\"hljs-string\">'built_io_application_user'</span>, <span class=\"hljs-string\">'built_io_application_user_role'</span>, <span class=\"hljs-string\">'built_io_installation_data'</span>, <span class=\"hljs-string\">'built_io_upload'</span>, <span class=\"hljs-string\">'supertest_class'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users1).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'classes'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users1.classes).should.to.be.deep.equal([<span class=\"hljs-string\">'built_io_application_user'</span>, <span class=\"hljs-string\">'built_io_application_user_role'</span>, <span class=\"hljs-string\">'built_io_installation_data'</span>, <span class=\"hljs-string\">'built_io_upload'</span>, <span class=\"hljs-string\">'supertest_class'</span>])<br>\t\t\t\t\tdone()<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "e81678bc-eefd-434c-ba5b-8130a9877841",
                "parentUUID": "868128ef-1fd3-4d7b-af81-f46e29f1a26e",
                "skipped": false
              },
              {
                "title": "should Fetch permissions for one or more users after updating role",
                "fullTitle": "Bulk sys ACL ---  Collaborators permissions should Fetch permissions for one or more users after updating role",
                "timedOut": false,
                "duration": 2902,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Update_system_role'</span>, authtoken, api_key, supertestRole.uid, {<br>\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"testRole\"</span><br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> factories.create(<span class=\"hljs-string\">'Get_system_roles'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"include_permissions\"</span>: <span class=\"hljs-literal\">true</span><br>\t}) <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t<span class=\"hljs-keyword\">var</span> roles = res.body.system_roles[<span class=\"hljs-number\">0</span>]<br><span class=\"hljs-comment\">// // key assertion</span><br><span class=\"hljs-comment\">// \tObject.keys(roles).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL', 'permissions'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[0]).should.to.be.deep.equal(['class_uid', 'SYS_ACL'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[1]).should.to.be.deep.equal(['class_uid', 'SYS_ACL'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[0].SYS_ACL).should.to.be.deep.equal(['read', 'update', 'delete', 'sub_acl'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[0].SYS_ACL.sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[1].SYS_ACL).should.to.be.deep.equal(['read', 'update', 'delete', 'sub_acl'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[1].SYS_ACL.sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br><span class=\"hljs-comment\">// \t// Data assertion</span><br><span class=\"hljs-comment\">// \troles.uid.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.name.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.users.should.be.a('array')</span><br><span class=\"hljs-comment\">// \troles.roles.should.be.a('array')</span><br><span class=\"hljs-comment\">// \troles.created_at.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.updated_at.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.owner.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.application.should.be.a('object')</span><br><span class=\"hljs-comment\">// \troles.SYS_ACL.should.be.a('object')</span><br><span class=\"hljs-comment\">// \troles.permissions.should.be.a('array')</span><br><span class=\"hljs-comment\">// \t// value assertion</span><br><span class=\"hljs-comment\">// \troles.uid.should.be.equal(devRole1)</span><br><span class=\"hljs-comment\">// \troles.created_at.should.be.equal(roles.updated_at)</span><br><span class=\"hljs-comment\">// \troles.owner.should.be.equal(email)</span><br><span class=\"hljs-comment\">// \troles.application.api_key.should.be.equal(api_key1)</span><br><span class=\"hljs-comment\">// \troles.application.owner_uid.should.be.equal(userUID)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].class_uid.should.be.equal(classUid1)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.read.should.be.equal(true)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.read.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.create.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].class_uid.should.be.equal('built_io_upload')</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.read.should.be.equal(true)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.read.should.be.equal(true)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.create.should.be.equal(false)</span><br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "a0fab4f0-ebe9-4c88-ab39-09bdb9329301",
                "parentUUID": "868128ef-1fd3-4d7b-af81-f46e29f1a26e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5904
          },
          {
            "title": "system roles Bulk ACL",
            "suites": [],
            "tests": [
              {
                "title": "should apply system roles on classes in bulk",
                "fullTitle": "Bulk sys ACL ---  system roles Bulk ACL should apply system roles on classes in bulk",
                "timedOut": false,
                "duration": 1704,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'set_role_bulk_acl'</span>, authtoken, api_key1, {<br>\t\t\t\t<span class=\"hljs-string\">\"system_roles\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: roleid,<br>\t\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: classUid1,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_upload\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}]<br>\t\t\t\t}]<br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> roles = res.body.system_roles[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'permissions'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\troles.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.permissions.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\troles.uid.should.be.equal(roleid)<br>\t\t\t\troles.created_at.should.be.equal(roles.updated_at)<br>\t\t\t\troles.owner.should.be.equal(email)<br>\t\t\t\troles.application.api_key.should.be.equal(api_key1)<br>\t\t\t\troles.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].class_uid.should.be.equal(classUid1)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].class_uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "b6b56df4-9b35-4505-a008-ef49cd8a8bf5",
                "parentUUID": "1411a74f-2f0b-4ced-9288-52b7dc95083d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "1411a74f-2f0b-4ced-9288-52b7dc95083d",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should apply system roles on classes in bulk",
                "fullTitle": "Bulk sys ACL ---  system roles Bulk ACL should apply system roles on classes in bulk",
                "timedOut": false,
                "duration": 1704,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'set_role_bulk_acl'</span>, authtoken, api_key1, {<br>\t\t\t\t<span class=\"hljs-string\">\"system_roles\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: roleid,<br>\t\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: classUid1,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_upload\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}]<br>\t\t\t\t}]<br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> roles = res.body.system_roles[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'permissions'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\troles.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.permissions.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\troles.uid.should.be.equal(roleid)<br>\t\t\t\troles.created_at.should.be.equal(roles.updated_at)<br>\t\t\t\troles.owner.should.be.equal(email)<br>\t\t\t\troles.application.api_key.should.be.equal(api_key1)<br>\t\t\t\troles.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].class_uid.should.be.equal(classUid1)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].class_uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "b6b56df4-9b35-4505-a008-ef49cd8a8bf5",
                "parentUUID": "1411a74f-2f0b-4ced-9288-52b7dc95083d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1704
          },
          {
            "title": "permissions",
            "suites": [],
            "tests": [
              {
                "title": "should get all roles, and the ACL set for it on each class",
                "fullTitle": "Bulk sys ACL ---  permissions should get all roles, and the ACL set for it on each class",
                "timedOut": false,
                "duration": 1456,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_system_roles'</span>, authtoken, api_key1, {<br>\t\t\t\t<span class=\"hljs-string\">\"include_permissions\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> roles = res.body.system_roles[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'permissions'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\troles.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.permissions.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\troles.uid.should.be.equal(devRole1)<br>\t\t\t\troles.created_at.should.be.equal(roles.updated_at)<br>\t\t\t\troles.owner.should.be.equal(email)<br>\t\t\t\troles.application.api_key.should.be.equal(api_key1)<br>\t\t\t\troles.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].class_uid.should.be.equal(classUid1)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].class_uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tdone(err)<br>\t\t\t<br>\t\t\t})",
                "isRoot": false,
                "uuid": "8b2678bb-a3c9-4468-8fd3-906c0920a6b8",
                "parentUUID": "44491fae-8530-4704-b4f1-a35adad6e599",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "44491fae-8530-4704-b4f1-a35adad6e599",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should get all roles, and the ACL set for it on each class",
                "fullTitle": "Bulk sys ACL ---  permissions should get all roles, and the ACL set for it on each class",
                "timedOut": false,
                "duration": 1456,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_system_roles'</span>, authtoken, api_key1, {<br>\t\t\t\t<span class=\"hljs-string\">\"include_permissions\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> roles = res.body.system_roles[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'permissions'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\troles.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.permissions.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\troles.uid.should.be.equal(devRole1)<br>\t\t\t\troles.created_at.should.be.equal(roles.updated_at)<br>\t\t\t\troles.owner.should.be.equal(email)<br>\t\t\t\troles.application.api_key.should.be.equal(api_key1)<br>\t\t\t\troles.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].class_uid.should.be.equal(classUid1)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].class_uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tdone(err)<br>\t\t\t<br>\t\t\t})",
                "isRoot": false,
                "uuid": "8b2678bb-a3c9-4468-8fd3-906c0920a6b8",
                "parentUUID": "44491fae-8530-4704-b4f1-a35adad6e599",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1456
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "eb6de37a-b225-464d-8608-ad2590a3fa79",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Objects metadata --- ",
        "suites": [
          {
            "title": "Create metadata (POST call)",
            "suites": [],
            "tests": [
              {
                "title": "should be able to ignore metadata field while creating object",
                "fullTitle": "Objects metadata ---  Create metadata (POST call) should be able to ignore metadata field while creating object",
                "timedOut": false,
                "duration": 1474,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_object'</span>, authtoken, api_key, classUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"metadata object\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata create\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"isAtool\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"environment\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"dev\"</span>: <span class=\"hljs-string\">\"new server\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"stag\"</span>: <span class=\"hljs-string\">\"old server\"</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "251272af-f81e-44a9-aa1f-c1fc15f3d683",
                "parentUUID": "0d55c7a0-9b98-457e-aca1-3bab1cee1bc4",
                "skipped": false
              },
              {
                "title": "should be able to ignore _metadata field while creating object",
                "fullTitle": "Objects metadata ---  Create metadata (POST call) should be able to ignore _metadata field while creating object",
                "timedOut": false,
                "duration": 1485,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_object'</span>, authtoken, api_key, classUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"_metadata object\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata create\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"isAtool\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"environment\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"dev\"</span>: <span class=\"hljs-string\">\"new server\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"stag\"</span>: <span class=\"hljs-string\">\"old server\"</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tobject = res.body.object<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "1c50eb8a-659c-4ef6-a890-e39207997ae5",
                "parentUUID": "0d55c7a0-9b98-457e-aca1-3bab1cee1bc4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "0d55c7a0-9b98-457e-aca1-3bab1cee1bc4",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to ignore metadata field while creating object",
                "fullTitle": "Objects metadata ---  Create metadata (POST call) should be able to ignore metadata field while creating object",
                "timedOut": false,
                "duration": 1474,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_object'</span>, authtoken, api_key, classUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"metadata object\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata create\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"isAtool\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"environment\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"dev\"</span>: <span class=\"hljs-string\">\"new server\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"stag\"</span>: <span class=\"hljs-string\">\"old server\"</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "251272af-f81e-44a9-aa1f-c1fc15f3d683",
                "parentUUID": "0d55c7a0-9b98-457e-aca1-3bab1cee1bc4",
                "skipped": false
              },
              {
                "title": "should be able to ignore _metadata field while creating object",
                "fullTitle": "Objects metadata ---  Create metadata (POST call) should be able to ignore _metadata field while creating object",
                "timedOut": false,
                "duration": 1485,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_object'</span>, authtoken, api_key, classUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"_metadata object\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata create\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"isAtool\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"environment\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"dev\"</span>: <span class=\"hljs-string\">\"new server\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"stag\"</span>: <span class=\"hljs-string\">\"old server\"</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tobject = res.body.object<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "1c50eb8a-659c-4ef6-a890-e39207997ae5",
                "parentUUID": "0d55c7a0-9b98-457e-aca1-3bab1cee1bc4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2959
          },
          {
            "title": "Update object with metadata (PUT call)",
            "suites": [],
            "tests": [
              {
                "title": "should be able to ignore metadata field while updating object",
                "fullTitle": "Objects metadata ---  Update object with metadata (PUT call) should be able to ignore metadata field while updating object",
                "timedOut": false,
                "duration": 1789,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "de791400-fe15-4cea-8081-fed43f5b7eb8",
                "parentUUID": "69318c1b-7ed3-43be-9eaf-d9a5634768c0",
                "skipped": false
              },
              {
                "title": "should be able to provide error message for _metadata field while updating object",
                "fullTitle": "Objects metadata ---  Update object with metadata (PUT call) should be able to provide error message for _metadata field while updating object",
                "timedOut": false,
                "duration": 2730,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"isupertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tobject = res.body.object<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "0a190a54-4d59-47b5-9289-de634bbce75b",
                "parentUUID": "69318c1b-7ed3-43be-9eaf-d9a5634768c0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "69318c1b-7ed3-43be-9eaf-d9a5634768c0",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to ignore metadata field while updating object",
                "fullTitle": "Objects metadata ---  Update object with metadata (PUT call) should be able to ignore metadata field while updating object",
                "timedOut": false,
                "duration": 1789,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "de791400-fe15-4cea-8081-fed43f5b7eb8",
                "parentUUID": "69318c1b-7ed3-43be-9eaf-d9a5634768c0",
                "skipped": false
              },
              {
                "title": "should be able to provide error message for _metadata field while updating object",
                "fullTitle": "Objects metadata ---  Update object with metadata (PUT call) should be able to provide error message for _metadata field while updating object",
                "timedOut": false,
                "duration": 2730,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"isupertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tobject = res.body.object<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "0a190a54-4d59-47b5-9289-de634bbce75b",
                "parentUUID": "69318c1b-7ed3-43be-9eaf-d9a5634768c0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4519
          },
          {
            "title": "Update object with metadata (/metadata PUT call)",
            "suites": [],
            "tests": [
              {
                "title": "should update object with metadata",
                "fullTitle": "Objects metadata ---  Update object with metadata (/metadata PUT call) should update object with metadata",
                "timedOut": false,
                "duration": 3254,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_metadata'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"metadata\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t}<br>\t\t}, {<br>\t\t\t<span class=\"hljs-string\">\"$set\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata update\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-number\">4</span><br>\t\t\t}<br>\t\t}]<br>\t})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'_metadata'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object._metadata).should.to.be.deep.equal([<span class=\"hljs-string\">'increment'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'multiple'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\tobject._metadata.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tobject._metadata.increment.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\tobject._metadata.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tobject._metadata.multiple.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tobject._metadata.name.should.be.equal(<span class=\"hljs-string\">'supertest metadata update'</span>)<br>\t\tobject._metadata.multiple.should.be.equal(<span class=\"hljs-number\">4</span>)<br>\t\tobject._metadata.increment.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_metadata'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t<span class=\"hljs-string\">\"metadata\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"$mul\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-number\">4</span><br>\t\t\t\t\t}<br>\t\t\t\t}]<br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'_metadata'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object._metadata).should.to.be.deep.equal([<span class=\"hljs-string\">'increment'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'multiple'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\tobject._metadata.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject._metadata.increment.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject._metadata.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject._metadata.multiple.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tobject._metadata.name.should.be.equal(<span class=\"hljs-string\">'supertest metadata update'</span>)<br>\t\t\t\tobject._metadata.increment.should.be.equal(<span class=\"hljs-number\">4</span>)<br>\t\t\t\tobject._metadata.multiple.should.be.equal(<span class=\"hljs-number\">16</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "d7bee225-6ac5-4128-b2a2-00ed3ecaf4d5",
                "parentUUID": "e8ecd5e3-7121-4985-b8f0-5473959a62db",
                "skipped": false
              },
              {
                "title": "should provide error message for _metadata field while updating object",
                "fullTitle": "Objects metadata ---  Update object with metadata (/metadata PUT call) should provide error message for _metadata field while updating object",
                "timedOut": false,
                "duration": 1848,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_metadata'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"_metadata\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t}<br>\t\t}, {<br>\t\t\t<span class=\"hljs-string\">\"$set\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata update\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-number\">4</span><br>\t\t\t}<br>\t\t}]<br>\t})<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tres.body.error_message.should.be.equal(<span class=\"hljs-string\">\"Please send your attributes wrapped in 'metadata'\"</span>)<br>\t\tres.body.error_code.should.be.equal(<span class=\"hljs-number\">141</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "3ea881f1-2dca-497a-aa24-10d95d4108bd",
                "parentUUID": "e8ecd5e3-7121-4985-b8f0-5473959a62db",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "e8ecd5e3-7121-4985-b8f0-5473959a62db",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should update object with metadata",
                "fullTitle": "Objects metadata ---  Update object with metadata (/metadata PUT call) should update object with metadata",
                "timedOut": false,
                "duration": 3254,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_metadata'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"metadata\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t}<br>\t\t}, {<br>\t\t\t<span class=\"hljs-string\">\"$set\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata update\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-number\">4</span><br>\t\t\t}<br>\t\t}]<br>\t})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'_metadata'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object._metadata).should.to.be.deep.equal([<span class=\"hljs-string\">'increment'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'multiple'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\tobject._metadata.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tobject._metadata.increment.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\tobject._metadata.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tobject._metadata.multiple.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tobject._metadata.name.should.be.equal(<span class=\"hljs-string\">'supertest metadata update'</span>)<br>\t\tobject._metadata.multiple.should.be.equal(<span class=\"hljs-number\">4</span>)<br>\t\tobject._metadata.increment.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_metadata'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t<span class=\"hljs-string\">\"metadata\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"$mul\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-number\">4</span><br>\t\t\t\t\t}<br>\t\t\t\t}]<br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'_metadata'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object._metadata).should.to.be.deep.equal([<span class=\"hljs-string\">'increment'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'multiple'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\tobject._metadata.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject._metadata.increment.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject._metadata.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject._metadata.multiple.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tobject._metadata.name.should.be.equal(<span class=\"hljs-string\">'supertest metadata update'</span>)<br>\t\t\t\tobject._metadata.increment.should.be.equal(<span class=\"hljs-number\">4</span>)<br>\t\t\t\tobject._metadata.multiple.should.be.equal(<span class=\"hljs-number\">16</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "d7bee225-6ac5-4128-b2a2-00ed3ecaf4d5",
                "parentUUID": "e8ecd5e3-7121-4985-b8f0-5473959a62db",
                "skipped": false
              },
              {
                "title": "should provide error message for _metadata field while updating object",
                "fullTitle": "Objects metadata ---  Update object with metadata (/metadata PUT call) should provide error message for _metadata field while updating object",
                "timedOut": false,
                "duration": 1848,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'update_metadata'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"_metadata\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t}<br>\t\t}, {<br>\t\t\t<span class=\"hljs-string\">\"$set\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata update\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-number\">4</span><br>\t\t\t}<br>\t\t}]<br>\t})<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tres.body.error_message.should.be.equal(<span class=\"hljs-string\">\"Please send your attributes wrapped in 'metadata'\"</span>)<br>\t\tres.body.error_code.should.be.equal(<span class=\"hljs-number\">141</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "3ea881f1-2dca-497a-aa24-10d95d4108bd",
                "parentUUID": "e8ecd5e3-7121-4985-b8f0-5473959a62db",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5102
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "74750cee-91f9-47fc-bd61-fc1729735d26",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Objects revisions/revert --- ",
        "suites": [
          {
            "title": "get object",
            "suites": [],
            "tests": [
              {
                "title": "should get object owner information in created_by key",
                "fullTitle": "Objects revisions/revert ---  get object should get object owner information in created_by key",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"include_created_by\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.created_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\tobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\tobject.created_by.uid.should.be.equal(userUID)<br>\t\t\t\tobject.created_by.uid.should.be.equal(object.updated_by)<br>\t\t\t\tobject.created_by.email.should.be.equal(email)<br>\t\t\t\tobject.created_by.username.should.be.equal(username)<br>\t\t\t\tobject.updated_by.should.be.equal(userUID)<br>\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// object.ACL.should.be.equal({})</span><br>\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// object.tags.should.be.equal([])\t\t\t\t               </span><br>\t\t\t\tdone()<br>\t\t\t});",
                "err": {
                  "name": "AssertionError",
                  "message": "expected [ Array(7) ] to deeply equal [ Array(6) ]",
                  "stack": "AssertionError: expected [ Array(7) ] to deeply equal [ Array(6) ]<br>    at assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/addMethod.js:41:25)<br>    at doAsserterAsyncAndAddThen (node_modules/chai-as-promised/lib/chai-as-promised.js:292:33)<br>    at null.&lt;anonymous&gt; (node_modules/chai-as-promised/lib/chai-as-promised.js:251:21)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at somethingMethod (node_modules/chai-things/lib/chai-things.js:97:25)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at allMethod (node_modules/chai-things/lib/chai-things.js:165:25)<br>    at ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at Test.&lt;anonymous&gt; (spec/cms_apis/object_revisions_revert_spec.js:119:54)<br>    at Test.assert (node_modules/supertest/lib/test.js:156:6)<br>    at assert (node_modules/supertest/lib/test.js:127:12)<br>    at node_modules/supertest/lib/test.js:124:5<br>    at Test.Request.callback (node_modules/supertest/node_modules/superagent/lib/node/index.js:785:12)<br>    at Stream.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/index.js:990:12)<br>    at Unzip.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/utils.js:108:12)<br>    at endReadableNT (_stream_readable.js:913:12)"
                },
                "isRoot": false,
                "uuid": "cc831401-eadf-4cfe-bd8a-e262f68d5445",
                "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
                "skipped": false
              },
              {
                "title": "should get object owner information in updated_by key",
                "fullTitle": "Objects revisions/revert ---  get object should get object owner information in updated_by key",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"include_updated_by\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t})<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.updated_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.uid.should.be.equal(userUID)<br>\t\t\t\t\tobject.updated_by.uid.should.be.equal(object.created_by)<br>\t\t\t\t\tobject.updated_by.email.should.be.equal(email)<br>\t\t\t\t\tobject.updated_by.username.should.be.equal(username)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// object.ACL.should.be.equal({})</span><br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// object.tags.should.be.equal([])\t\t\t\t               </span><br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "err": {
                  "name": "AssertionError",
                  "message": "expected [ Array(7) ] to deeply equal [ Array(6) ]",
                  "stack": "AssertionError: expected [ Array(7) ] to deeply equal [ Array(6) ]<br>    at assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/addMethod.js:41:25)<br>    at doAsserterAsyncAndAddThen (node_modules/chai-as-promised/lib/chai-as-promised.js:292:33)<br>    at null.&lt;anonymous&gt; (node_modules/chai-as-promised/lib/chai-as-promised.js:251:21)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at somethingMethod (node_modules/chai-things/lib/chai-things.js:97:25)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at allMethod (node_modules/chai-things/lib/chai-things.js:165:25)<br>    at ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at Test.&lt;anonymous&gt; (spec/cms_apis/object_revisions_revert_spec.js:171:55)<br>    at Test.assert (node_modules/supertest/lib/test.js:156:6)<br>    at assert (node_modules/supertest/lib/test.js:127:12)<br>    at node_modules/supertest/lib/test.js:124:5<br>    at Test.Request.callback (node_modules/supertest/node_modules/superagent/lib/node/index.js:785:12)<br>    at Stream.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/index.js:990:12)<br>    at Unzip.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/utils.js:108:12)<br>    at endReadableNT (_stream_readable.js:913:12)"
                },
                "isRoot": false,
                "uuid": "fa5fd03e-9ccb-4424-884d-fc8e13c3160f",
                "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
                "skipped": false
              },
              {
                "title": "should get object owner information in updated_by/created_by key",
                "fullTitle": "Objects revisions/revert ---  get object should get object owner information in updated_by/created_by key",
                "timedOut": false,
                "duration": 3319,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, authtoken_1, api_key, classUid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"include_updated_by\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"include_created_by\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t}))<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.updated_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.created_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'company'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tobject.created_by.uid.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_by.email.should.be.equal(email)<br>\t\t\t\t\tobject.created_by.username.should.be.equal(username)<br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.updated_by.uid.should.be.equal(userUID_1)<br>\t\t\t\t\tobject.updated_by.email.should.be.equal(email_1)<br>\t\t\t\t\tobject.updated_by.username.should.be.equal(username_1)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "85b4a01d-0bf9-4d69-83de-cedfde30a02c",
                "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
                "skipped": false
              },
              {
                "title": "should get object with specific version",
                "fullTitle": "Objects revisions/revert ---  get object should get object with specific version",
                "timedOut": false,
                "duration": 3185,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"version\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t\t}))<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "065844b7-ad75-41b7-b281-77fd4243edcc",
                "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
                "skipped": false
              },
              {
                "title": "should get all objects with revisions",
                "fullTitle": "Objects revisions/revert ---  get object should get all objects with revisions",
                "timedOut": false,
                "duration": 3069,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// R.pretty(res.body)</span><br><span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t}<br>\t}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_revisions'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: objectUid<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> object1 = res1.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> object2 = res1.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object1).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object2).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobject1.uid.should.be.equal(objectUid)<br>\t\tobject1.name.should.be.equal(<span class=\"hljs-string\">'supertest_update'</span>)<br>\t\tobject1.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\tobject1.updated_by.should.be.equal(userUID_1)<br>\t\tobject1.created_by.should.be.equal(userUID)<br>\t\tobject1.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject1.created_at.should.be.not.equal(object1.updated_at)<br>\t\tobject1._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\tobject2.uid.should.be.equal(objectUid)<br>\t\tobject2.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\tobject2.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\tobject2.updated_by.should.be.equal(userUID)<br>\t\tobject2.updated_by.should.be.equal(object2.created_by)<br>\t\tobject2.created_by.should.be.equal(userUID)<br>\t\tobject2.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject2.created_at.should.be.equal(object2.updated_at)<br>\t\tobject2._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\tdone()<br>\t});",
                "isRoot": false,
                "uuid": "6c1ce9ad-acf6-49f4-83e7-2e156f55ca47",
                "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should get object owner information in updated_by/created_by key",
                "fullTitle": "Objects revisions/revert ---  get object should get object owner information in updated_by/created_by key",
                "timedOut": false,
                "duration": 3319,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, authtoken_1, api_key, classUid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"include_updated_by\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"include_created_by\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t}))<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.updated_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.created_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'company'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tobject.created_by.uid.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_by.email.should.be.equal(email)<br>\t\t\t\t\tobject.created_by.username.should.be.equal(username)<br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.updated_by.uid.should.be.equal(userUID_1)<br>\t\t\t\t\tobject.updated_by.email.should.be.equal(email_1)<br>\t\t\t\t\tobject.updated_by.username.should.be.equal(username_1)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "85b4a01d-0bf9-4d69-83de-cedfde30a02c",
                "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
                "skipped": false
              },
              {
                "title": "should get object with specific version",
                "fullTitle": "Objects revisions/revert ---  get object should get object with specific version",
                "timedOut": false,
                "duration": 3185,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"version\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t\t}))<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "065844b7-ad75-41b7-b281-77fd4243edcc",
                "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
                "skipped": false
              },
              {
                "title": "should get all objects with revisions",
                "fullTitle": "Objects revisions/revert ---  get object should get all objects with revisions",
                "timedOut": false,
                "duration": 3069,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-comment\">// R.pretty(res.body)</span><br><span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t}<br>\t}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_revisions'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: objectUid<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> object1 = res1.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> object2 = res1.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object1).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object2).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobject1.uid.should.be.equal(objectUid)<br>\t\tobject1.name.should.be.equal(<span class=\"hljs-string\">'supertest_update'</span>)<br>\t\tobject1.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\tobject1.updated_by.should.be.equal(userUID_1)<br>\t\tobject1.created_by.should.be.equal(userUID)<br>\t\tobject1.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject1.created_at.should.be.not.equal(object1.updated_at)<br>\t\tobject1._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\tobject2.uid.should.be.equal(objectUid)<br>\t\tobject2.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\tobject2.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\tobject2.updated_by.should.be.equal(userUID)<br>\t\tobject2.updated_by.should.be.equal(object2.created_by)<br>\t\tobject2.created_by.should.be.equal(userUID)<br>\t\tobject2.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject2.created_at.should.be.equal(object2.updated_at)<br>\t\tobject2._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\tdone()<br>\t});",
                "isRoot": false,
                "uuid": "6c1ce9ad-acf6-49f4-83e7-2e156f55ca47",
                "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
                "skipped": false
              }
            ],
            "failures": [
              {
                "title": "should get object owner information in created_by key",
                "fullTitle": "Objects revisions/revert ---  get object should get object owner information in created_by key",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"include_created_by\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.created_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\tobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\tobject.created_by.uid.should.be.equal(userUID)<br>\t\t\t\tobject.created_by.uid.should.be.equal(object.updated_by)<br>\t\t\t\tobject.created_by.email.should.be.equal(email)<br>\t\t\t\tobject.created_by.username.should.be.equal(username)<br>\t\t\t\tobject.updated_by.should.be.equal(userUID)<br>\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// object.ACL.should.be.equal({})</span><br>\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// object.tags.should.be.equal([])\t\t\t\t               </span><br>\t\t\t\tdone()<br>\t\t\t});",
                "err": {
                  "name": "AssertionError",
                  "message": "expected [ Array(7) ] to deeply equal [ Array(6) ]",
                  "stack": "AssertionError: expected [ Array(7) ] to deeply equal [ Array(6) ]<br>    at assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/addMethod.js:41:25)<br>    at doAsserterAsyncAndAddThen (node_modules/chai-as-promised/lib/chai-as-promised.js:292:33)<br>    at null.&lt;anonymous&gt; (node_modules/chai-as-promised/lib/chai-as-promised.js:251:21)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at somethingMethod (node_modules/chai-things/lib/chai-things.js:97:25)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at allMethod (node_modules/chai-things/lib/chai-things.js:165:25)<br>    at ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at Test.&lt;anonymous&gt; (spec/cms_apis/object_revisions_revert_spec.js:119:54)<br>    at Test.assert (node_modules/supertest/lib/test.js:156:6)<br>    at assert (node_modules/supertest/lib/test.js:127:12)<br>    at node_modules/supertest/lib/test.js:124:5<br>    at Test.Request.callback (node_modules/supertest/node_modules/superagent/lib/node/index.js:785:12)<br>    at Stream.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/index.js:990:12)<br>    at Unzip.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/utils.js:108:12)<br>    at endReadableNT (_stream_readable.js:913:12)"
                },
                "isRoot": false,
                "uuid": "cc831401-eadf-4cfe-bd8a-e262f68d5445",
                "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
                "skipped": false
              },
              {
                "title": "should get object owner information in updated_by key",
                "fullTitle": "Objects revisions/revert ---  get object should get object owner information in updated_by key",
                "timedOut": false,
                "duration": 0,
                "state": "failed",
                "pass": false,
                "fail": true,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"include_updated_by\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t})<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.updated_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.uid.should.be.equal(userUID)<br>\t\t\t\t\tobject.updated_by.uid.should.be.equal(object.created_by)<br>\t\t\t\t\tobject.updated_by.email.should.be.equal(email)<br>\t\t\t\t\tobject.updated_by.username.should.be.equal(username)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// object.ACL.should.be.equal({})</span><br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// object.tags.should.be.equal([])\t\t\t\t               </span><br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "err": {
                  "name": "AssertionError",
                  "message": "expected [ Array(7) ] to deeply equal [ Array(6) ]",
                  "stack": "AssertionError: expected [ Array(7) ] to deeply equal [ Array(6) ]<br>    at assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/addMethod.js:41:25)<br>    at doAsserterAsyncAndAddThen (node_modules/chai-as-promised/lib/chai-as-promised.js:292:33)<br>    at null.&lt;anonymous&gt; (node_modules/chai-as-promised/lib/chai-as-promised.js:251:21)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at somethingMethod (node_modules/chai-things/lib/chai-things.js:97:25)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at allMethod (node_modules/chai-things/lib/chai-things.js:165:25)<br>    at ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at Test.&lt;anonymous&gt; (spec/cms_apis/object_revisions_revert_spec.js:171:55)<br>    at Test.assert (node_modules/supertest/lib/test.js:156:6)<br>    at assert (node_modules/supertest/lib/test.js:127:12)<br>    at node_modules/supertest/lib/test.js:124:5<br>    at Test.Request.callback (node_modules/supertest/node_modules/superagent/lib/node/index.js:785:12)<br>    at Stream.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/index.js:990:12)<br>    at Unzip.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/utils.js:108:12)<br>    at endReadableNT (_stream_readable.js:913:12)"
                },
                "isRoot": false,
                "uuid": "fa5fd03e-9ccb-4424-884d-fc8e13c3160f",
                "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
                "skipped": false
              }
            ],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 3,
            "totalFailures": 2,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": true,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 9573
          },
          {
            "title": "object update",
            "suites": [],
            "tests": [
              {
                "title": "should update object with preserve_version",
                "fullTitle": "Objects revisions/revert ---  object update should update object with preserve_version",
                "timedOut": false,
                "duration": 1680,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_preserve_version'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">\"Woot! Object updated successfully.\"</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest_update'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.not.equal(object.created_by)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID_1)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject.created_at.should.be.not.equal(object.updated_at)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "2c975d4f-9625-4546-ad09-4bf69d4e5eca",
                "parentUUID": "1cb45777-64a1-4830-a079-5b4388fa5b51",
                "skipped": false
              },
              {
                "title": "should perform a silent update on object",
                "fullTitle": "Objects revisions/revert ---  object update should perform a silent update on object",
                "timedOut": false,
                "duration": 1679,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"timeless\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">\"Woot! Object updated successfully.\"</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest_update'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.not.equal(object.created_by)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID_1)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "15a271bb-5559-4c76-8e29-bc5b63f0edc0",
                "parentUUID": "1cb45777-64a1-4830-a079-5b4388fa5b51",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "1cb45777-64a1-4830-a079-5b4388fa5b51",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should update object with preserve_version",
                "fullTitle": "Objects revisions/revert ---  object update should update object with preserve_version",
                "timedOut": false,
                "duration": 1680,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_preserve_version'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">\"Woot! Object updated successfully.\"</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest_update'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.not.equal(object.created_by)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID_1)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject.created_at.should.be.not.equal(object.updated_at)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "2c975d4f-9625-4546-ad09-4bf69d4e5eca",
                "parentUUID": "1cb45777-64a1-4830-a079-5b4388fa5b51",
                "skipped": false
              },
              {
                "title": "should perform a silent update on object",
                "fullTitle": "Objects revisions/revert ---  object update should perform a silent update on object",
                "timedOut": false,
                "duration": 1679,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"timeless\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">\"Woot! Object updated successfully.\"</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest_update'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.not.equal(object.created_by)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID_1)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "15a271bb-5559-4c76-8e29-bc5b63f0edc0",
                "parentUUID": "1cb45777-64a1-4830-a079-5b4388fa5b51",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3359
          },
          {
            "title": "object revert",
            "suites": [],
            "tests": [
              {
                "title": "should revert object to specific version",
                "fullTitle": "Objects revisions/revert ---  object revert should revert object to specific version",
                "timedOut": false,
                "duration": 2964,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// res.body.object._version.should.be.equal(2)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'object_revert'</span>, authtoken, api_key, classUid, objectUid, tenant_uid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"version\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t\t}))<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// new copy of object is getting created with new verison </span><br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "129cab1b-c49a-4a5d-8e6c-2ea933a39286",
                "parentUUID": "ccae40cf-eac5-4733-be59-5160103939a9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "ccae40cf-eac5-4733-be59-5160103939a9",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should revert object to specific version",
                "fullTitle": "Objects revisions/revert ---  object revert should revert object to specific version",
                "timedOut": false,
                "duration": 2964,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// res.body.object._version.should.be.equal(2)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'object_revert'</span>, authtoken, api_key, classUid, objectUid, tenant_uid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"version\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t\t}))<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// new copy of object is getting created with new verison </span><br>\t\t\t\t\tdone()<br>\t\t\t\t});",
                "isRoot": false,
                "uuid": "129cab1b-c49a-4a5d-8e6c-2ea933a39286",
                "parentUUID": "ccae40cf-eac5-4733-be59-5160103939a9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2964
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "419f41e8-6e13-4089-9769-782b2e5c45ae",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Installation data ---",
        "suites": [
          {
            "title": "Create an installations",
            "suites": [],
            "tests": [
              {
                "title": "should be able to create installation object for an app",
                "fullTitle": "Installation data --- Create an installations should be able to create installation object for an app",
                "timedOut": false,
                "duration": 1657,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"__loc\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"device_token\"</span>: R.bltRandom(<span class=\"hljs-number\">8</span>),<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"subscribed_to_channels\"</span>: [<span class=\"hljs-string\">\"object.create\"</span>, <span class=\"hljs-string\">\"object.delete\"</span>],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"badge\"</span>: <span class=\"hljs-number\">1</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"timezone\"</span>: <span class=\"hljs-string\">\"+05:30\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"credentials_name\"</span>: <span class=\"hljs-string\">\"swapnil shirke\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"ACL\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t},<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"tags\"</span>: [<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"supertest object\"</span><br>\t\t\t\t\t\t]<br>\t\t\t\t\t}<br>\t\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objData = res.body.object<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.object.uid<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(objData).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(objData.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(objData.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\tobjData.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tobjData.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobjData.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tobjData.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobjData.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobjData.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobjData._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobjData.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tobjData.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\texpect(objData.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\t\tobjData.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobjData.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\tobjData.badge.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tobjData.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\t\tobjData.credentials_name.should.be.equal(<span class=\"hljs-string\">'swapnil shirke'</span>)<br>\t\t\t\t\tobjData.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tobjData.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object'</span>)<br>\t\t\t\t\tobjData.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobjData.created_by.should.be.equal(objData.updated_by)<br>\t\t\t\t\tobjData.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobjData.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tobjData.created_at.should.be.equal(objData.updated_at)<br>\t\t\t\t\tobjData.updated_at.should.be.equal(objData.created_at)<br>\t\t\t\t\tobjData.uid.should.be.equal(id)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "6156803d-ca2a-4f0b-966b-19a39749d42c",
                "parentUUID": "910957c6-9e05-4280-9d58-946bbd4dc520",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 15000,
            "file": "/test.js",
            "uuid": "910957c6-9e05-4280-9d58-946bbd4dc520",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to create installation object for an app",
                "fullTitle": "Installation data --- Create an installations should be able to create installation object for an app",
                "timedOut": false,
                "duration": 1657,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"__loc\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"device_token\"</span>: R.bltRandom(<span class=\"hljs-number\">8</span>),<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"subscribed_to_channels\"</span>: [<span class=\"hljs-string\">\"object.create\"</span>, <span class=\"hljs-string\">\"object.delete\"</span>],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"badge\"</span>: <span class=\"hljs-number\">1</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"timezone\"</span>: <span class=\"hljs-string\">\"+05:30\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"credentials_name\"</span>: <span class=\"hljs-string\">\"swapnil shirke\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"ACL\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t},<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"tags\"</span>: [<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"supertest object\"</span><br>\t\t\t\t\t\t]<br>\t\t\t\t\t}<br>\t\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objData = res.body.object<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.object.uid<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(objData).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(objData.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(objData.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\tobjData.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tobjData.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobjData.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tobjData.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobjData.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobjData.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobjData._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobjData.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tobjData.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\texpect(objData.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\t\tobjData.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobjData.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\tobjData.badge.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tobjData.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\t\tobjData.credentials_name.should.be.equal(<span class=\"hljs-string\">'swapnil shirke'</span>)<br>\t\t\t\t\tobjData.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tobjData.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object'</span>)<br>\t\t\t\t\tobjData.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobjData.created_by.should.be.equal(objData.updated_by)<br>\t\t\t\t\tobjData.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobjData.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tobjData.created_at.should.be.equal(objData.updated_at)<br>\t\t\t\t\tobjData.updated_at.should.be.equal(objData.created_at)<br>\t\t\t\t\tobjData.uid.should.be.equal(id)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "6156803d-ca2a-4f0b-966b-19a39749d42c",
                "parentUUID": "910957c6-9e05-4280-9d58-946bbd4dc520",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1657
          },
          {
            "title": "Get all installations",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get installation objects created for an app",
                "fullTitle": "Installation data --- Get all installations should be able to get installation objects created for an app",
                "timedOut": false,
                "duration": 3302,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Get_Installation_objects'</span>, authtoken, api_key)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// console.log(res1.body)</span><br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\t\t\tobject.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\texpect(object.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.equal(<span class=\"hljs-string\">'swapnil shirke'</span>)<br>\t\t\t\t\t\t\tobject.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t\t\tobject.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "c7cbf228-edd1-4859-b7e0-2f3cdec2adc2",
                "parentUUID": "b95f7db5-32a0-407f-bc46-124d12ef41f4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 15000,
            "file": "/test.js",
            "uuid": "b95f7db5-32a0-407f-bc46-124d12ef41f4",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get installation objects created for an app",
                "fullTitle": "Installation data --- Get all installations should be able to get installation objects created for an app",
                "timedOut": false,
                "duration": 3302,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Get_Installation_objects'</span>, authtoken, api_key)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// console.log(res1.body)</span><br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\t\t\tobject.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\texpect(object.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.equal(<span class=\"hljs-string\">'swapnil shirke'</span>)<br>\t\t\t\t\t\t\tobject.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t\t\tobject.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "c7cbf228-edd1-4859-b7e0-2f3cdec2adc2",
                "parentUUID": "b95f7db5-32a0-407f-bc46-124d12ef41f4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3302
          },
          {
            "title": "Get single object",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get single object created for an app",
                "fullTitle": "Installation data --- Get single object should be able to get single object created for an app",
                "timedOut": false,
                "duration": 2962,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> id = res.body.object.uid<br>\t\t<br>\t\tfactories.create(<span class=\"hljs-string\">'Get_Installation_objects'</span>, authtoken, api_key, id)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\tobject.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\tobject.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tobject.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\tobject.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\texpect(object.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\tobject.badge.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\tobject.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\tobject.credentials_name.should.be.equal(<span class=\"hljs-string\">'swapnil shirke'</span>)<br>\t\t\t\tobject.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\tobject.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "d8cabf7e-6eaa-47fd-bb4d-3138aca5a1d5",
                "parentUUID": "dd59554c-8aa1-4bd9-88f4-8dfd9bd6f011",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 15000,
            "file": "/test.js",
            "uuid": "dd59554c-8aa1-4bd9-88f4-8dfd9bd6f011",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get single object created for an app",
                "fullTitle": "Installation data --- Get single object should be able to get single object created for an app",
                "timedOut": false,
                "duration": 2962,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> id = res.body.object.uid<br>\t\t<br>\t\tfactories.create(<span class=\"hljs-string\">'Get_Installation_objects'</span>, authtoken, api_key, id)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\tobject.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\tobject.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tobject.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\tobject.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\texpect(object.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\tobject.badge.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\tobject.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\tobject.credentials_name.should.be.equal(<span class=\"hljs-string\">'swapnil shirke'</span>)<br>\t\t\t\tobject.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\tobject.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "d8cabf7e-6eaa-47fd-bb4d-3138aca5a1d5",
                "parentUUID": "dd59554c-8aa1-4bd9-88f4-8dfd9bd6f011",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2962
          },
          {
            "title": "Update an installation",
            "suites": [],
            "tests": [
              {
                "title": "should be able to update installation objects created for an app",
                "fullTitle": "Installation data --- Update an installation should be able to update installation objects created for an app",
                "timedOut": false,
                "duration": 3371,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectID = res.body.object.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Update_Installation_object'</span>, authtoken, api_key, objectID, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"__loc\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"device_token\"</span>: R.bltRandom(<span class=\"hljs-number\">8</span>),<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"subscribed_to_channels\"</span>: [<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"object.create\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"object.update\"</span><br>\t\t\t\t\t\t\t\t],<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"badge\"</span>: <span class=\"hljs-number\">3</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"timezone\"</span>: <span class=\"hljs-string\">\"+05:30\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"credentials_name\"</span>: <span class=\"hljs-string\">\"super test\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"ACL\"</span>: {<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t},<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tags\"</span>: [<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"supertest object update\"</span><br>\t\t\t\t\t\t\t\t]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//console.log(res1.body)</span><br>\t\t\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.update'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\t\t\tobject.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object update'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\texpect(object.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.update'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.equal(<span class=\"hljs-string\">'super test'</span>)<br>\t\t\t\t\t\t\tobject.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\t\t\tobject.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object update'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\t\t\tobject.created_at.should.not.equal(object.updated_at)<br>\t\t\t\t\t\t\tobject.updated_at.should.not.equal(object.created_at)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "0e21bfd0-321a-414c-9aa0-2683fce53897",
                "parentUUID": "063e6bc4-f578-431e-ab87-9ee704562453",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 15000,
            "file": "/test.js",
            "uuid": "063e6bc4-f578-431e-ab87-9ee704562453",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to update installation objects created for an app",
                "fullTitle": "Installation data --- Update an installation should be able to update installation objects created for an app",
                "timedOut": false,
                "duration": 3371,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectID = res.body.object.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Update_Installation_object'</span>, authtoken, api_key, objectID, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"__loc\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"device_token\"</span>: R.bltRandom(<span class=\"hljs-number\">8</span>),<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"subscribed_to_channels\"</span>: [<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"object.create\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"object.update\"</span><br>\t\t\t\t\t\t\t\t],<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"badge\"</span>: <span class=\"hljs-number\">3</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"timezone\"</span>: <span class=\"hljs-string\">\"+05:30\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"credentials_name\"</span>: <span class=\"hljs-string\">\"super test\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"ACL\"</span>: {<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t},<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tags\"</span>: [<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"supertest object update\"</span><br>\t\t\t\t\t\t\t\t]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//console.log(res1.body)</span><br>\t\t\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.update'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\t\t\tobject.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object update'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\texpect(object.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.update'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.equal(<span class=\"hljs-string\">'super test'</span>)<br>\t\t\t\t\t\t\tobject.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\t\t\tobject.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object update'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\t\t\tobject.created_at.should.not.equal(object.updated_at)<br>\t\t\t\t\t\t\tobject.updated_at.should.not.equal(object.created_at)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "0e21bfd0-321a-414c-9aa0-2683fce53897",
                "parentUUID": "063e6bc4-f578-431e-ab87-9ee704562453",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3371
          },
          {
            "title": "Delete an installation",
            "suites": [],
            "tests": [
              {
                "title": "should be able to delete an installation object created for an app",
                "fullTitle": "Installation data --- Delete an installation should be able to delete an installation object created for an app",
                "timedOut": false,
                "duration": 3313,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectUid = res.body.object.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Delete_Installation_object'</span>, authtoken, api_key, objectUid)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "03917b99-13ee-48e6-bb6e-b3e3304bd225",
                "parentUUID": "535ae889-d26a-4121-aa0c-3f1ea854620e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 15000,
            "file": "/test.js",
            "uuid": "535ae889-d26a-4121-aa0c-3f1ea854620e",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to delete an installation object created for an app",
                "fullTitle": "Installation data --- Delete an installation should be able to delete an installation object created for an app",
                "timedOut": false,
                "duration": 3313,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectUid = res.body.object.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Delete_Installation_object'</span>, authtoken, api_key, objectUid)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "03917b99-13ee-48e6-bb6e-b3e3304bd225",
                "parentUUID": "535ae889-d26a-4121-aa0c-3f1ea854620e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3313
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "570e3924-a342-4e3a-9ec0-1affa8c407bd",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Field validation ---",
        "suites": [
          {
            "title": "Text",
            "suites": [],
            "tests": [
              {
                "title": "should provide an error message for min value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for min value for given text field",
                "timedOut": false,
                "duration": 1812,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asd\"</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is less than the minimum value 5\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "f944c1c3-9cb9-4f32-bf61-2d73370d48ee",
                "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
                "skipped": false
              },
              {
                "title": "should provide an error message for max value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for max value for given text field",
                "timedOut": false,
                "duration": 1501,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asdsfsdd5555\"</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is greater than the maximum value 10\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "4652e425-a91a-4a21-a922-81c1f1d3518c",
                "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
                "skipped": false
              },
              {
                "title": "should provide an error message for mandatory value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for mandatory value for given text field",
                "timedOut": false,
                "duration": 1629,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "72d35fec-30f2-47a3-8084-b59477e39795",
                "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
                "skipped": false
              },
              {
                "title": "should provide an error message for object value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for object value for given text field",
                "timedOut": false,
                "duration": 2458,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: {<span class=\"hljs-string\">\"testing\"</span>: <span class=\"hljs-string\">\"backend\"</span>}\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not text\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "3f799c70-4e55-4620-a8dc-f39cb4713f81",
                "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
                "skipped": false
              },
              {
                "title": "should provide an error message for array value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for array value for given text field",
                "timedOut": false,
                "duration": 1637,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"testing\"</span>, <span class=\"hljs-string\">\"backend\"</span>]\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"should be a single value instead of multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "ad0f9bc0-d277-484e-be1a-315a98174b4c",
                "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
                "skipped": false
              },
              {
                "title": "should provide an error message for null value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for null value for given text field",
                "timedOut": false,
                "duration": 1738,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-literal\">null</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "d8886182-84a6-4a61-91c4-ecb7d3318ba9",
                "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should provide an error message for min value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for min value for given text field",
                "timedOut": false,
                "duration": 1812,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asd\"</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is less than the minimum value 5\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "f944c1c3-9cb9-4f32-bf61-2d73370d48ee",
                "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
                "skipped": false
              },
              {
                "title": "should provide an error message for max value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for max value for given text field",
                "timedOut": false,
                "duration": 1501,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asdsfsdd5555\"</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is greater than the maximum value 10\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "4652e425-a91a-4a21-a922-81c1f1d3518c",
                "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
                "skipped": false
              },
              {
                "title": "should provide an error message for mandatory value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for mandatory value for given text field",
                "timedOut": false,
                "duration": 1629,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "72d35fec-30f2-47a3-8084-b59477e39795",
                "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
                "skipped": false
              },
              {
                "title": "should provide an error message for object value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for object value for given text field",
                "timedOut": false,
                "duration": 2458,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: {<span class=\"hljs-string\">\"testing\"</span>: <span class=\"hljs-string\">\"backend\"</span>}\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not text\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "3f799c70-4e55-4620-a8dc-f39cb4713f81",
                "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
                "skipped": false
              },
              {
                "title": "should provide an error message for array value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for array value for given text field",
                "timedOut": false,
                "duration": 1637,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"testing\"</span>, <span class=\"hljs-string\">\"backend\"</span>]\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"should be a single value instead of multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "ad0f9bc0-d277-484e-be1a-315a98174b4c",
                "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
                "skipped": false
              },
              {
                "title": "should provide an error message for null value for given text field",
                "fullTitle": "Field validation --- Text should provide an error message for null value for given text field",
                "timedOut": false,
                "duration": 1738,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-literal\">null</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "d8886182-84a6-4a61-91c4-ecb7d3318ba9",
                "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 6,
            "totalPasses": 6,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 10775
          },
          {
            "title": "Text Multiple and field format ",
            "suites": [],
            "tests": [
              {
                "title": "should provide an error message for blank array when field is mandatory",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for blank array when field is mandatory",
                "timedOut": false,
                "duration": 1716,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: []<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "226bbefa-80d3-4d33-b3fd-98b0687c6a92",
                "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
                "skipped": false
              },
              {
                "title": "should provide an error message for multiple field when array is not provided",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for multiple field when array is not provided",
                "timedOut": false,
                "duration": 1452,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asd\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "fbc99b05-caa0-441f-af64-e3378000a1cf",
                "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
                "skipped": false
              },
              {
                "title": "should provide an error message for multiple field if blank",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for multiple field if blank",
                "timedOut": false,
                "duration": 1600,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "77ddb501-9393-4257-8100-23d13181cae3",
                "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
                "skipped": false
              },
              {
                "title": "should be able to create object with valid format",
                "fullTitle": "Field validation --- Text Multiple and field format  should be able to create object with valid format",
                "timedOut": false,
                "duration": 1467,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>    <span class=\"hljs-string\">\"object\"</span>: {<br>        <span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"ASD\"</span>],<br>        <span class=\"hljs-string\">\"list\"</span>: [<span class=\"hljs-literal\">null</span>]<br>    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tres.body.object.textfield[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'ASD'</span>)<br>\tres.body.object.app_user_object_uid.should.be.equal(appUser1.uid)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "1db08a3c-a854-427d-9b93-2143d265781b",
                "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid value format for field",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for invalid value format for field",
                "timedOut": false,
                "duration": 1464,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"asdasd\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"does not match the required format for the field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "94557554-c072-4930-a8d8-947c496b621d",
                "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid value format in array field",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for invalid value format in array field",
                "timedOut": false,
                "duration": 2341,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"ADS\"</span>, <span class=\"hljs-string\">\"asdasd\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.1\"</span>: [<br>\t      <span class=\"hljs-string\">\"does not match the required format for the field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "36b15ea8-1877-4d4b-91e6-656a23531108",
                "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
                "skipped": false
              },
              {
                "title": "should provide an error message for object value inside array field",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for object value inside array field",
                "timedOut": false,
                "duration": 1672,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [{<span class=\"hljs-string\">\"ASD\"</span>: <span class=\"hljs-string\">\"AD\"</span>}]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not text\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "15c7c5b5-77af-4506-b0b5-21349044b0fa",
                "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should provide an error message for blank array when field is mandatory",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for blank array when field is mandatory",
                "timedOut": false,
                "duration": 1716,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: []<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "226bbefa-80d3-4d33-b3fd-98b0687c6a92",
                "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
                "skipped": false
              },
              {
                "title": "should provide an error message for multiple field when array is not provided",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for multiple field when array is not provided",
                "timedOut": false,
                "duration": 1452,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asd\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "fbc99b05-caa0-441f-af64-e3378000a1cf",
                "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
                "skipped": false
              },
              {
                "title": "should provide an error message for multiple field if blank",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for multiple field if blank",
                "timedOut": false,
                "duration": 1600,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "77ddb501-9393-4257-8100-23d13181cae3",
                "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
                "skipped": false
              },
              {
                "title": "should be able to create object with valid format",
                "fullTitle": "Field validation --- Text Multiple and field format  should be able to create object with valid format",
                "timedOut": false,
                "duration": 1467,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>    <span class=\"hljs-string\">\"object\"</span>: {<br>        <span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"ASD\"</span>],<br>        <span class=\"hljs-string\">\"list\"</span>: [<span class=\"hljs-literal\">null</span>]<br>    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tres.body.object.textfield[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'ASD'</span>)<br>\tres.body.object.app_user_object_uid.should.be.equal(appUser1.uid)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "1db08a3c-a854-427d-9b93-2143d265781b",
                "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid value format for field",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for invalid value format for field",
                "timedOut": false,
                "duration": 1464,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"asdasd\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"does not match the required format for the field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "94557554-c072-4930-a8d8-947c496b621d",
                "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid value format in array field",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for invalid value format in array field",
                "timedOut": false,
                "duration": 2341,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"ADS\"</span>, <span class=\"hljs-string\">\"asdasd\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.1\"</span>: [<br>\t      <span class=\"hljs-string\">\"does not match the required format for the field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "36b15ea8-1877-4d4b-91e6-656a23531108",
                "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
                "skipped": false
              },
              {
                "title": "should provide an error message for object value inside array field",
                "fullTitle": "Field validation --- Text Multiple and field format  should provide an error message for object value inside array field",
                "timedOut": false,
                "duration": 1672,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [{<span class=\"hljs-string\">\"ASD\"</span>: <span class=\"hljs-string\">\"AD\"</span>}]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not text\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "15c7c5b5-77af-4506-b0b5-21349044b0fa",
                "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 7,
            "totalPasses": 7,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 11712
          },
          {
            "title": "Links",
            "suites": [],
            "tests": [
              {
                "title": "should behave...",
                "fullTitle": "Field validation --- Links should behave...",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f8e81141-0aaf-44e0-b7f2-df7cf80f0841",
                "parentUUID": "a7be833d-02f1-4572-a11a-3687a682479d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "a7be833d-02f1-4572-a11a-3687a682479d",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should behave...",
                "fullTitle": "Field validation --- Links should behave...",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "",
                "isRoot": false,
                "uuid": "f8e81141-0aaf-44e0-b7f2-df7cf80f0841",
                "parentUUID": "a7be833d-02f1-4572-a11a-3687a682479d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "c7499181-8ed3-410a-b952-58ff750b5f6d",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Queries and reference",
        "suites": [
          {
            "title": "Get objects Queries",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get objects created for an app using simple query",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using simple query",
                "timedOut": false,
                "duration": 1457,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid, {<br>\t\t\t <span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"author\"</span>: <span class=\"hljs-string\">\"swapnil\"</span><br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'swapnil'</span>)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'FTJ'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "4a7c87bc-c6b5-4d0d-8e55-cb983ee8fd21",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using regex in query",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using regex in query",
                "timedOut": false,
                "duration": 1615,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"author\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^chet\"</span>,<br>\t\t\t      <span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'chetan'</span>)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'Life of psy'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "bef1235c-c472-4ff1-9d59-13210939cfba",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using query on simple group field",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using query on simple group field",
                "timedOut": false,
                "duration": 1452,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t    \t<span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"anjuna\"</span>  <br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'pratick'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// object.bookname.should.be.equal('Life of psy')</span><br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "867561cd-b5d4-46bc-b67f-c467983a8c16",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using $or query",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $or query",
                "timedOut": false,
                "duration": 1691,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t\t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"$or\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"author\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^chetan\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"bookname\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^FTJ\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject1.author.should.be.equal(<span class=\"hljs-string\">'chetan'</span>)<br>\t\t\t\tobject2.bookname.should.be.equal(<span class=\"hljs-string\">'FTJ'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "093727b4-ae32-433f-a2eb-7e7a569161d0",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using $and query",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $and query",
                "timedOut": false,
                "duration": 1445,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t\t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"$and\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"author\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^chetan\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"daysold\"</span>: <span class=\"hljs-number\">90</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'chetan'</span>)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'Life of psy'</span>)<br>\t\t\t\tobject.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "805e2aac-cdf9-4cbc-91a4-6beba58cbc6d",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using $lt(less then) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $lt(less then) operators",
                "timedOut": false,
                "duration": 1452,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$lt\"</span>: <span class=\"hljs-number\">125</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "8944123f-0ea8-4865-8a47-419da53a9339",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able t0 get objects created for an app using $lte(less then or equal to) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able t0 get objects created for an app using $lte(less then or equal to) operators",
                "timedOut": false,
                "duration": 1490,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$lte\"</span>: <span class=\"hljs-number\">125</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">125</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "f04f8d4b-1520-47a0-b71f-c08a0328ffac",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using $gt(greater than) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $gt(greater than) operators",
                "timedOut": false,
                "duration": 1585,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$gt\"</span>: <span class=\"hljs-number\">125</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">130</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "2cdc827d-3aa2-4dec-b233-f6e25715a27d",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using $gte(greater than or equal to) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $gte(greater than or equal to) operators",
                "timedOut": false,
                "duration": 1451,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$gte\"</span>: <span class=\"hljs-number\">130</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">130</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "11d1bbc5-5523-4a28-973c-45e11dc07386",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using $ne(not equal to) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $ne(not equal to) operators",
                "timedOut": false,
                "duration": 1680,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$ne\"</span>: <span class=\"hljs-number\">130</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br><br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject4 = res.body.objects[<span class=\"hljs-number\">3</span>]<br>\t\t\t\tobject5 = res.body.objects[<span class=\"hljs-number\">4</span>]<br>\t\t\t\t<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">125</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject4.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t\tobject5.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "84df4ede-9012-4456-b31b-79bb6438426d",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using $in(contained In) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $in(contained In) operators",
                "timedOut": false,
                "duration": 1445,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$in\"</span>: [<span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">125</span>, <span class=\"hljs-number\">90</span>]<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">125</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">130</span>)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "42731745-f068-4cbb-928f-70a5a2a2c581",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using $in(not contained In) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $in(not contained In) operators",
                "timedOut": false,
                "duration": 2638,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$nin\"</span>: [<span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">125</span>, <span class=\"hljs-number\">90</span>]<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br><br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "dfc73648-b669-44ed-aa9e-38677bd78105",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using $exists(exists) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $exists(exists) operators",
                "timedOut": false,
                "duration": 1464,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"bookname\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$exists\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'FTJ'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "94e0ea0f-e60d-41e3-8b37-a024646ed030",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app and include its owner",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app and include its owner",
                "timedOut": false,
                "duration": 1463,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include_owner\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'author'</span>,<span class=\"hljs-string\">'bookname'</span>,<span class=\"hljs-string\">'address'</span>,<span class=\"hljs-string\">'daysold'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'_owner'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object._owner).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'username'</span>,<span class=\"hljs-string\">'email'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'active'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'last_login_at'</span>])<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "b46536a1-6e5e-4fa8-8c9e-cfc3946903e9",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app and include its count",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app and include its count",
                "timedOut": false,
                "duration": 1728,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tres.body.count.should.be.equal(<span class=\"hljs-number\">6</span>)<br>\t\t\t\tres.body.objects.length.should.be.equal(<span class=\"hljs-number\">6</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "7154d40e-8c97-4197-b3b3-a00d0c5a7dfd",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app and include its schema",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app and include its schema",
                "timedOut": false,
                "duration": 2398,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include_schema\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body).should.to.be.deep.equal([<span class=\"hljs-string\">'objects'</span>,<span class=\"hljs-string\">'schema'</span>])<br>\t\t\t\tres.body.schema[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'author'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "33ad8bec-c020-4839-8ec6-b77d71ae5750",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app and include unpublished objects",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app and include unpublished objects",
                "timedOut": false,
                "duration": 3795,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"one\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t})<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t  \t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"include_unpublished\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t}))<br>\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "c06aca1e-0ac6-4bf5-83a4-705c019e1fd2",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 45000,
            "file": "/test.js",
            "uuid": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get objects created for an app using simple query",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using simple query",
                "timedOut": false,
                "duration": 1457,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid, {<br>\t\t\t <span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"author\"</span>: <span class=\"hljs-string\">\"swapnil\"</span><br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'swapnil'</span>)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'FTJ'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "4a7c87bc-c6b5-4d0d-8e55-cb983ee8fd21",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using regex in query",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using regex in query",
                "timedOut": false,
                "duration": 1615,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"author\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^chet\"</span>,<br>\t\t\t      <span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'chetan'</span>)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'Life of psy'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "bef1235c-c472-4ff1-9d59-13210939cfba",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using query on simple group field",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using query on simple group field",
                "timedOut": false,
                "duration": 1452,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t    \t<span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"anjuna\"</span>  <br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'pratick'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// object.bookname.should.be.equal('Life of psy')</span><br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "867561cd-b5d4-46bc-b67f-c467983a8c16",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using $or query",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $or query",
                "timedOut": false,
                "duration": 1691,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t\t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"$or\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"author\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^chetan\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"bookname\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^FTJ\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject1.author.should.be.equal(<span class=\"hljs-string\">'chetan'</span>)<br>\t\t\t\tobject2.bookname.should.be.equal(<span class=\"hljs-string\">'FTJ'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "093727b4-ae32-433f-a2eb-7e7a569161d0",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using $and query",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $and query",
                "timedOut": false,
                "duration": 1445,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t\t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"$and\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"author\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^chetan\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"daysold\"</span>: <span class=\"hljs-number\">90</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'chetan'</span>)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'Life of psy'</span>)<br>\t\t\t\tobject.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "805e2aac-cdf9-4cbc-91a4-6beba58cbc6d",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using $lt(less then) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $lt(less then) operators",
                "timedOut": false,
                "duration": 1452,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$lt\"</span>: <span class=\"hljs-number\">125</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "8944123f-0ea8-4865-8a47-419da53a9339",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able t0 get objects created for an app using $lte(less then or equal to) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able t0 get objects created for an app using $lte(less then or equal to) operators",
                "timedOut": false,
                "duration": 1490,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$lte\"</span>: <span class=\"hljs-number\">125</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">125</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "f04f8d4b-1520-47a0-b71f-c08a0328ffac",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using $gt(greater than) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $gt(greater than) operators",
                "timedOut": false,
                "duration": 1585,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$gt\"</span>: <span class=\"hljs-number\">125</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">130</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "2cdc827d-3aa2-4dec-b233-f6e25715a27d",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using $gte(greater than or equal to) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $gte(greater than or equal to) operators",
                "timedOut": false,
                "duration": 1451,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$gte\"</span>: <span class=\"hljs-number\">130</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">130</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "11d1bbc5-5523-4a28-973c-45e11dc07386",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using $ne(not equal to) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $ne(not equal to) operators",
                "timedOut": false,
                "duration": 1680,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$ne\"</span>: <span class=\"hljs-number\">130</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br><br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject4 = res.body.objects[<span class=\"hljs-number\">3</span>]<br>\t\t\t\tobject5 = res.body.objects[<span class=\"hljs-number\">4</span>]<br>\t\t\t\t<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">125</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject4.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t\tobject5.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "84df4ede-9012-4456-b31b-79bb6438426d",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using $in(contained In) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $in(contained In) operators",
                "timedOut": false,
                "duration": 1445,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$in\"</span>: [<span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">125</span>, <span class=\"hljs-number\">90</span>]<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">125</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">130</span>)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "42731745-f068-4cbb-928f-70a5a2a2c581",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using $in(not contained In) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $in(not contained In) operators",
                "timedOut": false,
                "duration": 2638,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$nin\"</span>: [<span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">125</span>, <span class=\"hljs-number\">90</span>]<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br><br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "dfc73648-b669-44ed-aa9e-38677bd78105",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app using $exists(exists) operators",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app using $exists(exists) operators",
                "timedOut": false,
                "duration": 1464,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"bookname\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$exists\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'FTJ'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "94e0ea0f-e60d-41e3-8b37-a024646ed030",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app and include its owner",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app and include its owner",
                "timedOut": false,
                "duration": 1463,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include_owner\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'author'</span>,<span class=\"hljs-string\">'bookname'</span>,<span class=\"hljs-string\">'address'</span>,<span class=\"hljs-string\">'daysold'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'_owner'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object._owner).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'username'</span>,<span class=\"hljs-string\">'email'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'active'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'last_login_at'</span>])<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "b46536a1-6e5e-4fa8-8c9e-cfc3946903e9",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app and include its count",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app and include its count",
                "timedOut": false,
                "duration": 1728,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tres.body.count.should.be.equal(<span class=\"hljs-number\">6</span>)<br>\t\t\t\tres.body.objects.length.should.be.equal(<span class=\"hljs-number\">6</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "7154d40e-8c97-4197-b3b3-a00d0c5a7dfd",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app and include its schema",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app and include its schema",
                "timedOut": false,
                "duration": 2398,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include_schema\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body).should.to.be.deep.equal([<span class=\"hljs-string\">'objects'</span>,<span class=\"hljs-string\">'schema'</span>])<br>\t\t\t\tres.body.schema[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'author'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "33ad8bec-c020-4839-8ec6-b77d71ae5750",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              },
              {
                "title": "should be able to get objects created for an app and include unpublished objects",
                "fullTitle": "Queries and reference Get objects Queries should be able to get objects created for an app and include unpublished objects",
                "timedOut": false,
                "duration": 3795,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"one\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t})<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t  \t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"include_unpublished\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t}))<br>\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "c06aca1e-0ac6-4bf5-83a4-705c019e1fd2",
                "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 17,
            "totalPasses": 17,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 30249
          },
          {
            "title": "Reference objects",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get reference objects created for an app using $in_query query",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using $in_query query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, {<br>\t\t\t  <span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$in_query\"</span>: {<br>\t\t\t        <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"backend\"</span><br>\t\t\t      }<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'four'</span>)<br>\t\t\t\tobject.project[<span class=\"hljs-number\">0</span>].should.be.equal(object2.uid)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "a08aeb44-fdaa-416d-b86e-6b5f034926c8",
                "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
                "skipped": true
              },
              {
                "title": "should be able to get reference objects created for an app using $nin_query query",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using $nin_query query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, {<br>\t\t\t  <span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$nin_query\"</span>: {<br>\t\t\t        <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"flow\"</span><br>\t\t\t      }<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'four'</span>)<br>\t\t\t\tobject.project[<span class=\"hljs-number\">0</span>].should.be.equal(object2.uid)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "1d0a9281-9b7c-45b0-8cd3-37952a26daca",
                "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
                "skipped": true
              },
              {
                "title": "should be able to get reference objects created for an app using include[]",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using include[]",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include\"</span>: [<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span><br>\t\t\t  ]<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t\tobject.project[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'flow'</span>)<br>\t\t\t\tobject.project[<span class=\"hljs-number\">0</span>].app_user_object_uid.should.be.equal(appUser1.uid)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "72a6df82-226d-458b-84c3-bb6453e84f70",
                "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using ONLY BASE query",
                "fullTitle": "Queries and reference Reference objects should be able to get objects created for an app using ONLY BASE query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"only\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"BASE\"</span>: [<br>\t\t\t      <span class=\"hljs-string\">\"uid\"</span><br>\t\t\t    ]<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>])<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "86ced087-775b-40af-86fd-8516039c8263",
                "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
                "skipped": true
              },
              {
                "title": "should be able to get reference objects created for an app using include[] and Only BASE query",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using include[] and Only BASE query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include\"</span>: [<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span><br>\t\t\t  ],<br>\t\t\t  <span class=\"hljs-string\">\"only\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"BASE\"</span>: [<br>\t\t\t      <span class=\"hljs-string\">\"project\"</span><br>\t\t\t    ],<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span>: [<br>\t\t\t      <span class=\"hljs-string\">\"description\"</span><br>\t\t\t    ]<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'project'</span>,<span class=\"hljs-string\">'uid'</span>])<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "2bad3bdb-cbee-40c7-9999-bdd31d75ce4f",
                "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using except BASE query",
                "fullTitle": "Queries and reference Reference objects should be able to get objects created for an app using except BASE query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"except\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"BASE\"</span>: [<span class=\"hljs-string\">\"project\"</span>]<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t\tshould.not.exist(object.project)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "4812ea2b-372f-4b55-8bc4-1c90b85e3c69",
                "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
                "skipped": true
              },
              {
                "title": "should be able to get reference objects created for an app using include[] and except BASE query",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using include[] and except BASE query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, { <br>\t\t\t\t<span class=\"hljs-string\">\"include\"</span>: [<span class=\"hljs-string\">\"project\"</span>],<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"except\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span>: [<span class=\"hljs-string\">\"name\"</span>, <span class=\"hljs-string\">\"tags\"</span>, <span class=\"hljs-string\">\"_version\"</span>, <span class=\"hljs-string\">\"created_by\"</span>, <span class=\"hljs-string\">\"updated_by\"</span>, <span class=\"hljs-string\">\"__loc\"</span>, <span class=\"hljs-string\">\"app_user_object_uid\"</span>, <span class=\"hljs-string\">\"uid\"</span>, <span class=\"hljs-string\">\"published\"</span>, <span class=\"hljs-string\">\"created_at\"</span>,<span class=\"hljs-string\">\"updated_at\"</span>, <span class=\"hljs-string\">\"description\"</span>,<span class=\"hljs-string\">\"ACL\"</span>]<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.project[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>])<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-comment\">// object.name.should.be.equal('one')</span><br>\t\t\t\t<span class=\"hljs-comment\">// object.project.should.be.deep.equal({'uid'})</span><br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "e2547d83-a86f-41ca-8549-0b67610d375c",
                "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using exists[field_uid] query",
                "fullTitle": "Queries and reference Reference objects should be able to get objects created for an app using exists[field_uid] query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"exists\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"ACL\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "bdf0beca-edef-46f9-ab0b-209661c7e6c3",
                "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
                "skipped": true
              },
              {
                "title": "should be able to create reference object without passing array",
                "fullTitle": "Queries and reference Reference objects should be able to create reference object without passing array",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pro = object1.uid<br>\t\t<br>\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass2.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"seven\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"project\"</span>: pro<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\tobject = res.body.object<br>\t\t\tobject.project.should.be.deep.equal([pro])<br>\t\t})<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\tdone()<br>\t\t})",
                "isRoot": false,
                "uuid": "200b0133-02fc-4e32-ba85-642e8ba18cfa",
                "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
                "skipped": true
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [
              {
                "title": "should be able to get reference objects created for an app using $in_query query",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using $in_query query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, {<br>\t\t\t  <span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$in_query\"</span>: {<br>\t\t\t        <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"backend\"</span><br>\t\t\t      }<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'four'</span>)<br>\t\t\t\tobject.project[<span class=\"hljs-number\">0</span>].should.be.equal(object2.uid)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "a08aeb44-fdaa-416d-b86e-6b5f034926c8",
                "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
                "skipped": true
              },
              {
                "title": "should be able to get reference objects created for an app using $nin_query query",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using $nin_query query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, {<br>\t\t\t  <span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$nin_query\"</span>: {<br>\t\t\t        <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"flow\"</span><br>\t\t\t      }<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'four'</span>)<br>\t\t\t\tobject.project[<span class=\"hljs-number\">0</span>].should.be.equal(object2.uid)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "1d0a9281-9b7c-45b0-8cd3-37952a26daca",
                "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
                "skipped": true
              },
              {
                "title": "should be able to get reference objects created for an app using include[]",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using include[]",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include\"</span>: [<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span><br>\t\t\t  ]<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t\tobject.project[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'flow'</span>)<br>\t\t\t\tobject.project[<span class=\"hljs-number\">0</span>].app_user_object_uid.should.be.equal(appUser1.uid)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "72a6df82-226d-458b-84c3-bb6453e84f70",
                "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using ONLY BASE query",
                "fullTitle": "Queries and reference Reference objects should be able to get objects created for an app using ONLY BASE query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"only\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"BASE\"</span>: [<br>\t\t\t      <span class=\"hljs-string\">\"uid\"</span><br>\t\t\t    ]<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>])<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "86ced087-775b-40af-86fd-8516039c8263",
                "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
                "skipped": true
              },
              {
                "title": "should be able to get reference objects created for an app using include[] and Only BASE query",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using include[] and Only BASE query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include\"</span>: [<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span><br>\t\t\t  ],<br>\t\t\t  <span class=\"hljs-string\">\"only\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"BASE\"</span>: [<br>\t\t\t      <span class=\"hljs-string\">\"project\"</span><br>\t\t\t    ],<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span>: [<br>\t\t\t      <span class=\"hljs-string\">\"description\"</span><br>\t\t\t    ]<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'project'</span>,<span class=\"hljs-string\">'uid'</span>])<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "2bad3bdb-cbee-40c7-9999-bdd31d75ce4f",
                "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using except BASE query",
                "fullTitle": "Queries and reference Reference objects should be able to get objects created for an app using except BASE query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"except\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"BASE\"</span>: [<span class=\"hljs-string\">\"project\"</span>]<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t\tshould.not.exist(object.project)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "4812ea2b-372f-4b55-8bc4-1c90b85e3c69",
                "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
                "skipped": true
              },
              {
                "title": "should be able to get reference objects created for an app using include[] and except BASE query",
                "fullTitle": "Queries and reference Reference objects should be able to get reference objects created for an app using include[] and except BASE query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, { <br>\t\t\t\t<span class=\"hljs-string\">\"include\"</span>: [<span class=\"hljs-string\">\"project\"</span>],<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"except\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"project\"</span>: [<span class=\"hljs-string\">\"name\"</span>, <span class=\"hljs-string\">\"tags\"</span>, <span class=\"hljs-string\">\"_version\"</span>, <span class=\"hljs-string\">\"created_by\"</span>, <span class=\"hljs-string\">\"updated_by\"</span>, <span class=\"hljs-string\">\"__loc\"</span>, <span class=\"hljs-string\">\"app_user_object_uid\"</span>, <span class=\"hljs-string\">\"uid\"</span>, <span class=\"hljs-string\">\"published\"</span>, <span class=\"hljs-string\">\"created_at\"</span>,<span class=\"hljs-string\">\"updated_at\"</span>, <span class=\"hljs-string\">\"description\"</span>,<span class=\"hljs-string\">\"ACL\"</span>]<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.project[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>])<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-comment\">// object.name.should.be.equal('one')</span><br>\t\t\t\t<span class=\"hljs-comment\">// object.project.should.be.deep.equal({'uid'})</span><br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "e2547d83-a86f-41ca-8549-0b67610d375c",
                "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
                "skipped": true
              },
              {
                "title": "should be able to get objects created for an app using exists[field_uid] query",
                "fullTitle": "Queries and reference Reference objects should be able to get objects created for an app using exists[field_uid] query",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass2.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"exists\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"ACL\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
                "isRoot": false,
                "uuid": "bdf0beca-edef-46f9-ab0b-209661c7e6c3",
                "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
                "skipped": true
              },
              {
                "title": "should be able to create reference object without passing array",
                "fullTitle": "Queries and reference Reference objects should be able to create reference object without passing array",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pro = object1.uid<br>\t\t<br>\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass2.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"seven\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"project\"</span>: pro<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\tobject = res.body.object<br>\t\t\tobject.project.should.be.deep.equal([pro])<br>\t\t})<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\tdone()<br>\t\t})",
                "isRoot": false,
                "uuid": "200b0133-02fc-4e32-ba85-642e8ba18cfa",
                "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
                "skipped": true
              }
            ],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 9,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 9,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": true,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "74d11e0e-7ead-46f9-a86a-7bf570c2e38b",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Objects ---",
        "suites": [
          {
            "title": "Get objects",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all objects present for given class as app owner(system user)",
                "fullTitle": "Objects --- Get objects should be able to get all objects present for given class as app owner(system user)",
                "timedOut": false,
                "duration": 1620,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\tobjCan  = R.last(res.body.objects)<br>\tobjCan.ACL.should.be.deep.equal({})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "23b27042-fe6e-405a-b2bf-057a94617add",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get all objects present for given class as a collaborator",
                "fullTitle": "Objects --- Get objects should be able to get all objects present for given class as a collaborator",
                "timedOut": false,
                "duration": 1493,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user2.authtoken, app.api_key, myclass.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\tobjCan  = R.last(res.body.objects)<br>\tobjCan.ACL.should.be.deep.equal({})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "5af07d37-b39f-47fe-ab2a-68e7b2c7261d",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get all objects present for given class as app user(owner)",
                "fullTitle": "Objects --- Get objects should be able to get all objects present for given class as app user(owner)",
                "timedOut": false,
                "duration": 1456,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\tobjCan  = R.last(res.body.objects)<br>\tobjCan.ACL.should.be.deep.equal({<br>\t        <span class=\"hljs-string\">\"can\"</span>: []<br>\t      })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "0aa601d0-a281-4333-be4c-73076afdeb94",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get all objects present for given class as a other app user",
                "fullTitle": "Objects --- Get objects should be able to get all objects present for given class as a other app user",
                "timedOut": false,
                "duration": 1658,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\tobjCan  = R.last(res.body.objects)<br>\tobjCan.ACL.should.be.deep.equal({<br>\t        <span class=\"hljs-string\">\"can\"</span>: [<br>\t          <span class=\"hljs-string\">\"update\"</span>,<br>\t          <span class=\"hljs-string\">\"delete\"</span><br>\t        ]<br>\t      })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "78cb2baa-c677-48d8-96f6-9ca0d9644b6d",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get all objects and limit it to 1",
                "fullTitle": "Objects --- Get objects should be able to get all objects and limit it to 1",
                "timedOut": false,
                "duration": 1632,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "70cd7dd4-67a8-4bcf-b2b4-4bcca25f19ef",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should get be able to get all objects and skip it to 2",
                "fullTitle": "Objects --- Get objects should get be able to get all objects and skip it to 2",
                "timedOut": false,
                "duration": 1778,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "adb7588b-24c6-41a2-adba-21db6d0d3b45",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should get be able to get all objects using query",
                "fullTitle": "Objects --- Get objects should get be able to get all objects using query",
                "timedOut": false,
                "duration": 1630,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"query\"</span>: {<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-number\">4</span>}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "7cce0c81-dae8-455e-926a-d9a64fdab9c7",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get all objects skip 2 / limit 1 ",
                "fullTitle": "Objects --- Get objects should be able to get all objects skip 2 / limit 1 ",
                "timedOut": false,
                "duration": 1478,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span>,<br>\t<span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "ef5a4469-4c18-4107-b3c3-4575e0e1ff4b",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get only object`s count in response",
                "fullTitle": "Objects --- Get objects should be able to get only object`s count in response",
                "timedOut": false,
                "duration": 1613,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "a0fd583e-398a-408c-b750-4ba3f4aa4a7b",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get all objects and include schema for given class",
                "fullTitle": "Objects --- Get objects should be able to get all objects and include schema for given class",
                "timedOut": false,
                "duration": 1639,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"include_schema\"</span>: <span class=\"hljs-string\">\"false\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\tschema = res.body.schema<br>\t\tshould.exist(schema)<br>\t\tschema[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">\"name\"</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "787c636b-4f4d-4791-a0ca-6611bd527248",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get all objects and include count in response",
                "fullTitle": "Objects --- Get objects should be able to get all objects and include count in response",
                "timedOut": false,
                "duration": 1451,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\tcount = res.body.count<br>\t\tshould.exist(count)<br>\t\tcount.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "267488c5-bfe6-4def-81f5-5e5fe84ca474",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get zero objects and include count as a \"0\"",
                "fullTitle": "Objects --- Get objects should be able to get zero objects and include count as a \"0\"",
                "timedOut": false,
                "duration": 1608,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, classZero.uid, {<br>\t<span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"objects\"</span>: [],<br>\t  <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-number\">0</span><br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "17a53b5d-f9b1-45aa-a46f-95fdcb221728",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get all objects in ascending order",
                "fullTitle": "Objects --- Get objects should be able to get all objects in ascending order",
                "timedOut": false,
                "duration": 1480,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"asc\"</span>: <span class=\"hljs-string\">\"name\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobjects[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'1'</span>)<br>\t\tobjects[<span class=\"hljs-number\">1</span>].name.should.be.equal(<span class=\"hljs-string\">'2'</span>)<br>\t\tobjects[<span class=\"hljs-number\">2</span>].name.should.be.equal(<span class=\"hljs-string\">'3'</span>)<br>\t\tobjects[<span class=\"hljs-number\">3</span>].name.should.be.equal(<span class=\"hljs-string\">'4'</span>)<br>\t\tobjects[<span class=\"hljs-number\">4</span>].name.should.be.equal(<span class=\"hljs-string\">'5'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "60e18e29-f7a2-4c59-a6fe-4854cff76270",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get all objects in descending order",
                "fullTitle": "Objects --- Get objects should be able to get all objects in descending order",
                "timedOut": false,
                "duration": 1581,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"desc\"</span>: <span class=\"hljs-string\">\"name\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobjects[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'5'</span>)<br>\t\tobjects[<span class=\"hljs-number\">1</span>].name.should.be.equal(<span class=\"hljs-string\">'4'</span>)<br>\t\tobjects[<span class=\"hljs-number\">2</span>].name.should.be.equal(<span class=\"hljs-string\">'3'</span>)<br>\t\tobjects[<span class=\"hljs-number\">3</span>].name.should.be.equal(<span class=\"hljs-string\">'2'</span>)<br>\t\tobjects[<span class=\"hljs-number\">4</span>].name.should.be.equal(<span class=\"hljs-string\">'1'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "e363187e-bfcc-43a8-b8d1-705c5c3ee58a",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get all objects present for given class as app owner(system user)",
                "fullTitle": "Objects --- Get objects should be able to get all objects present for given class as app owner(system user)",
                "timedOut": false,
                "duration": 1620,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\tobjCan  = R.last(res.body.objects)<br>\tobjCan.ACL.should.be.deep.equal({})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "23b27042-fe6e-405a-b2bf-057a94617add",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get all objects present for given class as a collaborator",
                "fullTitle": "Objects --- Get objects should be able to get all objects present for given class as a collaborator",
                "timedOut": false,
                "duration": 1493,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user2.authtoken, app.api_key, myclass.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\tobjCan  = R.last(res.body.objects)<br>\tobjCan.ACL.should.be.deep.equal({})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "5af07d37-b39f-47fe-ab2a-68e7b2c7261d",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get all objects present for given class as app user(owner)",
                "fullTitle": "Objects --- Get objects should be able to get all objects present for given class as app user(owner)",
                "timedOut": false,
                "duration": 1456,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\tobjCan  = R.last(res.body.objects)<br>\tobjCan.ACL.should.be.deep.equal({<br>\t        <span class=\"hljs-string\">\"can\"</span>: []<br>\t      })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "0aa601d0-a281-4333-be4c-73076afdeb94",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get all objects present for given class as a other app user",
                "fullTitle": "Objects --- Get objects should be able to get all objects present for given class as a other app user",
                "timedOut": false,
                "duration": 1658,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\tobjCan  = R.last(res.body.objects)<br>\tobjCan.ACL.should.be.deep.equal({<br>\t        <span class=\"hljs-string\">\"can\"</span>: [<br>\t          <span class=\"hljs-string\">\"update\"</span>,<br>\t          <span class=\"hljs-string\">\"delete\"</span><br>\t        ]<br>\t      })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "78cb2baa-c677-48d8-96f6-9ca0d9644b6d",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get all objects and limit it to 1",
                "fullTitle": "Objects --- Get objects should be able to get all objects and limit it to 1",
                "timedOut": false,
                "duration": 1632,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "70cd7dd4-67a8-4bcf-b2b4-4bcca25f19ef",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should get be able to get all objects and skip it to 2",
                "fullTitle": "Objects --- Get objects should get be able to get all objects and skip it to 2",
                "timedOut": false,
                "duration": 1778,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "adb7588b-24c6-41a2-adba-21db6d0d3b45",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should get be able to get all objects using query",
                "fullTitle": "Objects --- Get objects should get be able to get all objects using query",
                "timedOut": false,
                "duration": 1630,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"query\"</span>: {<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-number\">4</span>}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "7cce0c81-dae8-455e-926a-d9a64fdab9c7",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get all objects skip 2 / limit 1 ",
                "fullTitle": "Objects --- Get objects should be able to get all objects skip 2 / limit 1 ",
                "timedOut": false,
                "duration": 1478,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span>,<br>\t<span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "ef5a4469-4c18-4107-b3c3-4575e0e1ff4b",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get only object`s count in response",
                "fullTitle": "Objects --- Get objects should be able to get only object`s count in response",
                "timedOut": false,
                "duration": 1613,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "a0fd583e-398a-408c-b750-4ba3f4aa4a7b",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get all objects and include schema for given class",
                "fullTitle": "Objects --- Get objects should be able to get all objects and include schema for given class",
                "timedOut": false,
                "duration": 1639,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"include_schema\"</span>: <span class=\"hljs-string\">\"false\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\tschema = res.body.schema<br>\t\tshould.exist(schema)<br>\t\tschema[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">\"name\"</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "787c636b-4f4d-4791-a0ca-6611bd527248",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get all objects and include count in response",
                "fullTitle": "Objects --- Get objects should be able to get all objects and include count in response",
                "timedOut": false,
                "duration": 1451,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\tcount = res.body.count<br>\t\tshould.exist(count)<br>\t\tcount.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "267488c5-bfe6-4def-81f5-5e5fe84ca474",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get zero objects and include count as a \"0\"",
                "fullTitle": "Objects --- Get objects should be able to get zero objects and include count as a \"0\"",
                "timedOut": false,
                "duration": 1608,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, classZero.uid, {<br>\t<span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"objects\"</span>: [],<br>\t  <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-number\">0</span><br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "17a53b5d-f9b1-45aa-a46f-95fdcb221728",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get all objects in ascending order",
                "fullTitle": "Objects --- Get objects should be able to get all objects in ascending order",
                "timedOut": false,
                "duration": 1480,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"asc\"</span>: <span class=\"hljs-string\">\"name\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobjects[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'1'</span>)<br>\t\tobjects[<span class=\"hljs-number\">1</span>].name.should.be.equal(<span class=\"hljs-string\">'2'</span>)<br>\t\tobjects[<span class=\"hljs-number\">2</span>].name.should.be.equal(<span class=\"hljs-string\">'3'</span>)<br>\t\tobjects[<span class=\"hljs-number\">3</span>].name.should.be.equal(<span class=\"hljs-string\">'4'</span>)<br>\t\tobjects[<span class=\"hljs-number\">4</span>].name.should.be.equal(<span class=\"hljs-string\">'5'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "60e18e29-f7a2-4c59-a6fe-4854cff76270",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              },
              {
                "title": "should be able to get all objects in descending order",
                "fullTitle": "Objects --- Get objects should be able to get all objects in descending order",
                "timedOut": false,
                "duration": 1581,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"desc\"</span>: <span class=\"hljs-string\">\"name\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobjects[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'5'</span>)<br>\t\tobjects[<span class=\"hljs-number\">1</span>].name.should.be.equal(<span class=\"hljs-string\">'4'</span>)<br>\t\tobjects[<span class=\"hljs-number\">2</span>].name.should.be.equal(<span class=\"hljs-string\">'3'</span>)<br>\t\tobjects[<span class=\"hljs-number\">3</span>].name.should.be.equal(<span class=\"hljs-string\">'2'</span>)<br>\t\tobjects[<span class=\"hljs-number\">4</span>].name.should.be.equal(<span class=\"hljs-string\">'1'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "e363187e-bfcc-43a8-b8d1-705c5c3ee58a",
                "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 14,
            "totalPasses": 14,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 22117
          },
          {
            "title": "Delta queries",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all objects using (ALL) delta query",
                "fullTitle": "Objects --- Delta queries should be able to get all objects using (ALL) delta query",
                "timedOut": false,
                "duration": 1472,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"ALL\"</span>: date<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'deleted_at'</span>])<br>\t\t\t\tcreatedAt = res.body.objects.created_at<br>\t\t\t\tupdatedAt = res.body.objects.updated_at<br>\t\t\t\tdeletedAt = res.body.objects.deleted_at<br>\t\t\t\tres.body.objects.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tcreatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tdeletedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tcreatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\tupdatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\tdeletedAt.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object3.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(object3.name)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "32362e05-6755-4807-acac-9799f12bc257",
                "parentUUID": "f67a3605-43ed-4ec2-8ca6-172e817c1e69",
                "skipped": false
              },
              {
                "title": "should be able to get all objects by (created_at) delta query",
                "fullTitle": "Objects --- Delta queries should be able to get all objects by (created_at) delta query",
                "timedOut": false,
                "duration": 2657,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"created_at\"</span>: object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>])<br>\t\t\t\tcreatedAt = res.body.objects.created_at<br>\t\t\t\tcreatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tcreatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "d005612f-ebc8-4bcc-96e0-9894c9aeaa20",
                "parentUUID": "f67a3605-43ed-4ec2-8ca6-172e817c1e69",
                "skipped": false
              },
              {
                "title": "should be able to get all objects by (updated_at) delta query",
                "fullTitle": "Objects --- Delta queries should be able to get all objects by (updated_at) delta query",
                "timedOut": false,
                "duration": 1479,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"updated_at\"</span>: object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'updated_at'</span>])<br>\t\t\t\t\tupdatedAt = res.body.objects.updated_at<br>\t\t\t\t\tupdatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupdatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "c6c4d9e5-1428-475b-b46b-dfa668607b02",
                "parentUUID": "f67a3605-43ed-4ec2-8ca6-172e817c1e69",
                "skipped": false
              },
              {
                "title": "should be able to get all objects by delete_at delta query",
                "fullTitle": "Objects --- Delta queries should be able to get all objects by delete_at delta query",
                "timedOut": false,
                "duration": 1881,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"deleted_at\"</span>: object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'deleted_at'</span>])<br>\t\t\t\t\tdeletedAt = res.body.objects.deleted_at<br>\t\t\t\t\tdeletedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tdeletedAt.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object3.uid)<br>\t\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "a76a2d8e-3cbb-4d36-bf34-f4f22346e6b9",
                "parentUUID": "f67a3605-43ed-4ec2-8ca6-172e817c1e69",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "f67a3605-43ed-4ec2-8ca6-172e817c1e69",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get all objects using (ALL) delta query",
                "fullTitle": "Objects --- Delta queries should be able to get all objects using (ALL) delta query",
                "timedOut": false,
                "duration": 1472,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"ALL\"</span>: date<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'deleted_at'</span>])<br>\t\t\t\tcreatedAt = res.body.objects.created_at<br>\t\t\t\tupdatedAt = res.body.objects.updated_at<br>\t\t\t\tdeletedAt = res.body.objects.deleted_at<br>\t\t\t\tres.body.objects.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tcreatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tdeletedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tcreatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\tupdatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\tdeletedAt.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object3.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(object3.name)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "32362e05-6755-4807-acac-9799f12bc257",
                "parentUUID": "f67a3605-43ed-4ec2-8ca6-172e817c1e69",
                "skipped": false
              },
              {
                "title": "should be able to get all objects by (created_at) delta query",
                "fullTitle": "Objects --- Delta queries should be able to get all objects by (created_at) delta query",
                "timedOut": false,
                "duration": 2657,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"created_at\"</span>: object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>])<br>\t\t\t\tcreatedAt = res.body.objects.created_at<br>\t\t\t\tcreatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tcreatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "d005612f-ebc8-4bcc-96e0-9894c9aeaa20",
                "parentUUID": "f67a3605-43ed-4ec2-8ca6-172e817c1e69",
                "skipped": false
              },
              {
                "title": "should be able to get all objects by (updated_at) delta query",
                "fullTitle": "Objects --- Delta queries should be able to get all objects by (updated_at) delta query",
                "timedOut": false,
                "duration": 1479,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"updated_at\"</span>: object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'updated_at'</span>])<br>\t\t\t\t\tupdatedAt = res.body.objects.updated_at<br>\t\t\t\t\tupdatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupdatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "c6c4d9e5-1428-475b-b46b-dfa668607b02",
                "parentUUID": "f67a3605-43ed-4ec2-8ca6-172e817c1e69",
                "skipped": false
              },
              {
                "title": "should be able to get all objects by delete_at delta query",
                "fullTitle": "Objects --- Delta queries should be able to get all objects by delete_at delta query",
                "timedOut": false,
                "duration": 1881,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"deleted_at\"</span>: object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'deleted_at'</span>])<br>\t\t\t\t\tdeletedAt = res.body.objects.deleted_at<br>\t\t\t\t\tdeletedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tdeletedAt.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object3.uid)<br>\t\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "a76a2d8e-3cbb-4d36-bf34-f4f22346e6b9",
                "parentUUID": "f67a3605-43ed-4ec2-8ca6-172e817c1e69",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 7489
          },
          {
            "title": "Object CURD",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get single object present as system user",
                "fullTitle": "Objects --- Object CURD should be able to get single object present as system user",
                "timedOut": false,
                "duration": 1437,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\tobject.ACL.should.be.deep.equal({})<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "a5e578e5-fca4-43f3-866f-34d197c2802e",
                "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
                "skipped": false
              },
              {
                "title": "should be able to get single object(sys) present as a app user",
                "fullTitle": "Objects --- Object CURD should be able to get single object(sys) present as a app user",
                "timedOut": false,
                "duration": 1757,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, appUser10.authtoken, app.api_key, myclass3.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t\tobject.ACL.should.be.deep.equal({<br>\t\t\t      <span class=\"hljs-string\">\"can\"</span>: []<br>\t\t\t    })<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "d25677e8-298e-4d5c-826a-d1c505f297af",
                "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
                "skipped": false
              },
              {
                "title": "should be able to get single object present as a app user",
                "fullTitle": "Objects --- Object CURD should be able to get single object present as a app user",
                "timedOut": false,
                "duration": 1474,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, appUser10.authtoken, app.api_key, myclass3.uid, object2.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t\tobject.ACL.should.be.deep.equal({<br>\t\t\t      <span class=\"hljs-string\">\"can\"</span>: [<br>\t\t\t        <span class=\"hljs-string\">\"update\"</span>,<br>\t\t\t        <span class=\"hljs-string\">\"delete\"</span><br>\t\t\t      ]<br>\t\t\t    })<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "ce451103-36de-4510-b712-93ed1346cf4c",
                "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
                "skipped": false
              },
              {
                "title": "should be able to get single object present as a other app user",
                "fullTitle": "Objects --- Object CURD should be able to get single object present as a other app user",
                "timedOut": false,
                "duration": 1476,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, appUser9.authtoken, app.api_key, myclass3.uid, object2.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t\tobject.ACL.should.be.deep.equal({<br>\t\t\t      <span class=\"hljs-string\">\"can\"</span>: []<br>\t\t\t    })<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "c4313676-941b-4e1b-b81a-a9e897a4eefa",
                "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
                "skipped": false
              },
              {
                "title": "should be able to update object present",
                "fullTitle": "Objects --- Object CURD should be able to update object present",
                "timedOut": false,
                "duration": 1750,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, object1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "6d8fa5a2-27d4-4d35-8290-e092fe501249",
                "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
                "skipped": false
              },
              {
                "title": "should be able to perform scilent update on object",
                "fullTitle": "Objects --- Object CURD should be able to perform scilent update on object",
                "timedOut": false,
                "duration": 1464,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object_sclient'</span>, sys_user1.authtoken, app.api_key, <span class=\"hljs-literal\">true</span>, myclass3.uid, object2.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.object<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t<span class=\"hljs-comment\">// Object.keys(object).should.to.be.deep.equal(['name', 'app_user_object_uid', 'created_by', 'updated_by', 'created_at', 'updated_at', 'uid', 'published', 'ACL', '__loc', '_version', 'tags'])</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\tobject.created_at.should.be.equal(object.updated_at)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "e534881b-c4ab-4ded-905e-76a0f56865ca",
                "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid object uid",
                "fullTitle": "Objects --- Object CURD should provide an error message for invalid object uid",
                "timedOut": false,
                "duration": 1444,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, <span class=\"hljs-string\">\"swapnil\"</span>, {<br>\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "109a834d-ded0-439d-872d-21759d37b822",
                "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
                "skipped": false
              },
              {
                "title": "should be able to delete object present",
                "fullTitle": "Objects --- Object CURD should be able to delete object present",
                "timedOut": false,
                "duration": 1852,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'delete_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "d5854c06-e6bc-46a4-843b-cb1d7b066819",
                "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get single object present as system user",
                "fullTitle": "Objects --- Object CURD should be able to get single object present as system user",
                "timedOut": false,
                "duration": 1437,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\tobject.ACL.should.be.deep.equal({})<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "a5e578e5-fca4-43f3-866f-34d197c2802e",
                "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
                "skipped": false
              },
              {
                "title": "should be able to get single object(sys) present as a app user",
                "fullTitle": "Objects --- Object CURD should be able to get single object(sys) present as a app user",
                "timedOut": false,
                "duration": 1757,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, appUser10.authtoken, app.api_key, myclass3.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t\tobject.ACL.should.be.deep.equal({<br>\t\t\t      <span class=\"hljs-string\">\"can\"</span>: []<br>\t\t\t    })<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "d25677e8-298e-4d5c-826a-d1c505f297af",
                "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
                "skipped": false
              },
              {
                "title": "should be able to get single object present as a app user",
                "fullTitle": "Objects --- Object CURD should be able to get single object present as a app user",
                "timedOut": false,
                "duration": 1474,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, appUser10.authtoken, app.api_key, myclass3.uid, object2.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t\tobject.ACL.should.be.deep.equal({<br>\t\t\t      <span class=\"hljs-string\">\"can\"</span>: [<br>\t\t\t        <span class=\"hljs-string\">\"update\"</span>,<br>\t\t\t        <span class=\"hljs-string\">\"delete\"</span><br>\t\t\t      ]<br>\t\t\t    })<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "ce451103-36de-4510-b712-93ed1346cf4c",
                "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
                "skipped": false
              },
              {
                "title": "should be able to get single object present as a other app user",
                "fullTitle": "Objects --- Object CURD should be able to get single object present as a other app user",
                "timedOut": false,
                "duration": 1476,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, appUser9.authtoken, app.api_key, myclass3.uid, object2.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t\tobject.ACL.should.be.deep.equal({<br>\t\t\t      <span class=\"hljs-string\">\"can\"</span>: []<br>\t\t\t    })<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "c4313676-941b-4e1b-b81a-a9e897a4eefa",
                "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
                "skipped": false
              },
              {
                "title": "should be able to update object present",
                "fullTitle": "Objects --- Object CURD should be able to update object present",
                "timedOut": false,
                "duration": 1750,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, object1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "6d8fa5a2-27d4-4d35-8290-e092fe501249",
                "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
                "skipped": false
              },
              {
                "title": "should be able to perform scilent update on object",
                "fullTitle": "Objects --- Object CURD should be able to perform scilent update on object",
                "timedOut": false,
                "duration": 1464,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object_sclient'</span>, sys_user1.authtoken, app.api_key, <span class=\"hljs-literal\">true</span>, myclass3.uid, object2.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.object<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t<span class=\"hljs-comment\">// Object.keys(object).should.to.be.deep.equal(['name', 'app_user_object_uid', 'created_by', 'updated_by', 'created_at', 'updated_at', 'uid', 'published', 'ACL', '__loc', '_version', 'tags'])</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\tobject.created_at.should.be.equal(object.updated_at)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "e534881b-c4ab-4ded-905e-76a0f56865ca",
                "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid object uid",
                "fullTitle": "Objects --- Object CURD should provide an error message for invalid object uid",
                "timedOut": false,
                "duration": 1444,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, <span class=\"hljs-string\">\"swapnil\"</span>, {<br>\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "109a834d-ded0-439d-872d-21759d37b822",
                "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
                "skipped": false
              },
              {
                "title": "should be able to delete object present",
                "fullTitle": "Objects --- Object CURD should be able to delete object present",
                "timedOut": false,
                "duration": 1852,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'delete_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "d5854c06-e6bc-46a4-843b-cb1d7b066819",
                "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 8,
            "totalPasses": 8,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 12654
          },
          {
            "title": "Unpublish object CURD",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all object includeing unpublish",
                "fullTitle": "Objects --- Unpublish object CURD should be able to get all object includeing unpublish",
                "timedOut": false,
                "duration": 1649,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass5.uid))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "4b0d5471-cf97-4608-ab77-9ea5041374ec",
                "parentUUID": "92f6be2d-c0bb-4675-bc26-bcec7889faab",
                "skipped": false
              },
              {
                "title": "should be able to get single unpublish object present",
                "fullTitle": "Objects --- Unpublish object CURD should be able to get single unpublish object present",
                "timedOut": false,
                "duration": 1692,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, sys_user1.authtoken, app.api_key, myclass5.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "627b1bcc-ad6c-4665-857a-5e29b696f35f",
                "parentUUID": "92f6be2d-c0bb-4675-bc26-bcec7889faab",
                "skipped": false
              },
              {
                "title": "should be able to update object present",
                "fullTitle": "Objects --- Unpublish object CURD should be able to update object present",
                "timedOut": false,
                "duration": 1488,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, myclass5.uid, object1.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: [<span class=\"hljs-string\">\"updated\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobject = res.body.object<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "a6016361-c364-41ec-9aa8-62bbe62e4293",
                "parentUUID": "92f6be2d-c0bb-4675-bc26-bcec7889faab",
                "skipped": false
              },
              {
                "title": "should be able to delete object present",
                "fullTitle": "Objects --- Unpublish object CURD should be able to delete object present",
                "timedOut": false,
                "duration": 1671,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'delete_object'</span>, sys_user1.authtoken, app.api_key, myclass5.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "e1c6620a-8412-4c25-acd8-9d3619658545",
                "parentUUID": "92f6be2d-c0bb-4675-bc26-bcec7889faab",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "92f6be2d-c0bb-4675-bc26-bcec7889faab",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get all object includeing unpublish",
                "fullTitle": "Objects --- Unpublish object CURD should be able to get all object includeing unpublish",
                "timedOut": false,
                "duration": 1649,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass5.uid))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
                "isRoot": false,
                "uuid": "4b0d5471-cf97-4608-ab77-9ea5041374ec",
                "parentUUID": "92f6be2d-c0bb-4675-bc26-bcec7889faab",
                "skipped": false
              },
              {
                "title": "should be able to get single unpublish object present",
                "fullTitle": "Objects --- Unpublish object CURD should be able to get single unpublish object present",
                "timedOut": false,
                "duration": 1692,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, sys_user1.authtoken, app.api_key, myclass5.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "627b1bcc-ad6c-4665-857a-5e29b696f35f",
                "parentUUID": "92f6be2d-c0bb-4675-bc26-bcec7889faab",
                "skipped": false
              },
              {
                "title": "should be able to update object present",
                "fullTitle": "Objects --- Unpublish object CURD should be able to update object present",
                "timedOut": false,
                "duration": 1488,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, myclass5.uid, object1.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: [<span class=\"hljs-string\">\"updated\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobject = res.body.object<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "a6016361-c364-41ec-9aa8-62bbe62e4293",
                "parentUUID": "92f6be2d-c0bb-4675-bc26-bcec7889faab",
                "skipped": false
              },
              {
                "title": "should be able to delete object present",
                "fullTitle": "Objects --- Unpublish object CURD should be able to delete object present",
                "timedOut": false,
                "duration": 1671,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'delete_object'</span>, sys_user1.authtoken, app.api_key, myclass5.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "e1c6620a-8412-4c25-acd8-9d3619658545",
                "parentUUID": "92f6be2d-c0bb-4675-bc26-bcec7889faab",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6500
          },
          {
            "title": "Object update operations",
            "suites": [
              {
                "title": "PUSH-PULL",
                "suites": [],
                "tests": [
                  {
                    "title": "should provide an error message for -ve index key",
                    "fullTitle": "Object update operations PUSH-PULL should provide an error message for -ve index key",
                    "timedOut": false,
                    "duration": 1616,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"888\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: -<span class=\"hljs-number\">6</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"Invalid parameters\"</span>: [<br>\t      <span class=\"hljs-string\">\"have invalid update operation(s). Please check if they were performed on null values.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "3f149088-7fa9-4780-a0aa-4f97ebb2da38",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should be able to PUSH value (object property) in array field present in group",
                    "fullTitle": "Object update operations PUSH-PULL should be able to PUSH value (object property) in array field present in group",
                    "timedOut": false,
                    "duration": 1808,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"1222222\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "5b2f9c70-3c37-4d92-ae78-df3fb65a91d4",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should able to PUSH value (object property) in array field present in group without pasing index",
                    "fullTitle": "Object update operations PUSH-PULL should able to PUSH value (object property) in array field present in group without pasing index",
                    "timedOut": false,
                    "duration": 2315,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">555</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "77e4a722-34cd-451b-8428-45e833be0a63",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should able to PUSH value(dot property) in array field present in group",
                    "fullTitle": "Object update operations PUSH-PULL should able to PUSH value(dot property) in array field present in group",
                    "timedOut": false,
                    "duration": 1636,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"666\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.object<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t<span class=\"hljs-comment\">// object.roundone.hits.should.have.length(6)</span><br>\tobject.roundone.hits[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">666</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "4f59199a-8ad5-4452-b61e-25844f6197cc",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message for field datatype validation for PUSH operation",
                    "fullTitle": "Object update operations PUSH-PULL should provide an error message for field datatype validation for PUSH operation",
                    "timedOut": false,
                    "duration": 2689,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone.hits.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not number\"</span><br>\t    ]<br>\t  }<br>\t})\t\t\t\t\t<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "3e9d79ee-e1ba-4351-8043-6d2b633b4bb9",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should able to PUSH value(dot property) without passing index",
                    "fullTitle": "Object update operations PUSH-PULL should able to PUSH value(dot property) without passing index",
                    "timedOut": false,
                    "duration": 1562,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">999</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = R.last(res.body.object.roundone.hits)<br>\tobject.should.be.equal(<span class=\"hljs-number\">999</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "cb2d7143-4ac7-49c2-8ec5-029017e7b89b",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should able to create object and PUSH values in it",
                    "fullTitle": "Object update operations PUSH-PULL should able to create object and PUSH values in it",
                    "timedOut": false,
                    "duration": 1509,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"555\"</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tobject = res.body.object.roundone.hits[<span class=\"hljs-number\">0</span>]<br>\tobject.should.be.equal(<span class=\"hljs-number\">555</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "6ec3ceb5-d85d-4e31-ae90-6c8927b813cf",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should able to create object without PUSH operation (blank object)",
                    "fullTitle": "Object update operations PUSH-PULL should able to create object without PUSH operation (blank object)",
                    "timedOut": false,
                    "duration": 1663,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: [<span class=\"hljs-string\">\"786\"</span>]<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">\"Woot! Object created successfully.\"</span>)<br>\tres.body.object.roundone.should.be.deep.equal({<br>\t\t\t      <span class=\"hljs-string\">\"hits\"</span>: []<br>\t\t\t    })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "31fa6331-67be-4bd3-b7d0-a013c22629ec",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should able to create object and PUSH values in it using dot property",
                    "fullTitle": "Object update operations PUSH-PULL should able to create object and PUSH values in it using dot property",
                    "timedOut": false,
                    "duration": 1639,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">777</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"parameter\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "49fdd998-9620-41b3-8094-c2321b227b32",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should be able to PULL value(object property) from array while updating object",
                    "fullTitle": "Object update operations PUSH-PULL should be able to PULL value(object property) from array while updating object",
                    "timedOut": false,
                    "duration": 2954,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"101\"</span>, <span class=\"hljs-string\">\"102\"</span>, <span class=\"hljs-string\">\"103\"</span>, <span class=\"hljs-string\">\"104\"</span>, <span class=\"hljs-string\">\"105\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest1\"</span><br>\t\t}<br>\t}<br>}))<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">105</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))\t<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.roundone.hits.should.be.deep.equal([<span class=\"hljs-number\">101</span>, <span class=\"hljs-number\">102</span>, <span class=\"hljs-number\">103</span>, <span class=\"hljs-number\">104</span>])<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "a88c17a4-dda2-41fc-872d-7139975ec8e9",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should be able to PULL multiple values(object property) from array while updating object",
                    "fullTitle": "Object update operations PUSH-PULL should be able to PULL multiple values(object property) from array while updating object",
                    "timedOut": false,
                    "duration": 3182,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"201\"</span>, <span class=\"hljs-string\">\"202\"</span>, <span class=\"hljs-string\">\"203\"</span>, <span class=\"hljs-string\">\"204\"</span>, <span class=\"hljs-string\">\"205\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest2\"</span><br>\t\t}<br>\t}<br>}))<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-number\">201</span>, <span class=\"hljs-number\">202</span>, <span class=\"hljs-number\">203</span>, <span class=\"hljs-number\">204</span>, <span class=\"hljs-number\">205</span>]<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))\t<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.roundone.hits.should.be.deep.equal([])<br>\t<span class=\"hljs-comment\">// object.roundone.hits[1].should.be.not.equal([3])</span><br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "3c6d1c53-100e-482c-ac5a-31497d347018",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message for data key for PULL operation",
                    "fullTitle": "Object update operations PUSH-PULL should provide an error message for data key for PULL operation",
                    "timedOut": false,
                    "duration": 1667,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone.hits\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "4c590ff5-e73e-4e8c-9abc-c4af42663466",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message if index specified for PULL operation ",
                    "fullTitle": "Object update operations PUSH-PULL should provide an error message if index specified for PULL operation ",
                    "timedOut": false,
                    "duration": 3402,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"401\"</span>, <span class=\"hljs-string\">\"402\"</span>, <span class=\"hljs-string\">\"403\"</span>, <span class=\"hljs-string\">\"404\"</span>, <span class=\"hljs-string\">\"405\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest3\"</span><br>\t\t}<br>\t}<br>}))<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone.hits\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "b28a5998-af3b-4a93-9d82-99e652261ed3",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 95000,
                "file": "/test.js",
                "uuid": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                "fullFile": "/home/ss/Documents/backend/test.js",
                "passes": [
                  {
                    "title": "should provide an error message for -ve index key",
                    "fullTitle": "Object update operations PUSH-PULL should provide an error message for -ve index key",
                    "timedOut": false,
                    "duration": 1616,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"888\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: -<span class=\"hljs-number\">6</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"Invalid parameters\"</span>: [<br>\t      <span class=\"hljs-string\">\"have invalid update operation(s). Please check if they were performed on null values.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "3f149088-7fa9-4780-a0aa-4f97ebb2da38",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should be able to PUSH value (object property) in array field present in group",
                    "fullTitle": "Object update operations PUSH-PULL should be able to PUSH value (object property) in array field present in group",
                    "timedOut": false,
                    "duration": 1808,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"1222222\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "5b2f9c70-3c37-4d92-ae78-df3fb65a91d4",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should able to PUSH value (object property) in array field present in group without pasing index",
                    "fullTitle": "Object update operations PUSH-PULL should able to PUSH value (object property) in array field present in group without pasing index",
                    "timedOut": false,
                    "duration": 2315,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">555</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "77e4a722-34cd-451b-8428-45e833be0a63",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should able to PUSH value(dot property) in array field present in group",
                    "fullTitle": "Object update operations PUSH-PULL should able to PUSH value(dot property) in array field present in group",
                    "timedOut": false,
                    "duration": 1636,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"666\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.object<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t<span class=\"hljs-comment\">// object.roundone.hits.should.have.length(6)</span><br>\tobject.roundone.hits[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">666</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "4f59199a-8ad5-4452-b61e-25844f6197cc",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message for field datatype validation for PUSH operation",
                    "fullTitle": "Object update operations PUSH-PULL should provide an error message for field datatype validation for PUSH operation",
                    "timedOut": false,
                    "duration": 2689,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone.hits.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not number\"</span><br>\t    ]<br>\t  }<br>\t})\t\t\t\t\t<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "3e9d79ee-e1ba-4351-8043-6d2b633b4bb9",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should able to PUSH value(dot property) without passing index",
                    "fullTitle": "Object update operations PUSH-PULL should able to PUSH value(dot property) without passing index",
                    "timedOut": false,
                    "duration": 1562,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">999</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = R.last(res.body.object.roundone.hits)<br>\tobject.should.be.equal(<span class=\"hljs-number\">999</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "cb2d7143-4ac7-49c2-8ec5-029017e7b89b",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should able to create object and PUSH values in it",
                    "fullTitle": "Object update operations PUSH-PULL should able to create object and PUSH values in it",
                    "timedOut": false,
                    "duration": 1509,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"555\"</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tobject = res.body.object.roundone.hits[<span class=\"hljs-number\">0</span>]<br>\tobject.should.be.equal(<span class=\"hljs-number\">555</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "6ec3ceb5-d85d-4e31-ae90-6c8927b813cf",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should able to create object without PUSH operation (blank object)",
                    "fullTitle": "Object update operations PUSH-PULL should able to create object without PUSH operation (blank object)",
                    "timedOut": false,
                    "duration": 1663,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: [<span class=\"hljs-string\">\"786\"</span>]<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">\"Woot! Object created successfully.\"</span>)<br>\tres.body.object.roundone.should.be.deep.equal({<br>\t\t\t      <span class=\"hljs-string\">\"hits\"</span>: []<br>\t\t\t    })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "31fa6331-67be-4bd3-b7d0-a013c22629ec",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should able to create object and PUSH values in it using dot property",
                    "fullTitle": "Object update operations PUSH-PULL should able to create object and PUSH values in it using dot property",
                    "timedOut": false,
                    "duration": 1639,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">777</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"parameter\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "49fdd998-9620-41b3-8094-c2321b227b32",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should be able to PULL value(object property) from array while updating object",
                    "fullTitle": "Object update operations PUSH-PULL should be able to PULL value(object property) from array while updating object",
                    "timedOut": false,
                    "duration": 2954,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"101\"</span>, <span class=\"hljs-string\">\"102\"</span>, <span class=\"hljs-string\">\"103\"</span>, <span class=\"hljs-string\">\"104\"</span>, <span class=\"hljs-string\">\"105\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest1\"</span><br>\t\t}<br>\t}<br>}))<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">105</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))\t<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.roundone.hits.should.be.deep.equal([<span class=\"hljs-number\">101</span>, <span class=\"hljs-number\">102</span>, <span class=\"hljs-number\">103</span>, <span class=\"hljs-number\">104</span>])<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "a88c17a4-dda2-41fc-872d-7139975ec8e9",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should be able to PULL multiple values(object property) from array while updating object",
                    "fullTitle": "Object update operations PUSH-PULL should be able to PULL multiple values(object property) from array while updating object",
                    "timedOut": false,
                    "duration": 3182,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"201\"</span>, <span class=\"hljs-string\">\"202\"</span>, <span class=\"hljs-string\">\"203\"</span>, <span class=\"hljs-string\">\"204\"</span>, <span class=\"hljs-string\">\"205\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest2\"</span><br>\t\t}<br>\t}<br>}))<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-number\">201</span>, <span class=\"hljs-number\">202</span>, <span class=\"hljs-number\">203</span>, <span class=\"hljs-number\">204</span>, <span class=\"hljs-number\">205</span>]<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))\t<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.roundone.hits.should.be.deep.equal([])<br>\t<span class=\"hljs-comment\">// object.roundone.hits[1].should.be.not.equal([3])</span><br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "3c6d1c53-100e-482c-ac5a-31497d347018",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message for data key for PULL operation",
                    "fullTitle": "Object update operations PUSH-PULL should provide an error message for data key for PULL operation",
                    "timedOut": false,
                    "duration": 1667,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone.hits\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "4c590ff5-e73e-4e8c-9abc-c4af42663466",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message if index specified for PULL operation ",
                    "fullTitle": "Object update operations PUSH-PULL should provide an error message if index specified for PULL operation ",
                    "timedOut": false,
                    "duration": 3402,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"401\"</span>, <span class=\"hljs-string\">\"402\"</span>, <span class=\"hljs-string\">\"403\"</span>, <span class=\"hljs-string\">\"404\"</span>, <span class=\"hljs-string\">\"405\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest3\"</span><br>\t\t}<br>\t}<br>}))<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone.hits\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "b28a5998-af3b-4a93-9d82-99e652261ed3",
                    "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 13,
                "totalPasses": 13,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 27642
              },
              {
                "title": "UPDATE on group(array) field",
                "suites": [],
                "tests": [
                  {
                    "title": "should provide an error message for -ve index in UPDATE operation",
                    "fullTitle": "Object update operations UPDATE on group(array) field should provide an error message for -ve index in UPDATE operation",
                    "timedOut": false,
                    "duration": 3268,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">55000</span>)<br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"201\"</span>, <span class=\"hljs-string\">\"202\"</span>, <span class=\"hljs-string\">\"203\"</span>, <span class=\"hljs-string\">\"204\"</span>, <span class=\"hljs-string\">\"205\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest122\"</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// console.log(objUid)</span><br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">9999</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: -<span class=\"hljs-number\">1</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "ee30ce9d-7b82-4102-bc42-a959dc55467b",
                    "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
                    "skipped": false
                  },
                  {
                    "title": "should be able to update the given value(object property) at provided index",
                    "fullTitle": "Object update operations UPDATE on group(array) field should be able to update the given value(object property) at provided index",
                    "timedOut": false,
                    "duration": 3450,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">35000</span>)<br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"201\"</span>, <span class=\"hljs-string\">\"202\"</span>, <span class=\"hljs-string\">\"203\"</span>, <span class=\"hljs-string\">\"204\"</span>, <span class=\"hljs-string\">\"205\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest12\"</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">9999</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "38848e64-b0a6-4e3c-8525-cc8119f2f03b",
                    "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
                    "skipped": false
                  },
                  {
                    "title": "should be able to update then value(dot property) at provided index",
                    "fullTitle": "Object update operations UPDATE on group(array) field should be able to update then value(dot property) at provided index",
                    "timedOut": false,
                    "duration": 3502,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">40000</span>)<br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"501\"</span>, <span class=\"hljs-string\">\"502\"</span>, <span class=\"hljs-string\">\"503\"</span>, <span class=\"hljs-string\">\"504\"</span>, <span class=\"hljs-string\">\"505\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest22\"</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"UPDATE\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"666\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.roundone.hits[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">666</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "a7e39c91-aa64-42a5-9d05-6eccf0f58612",
                    "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message for multiple values(object property) PUSH on same object",
                    "fullTitle": "Object update operations UPDATE on group(array) field should provide an error message for multiple values(object property) PUSH on same object",
                    "timedOut": false,
                    "duration": 2101,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object1.uid<br><br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass8.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"UPDATE\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"marks\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-number\">502</span>, <span class=\"hljs-number\">503</span>]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t},<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"subject\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"list\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-string\">\"ENG\"</span>]<br>\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"group.0.subject\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "6ce2ffaf-13d4-408c-9a7b-72072bdce87b",
                    "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message for multiple values(dot property) PUSH on same object",
                    "fullTitle": "Object update operations UPDATE on group(array) field should provide an error message for multiple values(dot property) PUSH on same object",
                    "timedOut": false,
                    "duration": 1551,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">25000</span>)<br><span class=\"hljs-keyword\">var</span> objUid = object1.uid<br><br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass8.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"group\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"UPDATE\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"marks\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-number\">99</span>, <span class=\"hljs-number\">98</span>]<br>\t\t\t\t\t\t}<br>\t\t\t\t\t},<br>\t\t\t\t\t<span class=\"hljs-string\">\"subject.0.list\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-string\">\"FRN\"</span>]<br>\t\t\t\t\t\t},<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"subject.0.list\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-string\">\"PHY\"</span>]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object.group[<span class=\"hljs-number\">0</span>]<br>\tobject.marks[<span class=\"hljs-number\">4</span>].should.be.equal(<span class=\"hljs-number\">99</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "d2013805-4522-4795-adb4-968c42a16cec",
                    "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 95000,
                "file": "/test.js",
                "uuid": "49c94157-492a-4706-bd4c-d2319fee4d47",
                "fullFile": "/home/ss/Documents/backend/test.js",
                "passes": [
                  {
                    "title": "should provide an error message for -ve index in UPDATE operation",
                    "fullTitle": "Object update operations UPDATE on group(array) field should provide an error message for -ve index in UPDATE operation",
                    "timedOut": false,
                    "duration": 3268,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">55000</span>)<br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"201\"</span>, <span class=\"hljs-string\">\"202\"</span>, <span class=\"hljs-string\">\"203\"</span>, <span class=\"hljs-string\">\"204\"</span>, <span class=\"hljs-string\">\"205\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest122\"</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// console.log(objUid)</span><br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">9999</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: -<span class=\"hljs-number\">1</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "ee30ce9d-7b82-4102-bc42-a959dc55467b",
                    "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
                    "skipped": false
                  },
                  {
                    "title": "should be able to update the given value(object property) at provided index",
                    "fullTitle": "Object update operations UPDATE on group(array) field should be able to update the given value(object property) at provided index",
                    "timedOut": false,
                    "duration": 3450,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">35000</span>)<br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"201\"</span>, <span class=\"hljs-string\">\"202\"</span>, <span class=\"hljs-string\">\"203\"</span>, <span class=\"hljs-string\">\"204\"</span>, <span class=\"hljs-string\">\"205\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest12\"</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">9999</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "38848e64-b0a6-4e3c-8525-cc8119f2f03b",
                    "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
                    "skipped": false
                  },
                  {
                    "title": "should be able to update then value(dot property) at provided index",
                    "fullTitle": "Object update operations UPDATE on group(array) field should be able to update then value(dot property) at provided index",
                    "timedOut": false,
                    "duration": 3502,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">40000</span>)<br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"501\"</span>, <span class=\"hljs-string\">\"502\"</span>, <span class=\"hljs-string\">\"503\"</span>, <span class=\"hljs-string\">\"504\"</span>, <span class=\"hljs-string\">\"505\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest22\"</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"UPDATE\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"666\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.roundone.hits[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">666</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "a7e39c91-aa64-42a5-9d05-6eccf0f58612",
                    "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message for multiple values(object property) PUSH on same object",
                    "fullTitle": "Object update operations UPDATE on group(array) field should provide an error message for multiple values(object property) PUSH on same object",
                    "timedOut": false,
                    "duration": 2101,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> objUid = object1.uid<br><br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass8.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"UPDATE\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"marks\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-number\">502</span>, <span class=\"hljs-number\">503</span>]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t},<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"subject\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"list\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-string\">\"ENG\"</span>]<br>\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"group.0.subject\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "6ce2ffaf-13d4-408c-9a7b-72072bdce87b",
                    "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message for multiple values(dot property) PUSH on same object",
                    "fullTitle": "Object update operations UPDATE on group(array) field should provide an error message for multiple values(dot property) PUSH on same object",
                    "timedOut": false,
                    "duration": 1551,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">25000</span>)<br><span class=\"hljs-keyword\">var</span> objUid = object1.uid<br><br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass8.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"group\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"UPDATE\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"marks\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-number\">99</span>, <span class=\"hljs-number\">98</span>]<br>\t\t\t\t\t\t}<br>\t\t\t\t\t},<br>\t\t\t\t\t<span class=\"hljs-string\">\"subject.0.list\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-string\">\"FRN\"</span>]<br>\t\t\t\t\t\t},<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"subject.0.list\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-string\">\"PHY\"</span>]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object.group[<span class=\"hljs-number\">0</span>]<br>\tobject.marks[<span class=\"hljs-number\">4</span>].should.be.equal(<span class=\"hljs-number\">99</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "d2013805-4522-4795-adb4-968c42a16cec",
                    "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 5,
                "totalPasses": 5,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 13872
              },
              {
                "title": "ADD_SUB",
                "suites": [],
                "tests": [
                  {
                    "title": "should provide an error message for array field when index is not specifyed for field to ADD/SUB",
                    "fullTitle": "Object update operations ADD_SUB should provide an error message for array field when index is not specifyed for field to ADD/SUB",
                    "timedOut": false,
                    "duration": 1486,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_plus\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t},<br>\t\t<span class=\"hljs-string\">\"cash_minus\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">500</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"cash_plus\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "4674656f-6d96-465b-92c2-8554d64c1781",
                    "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
                    "skipped": false
                  },
                  {
                    "title": "should be able to ADD provided number in present field in an array",
                    "fullTitle": "Object update operations ADD_SUB should be able to ADD provided number in present field in an array",
                    "timedOut": false,
                    "duration": 1912,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_plus.0\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.cash_plus[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">6900</span>)<br>\tobject.cash_plus[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-number\">6300</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "dd30fe02-56ad-47c8-ac24-ab511af74ed4",
                    "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
                    "skipped": false
                  },
                  {
                    "title": "should be able to SUB given number in present field in an array",
                    "fullTitle": "Object update operations ADD_SUB should be able to SUB given number in present field in an array",
                    "timedOut": false,
                    "duration": 1646,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_minus\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">500.7</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.cash_minus.should.be.equal(<span class=\"hljs-number\">8000.000000000001</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "7ca2d628-66fc-4c58-a932-facc1730d33d",
                    "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message for null field ADD/sub operation",
                    "fullTitle": "Object update operations ADD_SUB should provide an error message for null field ADD/sub operation",
                    "timedOut": false,
                    "duration": 3300,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_plus.4\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"cash_plus.3\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"3\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "e73fb664-b445-4fc1-a274-3eb21213a377",
                    "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
                    "skipped": false
                  },
                  {
                    "title": "should be able to ADD given number to number field present inside the group",
                    "fullTitle": "Object update operations ADD_SUB should be able to ADD given number to number field present inside the group",
                    "timedOut": false,
                    "duration": 1514,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group_cash.add_cash.0\"</span>: {<span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">50</span>}<br>\t\t}<br>\t}<br>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.group_cash.add_cash[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">102</span>)<br>\tobject.group_cash.add_cash[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-number\">75</span>)<br>\tobject.group_cash.remove_cash.should.be.equal(<span class=\"hljs-number\">264.56</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "2104784d-7c87-45b1-ae25-d45bdefa1210",
                    "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
                    "skipped": false
                  },
                  {
                    "title": "should be able to SUB given number to number field present inside the group",
                    "fullTitle": "Object update operations ADD_SUB should be able to SUB given number to number field present inside the group",
                    "timedOut": false,
                    "duration": 1675,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group_cash.remove_cash\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">200</span><br>\t\t\t}<br>\t\t}<br>\t}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.group_cash.remove_cash.should.be.equal(<span class=\"hljs-number\">64.56</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "12f4cf60-f560-46dc-b677-079a1e764f2d",
                    "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message for incorrect group field",
                    "fullTitle": "Object update operations ADD_SUB should provide an error message for incorrect group field",
                    "timedOut": false,
                    "duration": 1470,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">35000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"group_cash.remove_cash.0\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">264</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"parameters\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "60dd06cc-0edb-4830-86eb-44cf44088825",
                    "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
                    "skipped": false
                  },
                  {
                    "title": "should be able to ADD given number to number field present inside the group",
                    "fullTitle": "Object update operations ADD_SUB should be able to ADD given number to number field present inside the group",
                    "timedOut": false,
                    "duration": 1593,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group_cash.add_cash\"</span>: {<span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">50</span>}<br>\t\t}<br>\t}<br>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"group_cash.add_cash\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "4339d358-dc53-4231-a85e-22a74c78818b",
                    "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 95000,
                "file": "/test.js",
                "uuid": "60573e93-5197-4948-a7aa-6392cea80c58",
                "fullFile": "/home/ss/Documents/backend/test.js",
                "passes": [
                  {
                    "title": "should provide an error message for array field when index is not specifyed for field to ADD/SUB",
                    "fullTitle": "Object update operations ADD_SUB should provide an error message for array field when index is not specifyed for field to ADD/SUB",
                    "timedOut": false,
                    "duration": 1486,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_plus\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t},<br>\t\t<span class=\"hljs-string\">\"cash_minus\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">500</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"cash_plus\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "4674656f-6d96-465b-92c2-8554d64c1781",
                    "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
                    "skipped": false
                  },
                  {
                    "title": "should be able to ADD provided number in present field in an array",
                    "fullTitle": "Object update operations ADD_SUB should be able to ADD provided number in present field in an array",
                    "timedOut": false,
                    "duration": 1912,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_plus.0\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.cash_plus[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">6900</span>)<br>\tobject.cash_plus[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-number\">6300</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "dd30fe02-56ad-47c8-ac24-ab511af74ed4",
                    "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
                    "skipped": false
                  },
                  {
                    "title": "should be able to SUB given number in present field in an array",
                    "fullTitle": "Object update operations ADD_SUB should be able to SUB given number in present field in an array",
                    "timedOut": false,
                    "duration": 1646,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_minus\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">500.7</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.cash_minus.should.be.equal(<span class=\"hljs-number\">8000.000000000001</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "7ca2d628-66fc-4c58-a932-facc1730d33d",
                    "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message for null field ADD/sub operation",
                    "fullTitle": "Object update operations ADD_SUB should provide an error message for null field ADD/sub operation",
                    "timedOut": false,
                    "duration": 3300,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_plus.4\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"cash_plus.3\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"3\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "e73fb664-b445-4fc1-a274-3eb21213a377",
                    "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
                    "skipped": false
                  },
                  {
                    "title": "should be able to ADD given number to number field present inside the group",
                    "fullTitle": "Object update operations ADD_SUB should be able to ADD given number to number field present inside the group",
                    "timedOut": false,
                    "duration": 1514,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group_cash.add_cash.0\"</span>: {<span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">50</span>}<br>\t\t}<br>\t}<br>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.group_cash.add_cash[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">102</span>)<br>\tobject.group_cash.add_cash[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-number\">75</span>)<br>\tobject.group_cash.remove_cash.should.be.equal(<span class=\"hljs-number\">264.56</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "2104784d-7c87-45b1-ae25-d45bdefa1210",
                    "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
                    "skipped": false
                  },
                  {
                    "title": "should be able to SUB given number to number field present inside the group",
                    "fullTitle": "Object update operations ADD_SUB should be able to SUB given number to number field present inside the group",
                    "timedOut": false,
                    "duration": 1675,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group_cash.remove_cash\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">200</span><br>\t\t\t}<br>\t\t}<br>\t}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.group_cash.remove_cash.should.be.equal(<span class=\"hljs-number\">64.56</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "12f4cf60-f560-46dc-b677-079a1e764f2d",
                    "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message for incorrect group field",
                    "fullTitle": "Object update operations ADD_SUB should provide an error message for incorrect group field",
                    "timedOut": false,
                    "duration": 1470,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">35000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"group_cash.remove_cash.0\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">264</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"parameters\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "60dd06cc-0edb-4830-86eb-44cf44088825",
                    "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
                    "skipped": false
                  },
                  {
                    "title": "should be able to ADD given number to number field present inside the group",
                    "fullTitle": "Object update operations ADD_SUB should be able to ADD given number to number field present inside the group",
                    "timedOut": false,
                    "duration": 1593,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group_cash.add_cash\"</span>: {<span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">50</span>}<br>\t\t}<br>\t}<br>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"group_cash.add_cash\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "4339d358-dc53-4231-a85e-22a74c78818b",
                    "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 8,
                "totalPasses": 8,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 14596
              },
              {
                "title": "UPSERT",
                "suites": [],
                "tests": [
                  {
                    "title": "should be able to search and update object using UPSERT operation",
                    "fullTitle": "Object update operations UPSERT should be able to search and update object using UPSERT operation",
                    "timedOut": false,
                    "duration": 2924,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classInfo.uid, {<br>  <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>    <span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"pune\"</span><br>  },<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"sachin\"</span>,<br>    <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">36</span>,<br>    <span class=\"hljs-string\">\"address\"</span>: {<br>      <span class=\"hljs-string\">\"state\"</span>: <span class=\"hljs-string\">\"DL\"</span>,<br>      <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"mumbai\"</span><br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, classInfo.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\tobject.name.should.be.equal(<span class=\"hljs-string\">'sachin'</span>)<br>\tobject.address.state.should.be.equal(<span class=\"hljs-string\">'DL'</span>)<br>\tobject.address.city.should.be.equal(<span class=\"hljs-string\">'mumbai'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "ddc59124-9551-46ed-8c10-7649324885ea",
                    "parentUUID": "2d9102fe-6ba4-440c-9d18-12ffc71b8af3",
                    "skipped": false
                  },
                  {
                    "title": "should be able to search and create new object if not found",
                    "fullTitle": "Object update operations UPSERT should be able to search and create new object if not found",
                    "timedOut": false,
                    "duration": 1853,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-comment\">// console.log(classInfo.uid)</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classInfo.uid, {<br>  <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"ooty\"</span><br>  },<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"hari\"</span>,<br>    <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">28</span>,<br>    <span class=\"hljs-string\">\"address\"</span>: {<br>      <span class=\"hljs-string\">\"state\"</span>: <span class=\"hljs-string\">\"kerala\"</span>,<br>      <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"ooty\"</span><br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.name.should.be.equal(<span class=\"hljs-string\">'hari'</span>)<br>\tobject.age.should.be.equal(<span class=\"hljs-number\">28</span>)<br>\tobject.address.state.should.be.equal(<span class=\"hljs-string\">'kerala'</span>)<br>\tobject.address.city.should.be.equal(<span class=\"hljs-string\">'ooty'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "a01ed847-5d9d-411c-81aa-cf9e4c7a83e1",
                    "parentUUID": "2d9102fe-6ba4-440c-9d18-12ffc71b8af3",
                    "skipped": false
                  },
                  {
                    "title": "should be able to update reference object using UPSERT operation",
                    "fullTitle": "Object update operations UPSERT should be able to update reference object using UPSERT operation",
                    "timedOut": false,
                    "duration": 3545,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-comment\">// console.log(classInfo.uid)</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classRef.uid, {<br>\t\t\t    <span class=\"hljs-string\">\"object\"</span>: {<br>\t\t        <span class=\"hljs-string\">\"owner\"</span>: [{<br>\t\t          <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>\t\t              <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"sing\"</span><br>\t\t          },<br>\t\t          <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">55</span>,<br>\t\t          <span class=\"hljs-string\">\"address.state\"</span>: <span class=\"hljs-string\">\"KT\"</span>,<br>\t\t          <span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"hampi\"</span><br>\t\t        }]<br>\t\t\t    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, classInfo.uid, {<br>\t <span class=\"hljs-string\">\"query\"</span>: {<br>\t    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"sing\"</span><br>\t  }<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "d6b4bfb5-4ac1-4172-9831-d8847185cbb5",
                    "parentUUID": "2d9102fe-6ba4-440c-9d18-12ffc71b8af3",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message for Multiple matching objects while UPSERT operation",
                    "fullTitle": "Object update operations UPSERT should provide an error message for Multiple matching objects while UPSERT operation",
                    "timedOut": false,
                    "duration": 1713,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-comment\">// console.log(classInfo.uid)</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classRef.uid, {<br>\t\t\t    <span class=\"hljs-string\">\"object\"</span>: {<br>\t\t        <span class=\"hljs-string\">\"owner\"</span>: [{<br>\t\t          <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>\t\t              <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"peter\"</span><br>\t\t          },<br>\t\t          <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">55</span>,<br>\t\t          <span class=\"hljs-string\">\"address.state\"</span>: <span class=\"hljs-string\">\"KT\"</span>,<br>\t\t          <span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"hampi\"</span><br>\t\t        }]<br>\t\t\t    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"owner.0.UPSERT\"</span>: [<br>\t      <span class=\"hljs-string\">\"Bummer. Upsert failed. Multiple matching objects were found.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "0804e689-745c-42ee-a16b-d4b846ce26c6",
                    "parentUUID": "2d9102fe-6ba4-440c-9d18-12ffc71b8af3",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 95000,
                "file": "/test.js",
                "uuid": "2d9102fe-6ba4-440c-9d18-12ffc71b8af3",
                "fullFile": "/home/ss/Documents/backend/test.js",
                "passes": [
                  {
                    "title": "should be able to search and update object using UPSERT operation",
                    "fullTitle": "Object update operations UPSERT should be able to search and update object using UPSERT operation",
                    "timedOut": false,
                    "duration": 2924,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classInfo.uid, {<br>  <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>    <span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"pune\"</span><br>  },<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"sachin\"</span>,<br>    <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">36</span>,<br>    <span class=\"hljs-string\">\"address\"</span>: {<br>      <span class=\"hljs-string\">\"state\"</span>: <span class=\"hljs-string\">\"DL\"</span>,<br>      <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"mumbai\"</span><br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, classInfo.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\tobject.name.should.be.equal(<span class=\"hljs-string\">'sachin'</span>)<br>\tobject.address.state.should.be.equal(<span class=\"hljs-string\">'DL'</span>)<br>\tobject.address.city.should.be.equal(<span class=\"hljs-string\">'mumbai'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "ddc59124-9551-46ed-8c10-7649324885ea",
                    "parentUUID": "2d9102fe-6ba4-440c-9d18-12ffc71b8af3",
                    "skipped": false
                  },
                  {
                    "title": "should be able to search and create new object if not found",
                    "fullTitle": "Object update operations UPSERT should be able to search and create new object if not found",
                    "timedOut": false,
                    "duration": 1853,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-comment\">// console.log(classInfo.uid)</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classInfo.uid, {<br>  <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"ooty\"</span><br>  },<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"hari\"</span>,<br>    <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">28</span>,<br>    <span class=\"hljs-string\">\"address\"</span>: {<br>      <span class=\"hljs-string\">\"state\"</span>: <span class=\"hljs-string\">\"kerala\"</span>,<br>      <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"ooty\"</span><br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.name.should.be.equal(<span class=\"hljs-string\">'hari'</span>)<br>\tobject.age.should.be.equal(<span class=\"hljs-number\">28</span>)<br>\tobject.address.state.should.be.equal(<span class=\"hljs-string\">'kerala'</span>)<br>\tobject.address.city.should.be.equal(<span class=\"hljs-string\">'ooty'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "a01ed847-5d9d-411c-81aa-cf9e4c7a83e1",
                    "parentUUID": "2d9102fe-6ba4-440c-9d18-12ffc71b8af3",
                    "skipped": false
                  },
                  {
                    "title": "should be able to update reference object using UPSERT operation",
                    "fullTitle": "Object update operations UPSERT should be able to update reference object using UPSERT operation",
                    "timedOut": false,
                    "duration": 3545,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-comment\">// console.log(classInfo.uid)</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classRef.uid, {<br>\t\t\t    <span class=\"hljs-string\">\"object\"</span>: {<br>\t\t        <span class=\"hljs-string\">\"owner\"</span>: [{<br>\t\t          <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>\t\t              <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"sing\"</span><br>\t\t          },<br>\t\t          <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">55</span>,<br>\t\t          <span class=\"hljs-string\">\"address.state\"</span>: <span class=\"hljs-string\">\"KT\"</span>,<br>\t\t          <span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"hampi\"</span><br>\t\t        }]<br>\t\t\t    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, classInfo.uid, {<br>\t <span class=\"hljs-string\">\"query\"</span>: {<br>\t    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"sing\"</span><br>\t  }<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "d6b4bfb5-4ac1-4172-9831-d8847185cbb5",
                    "parentUUID": "2d9102fe-6ba4-440c-9d18-12ffc71b8af3",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message for Multiple matching objects while UPSERT operation",
                    "fullTitle": "Object update operations UPSERT should provide an error message for Multiple matching objects while UPSERT operation",
                    "timedOut": false,
                    "duration": 1713,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-comment\">// console.log(classInfo.uid)</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classRef.uid, {<br>\t\t\t    <span class=\"hljs-string\">\"object\"</span>: {<br>\t\t        <span class=\"hljs-string\">\"owner\"</span>: [{<br>\t\t          <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>\t\t              <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"peter\"</span><br>\t\t          },<br>\t\t          <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">55</span>,<br>\t\t          <span class=\"hljs-string\">\"address.state\"</span>: <span class=\"hljs-string\">\"KT\"</span>,<br>\t\t          <span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"hampi\"</span><br>\t\t        }]<br>\t\t\t    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"owner.0.UPSERT\"</span>: [<br>\t      <span class=\"hljs-string\">\"Bummer. Upsert failed. Multiple matching objects were found.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "0804e689-745c-42ee-a16b-d4b846ce26c6",
                    "parentUUID": "2d9102fe-6ba4-440c-9d18-12ffc71b8af3",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 10035
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "3e7f7cc5-923b-4716-8e95-cba364bc64b7",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "Uniqueness",
            "suites": [
              {
                "title": "Localy unique",
                "suites": [],
                "tests": [
                  {
                    "title": "should be able to have only localy unique objects per system user",
                    "fullTitle": "Uniqueness Localy unique should be able to have only localy unique objects per system user",
                    "timedOut": false,
                    "duration": 3005,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">20000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test\"</span><br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "13a8793c-9fac-4ff3-a336-b07806b3b9e3",
                    "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
                    "skipped": false
                  },
                  {
                    "title": "should be able to have only localy unique objects per application user(tenant)",
                    "fullTitle": "Uniqueness Localy unique should be able to have only localy unique objects per application user(tenant)",
                    "timedOut": false,
                    "duration": 5119,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">45000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}, tenant1.uid))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}, tenant1.uid))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}, tenant1.uid))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "bf24ee79-691d-4a3a-86ad-0e76f9d9cada",
                    "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
                    "skipped": false
                  },
                  {
                    "title": "should be able to have only localy unique objects as per application user and system user",
                    "fullTitle": "Uniqueness Localy unique should be able to have only localy unique objects as per application user and system user",
                    "timedOut": false,
                    "duration": 8190,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">45000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, <span class=\"hljs-string\">''</span>, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, <span class=\"hljs-string\">''</span>, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser3.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}, tenant2.uid))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "6ebc52da-5108-412a-907e-4a25c9a069a6",
                    "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
                    "skipped": false
                  },
                  {
                    "title": "should be able to have only localy unique objects as per application user in tenant",
                    "fullTitle": "Uniqueness Localy unique should be able to have only localy unique objects as per application user in tenant",
                    "timedOut": false,
                    "duration": 5600,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">95000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser6.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "154cf9b1-f648-43e8-8518-9f6ffba909cf",
                    "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message for localy unique object present",
                    "fullTitle": "Uniqueness Localy unique should provide an error message for localy unique object present",
                    "timedOut": false,
                    "duration": 3041,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classLocal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "23c8fc4f-f371-4211-9d13-a33af3faed67",
                    "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 95000,
                "file": "/test.js",
                "uuid": "8c623193-c0f5-4ed6-867a-705f85518fe8",
                "fullFile": "/home/ss/Documents/backend/test.js",
                "passes": [
                  {
                    "title": "should be able to have only localy unique objects per system user",
                    "fullTitle": "Uniqueness Localy unique should be able to have only localy unique objects per system user",
                    "timedOut": false,
                    "duration": 3005,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">20000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test\"</span><br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "13a8793c-9fac-4ff3-a336-b07806b3b9e3",
                    "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
                    "skipped": false
                  },
                  {
                    "title": "should be able to have only localy unique objects per application user(tenant)",
                    "fullTitle": "Uniqueness Localy unique should be able to have only localy unique objects per application user(tenant)",
                    "timedOut": false,
                    "duration": 5119,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">45000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}, tenant1.uid))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}, tenant1.uid))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}, tenant1.uid))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "bf24ee79-691d-4a3a-86ad-0e76f9d9cada",
                    "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
                    "skipped": false
                  },
                  {
                    "title": "should be able to have only localy unique objects as per application user and system user",
                    "fullTitle": "Uniqueness Localy unique should be able to have only localy unique objects as per application user and system user",
                    "timedOut": false,
                    "duration": 8190,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">45000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, <span class=\"hljs-string\">''</span>, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, <span class=\"hljs-string\">''</span>, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser3.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}, tenant2.uid))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "6ebc52da-5108-412a-907e-4a25c9a069a6",
                    "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
                    "skipped": false
                  },
                  {
                    "title": "should be able to have only localy unique objects as per application user in tenant",
                    "fullTitle": "Uniqueness Localy unique should be able to have only localy unique objects as per application user in tenant",
                    "timedOut": false,
                    "duration": 5600,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">95000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser6.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "154cf9b1-f648-43e8-8518-9f6ffba909cf",
                    "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message for localy unique object present",
                    "fullTitle": "Uniqueness Localy unique should provide an error message for localy unique object present",
                    "timedOut": false,
                    "duration": 3041,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classLocal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "23c8fc4f-f371-4211-9d13-a33af3faed67",
                    "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 5,
                "totalPasses": 5,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 24955
              },
              {
                "title": "Global unique",
                "suites": [],
                "tests": [
                  {
                    "title": "should be able to have only globaly unique objects per user",
                    "fullTitle": "Uniqueness Global unique should be able to have only globaly unique objects per user",
                    "timedOut": false,
                    "duration": 6633,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">35000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, classGlobal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, <span class=\"hljs-string\">''</span>, app.api_key, classGlobal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: [<br>\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t]<br>\t\t}<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classGlobal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t\t}<br>\t}, tenant1.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classGlobal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t\t}<br>\t}, tenant1.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: [<br>\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t]<br>\t\t}<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "2ce45bd2-af68-4ad8-90d9-168e25bc78b6",
                    "parentUUID": "a7ab7c54-3e41-443e-8f80-cf39ca47dc03",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message for global object already present",
                    "fullTitle": "Uniqueness Global unique should provide an error message for global object already present",
                    "timedOut": false,
                    "duration": 1672,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classGlobal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"swapnil\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "e6c57b9e-0e54-44e8-bd12-2fb7de005c5c",
                    "parentUUID": "a7ab7c54-3e41-443e-8f80-cf39ca47dc03",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 95000,
                "file": "/test.js",
                "uuid": "a7ab7c54-3e41-443e-8f80-cf39ca47dc03",
                "fullFile": "/home/ss/Documents/backend/test.js",
                "passes": [
                  {
                    "title": "should be able to have only globaly unique objects per user",
                    "fullTitle": "Uniqueness Global unique should be able to have only globaly unique objects per user",
                    "timedOut": false,
                    "duration": 6633,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">35000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, classGlobal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, <span class=\"hljs-string\">''</span>, app.api_key, classGlobal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: [<br>\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t]<br>\t\t}<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classGlobal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t\t}<br>\t}, tenant1.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classGlobal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t\t}<br>\t}, tenant1.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: [<br>\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t]<br>\t\t}<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "2ce45bd2-af68-4ad8-90d9-168e25bc78b6",
                    "parentUUID": "a7ab7c54-3e41-443e-8f80-cf39ca47dc03",
                    "skipped": false
                  },
                  {
                    "title": "should provide an error message for global object already present",
                    "fullTitle": "Uniqueness Global unique should provide an error message for global object already present",
                    "timedOut": false,
                    "duration": 1672,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classGlobal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"swapnil\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                    "isRoot": false,
                    "uuid": "e6c57b9e-0e54-44e8-bd12-2fb7de005c5c",
                    "parentUUID": "a7ab7c54-3e41-443e-8f80-cf39ca47dc03",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 2,
                "totalPasses": 2,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 8305
              },
              {
                "title": "Change uniquness",
                "suites": [],
                "tests": [
                  {
                    "title": "should not be able to uniquness change local to global on class",
                    "fullTitle": "Uniqueness Change uniquness should not be able to uniquness change local to global on class",
                    "timedOut": false,
                    "duration": 3787,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"uniqueclass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"uniqueclass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}]<br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tclassUnique = res.body.class<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'global'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, classUnique.uid, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t}]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}))<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class updated successfully!'</span>)<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'global'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tdone()<br>\t\t\t\t\t})<br>\t\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t\t})",
                    "isRoot": false,
                    "uuid": "c21dc7e3-d7f3-4c21-89b1-3c12dca4fbfa",
                    "parentUUID": "4cdf162d-5411-4586-bdbe-30baabf179f2",
                    "skipped": false
                  },
                  {
                    "title": "should be able to change uniquness local to null on class",
                    "fullTitle": "Uniqueness Change uniquness should be able to change uniquness local to null on class",
                    "timedOut": false,
                    "duration": 3251,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"uniqueClass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"uniqueClass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}]<br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t\tclassUnique = res.body.class<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'local'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, classUnique.uid, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t}]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}))<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class updated successfully!'</span>)<br>\t\t\t\t\t\tclassUpdated = res.body.class<br>\t\t\t\t\t\tshould.not.exist(classUpdated.schema[<span class=\"hljs-number\">0</span>].unique)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tdone()<br>\t\t\t\t\t})<br>\t\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t\t})",
                    "isRoot": false,
                    "uuid": "e0882e2e-7fd6-43a7-8d4d-4aa7095c891d",
                    "parentUUID": "4cdf162d-5411-4586-bdbe-30baabf179f2",
                    "skipped": false
                  },
                  {
                    "title": "should be able to change uniquness global to null on class",
                    "fullTitle": "Uniqueness Change uniquness should be able to change uniquness global to null on class",
                    "timedOut": false,
                    "duration": 3450,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"uniqueClass2\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"uniqueClass2\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}]<br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t\tclassUnique = res.body.class<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'global'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, classUnique.uid, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t}]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}))<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class updated successfully!'</span>)<br>\t\t\t\t\t\tclassUpdated = res.body.class<br>\t\t\t\t\t\tshould.not.exist(classUpdated.schema[<span class=\"hljs-number\">0</span>].unique)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tdone()<br>\t\t\t\t\t})<br>\t\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t\t})",
                    "isRoot": false,
                    "uuid": "622c34fb-24e5-4570-a8cf-9f1d6db6481b",
                    "parentUUID": "4cdf162d-5411-4586-bdbe-30baabf179f2",
                    "skipped": false
                  },
                  {
                    "title": "should be able to update class with other unique fields and create objects",
                    "fullTitle": "Uniqueness Change uniquness should be able to update class with other unique fields and create objects",
                    "timedOut": false,
                    "duration": 10270,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">25000</span>)<br><span class=\"hljs-comment\">// grp Golbal fields local</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grpClass\"</span>,<br>\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"grpClass\"</span>,<br>\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t}<br>\t\t}, {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"group\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t},<br>\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t}<br>\t\t\t}, {<br>\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t}<br>\t\t\t}]<br>\t\t}]<br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tclassUpdate = res.body.class<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid123\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"1\"</span>, <span class=\"hljs-string\">\"2\"</span>, <span class=\"hljs-string\">\"3\"</span>]<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser6.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid123\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"3\"</span>, <span class=\"hljs-string\">\"2\"</span>, <span class=\"hljs-string\">\"1\"</span>]<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, <span class=\"hljs-string\">'built_io_application_user'</span>, {<br>\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"grpClass\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grpclass\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"inbuilt_class\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"group\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t},<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}]<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"age\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"age\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t}<br>\t\t\t\t}]<br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser6.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid456\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"4\"</span>, <span class=\"hljs-string\">\"5\"</span>, <span class=\"hljs-string\">\"6\"</span>]<br>\t\t\t\t},<br>\t\t\t\t<span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">10</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid456\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"4\"</span>, <span class=\"hljs-string\">\"5\"</span>, <span class=\"hljs-string\">\"6\"</span>]<br>\t\t\t\t},<br>\t\t\t\t<span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">10</span> <span class=\"hljs-comment\">//checking</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "aa9f8de0-b250-4d36-a82b-2d9de8f0ae13",
                    "parentUUID": "4cdf162d-5411-4586-bdbe-30baabf179f2",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 95000,
                "file": "/test.js",
                "uuid": "4cdf162d-5411-4586-bdbe-30baabf179f2",
                "fullFile": "/home/ss/Documents/backend/test.js",
                "passes": [
                  {
                    "title": "should not be able to uniquness change local to global on class",
                    "fullTitle": "Uniqueness Change uniquness should not be able to uniquness change local to global on class",
                    "timedOut": false,
                    "duration": 3787,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"uniqueclass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"uniqueclass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}]<br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tclassUnique = res.body.class<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'global'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, classUnique.uid, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t}]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}))<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class updated successfully!'</span>)<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'global'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tdone()<br>\t\t\t\t\t})<br>\t\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t\t})",
                    "isRoot": false,
                    "uuid": "c21dc7e3-d7f3-4c21-89b1-3c12dca4fbfa",
                    "parentUUID": "4cdf162d-5411-4586-bdbe-30baabf179f2",
                    "skipped": false
                  },
                  {
                    "title": "should be able to change uniquness local to null on class",
                    "fullTitle": "Uniqueness Change uniquness should be able to change uniquness local to null on class",
                    "timedOut": false,
                    "duration": 3251,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"uniqueClass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"uniqueClass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}]<br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t\tclassUnique = res.body.class<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'local'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, classUnique.uid, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t}]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}))<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class updated successfully!'</span>)<br>\t\t\t\t\t\tclassUpdated = res.body.class<br>\t\t\t\t\t\tshould.not.exist(classUpdated.schema[<span class=\"hljs-number\">0</span>].unique)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tdone()<br>\t\t\t\t\t})<br>\t\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t\t})",
                    "isRoot": false,
                    "uuid": "e0882e2e-7fd6-43a7-8d4d-4aa7095c891d",
                    "parentUUID": "4cdf162d-5411-4586-bdbe-30baabf179f2",
                    "skipped": false
                  },
                  {
                    "title": "should be able to change uniquness global to null on class",
                    "fullTitle": "Uniqueness Change uniquness should be able to change uniquness global to null on class",
                    "timedOut": false,
                    "duration": 3450,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"uniqueClass2\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"uniqueClass2\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}]<br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t\tclassUnique = res.body.class<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'global'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, classUnique.uid, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t}]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}))<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class updated successfully!'</span>)<br>\t\t\t\t\t\tclassUpdated = res.body.class<br>\t\t\t\t\t\tshould.not.exist(classUpdated.schema[<span class=\"hljs-number\">0</span>].unique)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tdone()<br>\t\t\t\t\t})<br>\t\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t\t})",
                    "isRoot": false,
                    "uuid": "622c34fb-24e5-4570-a8cf-9f1d6db6481b",
                    "parentUUID": "4cdf162d-5411-4586-bdbe-30baabf179f2",
                    "skipped": false
                  },
                  {
                    "title": "should be able to update class with other unique fields and create objects",
                    "fullTitle": "Uniqueness Change uniquness should be able to update class with other unique fields and create objects",
                    "timedOut": false,
                    "duration": 10270,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">25000</span>)<br><span class=\"hljs-comment\">// grp Golbal fields local</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grpClass\"</span>,<br>\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"grpClass\"</span>,<br>\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t}<br>\t\t}, {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"group\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t},<br>\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t}<br>\t\t\t}, {<br>\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t}<br>\t\t\t}]<br>\t\t}]<br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tclassUpdate = res.body.class<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid123\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"1\"</span>, <span class=\"hljs-string\">\"2\"</span>, <span class=\"hljs-string\">\"3\"</span>]<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser6.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid123\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"3\"</span>, <span class=\"hljs-string\">\"2\"</span>, <span class=\"hljs-string\">\"1\"</span>]<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, <span class=\"hljs-string\">'built_io_application_user'</span>, {<br>\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"grpClass\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grpclass\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"inbuilt_class\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"group\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t},<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}]<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"age\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"age\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t}<br>\t\t\t\t}]<br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser6.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid456\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"4\"</span>, <span class=\"hljs-string\">\"5\"</span>, <span class=\"hljs-string\">\"6\"</span>]<br>\t\t\t\t},<br>\t\t\t\t<span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">10</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid456\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"4\"</span>, <span class=\"hljs-string\">\"5\"</span>, <span class=\"hljs-string\">\"6\"</span>]<br>\t\t\t\t},<br>\t\t\t\t<span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">10</span> <span class=\"hljs-comment\">//checking</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                    "isRoot": false,
                    "uuid": "aa9f8de0-b250-4d36-a82b-2d9de8f0ae13",
                    "parentUUID": "4cdf162d-5411-4586-bdbe-30baabf179f2",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 4,
                "totalPasses": 4,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 20758
              },
              {
                "title": "Tenant uid in url",
                "suites": [],
                "tests": [
                  {
                    "title": "should be able to get tenant uid for upload object link present in created object",
                    "fullTitle": "Uniqueness Tenant uid in url should be able to get tenant uid for upload object link present in created object",
                    "timedOut": false,
                    "duration": 1698,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classFile.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"swapnil\"</span>,<br>\t\t<span class=\"hljs-string\">\"file\"</span>: uploadGet1.uid<br>\t}<br>}, tenant1.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobject = res.body.object<br>\texpect(object.file.url).to.contain(<span class=\"hljs-string\">'tenant_uid'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                    "isRoot": false,
                    "uuid": "6a724030-f294-4c1c-a561-b0adccb76d3d",
                    "parentUUID": "30759dc2-c09b-4f51-b8bf-51bdd0cce220",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 95000,
                "file": "/test.js",
                "uuid": "30759dc2-c09b-4f51-b8bf-51bdd0cce220",
                "fullFile": "/home/ss/Documents/backend/test.js",
                "passes": [
                  {
                    "title": "should be able to get tenant uid for upload object link present in created object",
                    "fullTitle": "Uniqueness Tenant uid in url should be able to get tenant uid for upload object link present in created object",
                    "timedOut": false,
                    "duration": 1698,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classFile.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"swapnil\"</span>,<br>\t\t<span class=\"hljs-string\">\"file\"</span>: uploadGet1.uid<br>\t}<br>}, tenant1.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobject = res.body.object<br>\texpect(object.file.url).to.contain(<span class=\"hljs-string\">'tenant_uid'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                    "isRoot": false,
                    "uuid": "6a724030-f294-4c1c-a561-b0adccb76d3d",
                    "parentUUID": "30759dc2-c09b-4f51-b8bf-51bdd0cce220",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1698
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "db511ab5-283d-477f-a655-1fde50263414",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "System class group fields",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get application user object and check group fields present",
                "fullTitle": "Objects --- System class group fields should be able to get application user object and check group fields present",
                "timedOut": false,
                "duration": 1639,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, sys_user1.authtoken, app.api_key))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobject = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'group1'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_field1'</span>, <span class=\"hljs-string\">'g1_field2'</span>, <span class=\"hljs-string\">'g1_group1'</span>, <span class=\"hljs-string\">'g1_group2'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_field1'</span>, <span class=\"hljs-string\">'g1_g1_group1'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1.g1_g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_g1_field1'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>, <span class=\"hljs-string\">'g1_g2_group1'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>].g1_g2_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>])<br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject.group1.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"g1_field1\"</span>: <span class=\"hljs-string\">\"group 1 field 1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_field2\"</span>: <span class=\"hljs-number\">100</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_field1\"</span>: <span class=\"hljs-string\">\"group 1 group 1 field1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g1_g1_field1\"</span>: <span class=\"hljs-string\">\"group 1 group 1 group 1 field1\"</span><br>\t\t\t\t}<br>\t\t\t},<br>\t\t\t<span class=\"hljs-string\">\"g1_group2\"</span>: [{<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-number\">100</span>,<br>\t\t\t\t\t<span class=\"hljs-number\">100</span><br>\t\t\t\t],<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"abcde\"</span><br>\t\t\t\t\t]<br>\t\t\t\t}<br>\t\t\t}]<br>\t\t})<br>\t\tobject.username.should.be.equal(userObj.username)<br>\t\tobject.email.should.be.equal(userObj.email)<br>\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\tobject.uid.should.be.equal(userObj.uid)<br>\t\tobject.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject.ACL.should.be.deep.equal({})<br>\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\tobject.tags.should.be.deep.equal([])<br>\t\tshould.not.exist(object.__loc)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "947d32c1-31be-42c0-89b9-9b363e2e1867",
                "parentUUID": "63dd1488-8e9a-4418-883d-aca7222570f9",
                "skipped": false
              },
              {
                "title": "should update application user objects group fields present ",
                "fullTitle": "Objects --- System class group fields should update application user objects group fields present ",
                "timedOut": false,
                "duration": 1497,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, sys_user1.authtoken, app.api_key, userObj.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"group1\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 field 1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_field2\"</span>: <span class=\"hljs-string\">\"900\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 field1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 group 1 field1\"</span><br>\t\t\t\t}<br>\t\t\t},<br>\t\t\t<span class=\"hljs-string\">\"g1_group2\"</span>: [{<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-string\">\"900\"</span>, <span class=\"hljs-string\">\"900\"</span>, <span class=\"hljs-string\">\"900\"</span>],<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-string\">\"zxcvb\"</span>]<br>\t\t\t\t}<br>\t\t\t}]<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.object<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t<span class=\"hljs-comment\">// key assertion </span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'group1'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_field1'</span>, <span class=\"hljs-string\">'g1_field2'</span>, <span class=\"hljs-string\">'g1_group2'</span>, <span class=\"hljs-string\">'g1_group1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_field1'</span>, <span class=\"hljs-string\">'g1_g1_group1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1.g1_g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_g1_field1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>, <span class=\"hljs-string\">'g1_g2_group1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>].g1_g2_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>])<br>\t<span class=\"hljs-comment\">// value assertion</span><br>\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\tobject.group1.should.be.deep.equal({<br>\t\t<span class=\"hljs-string\">\"g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 field 1\"</span>,<br>\t\t<span class=\"hljs-string\">\"g1_field2\"</span>: <span class=\"hljs-number\">900</span>,<br>\t\t<span class=\"hljs-string\">\"g1_group1\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 field1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_g1_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 group 1 field1\"</span><br>\t\t\t}<br>\t\t},<br>\t\t<span class=\"hljs-string\">\"g1_group2\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-number\">900</span>, <span class=\"hljs-number\">900</span>, <span class=\"hljs-number\">900</span>],<br>\t\t\t<span class=\"hljs-string\">\"g1_g2_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-string\">\"zxcvb\"</span>]<br>\t\t\t}<br>\t\t}]<br>\t})<br>\tobject.username.should.be.equal(userObj.username)<br>\tobject.email.should.be.equal(userObj.email)<br>\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\tobject.created_by.should.be.equal(object.updated_by)<br>\tobject.created_at.should.be.not.equal(object.updated_at)<br>\tobject.uid.should.be.equal(userObj.uid)<br>\tobject.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\tobject.ACL.should.be.deep.equal({})<br>\tobject._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\tobject.tags.should.be.deep.equal([])<br>\tshould.not.exist(object.__loc)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "4c2dffed-95cf-4590-bbc8-056b20da2dce",
                "parentUUID": "63dd1488-8e9a-4418-883d-aca7222570f9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "63dd1488-8e9a-4418-883d-aca7222570f9",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get application user object and check group fields present",
                "fullTitle": "Objects --- System class group fields should be able to get application user object and check group fields present",
                "timedOut": false,
                "duration": 1639,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, sys_user1.authtoken, app.api_key))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobject = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'group1'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_field1'</span>, <span class=\"hljs-string\">'g1_field2'</span>, <span class=\"hljs-string\">'g1_group1'</span>, <span class=\"hljs-string\">'g1_group2'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_field1'</span>, <span class=\"hljs-string\">'g1_g1_group1'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1.g1_g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_g1_field1'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>, <span class=\"hljs-string\">'g1_g2_group1'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>].g1_g2_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>])<br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject.group1.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"g1_field1\"</span>: <span class=\"hljs-string\">\"group 1 field 1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_field2\"</span>: <span class=\"hljs-number\">100</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_field1\"</span>: <span class=\"hljs-string\">\"group 1 group 1 field1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g1_g1_field1\"</span>: <span class=\"hljs-string\">\"group 1 group 1 group 1 field1\"</span><br>\t\t\t\t}<br>\t\t\t},<br>\t\t\t<span class=\"hljs-string\">\"g1_group2\"</span>: [{<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-number\">100</span>,<br>\t\t\t\t\t<span class=\"hljs-number\">100</span><br>\t\t\t\t],<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"abcde\"</span><br>\t\t\t\t\t]<br>\t\t\t\t}<br>\t\t\t}]<br>\t\t})<br>\t\tobject.username.should.be.equal(userObj.username)<br>\t\tobject.email.should.be.equal(userObj.email)<br>\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\tobject.uid.should.be.equal(userObj.uid)<br>\t\tobject.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject.ACL.should.be.deep.equal({})<br>\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\tobject.tags.should.be.deep.equal([])<br>\t\tshould.not.exist(object.__loc)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
                "isRoot": false,
                "uuid": "947d32c1-31be-42c0-89b9-9b363e2e1867",
                "parentUUID": "63dd1488-8e9a-4418-883d-aca7222570f9",
                "skipped": false
              },
              {
                "title": "should update application user objects group fields present ",
                "fullTitle": "Objects --- System class group fields should update application user objects group fields present ",
                "timedOut": false,
                "duration": 1497,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, sys_user1.authtoken, app.api_key, userObj.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"group1\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 field 1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_field2\"</span>: <span class=\"hljs-string\">\"900\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 field1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 group 1 field1\"</span><br>\t\t\t\t}<br>\t\t\t},<br>\t\t\t<span class=\"hljs-string\">\"g1_group2\"</span>: [{<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-string\">\"900\"</span>, <span class=\"hljs-string\">\"900\"</span>, <span class=\"hljs-string\">\"900\"</span>],<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-string\">\"zxcvb\"</span>]<br>\t\t\t\t}<br>\t\t\t}]<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.object<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t<span class=\"hljs-comment\">// key assertion </span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'group1'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_field1'</span>, <span class=\"hljs-string\">'g1_field2'</span>, <span class=\"hljs-string\">'g1_group2'</span>, <span class=\"hljs-string\">'g1_group1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_field1'</span>, <span class=\"hljs-string\">'g1_g1_group1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1.g1_g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_g1_field1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>, <span class=\"hljs-string\">'g1_g2_group1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>].g1_g2_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>])<br>\t<span class=\"hljs-comment\">// value assertion</span><br>\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\tobject.group1.should.be.deep.equal({<br>\t\t<span class=\"hljs-string\">\"g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 field 1\"</span>,<br>\t\t<span class=\"hljs-string\">\"g1_field2\"</span>: <span class=\"hljs-number\">900</span>,<br>\t\t<span class=\"hljs-string\">\"g1_group1\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 field1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_g1_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 group 1 field1\"</span><br>\t\t\t}<br>\t\t},<br>\t\t<span class=\"hljs-string\">\"g1_group2\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-number\">900</span>, <span class=\"hljs-number\">900</span>, <span class=\"hljs-number\">900</span>],<br>\t\t\t<span class=\"hljs-string\">\"g1_g2_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-string\">\"zxcvb\"</span>]<br>\t\t\t}<br>\t\t}]<br>\t})<br>\tobject.username.should.be.equal(userObj.username)<br>\tobject.email.should.be.equal(userObj.email)<br>\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\tobject.created_by.should.be.equal(object.updated_by)<br>\tobject.created_at.should.be.not.equal(object.updated_at)<br>\tobject.uid.should.be.equal(userObj.uid)<br>\tobject.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\tobject.ACL.should.be.deep.equal({})<br>\tobject._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\tobject.tags.should.be.deep.equal([])<br>\tshould.not.exist(object.__loc)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
                "isRoot": false,
                "uuid": "4c2dffed-95cf-4590-bbc8-056b20da2dce",
                "parentUUID": "63dd1488-8e9a-4418-883d-aca7222570f9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3136
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "579f6a13-fa0b-44ba-b685-7638f822d46e",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "System roles --- ",
        "suites": [
          {
            "title": "Create an system roles",
            "suites": [],
            "tests": [
              {
                "title": "should be able to create a system roles for an app",
                "fullTitle": "System roles ---  Create an system roles should be able to create a system roles for an app",
                "timedOut": false,
                "duration": 1640,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> role = res.body.system_role<br>\t\t\t<span class=\"hljs-comment\">//console.log(res.body)</span><br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(role).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(role.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was created successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\trole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\trole.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\trole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\trole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\trole.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\trole.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\trole.application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\trole.name.should.be.equal(<span class=\"hljs-string\">'role_test'</span>)<br>\t\trole.owner.should.be.equal(email)<br>\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t<span class=\"hljs-comment\">//role.application.created_at.should.be.equal(role.application.updated_at)</span><br>\t\trole.application.uid.should.be.equal(appuid)<br>\t\trole.application.name.should.be.equal(appname)<br>\t\trole.application.api_key.should.be.equal(api_key)<br>\t\trole.application.owner_uid.should.be.equal(userUID)<br>\t\trole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\trole.application.master_key.should.be.equal(master_key)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "1adc0757-02bc-4309-a732-7524753c585a",
                "parentUUID": "e3d3c282-8764-41d7-8df7-4f3a217b7425",
                "skipped": false
              },
              {
                "title": "should provide error message for mandetory field",
                "fullTitle": "System roles ---  Create an system roles should provide error message for mandetory field",
                "timedOut": false,
                "duration": 1482,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. System creation failed. Please try again.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">157</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t\t    ]<br>\t\t  }<br>\t\t})\t<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "4fb77818-aebb-4aa9-999e-d3828554174a",
                "parentUUID": "e3d3c282-8764-41d7-8df7-4f3a217b7425",
                "skipped": false
              },
              {
                "title": "should provide error message for unique name",
                "fullTitle": "System roles ---  Create an system roles should provide error message for unique name",
                "timedOut": false,
                "duration": 3107,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tfactories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t\t})<br>\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\tres.body.should.be.deep.equal({<br>\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. System creation failed. Please try again.\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">157</span>,<br>\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t    ]<br>\t\t\t  }<br>\t\t\t})<br>\t\t\tdone(err)<br>\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "4d2f6e1f-4355-4e9a-9500-a6fc7b90e724",
                "parentUUID": "e3d3c282-8764-41d7-8df7-4f3a217b7425",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "e3d3c282-8764-41d7-8df7-4f3a217b7425",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to create a system roles for an app",
                "fullTitle": "System roles ---  Create an system roles should be able to create a system roles for an app",
                "timedOut": false,
                "duration": 1640,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> role = res.body.system_role<br>\t\t\t<span class=\"hljs-comment\">//console.log(res.body)</span><br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(role).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(role.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was created successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\trole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\trole.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\trole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\trole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\trole.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\trole.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\trole.application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\trole.name.should.be.equal(<span class=\"hljs-string\">'role_test'</span>)<br>\t\trole.owner.should.be.equal(email)<br>\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t<span class=\"hljs-comment\">//role.application.created_at.should.be.equal(role.application.updated_at)</span><br>\t\trole.application.uid.should.be.equal(appuid)<br>\t\trole.application.name.should.be.equal(appname)<br>\t\trole.application.api_key.should.be.equal(api_key)<br>\t\trole.application.owner_uid.should.be.equal(userUID)<br>\t\trole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\trole.application.master_key.should.be.equal(master_key)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "1adc0757-02bc-4309-a732-7524753c585a",
                "parentUUID": "e3d3c282-8764-41d7-8df7-4f3a217b7425",
                "skipped": false
              },
              {
                "title": "should provide error message for mandetory field",
                "fullTitle": "System roles ---  Create an system roles should provide error message for mandetory field",
                "timedOut": false,
                "duration": 1482,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. System creation failed. Please try again.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">157</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t\t    ]<br>\t\t  }<br>\t\t})\t<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "4fb77818-aebb-4aa9-999e-d3828554174a",
                "parentUUID": "e3d3c282-8764-41d7-8df7-4f3a217b7425",
                "skipped": false
              },
              {
                "title": "should provide error message for unique name",
                "fullTitle": "System roles ---  Create an system roles should provide error message for unique name",
                "timedOut": false,
                "duration": 3107,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tfactories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t\t})<br>\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\tres.body.should.be.deep.equal({<br>\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. System creation failed. Please try again.\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">157</span>,<br>\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t    ]<br>\t\t\t  }<br>\t\t\t})<br>\t\t\tdone(err)<br>\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "4d2f6e1f-4355-4e9a-9500-a6fc7b90e724",
                "parentUUID": "e3d3c282-8764-41d7-8df7-4f3a217b7425",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6229
          },
          {
            "title": "Get system_roles",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all system roles created for an app",
                "fullTitle": "System roles ---  Get system_roles should be able to get all system roles created for an app",
                "timedOut": false,
                "duration": 5896,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"dev manager\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> role1 = res.body.system_role.name<br>\t\tfactories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"content manager\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> role2 = res1.body.system_role.name<br>\t\t\t\tfactories.create(<span class=\"hljs-string\">'Get_system_roles'</span>, authtoken, api_key)<br>\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res3</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> allroles = res3.body.system_roles<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(allroles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(allroles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(allroles[<span class=\"hljs-number\">0</span>].application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br><br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'role_test'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].owner.should.be.equal(email)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//allroles[0].application.created_at.should.be.equal(allroles[0].application.updated_at)</span><br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.uid.should.be.equal(appuid)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.name.should.be.equal(appname)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.api_key.should.be.equal(api_key)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.owner_uid.should.be.equal(userUID)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.master_key.should.be.equal(master_key)<br>\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t})<br>\t\t\t})<br><br>\t})",
                "isRoot": false,
                "uuid": "ab660d1f-589d-4727-9dd7-f39223c08eed",
                "parentUUID": "f2594566-5955-4f73-8337-906277feda00",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "f2594566-5955-4f73-8337-906277feda00",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get all system roles created for an app",
                "fullTitle": "System roles ---  Get system_roles should be able to get all system roles created for an app",
                "timedOut": false,
                "duration": 5896,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"dev manager\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> role1 = res.body.system_role.name<br>\t\tfactories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"content manager\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> role2 = res1.body.system_role.name<br>\t\t\t\tfactories.create(<span class=\"hljs-string\">'Get_system_roles'</span>, authtoken, api_key)<br>\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res3</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> allroles = res3.body.system_roles<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(allroles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(allroles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(allroles[<span class=\"hljs-number\">0</span>].application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br><br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'role_test'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].owner.should.be.equal(email)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//allroles[0].application.created_at.should.be.equal(allroles[0].application.updated_at)</span><br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.uid.should.be.equal(appuid)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.name.should.be.equal(appname)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.api_key.should.be.equal(api_key)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.owner_uid.should.be.equal(userUID)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.master_key.should.be.equal(master_key)<br>\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t})<br>\t\t\t})<br><br>\t})",
                "isRoot": false,
                "uuid": "ab660d1f-589d-4727-9dd7-f39223c08eed",
                "parentUUID": "f2594566-5955-4f73-8337-906277feda00",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5896
          },
          {
            "title": "Get single system role",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get single system_role created for an app",
                "fullTitle": "System roles ---  Get single system role should be able to get single system_role created for an app",
                "timedOut": false,
                "duration": 3384,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res.body.system_role.uid<br><br>\t\tfactories.create(<span class=\"hljs-string\">'Get_single_role'</span>, authtoken, api_key, role_uid)<br>\t\t\t<span class=\"hljs-comment\">// .expect(200)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> roleobject = res1.body.system_role<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roleobject).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roleobject).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roleobject.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\troleobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troleobject.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troleobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troleobject.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troleobject.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\troleobject.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troleobject.application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\troleobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\troleobject.owner.should.be.equal(email)<br>\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t<span class=\"hljs-comment\">//roleobject.application.created_at.should.be.equal(roleobject.application.updated_at)</span><br>\t\t\t\troleobject.application.uid.should.be.equal(appuid)<br>\t\t\t\troleobject.application.name.should.be.equal(appname)<br>\t\t\t\troleobject.application.api_key.should.be.equal(api_key)<br>\t\t\t\troleobject.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\troleobject.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\troleobject.application.master_key.should.be.equal(master_key)<br>\t\t\t\tdone(err)<br>\t\t\t});<br>\t});",
                "isRoot": false,
                "uuid": "58ac0b03-98ee-458c-8641-5aba41b60c7c",
                "parentUUID": "1124a109-d181-4d9c-82a4-083e00d55ec0",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid uid for get operation",
                "fullTitle": "System roles ---  Get single system role should provide an error message for invalid uid for get operation",
                "timedOut": false,
                "duration": 1645,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_single_role'</span>, authtoken, api_key, <span class=\"hljs-string\">'asdardf'</span>)<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The system role was not found. Please try again.\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">158</span>,<br>\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t})<br>\t\tdone(err)<br>\t});",
                "isRoot": false,
                "uuid": "ccee295b-39e5-4d46-b867-43504da1d729",
                "parentUUID": "1124a109-d181-4d9c-82a4-083e00d55ec0",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid authtoken",
                "fullTitle": "System roles ---  Get single system role should provide an error message for invalid authtoken",
                "timedOut": false,
                "duration": 1661,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_single_role'</span>, <span class=\"hljs-string\">'blt69cf33d54698aaeca4fd5c9a'</span>, api_key, role_uid)<br>\t<span class=\"hljs-comment\">// .expect(200)</span><br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\tdone(err)<br>\t});",
                "isRoot": false,
                "uuid": "d1c90a7f-de89-44d2-b51c-e85e07552ced",
                "parentUUID": "1124a109-d181-4d9c-82a4-083e00d55ec0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "1124a109-d181-4d9c-82a4-083e00d55ec0",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get single system_role created for an app",
                "fullTitle": "System roles ---  Get single system role should be able to get single system_role created for an app",
                "timedOut": false,
                "duration": 3384,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res.body.system_role.uid<br><br>\t\tfactories.create(<span class=\"hljs-string\">'Get_single_role'</span>, authtoken, api_key, role_uid)<br>\t\t\t<span class=\"hljs-comment\">// .expect(200)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> roleobject = res1.body.system_role<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roleobject).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roleobject).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roleobject.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\troleobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troleobject.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troleobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troleobject.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troleobject.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\troleobject.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troleobject.application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\troleobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\troleobject.owner.should.be.equal(email)<br>\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t<span class=\"hljs-comment\">//roleobject.application.created_at.should.be.equal(roleobject.application.updated_at)</span><br>\t\t\t\troleobject.application.uid.should.be.equal(appuid)<br>\t\t\t\troleobject.application.name.should.be.equal(appname)<br>\t\t\t\troleobject.application.api_key.should.be.equal(api_key)<br>\t\t\t\troleobject.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\troleobject.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\troleobject.application.master_key.should.be.equal(master_key)<br>\t\t\t\tdone(err)<br>\t\t\t});<br>\t});",
                "isRoot": false,
                "uuid": "58ac0b03-98ee-458c-8641-5aba41b60c7c",
                "parentUUID": "1124a109-d181-4d9c-82a4-083e00d55ec0",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid uid for get operation",
                "fullTitle": "System roles ---  Get single system role should provide an error message for invalid uid for get operation",
                "timedOut": false,
                "duration": 1645,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_single_role'</span>, authtoken, api_key, <span class=\"hljs-string\">'asdardf'</span>)<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The system role was not found. Please try again.\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">158</span>,<br>\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t})<br>\t\tdone(err)<br>\t});",
                "isRoot": false,
                "uuid": "ccee295b-39e5-4d46-b867-43504da1d729",
                "parentUUID": "1124a109-d181-4d9c-82a4-083e00d55ec0",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid authtoken",
                "fullTitle": "System roles ---  Get single system role should provide an error message for invalid authtoken",
                "timedOut": false,
                "duration": 1661,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_single_role'</span>, <span class=\"hljs-string\">'blt69cf33d54698aaeca4fd5c9a'</span>, api_key, role_uid)<br>\t<span class=\"hljs-comment\">// .expect(200)</span><br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\tdone(err)<br>\t});",
                "isRoot": false,
                "uuid": "d1c90a7f-de89-44d2-b51c-e85e07552ced",
                "parentUUID": "1124a109-d181-4d9c-82a4-083e00d55ec0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6690
          },
          {
            "title": "Update system role",
            "suites": [],
            "tests": [
              {
                "title": "should be able to update system role created for an app",
                "fullTitle": "System roles ---  Update system role should be able to update system role created for an app",
                "timedOut": false,
                "duration": 3581,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"managers\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res1.body.system_role.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Update_system_role'</span>, authtoken, api_key, role_uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> updatedRole = res2.body.system_role<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was updated successfully.'</span>)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\tupdatedRole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\tupdatedRole.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tupdatedRole.name.should.be.equal(<span class=\"hljs-string\">'developers'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.equal(email)<br>\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t<span class=\"hljs-comment\">//updatedRole.application.created_at.should.be.equal(updatedRole.application.updated_at)</span><br>\t\t\t\tupdatedRole.application.uid.should.be.equal(appuid)<br>\t\t\t\tupdatedRole.application.name.should.be.equal(appname)<br>\t\t\t\tupdatedRole.application.api_key.should.be.equal(api_key)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\tupdatedRole.application.master_key.should.be.equal(master_key)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "5efabeec-ead7-4034-93c1-14aa5fd47818",
                "parentUUID": "b194063b-efba-4746-a9dd-77a9411ad42b",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid uid whlie updating system roles",
                "fullTitle": "System roles ---  Update system role should provide an error message for invalid uid whlie updating system roles",
                "timedOut": false,
                "duration": 1469,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_system_role'</span>, authtoken, api_key, <span class=\"hljs-string\">'ddfbkdfkjf'</span>, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The system role was not found. Please try again.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">158</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\tdone(err)<br>\t});",
                "isRoot": false,
                "uuid": "a6e1b961-dc36-477c-bc03-62c69c89f180",
                "parentUUID": "b194063b-efba-4746-a9dd-77a9411ad42b",
                "skipped": false
              },
              {
                "title": "should be able to update role as collaborator when not restricted",
                "fullTitle": "System roles ---  Update system role should be able to update role as collaborator when not restricted",
                "timedOut": false,
                "duration": 8027,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"QA_manager\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res1.body.system_role.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Update_system_role'</span>, sys_user2.authtoken, api_key, role_uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Tester\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> updatedRole = res2.body.system_role<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was updated successfully.'</span>)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\tupdatedRole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\tupdatedRole.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// updatedRole.application.master_key.should.be.a('string')</span><br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tupdatedRole.name.should.be.equal(<span class=\"hljs-string\">'Tester'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.equal(email)<br>\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t<span class=\"hljs-comment\">//updatedRole.application.created_at.should.be.equal(updatedRole.application.updated_at)</span><br>\t\t\t\tupdatedRole.application.uid.should.be.equal(appuid)<br>\t\t\t\tupdatedRole.application.name.should.be.equal(appname)<br>\t\t\t\tupdatedRole.application.api_key.should.be.equal(api_key)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\t<span class=\"hljs-comment\">// updatedRole.application.master_key.should.be.equal(master_key)</span><br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "2aa40d88-d322-49ab-b7ca-0db0b9172d77",
                "parentUUID": "b194063b-efba-4746-a9dd-77a9411ad42b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "b194063b-efba-4746-a9dd-77a9411ad42b",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to update system role created for an app",
                "fullTitle": "System roles ---  Update system role should be able to update system role created for an app",
                "timedOut": false,
                "duration": 3581,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"managers\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res1.body.system_role.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Update_system_role'</span>, authtoken, api_key, role_uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> updatedRole = res2.body.system_role<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was updated successfully.'</span>)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\tupdatedRole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\tupdatedRole.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tupdatedRole.name.should.be.equal(<span class=\"hljs-string\">'developers'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.equal(email)<br>\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t<span class=\"hljs-comment\">//updatedRole.application.created_at.should.be.equal(updatedRole.application.updated_at)</span><br>\t\t\t\tupdatedRole.application.uid.should.be.equal(appuid)<br>\t\t\t\tupdatedRole.application.name.should.be.equal(appname)<br>\t\t\t\tupdatedRole.application.api_key.should.be.equal(api_key)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\tupdatedRole.application.master_key.should.be.equal(master_key)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "5efabeec-ead7-4034-93c1-14aa5fd47818",
                "parentUUID": "b194063b-efba-4746-a9dd-77a9411ad42b",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid uid whlie updating system roles",
                "fullTitle": "System roles ---  Update system role should provide an error message for invalid uid whlie updating system roles",
                "timedOut": false,
                "duration": 1469,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Update_system_role'</span>, authtoken, api_key, <span class=\"hljs-string\">'ddfbkdfkjf'</span>, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The system role was not found. Please try again.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">158</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\tdone(err)<br>\t});",
                "isRoot": false,
                "uuid": "a6e1b961-dc36-477c-bc03-62c69c89f180",
                "parentUUID": "b194063b-efba-4746-a9dd-77a9411ad42b",
                "skipped": false
              },
              {
                "title": "should be able to update role as collaborator when not restricted",
                "fullTitle": "System roles ---  Update system role should be able to update role as collaborator when not restricted",
                "timedOut": false,
                "duration": 8027,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"QA_manager\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res1.body.system_role.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Update_system_role'</span>, sys_user2.authtoken, api_key, role_uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Tester\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> updatedRole = res2.body.system_role<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was updated successfully.'</span>)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\tupdatedRole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\tupdatedRole.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// updatedRole.application.master_key.should.be.a('string')</span><br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tupdatedRole.name.should.be.equal(<span class=\"hljs-string\">'Tester'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.equal(email)<br>\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t<span class=\"hljs-comment\">//updatedRole.application.created_at.should.be.equal(updatedRole.application.updated_at)</span><br>\t\t\t\tupdatedRole.application.uid.should.be.equal(appuid)<br>\t\t\t\tupdatedRole.application.name.should.be.equal(appname)<br>\t\t\t\tupdatedRole.application.api_key.should.be.equal(api_key)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\t<span class=\"hljs-comment\">// updatedRole.application.master_key.should.be.equal(master_key)</span><br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "2aa40d88-d322-49ab-b7ca-0db0b9172d77",
                "parentUUID": "b194063b-efba-4746-a9dd-77a9411ad42b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 13077
          },
          {
            "title": "Delete system role",
            "suites": [],
            "tests": [
              {
                "title": "should be able to delete a system role created for an app",
                "fullTitle": "System roles ---  Delete system role should be able to delete a system role created for an app",
                "timedOut": false,
                "duration": 2913,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"clients\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res1.body.system_role.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'delete_system_role'</span>, authtoken, api_key, role_uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-comment\">//var updatedRole = res2.body.system_role</span><br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was deleted successfully.'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "74e24265-e96b-4dd9-8aa7-81f1e3e5a2ed",
                "parentUUID": "2623b90e-12de-4cfd-a58a-1a7c07feb203",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid uid for delete operation",
                "fullTitle": "System roles ---  Delete system role should provide an error message for invalid uid for delete operation",
                "timedOut": false,
                "duration": 2107,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_system_role'</span>, authtoken, api_key, <span class=\"hljs-string\">'ddfbkdfkjf'</span>, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The system role was not found. Please try again.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">158</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\tdone(err)<br>\t});",
                "isRoot": false,
                "uuid": "bfcdbfb5-3f27-4dda-a064-5dc488049ea8",
                "parentUUID": "2623b90e-12de-4cfd-a58a-1a7c07feb203",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "2623b90e-12de-4cfd-a58a-1a7c07feb203",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to delete a system role created for an app",
                "fullTitle": "System roles ---  Delete system role should be able to delete a system role created for an app",
                "timedOut": false,
                "duration": 2913,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"clients\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res1.body.system_role.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'delete_system_role'</span>, authtoken, api_key, role_uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-comment\">//var updatedRole = res2.body.system_role</span><br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was deleted successfully.'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "74e24265-e96b-4dd9-8aa7-81f1e3e5a2ed",
                "parentUUID": "2623b90e-12de-4cfd-a58a-1a7c07feb203",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid uid for delete operation",
                "fullTitle": "System roles ---  Delete system role should provide an error message for invalid uid for delete operation",
                "timedOut": false,
                "duration": 2107,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_system_role'</span>, authtoken, api_key, <span class=\"hljs-string\">'ddfbkdfkjf'</span>, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The system role was not found. Please try again.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">158</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\tdone(err)<br>\t});",
                "isRoot": false,
                "uuid": "bfcdbfb5-3f27-4dda-a064-5dc488049ea8",
                "parentUUID": "2623b90e-12de-4cfd-a58a-1a7c07feb203",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5020
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "da81814d-067c-41d0-aaba-b25e93e76d5a",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Tenants ---",
        "suites": [
          {
            "title": "Get single tenant",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get single tenant created for an app",
                "fullTitle": "Tenants --- Get single tenant should be able to get single tenant created for an app",
                "timedOut": false,
                "duration": 2994,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_single_tenant'</span>, user.authtoken, app.api_key, myTenant.uid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> tenant = res1.body.tenant<br>\t\t\t\t\t<span class=\"hljs-comment\">// var id     = res1.body.tenant.uid</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenant).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.equal(res1.body.tenant.updated_at)<br>\t\t\t\t\ttenant.uid.should.be.equal(myTenant.uid)<br>\t\t\t\t\ttenant.name.should.be.equal(myTenant.name)<br>\t\t\t\t\ttenant.description.should.be.equal(<span class=\"hljs-string\">'supertest tenant is created by supertest'</span>)<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, tenant.uid)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "71c122ea-d479-4ed2-a865-0eaa56b485e8",
                "parentUUID": "76fd7eb0-320d-4195-9d9d-d08c1ecc3293",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid tenant uid",
                "fullTitle": "Tenants --- Get single tenant should provide an error message for invalid tenant uid",
                "timedOut": false,
                "duration": 1457,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_single_tenant'</span>, user.authtoken, app.api_key, <span class=\"hljs-string\">\"asd\"</span>)<br>\t\t\t\t.expect(<span class=\"hljs-number\">422</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Tenant was not found. Please try again.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">166</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})\t\t<br>\t\t\t\t\t<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "448cb4e7-3376-4ecd-8d8b-f2e9f9bd10a5",
                "parentUUID": "76fd7eb0-320d-4195-9d9d-d08c1ecc3293",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "76fd7eb0-320d-4195-9d9d-d08c1ecc3293",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get single tenant created for an app",
                "fullTitle": "Tenants --- Get single tenant should be able to get single tenant created for an app",
                "timedOut": false,
                "duration": 2994,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_single_tenant'</span>, user.authtoken, app.api_key, myTenant.uid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> tenant = res1.body.tenant<br>\t\t\t\t\t<span class=\"hljs-comment\">// var id     = res1.body.tenant.uid</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenant).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.equal(res1.body.tenant.updated_at)<br>\t\t\t\t\ttenant.uid.should.be.equal(myTenant.uid)<br>\t\t\t\t\ttenant.name.should.be.equal(myTenant.name)<br>\t\t\t\t\ttenant.description.should.be.equal(<span class=\"hljs-string\">'supertest tenant is created by supertest'</span>)<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, tenant.uid)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "71c122ea-d479-4ed2-a865-0eaa56b485e8",
                "parentUUID": "76fd7eb0-320d-4195-9d9d-d08c1ecc3293",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid tenant uid",
                "fullTitle": "Tenants --- Get single tenant should provide an error message for invalid tenant uid",
                "timedOut": false,
                "duration": 1457,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_single_tenant'</span>, user.authtoken, app.api_key, <span class=\"hljs-string\">\"asd\"</span>)<br>\t\t\t\t.expect(<span class=\"hljs-number\">422</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Tenant was not found. Please try again.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">166</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})\t\t<br>\t\t\t\t\t<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "448cb4e7-3376-4ecd-8d8b-f2e9f9bd10a5",
                "parentUUID": "76fd7eb0-320d-4195-9d9d-d08c1ecc3293",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4451
          },
          {
            "title": "Create tenants",
            "suites": [],
            "tests": [
              {
                "title": "should be able to create tenants for an app",
                "fullTitle": "Tenants --- Create tenants should be able to create tenants for an app",
                "timedOut": false,
                "duration": 2976,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tenantId   = <span class=\"hljs-string\">\"mumbai\"</span>;<br>\t\t\t<span class=\"hljs-keyword\">var</span> tenantName = <span class=\"hljs-string\">\"mumbai\"</span>;<br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: tenantId,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: tenantName,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"mumbai tenant\"</span><br>\t\t\t\t\t}<br>\t\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The tenant was created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> tenant = res.body.tenant<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id     = res.body.tenant.uid<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenant).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.equal(res.body.tenant.updated_at)<br>\t\t\t\t\ttenant.uid.should.be.equal(tenantId)<br>\t\t\t\t\ttenant.name.should.be.equal(tenantName)<br>\t\t\t\t\ttenant.description.should.be.equal(<span class=\"hljs-string\">'mumbai tenant'</span>)<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "f4975301-d557-4b9f-b0ba-91a468e86526",
                "parentUUID": "eaa7527c-cfd5-412b-ab34-826ae333e022",
                "skipped": false
              },
              {
                "title": "should provide an error message when auto_create_tenants setting is false",
                "fullTitle": "Tenants --- Create tenants should provide an error message when auto_create_tenants setting is false",
                "timedOut": false,
                "duration": 1429,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tenantId   = <span class=\"hljs-string\">\"virar\"</span>;<br><span class=\"hljs-keyword\">var</span> tenantName = <span class=\"hljs-string\">\"virar\"</span>;<br>factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, <span class=\"hljs-string\">''</span>, app.api_key, {<br>\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: tenantId,<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: tenantName,<br>\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"mumbai tenant\"</span><br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">401</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\t<br>\t\tdone(err)<br>\t<br>\t})",
                "isRoot": false,
                "uuid": "719f8563-718c-4222-bab1-d65a4c3bf7ff",
                "parentUUID": "eaa7527c-cfd5-412b-ab34-826ae333e022",
                "skipped": false
              },
              {
                "title": "should provide an error message for unique tenant name",
                "fullTitle": "Tenants --- Create tenants should provide an error message for unique tenant name",
                "timedOut": false,
                "duration": 3018,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Kokan tenant\"</span><br>\t\t\t\t\t}<br>\t\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"Kokan\"</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">422</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\tres1.body.should.be.deep.equal({<br>\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Tenant creation failed. Please try again.\"</span>,<br>\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">164</span>,<br>\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t\t\t\t    ]<br>\t\t\t\t\t\t\t  }<br>\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "fb36bb22-aea1-4cbb-af93-8360afb79ed7",
                "parentUUID": "eaa7527c-cfd5-412b-ab34-826ae333e022",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "eaa7527c-cfd5-412b-ab34-826ae333e022",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to create tenants for an app",
                "fullTitle": "Tenants --- Create tenants should be able to create tenants for an app",
                "timedOut": false,
                "duration": 2976,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tenantId   = <span class=\"hljs-string\">\"mumbai\"</span>;<br>\t\t\t<span class=\"hljs-keyword\">var</span> tenantName = <span class=\"hljs-string\">\"mumbai\"</span>;<br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: tenantId,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: tenantName,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"mumbai tenant\"</span><br>\t\t\t\t\t}<br>\t\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The tenant was created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> tenant = res.body.tenant<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id     = res.body.tenant.uid<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenant).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.equal(res.body.tenant.updated_at)<br>\t\t\t\t\ttenant.uid.should.be.equal(tenantId)<br>\t\t\t\t\ttenant.name.should.be.equal(tenantName)<br>\t\t\t\t\ttenant.description.should.be.equal(<span class=\"hljs-string\">'mumbai tenant'</span>)<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "f4975301-d557-4b9f-b0ba-91a468e86526",
                "parentUUID": "eaa7527c-cfd5-412b-ab34-826ae333e022",
                "skipped": false
              },
              {
                "title": "should provide an error message when auto_create_tenants setting is false",
                "fullTitle": "Tenants --- Create tenants should provide an error message when auto_create_tenants setting is false",
                "timedOut": false,
                "duration": 1429,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tenantId   = <span class=\"hljs-string\">\"virar\"</span>;<br><span class=\"hljs-keyword\">var</span> tenantName = <span class=\"hljs-string\">\"virar\"</span>;<br>factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, <span class=\"hljs-string\">''</span>, app.api_key, {<br>\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: tenantId,<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: tenantName,<br>\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"mumbai tenant\"</span><br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">401</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\t<br>\t\tdone(err)<br>\t<br>\t})",
                "isRoot": false,
                "uuid": "719f8563-718c-4222-bab1-d65a4c3bf7ff",
                "parentUUID": "eaa7527c-cfd5-412b-ab34-826ae333e022",
                "skipped": false
              },
              {
                "title": "should provide an error message for unique tenant name",
                "fullTitle": "Tenants --- Create tenants should provide an error message for unique tenant name",
                "timedOut": false,
                "duration": 3018,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Kokan tenant\"</span><br>\t\t\t\t\t}<br>\t\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"Kokan\"</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">422</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\tres1.body.should.be.deep.equal({<br>\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Tenant creation failed. Please try again.\"</span>,<br>\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">164</span>,<br>\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t\t\t\t    ]<br>\t\t\t\t\t\t\t  }<br>\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "fb36bb22-aea1-4cbb-af93-8360afb79ed7",
                "parentUUID": "eaa7527c-cfd5-412b-ab34-826ae333e022",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 7423
          },
          {
            "title": "Update tenant",
            "suites": [],
            "tests": [
              {
                "title": "should be able to update created tenant object",
                "fullTitle": "Tenants --- Update tenant should be able to update created tenant object",
                "timedOut": false,
                "duration": 5075,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'update_tenant'</span>, user.authtoken, app.api_key, id, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Kokan tenant\"</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id1 = res1.body.tenant.uid<br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> tenant = res1.body.tenant<br>\t\t\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The tenant was updated successfully.'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenant).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\t\t\t\ttenant.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\ttenant.created_at.should.not.equal(res1.body.tenant.updated_at)<br>\t\t\t\t\t\t\ttenant.uid.should.be.equal(id)<br>\t\t\t\t\t\t\ttenant.name.should.be.equal(<span class=\"hljs-string\">'Kokan'</span>)<br>\t\t\t\t\t\t\ttenant.description.should.be.equal(<span class=\"hljs-string\">'Kokan tenant'</span>)<br>\t\t\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id1)<br>\t\t\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "e6722c3e-fae3-4695-90ea-5a2c9771e3a3",
                "parentUUID": "ee7e4c68-5895-46ce-bc39-d0842c243328",
                "skipped": false
              },
              {
                "title": "should provide an error message when app user updates tenant object",
                "fullTitle": "Tenants --- Update tenant should provide an error message when app user updates tenant object",
                "timedOut": false,
                "duration": 5359,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'update_tenant'</span>, appUser1.authtoken, app.api_key, id, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Kokan tenant\"</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\tres1.body.should.be.deep.equal({<br>\t\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id)<br>\t\t\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "151d193a-036e-47c9-aff6-d10a8c47ebc4",
                "parentUUID": "ee7e4c68-5895-46ce-bc39-d0842c243328",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "ee7e4c68-5895-46ce-bc39-d0842c243328",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to update created tenant object",
                "fullTitle": "Tenants --- Update tenant should be able to update created tenant object",
                "timedOut": false,
                "duration": 5075,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'update_tenant'</span>, user.authtoken, app.api_key, id, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Kokan tenant\"</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id1 = res1.body.tenant.uid<br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> tenant = res1.body.tenant<br>\t\t\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The tenant was updated successfully.'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenant).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\t\t\t\ttenant.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\ttenant.created_at.should.not.equal(res1.body.tenant.updated_at)<br>\t\t\t\t\t\t\ttenant.uid.should.be.equal(id)<br>\t\t\t\t\t\t\ttenant.name.should.be.equal(<span class=\"hljs-string\">'Kokan'</span>)<br>\t\t\t\t\t\t\ttenant.description.should.be.equal(<span class=\"hljs-string\">'Kokan tenant'</span>)<br>\t\t\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id1)<br>\t\t\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "e6722c3e-fae3-4695-90ea-5a2c9771e3a3",
                "parentUUID": "ee7e4c68-5895-46ce-bc39-d0842c243328",
                "skipped": false
              },
              {
                "title": "should provide an error message when app user updates tenant object",
                "fullTitle": "Tenants --- Update tenant should provide an error message when app user updates tenant object",
                "timedOut": false,
                "duration": 5359,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'update_tenant'</span>, appUser1.authtoken, app.api_key, id, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Kokan tenant\"</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\tres1.body.should.be.deep.equal({<br>\t\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id)<br>\t\t\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "151d193a-036e-47c9-aff6-d10a8c47ebc4",
                "parentUUID": "ee7e4c68-5895-46ce-bc39-d0842c243328",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 10434
          },
          {
            "title": "Get all tenants",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all created tenant as a list",
                "fullTitle": "Tenants --- Get all tenants should be able to get all created tenant as a list",
                "timedOut": false,
                "duration": 3151,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Get all tenants\"</span><br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tfactories.create(<span class=\"hljs-string\">'Get_tenants_list'</span>, user.authtoken, app.api_key)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> tenants = res2.body.tenants<br>\t\t\t\ttenants.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenants[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].created_at.should.be.equal(res2.body.tenants[<span class=\"hljs-number\">0</span>].updated_at)<br>\t\t\t\t<span class=\"hljs-comment\">// tenants[0].uid.should.be.equal('supertest')</span><br>\t\t\t\t<span class=\"hljs-comment\">// tenants[0].name.should.be.equal('supertest')</span><br>\t\t\t\t<span class=\"hljs-comment\">// tenants[0].description.should.be.equal('Get all tenants')</span><br><br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "73b3b628-906b-4a2a-b2b3-52048f857b07",
                "parentUUID": "5253d784-6490-467b-b19c-082aad0c8a0a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "5253d784-6490-467b-b19c-082aad0c8a0a",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get all created tenant as a list",
                "fullTitle": "Tenants --- Get all tenants should be able to get all created tenant as a list",
                "timedOut": false,
                "duration": 3151,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Get all tenants\"</span><br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tfactories.create(<span class=\"hljs-string\">'Get_tenants_list'</span>, user.authtoken, app.api_key)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> tenants = res2.body.tenants<br>\t\t\t\ttenants.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenants[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].created_at.should.be.equal(res2.body.tenants[<span class=\"hljs-number\">0</span>].updated_at)<br>\t\t\t\t<span class=\"hljs-comment\">// tenants[0].uid.should.be.equal('supertest')</span><br>\t\t\t\t<span class=\"hljs-comment\">// tenants[0].name.should.be.equal('supertest')</span><br>\t\t\t\t<span class=\"hljs-comment\">// tenants[0].description.should.be.equal('Get all tenants')</span><br><br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
                "isRoot": false,
                "uuid": "73b3b628-906b-4a2a-b2b3-52048f857b07",
                "parentUUID": "5253d784-6490-467b-b19c-082aad0c8a0a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3151
          },
          {
            "title": "Delete tenant",
            "suites": [],
            "tests": [
              {
                "title": "should be able to delete created tenant",
                "fullTitle": "Tenants --- Delete tenant should be able to delete created tenant",
                "timedOut": false,
                "duration": 3201,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key)<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The tenant was deleted successfully.'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t\t<br>\t});",
                "isRoot": false,
                "uuid": "dc6a2bf1-d30d-4b79-a823-959d01788160",
                "parentUUID": "e2cf79f1-e169-495b-91d7-f4d40ad302f1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "e2cf79f1-e169-495b-91d7-f4d40ad302f1",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to delete created tenant",
                "fullTitle": "Tenants --- Delete tenant should be able to delete created tenant",
                "timedOut": false,
                "duration": 3201,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key)<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The tenant was deleted successfully.'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t\t<br>\t});",
                "isRoot": false,
                "uuid": "dc6a2bf1-d30d-4b79-a823-959d01788160",
                "parentUUID": "e2cf79f1-e169-495b-91d7-f4d40ad302f1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3201
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "61f8efef-f1ad-42f2-b4dc-0d286f96e0f8",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Uploads --- ",
        "suites": [
          {
            "title": "Get Uploads",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all created uploads for an app",
                "fullTitle": "Uploads ---  Get Uploads should be able to get all created uploads for an app",
                "timedOut": false,
                "duration": 1847,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_uploads'</span>, authtoken, api_key)<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\t\tuploadID = res.body.uploads[<span class=\"hljs-number\">0</span>].uid<br>\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tupload.uid.should.be.equal(uploadID)<br>\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\tupload.created_by.should.be.equal(userUID)<br>\t\tupload.updated_by.should.be.equal(userUID)<br>\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'application/json'</span>)<br><br>\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.filename.should.be.equal(uploadName)</span><br><br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "a617ace8-17e8-4c21-88bf-aafd90df5e9c",
                "parentUUID": "efc5f3bc-6340-4d25-a9de-966b637270d7",
                "skipped": false
              },
              {
                "title": "should be able to get all created uploads for an app using query",
                "fullTitle": "Uploads ---  Get Uploads should be able to get all created uploads for an app using query",
                "timedOut": false,
                "duration": 1448,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_uploads'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"query\"</span>: {<span class=\"hljs-string\">\"filename\"</span>: <span class=\"hljs-string\">\"pdf_1.pdf\"</span>}<br>})<br>.expect(<span class=\"hljs-number\">200</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\tuploadID = res.body.uploads[<span class=\"hljs-number\">0</span>].uid<br>\t<span class=\"hljs-comment\">// key assertion </span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t<span class=\"hljs-comment\">// Data assertion</span><br>\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\texpect(upload.created_by).to.be.null;<br>\texpect(upload.updated_by).to.be.null;<br>\t<br>\t<span class=\"hljs-comment\">// upload.created_by.should.be.a(null)</span><br>\t<span class=\"hljs-comment\">// upload.updated_by.should.be.a(null)</span><br>\t<br>\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\tupload.uid.should.be.equal(uploadID)<br>\tupload.created_at.should.be.equal(upload.updated_at)<br>\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'application/pdf'</span>)<br>\tupload.app_user_object_uid.should.be.equal(app_user.uid)<br>\t<span class=\"hljs-comment\">// upload.filename.should.be.equal(uploadName)</span><br><br>\tdone(err)<br>})",
                "isRoot": false,
                "uuid": "4b050a77-465e-4054-b798-37989a8bdd7a",
                "parentUUID": "efc5f3bc-6340-4d25-a9de-966b637270d7",
                "skipped": false
              },
              {
                "title": "should be able to get single upload created for an app",
                "fullTitle": "Uploads ---  Get Uploads should be able to get single upload created for an app",
                "timedOut": false,
                "duration": 1437,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_single_upload'</span>, authtoken, api_key, uploadUID)<br>.expect(<span class=\"hljs-number\">200</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tupload = res.body.upload<br>\tuploadID = res.body.upload.uid<br>\t<span class=\"hljs-comment\">// key assertion </span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t<span class=\"hljs-comment\">// Data assertion</span><br>\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\tupload.uid.should.be.equal(uploadID)<br>\tupload.created_at.should.be.equal(upload.updated_at)<br>\tupload.created_by.should.be.equal(upload.updated_by)<br>\tupload.created_by.should.be.equal(userUID)<br>\tupload.updated_by.should.be.equal(userUID)<br>\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br><br>\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\tupload.filename.should.be.equal(uploadName)<br><br>\tdone(err)<br>})",
                "isRoot": false,
                "uuid": "d73e4380-815b-42a5-8c53-1be05cfd52b2",
                "parentUUID": "efc5f3bc-6340-4d25-a9de-966b637270d7",
                "skipped": false
              },
              {
                "title": "should provided an error message for invalid upload uid",
                "fullTitle": "Uploads ---  Get Uploads should provided an error message for invalid upload uid",
                "timedOut": false,
                "duration": 1696,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_single_upload'</span>, authtoken, api_key, <span class=\"hljs-string\">'asdasd'</span>)<br>.expect(<span class=\"hljs-number\">404</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Oops! That file was not found.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">145</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br><br>\tdone(err)<br>})",
                "isRoot": false,
                "uuid": "bf95e8e0-66fb-42ed-847a-89a0788d4acc",
                "parentUUID": "efc5f3bc-6340-4d25-a9de-966b637270d7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "efc5f3bc-6340-4d25-a9de-966b637270d7",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get all created uploads for an app",
                "fullTitle": "Uploads ---  Get Uploads should be able to get all created uploads for an app",
                "timedOut": false,
                "duration": 1847,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_uploads'</span>, authtoken, api_key)<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\t\tuploadID = res.body.uploads[<span class=\"hljs-number\">0</span>].uid<br>\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tupload.uid.should.be.equal(uploadID)<br>\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\tupload.created_by.should.be.equal(userUID)<br>\t\tupload.updated_by.should.be.equal(userUID)<br>\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'application/json'</span>)<br><br>\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.filename.should.be.equal(uploadName)</span><br><br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "a617ace8-17e8-4c21-88bf-aafd90df5e9c",
                "parentUUID": "efc5f3bc-6340-4d25-a9de-966b637270d7",
                "skipped": false
              },
              {
                "title": "should be able to get all created uploads for an app using query",
                "fullTitle": "Uploads ---  Get Uploads should be able to get all created uploads for an app using query",
                "timedOut": false,
                "duration": 1448,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_uploads'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"query\"</span>: {<span class=\"hljs-string\">\"filename\"</span>: <span class=\"hljs-string\">\"pdf_1.pdf\"</span>}<br>})<br>.expect(<span class=\"hljs-number\">200</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\tuploadID = res.body.uploads[<span class=\"hljs-number\">0</span>].uid<br>\t<span class=\"hljs-comment\">// key assertion </span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t<span class=\"hljs-comment\">// Data assertion</span><br>\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\texpect(upload.created_by).to.be.null;<br>\texpect(upload.updated_by).to.be.null;<br>\t<br>\t<span class=\"hljs-comment\">// upload.created_by.should.be.a(null)</span><br>\t<span class=\"hljs-comment\">// upload.updated_by.should.be.a(null)</span><br>\t<br>\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\tupload.uid.should.be.equal(uploadID)<br>\tupload.created_at.should.be.equal(upload.updated_at)<br>\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'application/pdf'</span>)<br>\tupload.app_user_object_uid.should.be.equal(app_user.uid)<br>\t<span class=\"hljs-comment\">// upload.filename.should.be.equal(uploadName)</span><br><br>\tdone(err)<br>})",
                "isRoot": false,
                "uuid": "4b050a77-465e-4054-b798-37989a8bdd7a",
                "parentUUID": "efc5f3bc-6340-4d25-a9de-966b637270d7",
                "skipped": false
              },
              {
                "title": "should be able to get single upload created for an app",
                "fullTitle": "Uploads ---  Get Uploads should be able to get single upload created for an app",
                "timedOut": false,
                "duration": 1437,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_single_upload'</span>, authtoken, api_key, uploadUID)<br>.expect(<span class=\"hljs-number\">200</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tupload = res.body.upload<br>\tuploadID = res.body.upload.uid<br>\t<span class=\"hljs-comment\">// key assertion </span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t<span class=\"hljs-comment\">// Data assertion</span><br>\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\tupload.uid.should.be.equal(uploadID)<br>\tupload.created_at.should.be.equal(upload.updated_at)<br>\tupload.created_by.should.be.equal(upload.updated_by)<br>\tupload.created_by.should.be.equal(userUID)<br>\tupload.updated_by.should.be.equal(userUID)<br>\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br><br>\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\tupload.filename.should.be.equal(uploadName)<br><br>\tdone(err)<br>})",
                "isRoot": false,
                "uuid": "d73e4380-815b-42a5-8c53-1be05cfd52b2",
                "parentUUID": "efc5f3bc-6340-4d25-a9de-966b637270d7",
                "skipped": false
              },
              {
                "title": "should provided an error message for invalid upload uid",
                "fullTitle": "Uploads ---  Get Uploads should provided an error message for invalid upload uid",
                "timedOut": false,
                "duration": 1696,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_single_upload'</span>, authtoken, api_key, <span class=\"hljs-string\">'asdasd'</span>)<br>.expect(<span class=\"hljs-number\">404</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Oops! That file was not found.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">145</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br><br>\tdone(err)<br>})",
                "isRoot": false,
                "uuid": "bf95e8e0-66fb-42ed-847a-89a0788d4acc",
                "parentUUID": "efc5f3bc-6340-4d25-a9de-966b637270d7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6428
          },
          {
            "title": "Get images and videos",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get all images uploaded for an app",
                "fullTitle": "Uploads ---  Get images and videos should be able to get all images uploaded for an app",
                "timedOut": false,
                "duration": 1674,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_uploads_images'</span>, authtoken, api_key)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\t\tuploadID = res.body.uploads[<span class=\"hljs-number\">0</span>].uid<br>\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tupload.uid.should.be.equal(uploadID)<br>\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\tupload.created_by.should.be.equal(collaborator.uid)<br>\t\tupload.updated_by.should.be.equal(collaborator.uid)<br>\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br><br>\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.filename.should.be.equal(uploadName)</span><br><br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "6a60b1ea-c0fa-478f-8ac5-b457bf3973e5",
                "parentUUID": "12c6dc37-0c58-4225-9ab3-3044fbc97fc6",
                "skipped": false
              },
              {
                "title": "should be able to get all videos uploaded for an app",
                "fullTitle": "Uploads ---  Get images and videos should be able to get all videos uploaded for an app",
                "timedOut": false,
                "duration": 1704,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_uploads_videos'</span>, authtoken, api_key)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<br>\t\t\t\t\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.uid.should.be.equal(uploadVideo.uid)<br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'video/x-ms-wmv'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename2)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "f5b208a5-6fae-41ab-93c7-b6cfd78cce95",
                "parentUUID": "12c6dc37-0c58-4225-9ab3-3044fbc97fc6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "12c6dc37-0c58-4225-9ab3-3044fbc97fc6",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get all images uploaded for an app",
                "fullTitle": "Uploads ---  Get images and videos should be able to get all images uploaded for an app",
                "timedOut": false,
                "duration": 1674,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_uploads_images'</span>, authtoken, api_key)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\t\tuploadID = res.body.uploads[<span class=\"hljs-number\">0</span>].uid<br>\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tupload.uid.should.be.equal(uploadID)<br>\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\tupload.created_by.should.be.equal(collaborator.uid)<br>\t\tupload.updated_by.should.be.equal(collaborator.uid)<br>\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br><br>\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.filename.should.be.equal(uploadName)</span><br><br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "6a60b1ea-c0fa-478f-8ac5-b457bf3973e5",
                "parentUUID": "12c6dc37-0c58-4225-9ab3-3044fbc97fc6",
                "skipped": false
              },
              {
                "title": "should be able to get all videos uploaded for an app",
                "fullTitle": "Uploads ---  Get images and videos should be able to get all videos uploaded for an app",
                "timedOut": false,
                "duration": 1704,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_uploads_videos'</span>, authtoken, api_key)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<br>\t\t\t\t\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.uid.should.be.equal(uploadVideo.uid)<br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'video/x-ms-wmv'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename2)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "f5b208a5-6fae-41ab-93c7-b6cfd78cce95",
                "parentUUID": "12c6dc37-0c58-4225-9ab3-3044fbc97fc6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3378
          },
          {
            "title": "create_upload",
            "suites": [],
            "tests": [
              {
                "title": "should be able to create an upload(system) for an app",
                "fullTitle": "Uploads ---  create_upload should be able to create an upload(system) for an app",
                "timedOut": false,
                "duration": 2395,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'jpg_1.JPG'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'create_upload'</span>, authtoken, api_key, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tupload = res.body.upload<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tupload.ACL.should.to.be.deep.equal({})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "cbc37950-8c53-46a1-9d9b-88b9c91edad6",
                "parentUUID": "db720e5a-5c6a-4900-9f14-6240af00b42d",
                "skipped": false
              },
              {
                "title": "should be able to create an upload(collaborator) for an app",
                "fullTitle": "Uploads ---  create_upload should be able to create an upload(collaborator) for an app",
                "timedOut": false,
                "duration": 2119,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'jpg_2.jpg'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'create_upload'</span>, collaborator.authtoken, api_key, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tupload = res.body.upload<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(collaborator.uid)<br>\t\t\t\t\tupload.updated_by.should.be.equal(collaborator.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tupload.ACL.should.to.be.deep.equal({})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "522c027f-ab97-486d-a523-dfe60eb8beca",
                "parentUUID": "db720e5a-5c6a-4900-9f14-6240af00b42d",
                "skipped": false
              },
              {
                "title": "should be able to create an upload(anonymous) for an app",
                "fullTitle": "Uploads ---  create_upload should be able to create an upload(anonymous) for an app",
                "timedOut": false,
                "duration": 2606,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'jpg_1.JPG'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'create_upload'</span>, <span class=\"hljs-string\">''</span>, api_key, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tupload = res.body.upload<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.ACL.can.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// value assretion </span><br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tshould.not.exist(upload.created_by)<br>\t\t\t\t\tshould.not.exist(upload.updated_by)<br>\t\t\t\t\tshould.not.exist(upload.app_user_object_uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tupload.ACL.can.should.to.be.deep.equal([<span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "3e4f8605-13f2-4182-b5dd-4e0da82fa9fa",
                "parentUUID": "db720e5a-5c6a-4900-9f14-6240af00b42d",
                "skipped": false
              },
              {
                "title": "should be able to create an upload(application user) for an app",
                "fullTitle": "Uploads ---  create_upload should be able to create an upload(application user) for an app",
                "timedOut": false,
                "duration": 2124,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename = <span class=\"hljs-string\">'json_1.json'</span><br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, app_user.authtoken, api_key, filename))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> upload = res.body.upload<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.ACL.can.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// value assretion </span><br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tshould.not.exist(upload.created_by)<br>\t\t\t\t\tshould.not.exist(upload.updated_by)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(app_user.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'application/json'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename)<br>\t\t\t\t\tupload.ACL.can.should.to.be.deep.equal([<span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "5112ff21-a3ee-4bba-9b2b-53ce547b22c5",
                "parentUUID": "db720e5a-5c6a-4900-9f14-6240af00b42d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "db720e5a-5c6a-4900-9f14-6240af00b42d",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to create an upload(system) for an app",
                "fullTitle": "Uploads ---  create_upload should be able to create an upload(system) for an app",
                "timedOut": false,
                "duration": 2395,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'jpg_1.JPG'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'create_upload'</span>, authtoken, api_key, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tupload = res.body.upload<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tupload.ACL.should.to.be.deep.equal({})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "cbc37950-8c53-46a1-9d9b-88b9c91edad6",
                "parentUUID": "db720e5a-5c6a-4900-9f14-6240af00b42d",
                "skipped": false
              },
              {
                "title": "should be able to create an upload(collaborator) for an app",
                "fullTitle": "Uploads ---  create_upload should be able to create an upload(collaborator) for an app",
                "timedOut": false,
                "duration": 2119,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'jpg_2.jpg'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'create_upload'</span>, collaborator.authtoken, api_key, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tupload = res.body.upload<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(collaborator.uid)<br>\t\t\t\t\tupload.updated_by.should.be.equal(collaborator.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tupload.ACL.should.to.be.deep.equal({})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "522c027f-ab97-486d-a523-dfe60eb8beca",
                "parentUUID": "db720e5a-5c6a-4900-9f14-6240af00b42d",
                "skipped": false
              },
              {
                "title": "should be able to create an upload(anonymous) for an app",
                "fullTitle": "Uploads ---  create_upload should be able to create an upload(anonymous) for an app",
                "timedOut": false,
                "duration": 2606,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'jpg_1.JPG'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'create_upload'</span>, <span class=\"hljs-string\">''</span>, api_key, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tupload = res.body.upload<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.ACL.can.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// value assretion </span><br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tshould.not.exist(upload.created_by)<br>\t\t\t\t\tshould.not.exist(upload.updated_by)<br>\t\t\t\t\tshould.not.exist(upload.app_user_object_uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tupload.ACL.can.should.to.be.deep.equal([<span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "3e4f8605-13f2-4182-b5dd-4e0da82fa9fa",
                "parentUUID": "db720e5a-5c6a-4900-9f14-6240af00b42d",
                "skipped": false
              },
              {
                "title": "should be able to create an upload(application user) for an app",
                "fullTitle": "Uploads ---  create_upload should be able to create an upload(application user) for an app",
                "timedOut": false,
                "duration": 2124,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename = <span class=\"hljs-string\">'json_1.json'</span><br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, app_user.authtoken, api_key, filename))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> upload = res.body.upload<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.ACL.can.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// value assretion </span><br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tshould.not.exist(upload.created_by)<br>\t\t\t\t\tshould.not.exist(upload.updated_by)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(app_user.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'application/json'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename)<br>\t\t\t\t\tupload.ACL.can.should.to.be.deep.equal([<span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "5112ff21-a3ee-4bba-9b2b-53ce547b22c5",
                "parentUUID": "db720e5a-5c6a-4900-9f14-6240af00b42d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 9244
          },
          {
            "title": "Uploads tags",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get a list of all tags created for an upload",
                "fullTitle": "Uploads ---  Uploads tags should be able to get a list of all tags created for an upload",
                "timedOut": false,
                "duration": 1485,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_upload_tags'</span>, authtoken, api_key)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\tres.body.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest'</span>, <span class=\"hljs-string\">'backend'</span>])<br>\tdone(err)<br>})",
                "isRoot": false,
                "uuid": "81b62c0e-7df9-4029-98ed-9f67cf22d6c0",
                "parentUUID": "2618efc2-982a-4b66-b8f4-45c36fdb0806",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "2618efc2-982a-4b66-b8f4-45c36fdb0806",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get a list of all tags created for an upload",
                "fullTitle": "Uploads ---  Uploads tags should be able to get a list of all tags created for an upload",
                "timedOut": false,
                "duration": 1485,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_upload_tags'</span>, authtoken, api_key)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\tres.body.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest'</span>, <span class=\"hljs-string\">'backend'</span>])<br>\tdone(err)<br>})",
                "isRoot": false,
                "uuid": "81b62c0e-7df9-4029-98ed-9f67cf22d6c0",
                "parentUUID": "2618efc2-982a-4b66-b8f4-45c36fdb0806",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1485
          },
          {
            "title": "Update upload",
            "suites": [],
            "tests": [
              {
                "title": "should be able to update given upload object as a collaborator",
                "fullTitle": "Uploads ---  Update upload should be able to update given upload object as a collaborator",
                "timedOut": false,
                "duration": 6194,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, collaborator.authtoken, api_key, uploadUID, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File updated successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> upload = res.body.upload<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.uid.should.be.equal(uploadUID)<br>\t\t\t\t\tupload.created_at.should.be.not.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.not.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.updated_by.should.be.equal(collaborator.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'text/csv'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "7135d7cb-cce9-457f-bf66-c454b2fa86fa",
                "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
                "skipped": false
              },
              {
                "title": "should be able to provide an error message when application user updates upload object created by sysuser",
                "fullTitle": "Uploads ---  Update upload should be able to provide an error message when application user updates upload object created by sysuser",
                "timedOut": false,
                "duration": 3349,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, api_key, uploadUID1, filename1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.error_message.should.be.equal(<span class=\"hljs-string\">'Access denied. You have insufficient permissions to perform this operation.'</span>)<br>\t\t\t\t\tres.body.error_code.should.be.equal(<span class=\"hljs-number\">162</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "3759c8b6-caf3-4986-9e47-9bebfd6bff92",
                "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
                "skipped": false
              },
              {
                "title": "should be able to update upload object as a application user",
                "fullTitle": "Uploads ---  Update upload should be able to update upload object as a application user",
                "timedOut": false,
                "duration": 5094,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename9 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\t<br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, api_key, uploadAppuser.uid, filename9)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File updated successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> upload = res.body.upload<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.ACL.can.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// value assretion </span><br>\t\t\t\t\tupload.created_at.should.be.not.equal(upload.updated_at)<br>\t\t\t\t\tshould.not.exist(upload.created_by)<br>\t\t\t\t\tshould.not.exist(upload.updated_by)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(app_user.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'text/csv'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename9)<br>\t\t\t\t\tupload.ACL.can.should.to.be.deep.equal([<span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "2da468a2-754f-4dd5-ab76-715ec6c9a97b",
                "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid update upload",
                "fullTitle": "Uploads ---  Update upload should provide an error message for invalid update upload",
                "timedOut": false,
                "duration": 5013,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, api_key, <span class=\"hljs-string\">'asd'</span>, filename1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">404</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Oops! That file was not found.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">145</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "57c83c22-a6fe-4836-81aa-1b32a5610518",
                "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid api key for update upload",
                "fullTitle": "Uploads ---  Update upload should provide an error message for invalid api key for update upload",
                "timedOut": false,
                "duration": 3279,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, <span class=\"hljs-string\">'asdasdad'</span>, <span class=\"hljs-string\">'asd'</span>, filename1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">412</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bad news! We can't find that application. Please try again.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">109</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"api_key\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "73f6935b-309e-49f8-a16b-033c919b1f8e",
                "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 7000,
            "file": "/test.js",
            "uuid": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to update given upload object as a collaborator",
                "fullTitle": "Uploads ---  Update upload should be able to update given upload object as a collaborator",
                "timedOut": false,
                "duration": 6194,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, collaborator.authtoken, api_key, uploadUID, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File updated successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> upload = res.body.upload<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.uid.should.be.equal(uploadUID)<br>\t\t\t\t\tupload.created_at.should.be.not.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.not.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.updated_by.should.be.equal(collaborator.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'text/csv'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "7135d7cb-cce9-457f-bf66-c454b2fa86fa",
                "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
                "skipped": false
              },
              {
                "title": "should be able to provide an error message when application user updates upload object created by sysuser",
                "fullTitle": "Uploads ---  Update upload should be able to provide an error message when application user updates upload object created by sysuser",
                "timedOut": false,
                "duration": 3349,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, api_key, uploadUID1, filename1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.error_message.should.be.equal(<span class=\"hljs-string\">'Access denied. You have insufficient permissions to perform this operation.'</span>)<br>\t\t\t\t\tres.body.error_code.should.be.equal(<span class=\"hljs-number\">162</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "3759c8b6-caf3-4986-9e47-9bebfd6bff92",
                "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
                "skipped": false
              },
              {
                "title": "should be able to update upload object as a application user",
                "fullTitle": "Uploads ---  Update upload should be able to update upload object as a application user",
                "timedOut": false,
                "duration": 5094,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename9 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\t<br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, api_key, uploadAppuser.uid, filename9)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File updated successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> upload = res.body.upload<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.ACL.can.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// value assretion </span><br>\t\t\t\t\tupload.created_at.should.be.not.equal(upload.updated_at)<br>\t\t\t\t\tshould.not.exist(upload.created_by)<br>\t\t\t\t\tshould.not.exist(upload.updated_by)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(app_user.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'text/csv'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename9)<br>\t\t\t\t\tupload.ACL.can.should.to.be.deep.equal([<span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "2da468a2-754f-4dd5-ab76-715ec6c9a97b",
                "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid update upload",
                "fullTitle": "Uploads ---  Update upload should provide an error message for invalid update upload",
                "timedOut": false,
                "duration": 5013,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, api_key, <span class=\"hljs-string\">'asd'</span>, filename1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">404</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Oops! That file was not found.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">145</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "57c83c22-a6fe-4836-81aa-1b32a5610518",
                "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
                "skipped": false
              },
              {
                "title": "should provide an error message for invalid api key for update upload",
                "fullTitle": "Uploads ---  Update upload should provide an error message for invalid api key for update upload",
                "timedOut": false,
                "duration": 3279,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, <span class=\"hljs-string\">'asdasdad'</span>, <span class=\"hljs-string\">'asd'</span>, filename1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">412</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bad news! We can't find that application. Please try again.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">109</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"api_key\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "73f6935b-309e-49f8-a16b-033c919b1f8e",
                "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 22929
          },
          {
            "title": "delete upload",
            "suites": [],
            "tests": [
              {
                "title": "should be able to delete given upload object as a collaborator",
                "fullTitle": "Uploads ---  delete upload should be able to delete given upload object as a collaborator",
                "timedOut": false,
                "duration": 2037,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, collaborator.authtoken, api_key, uploadUID)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File deleted successfully.'</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "b00c8f91-622f-4588-80d5-2e99635d85f3",
                "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
                "skipped": false
              },
              {
                "title": "should be able to provide an error message when delete object(system) as a application user",
                "fullTitle": "Uploads ---  delete upload should be able to provide an error message when delete object(system) as a application user",
                "timedOut": false,
                "duration": 1589,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, app_user.authtoken, api_key, uploadUID1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.error_message.should.be.equal(<span class=\"hljs-string\">'Access denied. You have insufficient permissions to perform this operation.'</span>)<br>\t\t\t\t\tres.body.error_code.should.be.equal(<span class=\"hljs-number\">162</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "a6ad282d-8335-459b-a60d-b2652d7c322c",
                "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
                "skipped": false
              },
              {
                "title": "should provide error message invalid upload delete",
                "fullTitle": "Uploads ---  delete upload should provide error message invalid upload delete",
                "timedOut": false,
                "duration": 1627,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, app_user.authtoken, api_key, <span class=\"hljs-string\">'asd'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// .expect(200)</span><br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Oops! That file was not found.\"</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">145</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t\t    ]<br>\t\t\t\t\t\t  }<br>\t\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "443e87e4-0b60-426a-8fc7-97e8b3c2db86",
                "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
                "skipped": false
              },
              {
                "title": "should provide error message invalid user authtoken for upload delete",
                "fullTitle": "Uploads ---  delete upload should provide error message invalid user authtoken for upload delete",
                "timedOut": false,
                "duration": 1715,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, <span class=\"hljs-string\">''</span>, api_key, uploadAppuser.uid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "c7c3ef8c-ec0c-45d8-abe5-555f93a18338",
                "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
                "skipped": false
              },
              {
                "title": "should be able to delete upload object as a application user",
                "fullTitle": "Uploads ---  delete upload should be able to delete upload object as a application user",
                "timedOut": false,
                "duration": 1448,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, app_user.authtoken, api_key, uploadAppuser.uid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File deleted successfully.'</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "8385dc1c-e13f-40f5-bc5e-d581459c7cd6",
                "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 15000,
            "file": "/test.js",
            "uuid": "ca673edf-6dc5-4075-9b86-f02e58732852",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to delete given upload object as a collaborator",
                "fullTitle": "Uploads ---  delete upload should be able to delete given upload object as a collaborator",
                "timedOut": false,
                "duration": 2037,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, collaborator.authtoken, api_key, uploadUID)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File deleted successfully.'</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "b00c8f91-622f-4588-80d5-2e99635d85f3",
                "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
                "skipped": false
              },
              {
                "title": "should be able to provide an error message when delete object(system) as a application user",
                "fullTitle": "Uploads ---  delete upload should be able to provide an error message when delete object(system) as a application user",
                "timedOut": false,
                "duration": 1589,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, app_user.authtoken, api_key, uploadUID1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.error_message.should.be.equal(<span class=\"hljs-string\">'Access denied. You have insufficient permissions to perform this operation.'</span>)<br>\t\t\t\t\tres.body.error_code.should.be.equal(<span class=\"hljs-number\">162</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "a6ad282d-8335-459b-a60d-b2652d7c322c",
                "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
                "skipped": false
              },
              {
                "title": "should provide error message invalid upload delete",
                "fullTitle": "Uploads ---  delete upload should provide error message invalid upload delete",
                "timedOut": false,
                "duration": 1627,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, app_user.authtoken, api_key, <span class=\"hljs-string\">'asd'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// .expect(200)</span><br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Oops! That file was not found.\"</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">145</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t\t    ]<br>\t\t\t\t\t\t  }<br>\t\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "443e87e4-0b60-426a-8fc7-97e8b3c2db86",
                "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
                "skipped": false
              },
              {
                "title": "should provide error message invalid user authtoken for upload delete",
                "fullTitle": "Uploads ---  delete upload should provide error message invalid user authtoken for upload delete",
                "timedOut": false,
                "duration": 1715,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, <span class=\"hljs-string\">''</span>, api_key, uploadAppuser.uid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "c7c3ef8c-ec0c-45d8-abe5-555f93a18338",
                "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
                "skipped": false
              },
              {
                "title": "should be able to delete upload object as a application user",
                "fullTitle": "Uploads ---  delete upload should be able to delete upload object as a application user",
                "timedOut": false,
                "duration": 1448,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, app_user.authtoken, api_key, uploadAppuser.uid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File deleted successfully.'</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
                "isRoot": false,
                "uuid": "8385dc1c-e13f-40f5-bc5e-d581459c7cd6",
                "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8416
          },
          {
            "title": "uploads default_acl",
            "suites": [],
            "tests": [
              {
                "title": "should be able to get the default ACL set for an uploads",
                "fullTitle": "Uploads ---  uploads default_acl should be able to get the default ACL set for an uploads",
                "timedOut": false,
                "duration": 1441,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_default_acl'</span>, authtoken, api_key)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\t<span class=\"hljs-keyword\">var</span> acl = res.body.DEFAULT_ACL<br>\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t<span class=\"hljs-comment\">// data assertion</span><br>\t\tacl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tacl.others.read.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tacl.others.create.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion </span><br>\t\tacl.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tacl.others.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "99984d75-7e65-4aed-b107-d2dc437c015d",
                "parentUUID": "5e7e2475-d307-4dc7-be72-7cfd48a23752",
                "skipped": false
              },
              {
                "title": "should be able to specify a default ACL for uploads",
                "fullTitle": "Uploads ---  uploads default_acl should be able to specify a default ACL for uploads",
                "timedOut": false,
                "duration": 1461,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'set_default_acl'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"DEFAULT_ACL\"</span>: {<br>\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t},<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"anonymous\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t}],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: []<br>\t}<br>})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Default ACL updated successfully.'</span>)<br>\t\t<span class=\"hljs-keyword\">var</span> acl = res.body.DEFAULT_ACL<br>\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'users'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl.others).should.to.be.deep.equal([<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl.users[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t<span class=\"hljs-comment\">// data assertion</span><br>\t\tacl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tacl.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tacl.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion </span><br>\t\tacl.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tacl.others.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'anonymous'</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "f9d9989f-67c2-46fe-9629-98d5bcf9761e",
                "parentUUID": "5e7e2475-d307-4dc7-be72-7cfd48a23752",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "5e7e2475-d307-4dc7-be72-7cfd48a23752",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to get the default ACL set for an uploads",
                "fullTitle": "Uploads ---  uploads default_acl should be able to get the default ACL set for an uploads",
                "timedOut": false,
                "duration": 1441,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'get_default_acl'</span>, authtoken, api_key)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\t<span class=\"hljs-keyword\">var</span> acl = res.body.DEFAULT_ACL<br>\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t<span class=\"hljs-comment\">// data assertion</span><br>\t\tacl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tacl.others.read.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tacl.others.create.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion </span><br>\t\tacl.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tacl.others.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "99984d75-7e65-4aed-b107-d2dc437c015d",
                "parentUUID": "5e7e2475-d307-4dc7-be72-7cfd48a23752",
                "skipped": false
              },
              {
                "title": "should be able to specify a default ACL for uploads",
                "fullTitle": "Uploads ---  uploads default_acl should be able to specify a default ACL for uploads",
                "timedOut": false,
                "duration": 1461,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'set_default_acl'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"DEFAULT_ACL\"</span>: {<br>\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t},<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"anonymous\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t}],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: []<br>\t}<br>})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Default ACL updated successfully.'</span>)<br>\t\t<span class=\"hljs-keyword\">var</span> acl = res.body.DEFAULT_ACL<br>\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'users'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl.others).should.to.be.deep.equal([<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl.users[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t<span class=\"hljs-comment\">// data assertion</span><br>\t\tacl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tacl.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tacl.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion </span><br>\t\tacl.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tacl.others.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'anonymous'</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tdone(err)<br>\t})",
                "isRoot": false,
                "uuid": "f9d9989f-67c2-46fe-9629-98d5bcf9761e",
                "parentUUID": "5e7e2475-d307-4dc7-be72-7cfd48a23752",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2902
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "39c1d890-af4b-4ac8-b860-9cea22ff20bd",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 95000,
    "uuid": "b3b4bd73-2363-4fca-8bc4-bf468a7cf45b",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should be able to create application user as an object",
      "fullTitle": "App user Object should be able to create application user as an object",
      "timedOut": false,
      "duration": 1673,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUserName,<br>    <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>  <span class=\"hljs-keyword\">var</span> object = res.body.object<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>  <span class=\"hljs-comment\">// Keys assertion</span><br>  <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'_version'</span>])<br>  <span class=\"hljs-comment\">// Data type assertion</span><br>  object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>  object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  object.ACL.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  object.ACL.others.read.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.others.update.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.others.delete.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br><br>  <span class=\"hljs-comment\">// Value assertion</span><br>  object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  object.__loc[<span class=\"hljs-number\">0</span>].should.be.equal(-<span class=\"hljs-number\">122.4431164995849</span>)<br>  object.__loc[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-number\">37.74045209829323</span>)<br>  object.username.should.be.equal(appUserName)<br>  object.email.should.be.equal(appUseremail)<br>  object.first_name.should.be.equal(<span class=\"hljs-string\">'james'</span>)<br>  object.last_name.should.be.equal(<span class=\"hljs-string\">'bond'</span>)<br>  object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>  object.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(roleId)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>  object.created_by.should.be.equal(userUID)<br>  object.updated_by.should.be.equal(object.created_by)<br>  object.created_at.should.be.equal(object.updated_at)<br><br>  object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>  object.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>  done(err)<br>})",
      "isRoot": false,
      "uuid": "4c3c1b77-7145-479e-968e-9ce8268fbeb8",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should provide an error message for mandetory fields(email)",
      "fullTitle": "App user Object should provide an error message for mandetory fields(email)",
      "timedOut": false,
      "duration": 1517,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-comment\">// \"email\": appUseremail,</span><br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"email\"</span>: [<br>        <span class=\"hljs-string\">\"is a required field\"</span><br>      ]<br>    }<br>  })<br>  done(err)<br>})",
      "isRoot": false,
      "uuid": "97466371-73c5-4694-a07f-caca1a793cf3",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should provide an error message for unique email",
      "fullTitle": "App user Object should provide an error message for unique email",
      "timedOut": false,
      "duration": 1666,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUserName,<br>    <span class=\"hljs-string\">\"email\"</span>: appUser1.email,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"email\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  done(err)<br>})",
      "isRoot": false,
      "uuid": "a9a3ef13-7a75-4e73-ac7f-b5e29f86f4b0",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should provide an error message for unique username",
      "fullTitle": "App user Object should provide an error message for unique username",
      "timedOut": false,
      "duration": 1670,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUser1.username,<br>    <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"username\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  done(err)<br>})",
      "isRoot": false,
      "uuid": "6e451f2d-d6db-4e7b-9a39-9419e7cbdd36",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid authtoken(app user)",
      "fullTitle": "App user Object should provide an error message for invalid authtoken(app user)",
      "timedOut": false,
      "duration": 1519,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, <span class=\"hljs-string\">'fhts2323432'</span>, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUserName,<br>    <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.expect(<span class=\"hljs-number\">401</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>  done(err)<br>})",
      "isRoot": false,
      "uuid": "193c0369-a6ed-4f3f-b752-021c2d3d26b1",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to get all application user objects present",
      "fullTitle": "App user Object should be able to get all application user objects present",
      "timedOut": false,
      "duration": 2594,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key)<br>        .expect(<span class=\"hljs-number\">200</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          <span class=\"hljs-keyword\">var</span> object = R.last(res.body.objects)<br>          <span class=\"hljs-comment\">// Keys assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>          <span class=\"hljs-comment\">// Data type assertion</span><br>          object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          <span class=\"hljs-comment\">// Value assertion</span><br>          object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          object.__loc.should.be.deep.equal(appUser.__loc)<br>          <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>          <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>          object.username.should.be.equal(appUser.username)<br>          object.email.should.be.equal(appUser.email)<br>          object.first_name.should.be.equal(appUser.first_name)<br>          object.last_name.should.be.equal(appUser.last_name)<br>          object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          object.created_by.should.be.equal(userUID)<br>          object.updated_by.should.be.equal(object.created_by)<br>          object.created_at.should.be.equal(object.updated_at)<br>          object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>          object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          done(err)<br>        })",
      "isRoot": false,
      "uuid": "c503174d-5cb3-4f51-a68b-b6f6ba4f225d",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to get single application user object",
      "fullTitle": "App user Object should be able to get single application user object",
      "timedOut": false,
      "duration": 3814,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_object_app_user'</span>, authtoken, api_key, appUser1.uid)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          <span class=\"hljs-keyword\">var</span> object = res.body.object<br>          <span class=\"hljs-comment\">// Keys assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>          <span class=\"hljs-comment\">// Data type assertion</span><br>          object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          <span class=\"hljs-comment\">// Value assertion</span><br>          object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          object.__loc.should.be.deep.equal(appUser1.__loc)<br>          <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>          <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>          object.username.should.be.equal(appUser1.username)<br>          object.email.should.be.equal(appUser1.email)<br>          object.first_name.should.be.equal(appUser1.first_name)<br>          object.last_name.should.be.equal(appUser1.last_name)<br>          object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          object.created_by.should.be.equal(userUID)<br>          object.updated_by.should.be.equal(object.created_by)<br>          object.created_at.should.be.equal(object.updated_at)<br>          object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>          object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          done(err)<br>        })",
      "isRoot": false,
      "uuid": "6d296711-e6f0-4304-b132-e63a3e048184",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid uid",
      "fullTitle": "App user Object should provide an error message for invalid uid",
      "timedOut": false,
      "duration": 4981,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_object_app_user'</span>, authtoken, api_key, <span class=\"hljs-string\">'adafewt34vf'</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>          done(err)<br>        })",
      "isRoot": false,
      "uuid": "75f7c172-52f5-4d5d-9877-81fd384f51c8",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to update application user object",
      "fullTitle": "App user Object should be able to update application user object",
      "timedOut": false,
      "duration": 2573,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, authtoken, api_key, appUser1.uid, {<br>        <span class=\"hljs-string\">\"object\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span><br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.object<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal(appUser1.__loc)<br>        <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>        <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>        object.username.should.be.equal(appUser1.username)<br>        object.email.should.be.equal(appUser1.email)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(object.created_by)<br>        object.created_at.should.be.not.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "f1db3e39-dfb1-4921-9591-55a06e7a9a7b",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid authtoken(app user) for update",
      "fullTitle": "App user Object should provide an error message for invalid authtoken(app user) for update",
      "timedOut": false,
      "duration": 1498,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, <span class=\"hljs-string\">'asdafe2323dfr445'</span>, api_key, appUser1.uid, {<br>        <span class=\"hljs-string\">\"object\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span><br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">401</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "bfee8380-810e-4dc9-bf09-c58a958181cb",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid uid for update",
      "fullTitle": "App user Object should provide an error message for invalid uid for update",
      "timedOut": false,
      "duration": 1682,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, authtoken, api_key, <span class=\"hljs-string\">'asfa323dfgs'</span>, {<br>        <span class=\"hljs-string\">\"object\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span><br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "0a27ff63-12a7-4790-ba1a-dc9d0bca9101",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to search application users using query",
      "fullTitle": "App user Object should be able to search application users using query",
      "timedOut": false,
      "duration": 2018,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, { query: {<span class=\"hljs-string\">\"email\"</span>: appUser.email } })<br>        .expect(<span class=\"hljs-number\">200</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          <br>          <span class=\"hljs-keyword\">var</span> object = R.last(res.body.objects)<br>          <br>          <span class=\"hljs-comment\">// Keys assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>          <span class=\"hljs-comment\">// Data type assertion</span><br>          object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          <span class=\"hljs-comment\">// Value assertion</span><br>          object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          object.__loc.should.be.deep.equal(appUser.__loc)<br>          <br>          object.username.should.be.equal(appUser.username)<br>          object.email.should.be.equal(appUser.email)<br>          object.first_name.should.be.equal(appUser.first_name)<br>          object.last_name.should.be.equal(appUser.last_name)<br>          object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          object.created_by.should.be.equal(userUID)<br>          object.updated_by.should.be.equal(object.created_by)<br>          object.created_at.should.be.equal(object.updated_at)<br>          object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>          object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          done(err)<br>        })",
      "isRoot": false,
      "uuid": "9c449245-35d5-4b24-a044-853de824d76a",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid authtoken for delete",
      "fullTitle": "App user Object should provide an error message for invalid authtoken for delete",
      "timedOut": false,
      "duration": 2201,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_object_app_user'</span>, <span class=\"hljs-string\">'asdwvf434vdfv'</span>, api_key, appUser1.uid)<br>        .expect(<span class=\"hljs-number\">401</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t})<br>          done(err)<br>        })",
      "isRoot": false,
      "uuid": "4e84476e-301f-4a52-be3e-13645e93397d",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to delete application user object",
      "fullTitle": "App user Object should be able to delete application user object",
      "timedOut": false,
      "duration": 2496,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_object_app_user'</span>, authtoken, api_key, appUser1.uid)<br>      .expect(<span class=\"hljs-number\">200</span>)  <br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "fd60400d-761e-4586-bf3d-e287b412b407",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid uid for delete",
      "fullTitle": "App user Object should provide an error message for invalid uid for delete",
      "timedOut": false,
      "duration": 2360,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_object_app_user'</span>, authtoken, api_key, <span class=\"hljs-string\">'adf34d34d'</span>)<br>        .expect(<span class=\"hljs-number\">422</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>          done(err)<br>        })",
      "isRoot": false,
      "uuid": "574054dd-c007-403f-9f88-e15118ea33a2",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to get application user objects count",
      "fullTitle": "App user Object should be able to get application user objects count",
      "timedOut": false,
      "duration": 2963,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <br>        res.body.objects.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "5a382b5d-9328-415a-988e-c80dd16d0789",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to get application user objects includeing count",
      "fullTitle": "App user Object should be able to get application user objects includeing count",
      "timedOut": false,
      "duration": 1722,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        <span class=\"hljs-keyword\">var</span> object = R.last(res.body.objects)<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal(appUser.__loc)<br>        <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>        <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>        object.username.should.be.equal(appUser.username)<br>        object.email.should.be.equal(appUser.email)<br>        object.first_name.should.be.equal(appUser.first_name)<br>        object.last_name.should.be.equal(appUser.last_name)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(object.created_by)<br>        object.created_at.should.be.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "c266b57f-cefb-427a-b885-fdbbef0f7a58",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to get application user objects using skip and count",
      "fullTitle": "App user Object should be able to get application user objects using skip and count",
      "timedOut": false,
      "duration": 4271,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.objects.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "9a732403-656c-4ec8-b284-d61643c1ab79",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to get application user objects using limit and count",
      "fullTitle": "App user Object should be able to get application user objects using limit and count",
      "timedOut": false,
      "duration": 1524,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.objects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "f07620cc-caf7-4fe2-bccb-3ef53cff29fd",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to get application user objects using skip",
      "fullTitle": "App user Object should be able to get application user objects using skip",
      "timedOut": false,
      "duration": 1605,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span>,<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.objects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "9b92b02e-0195-48e6-92e6-797ba4088377",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to get application user objects using -ve skip value",
      "fullTitle": "App user Object should be able to get application user objects using -ve skip value",
      "timedOut": false,
      "duration": 1495,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"skip\"</span>: -<span class=\"hljs-number\">2</span><br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Failed to fetch objects. Please try again with valid parameters.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"params\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"has an invalid operation.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "514f6c7b-dd19-47b3-be4e-c41adf0126b0",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to get application user objects using -ve limit value",
      "fullTitle": "App user Object should be able to get application user objects using -ve limit value",
      "timedOut": false,
      "duration": 1882,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"limit\"</span>: -<span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">1</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        <span class=\"hljs-keyword\">var</span> object = res.body.objects[<span class=\"hljs-number\">0</span>]<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'_version'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal(object.__loc)<br>        <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>        <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>        object.username.should.be.equal(object.username)<br>        object.email.should.be.equal(object.email)<br>        object.first_name.should.be.equal(object.first_name)<br>        object.last_name.should.be.equal(object.last_name)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'android'</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(object.created_by)<br>        object.created_at.should.be.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">'catwoman'</span>, <span class=\"hljs-string\">'backend'</span>])<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "1f858bc8-ecd3-46f8-bb2c-6bc22c054602",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to register application users",
      "fullTitle": "App users registration should be able to register application users",
      "timedOut": false,
      "duration": 1953,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUserName<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.application_user<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! You have successfully registered!'</span>)<br>        <span class=\"hljs-comment\">// // Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>        <span class=\"hljs-comment\">// // Data type assertion</span><br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.active.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        should.not.exist(object.updated_by)<br>        should.not.exist(object.created_by)<br>        should.not.exist(object.__loc)<br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.email.should.be.equal(appUseremail)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'john'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'smith'</span>)<br>        object.username.should.be.equal(appUserName)<br>        object.active.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_at.should.be.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        object.tags.should.be.deep.equal([])<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "42dbac88-4e96-4538-ba58-d602489cdcb6",
      "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
      "skipped": false
    },
    {
      "title": "should provide error message for password confirmation",
      "fullTitle": "App users registration should provide error message for password confirmation",
      "timedOut": false,
      "duration": 1959,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw1234\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUserName<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't sign you up. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">192</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"password_confirmation\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"password and password_confirmation must match\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "798338e7-e0cc-4171-8cee-12c4cd210d67",
      "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
      "skipped": false
    },
    {
      "title": "should provide error message for register unique username",
      "fullTitle": "App users registration should provide error message for register unique username",
      "timedOut": false,
      "duration": 1627,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUser2.username<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    \t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't sign you up. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">127</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"username\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "7672a408-8c43-49ca-8cca-9bb05b5a0ca3",
      "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
      "skipped": false
    },
    {
      "title": "should provide error message for register unique email",
      "fullTitle": "App users registration should provide error message for register unique email",
      "timedOut": false,
      "duration": 1885,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUser2.email,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUserName<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    \t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't sign you up. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">127</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"email\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "64f619fa-254a-4e17-b199-e2e648da6fbc",
      "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
      "skipped": false
    },
    {
      "title": "should be able to update registered application user",
      "fullTitle": "App users registration should be able to update registered application user",
      "timedOut": false,
      "duration": 1509,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser_authtoken, api_key, appUser2.uid, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.application_user<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        <span class=\"hljs-comment\">// value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>        object.email.should.be.equal(appUser2.email)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.username.should.be.equal(appUser2.username)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">\"testuser\"</span>, <span class=\"hljs-string\">\"backend\"</span>])<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(userUID)<br>        object.created_at.should.be.not.equal(object.updated_at)<br>        object.uid.should.be.equal(appUser2.uid)<br>        object.ACL.can[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'update'</span>)<br>        object.ACL.can[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'delete'</span>)<br>        object._version.should.be.equal(<span class=\"hljs-number\">3</span>)<br>        <span class=\"hljs-comment\">// object.last_login_at.should.be.equal('string')</span><br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "8d955167-aa35-4913-97b7-4b48d7be0cd9",
      "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid app user authtoken ",
      "fullTitle": "App users registration should provide an error message for invalid app user authtoken ",
      "timedOut": false,
      "duration": 1678,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, <span class=\"hljs-string\">''</span>, api_key, appUser2.uid, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "e924403c-005b-4080-a1fb-ad0227ce030e",
      "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
      "skipped": false
    },
    {
      "title": "should be able to get registered application user",
      "fullTitle": "App users registration should be able to get registered application user",
      "timedOut": false,
      "duration": 1462,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_register_app_user'</span>, appUser_authtoken, api_key, appUser2.uid)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.application_user<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        <span class=\"hljs-comment\">// value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>        object.email.should.be.equal(appUser2.email)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.username.should.be.equal(appUser2.username)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">\"testuser\"</span>, <span class=\"hljs-string\">\"backend\"</span>])<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(userUID)<br>        object.created_at.should.be.not.equal(object.updated_at)<br>        object.uid.should.be.equal(appUser2.uid)<br>        object.ACL.can[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'update'</span>)<br>        object.ACL.can[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'delete'</span>)<br>        object._version.should.be.equal(<span class=\"hljs-number\">3</span>)<br>        <span class=\"hljs-comment\">// object.last_login_at.should.be.equal('string')</span><br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "a77e079a-ffe4-47a2-aa8f-f6f41a8f75b7",
      "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
      "skipped": false
    },
    {
      "title": "should be able to deactivate an existing application user",
      "fullTitle": "App users registration should be able to deactivate an existing application user",
      "timedOut": false,
      "duration": 1692,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_register_app_user'</span>, appUser_authtoken, api_key, appUser2.uid)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "24b15598-2ca3-4496-a51e-ba9ecd117384",
      "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
      "skipped": false
    },
    {
      "title": "should provide error message for invalid application user login operation",
      "fullTitle": "App user login/logout should provide error message for invalid application user login operation",
      "timedOut": false,
      "duration": 1441,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'login_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"asd\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {<br>            <span class=\"hljs-string\">\"auth\"</span>: [<br>              <span class=\"hljs-string\">\"Looks like your email or password is invalid\"</span><br>            ]<br>          }<br>        })<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "84184c3a-44c9-4f9d-ac7e-53ec6ca93e7f",
      "parentUUID": "d8e0be76-df5b-491e-80e4-e3d433f962b8",
      "skipped": false
    },
    {
      "title": "should be able to login users registered for an application",
      "fullTitle": "App user login/logout should be able to login users registered for an application",
      "timedOut": false,
      "duration": 1487,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'login_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUser3.email,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>        }<br>      })<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Logged in successfully!'</span>)<br>          user = res.body.application_user<br>          userAuthtoken = res.body.application_user.authtoken<br>          <span class=\"hljs-comment\">// key assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(user).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>, <span class=\"hljs-string\">'authtoken'</span>])<br>          <span class=\"hljs-comment\">// data assertion</span><br>          user.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          user.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          user.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          user.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.active.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          user.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          user._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          user.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.authtoken.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          <span class=\"hljs-comment\">// value assertion</span><br>          user.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          user.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>          user.email.should.be.equal(appUser3.email)<br>          user.first_name.should.be.equal(appUser3.first_name)<br>          user.last_name.should.be.equal(appUser3.last_name)<br>          user.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          user.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          user.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          user.created_by.should.be.equal(userUID)<br>          user.updated_by.should.be.equal(userUID)<br>          user.created_at.should.be.not.equal(user.updated_at)<br>          user.uid.should.be.equal(appUser3.uid)<br>          user.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          user.ACL.should.be.deep.equal({<span class=\"hljs-string\">\"can\"</span>: []})<br>          user._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>          done(err)<br>        })",
      "isRoot": false,
      "uuid": "37fe1789-82c3-4f4a-a7ca-4a92cff7472f",
      "parentUUID": "d8e0be76-df5b-491e-80e4-e3d433f962b8",
      "skipped": false
    },
    {
      "title": "should provide error message for invalid application user logout operation",
      "fullTitle": "App user login/logout should provide error message for invalid application user logout operation",
      "timedOut": false,
      "duration": 1455,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'logout_app_user'</span>, <span class=\"hljs-string\">\"userAuthtoken\"</span>, api_key)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          res.body.error_message.should.be.equal(<span class=\"hljs-string\">'Access denied. You have insufficient permissions to perform this operation.'</span>)<br>          res.body.error_code.should.be.equal(<span class=\"hljs-number\">162</span>)<br>          done(err)<br>        })",
      "isRoot": false,
      "uuid": "22791adc-c0d2-409d-b14c-86e2bad20452",
      "parentUUID": "d8e0be76-df5b-491e-80e4-e3d433f962b8",
      "skipped": false
    },
    {
      "title": "should be able to logout application user from an application",
      "fullTitle": "App user login/logout should be able to logout application user from an application",
      "timedOut": false,
      "duration": 3154,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'login_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUser3.email,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>        }<br>      }))<br>        .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>          <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'logout_app_user'</span>, res.body.application_user.authtoken, api_key))<br>        })<br>        .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>          res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Logged out successfully.'</span>)<br>        })<br>        .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>          done()<br>        })<br>        .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>          <span class=\"hljs-built_in\">console</span>.log(err)<br>        })",
      "isRoot": false,
      "uuid": "e1edbc69-e4dd-4b78-97e2-6e71319dab3d",
      "parentUUID": "d8e0be76-df5b-491e-80e4-e3d433f962b8",
      "skipped": false
    },
    {
      "title": "should be able to get current logged in application user",
      "fullTitle": "App user token/uid should be able to get current logged in application user",
      "timedOut": false,
      "duration": 1719,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">30000</span>)<br><br>R.Promisify(factories.create(<span class=\"hljs-string\">'get_current_app_user'</span>, userAuthtoken1, api_key))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    userAuthtoken = res.body.application_user.authtoken<br>    <span class=\"hljs-comment\">// key assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(user).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>, <span class=\"hljs-string\">'isApplicationUser'</span>, <span class=\"hljs-string\">'authtoken'</span>])<br>    <span class=\"hljs-comment\">// data assertion</span><br>    user.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    user.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    user.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    user.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.active.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    user.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    user._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>    user.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.isApplicationUser.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    user.authtoken.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    <span class=\"hljs-comment\">// value assertion</span><br>    user.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    user.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>    user.email.should.be.equal(appUser4.email)<br>    user.first_name.should.be.equal(appUser4.first_name)<br>    user.last_name.should.be.equal(appUser4.last_name)<br>    user.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>    user.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>    user.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>    user.created_by.should.be.equal(userUID)<br>    user.updated_by.should.be.equal(userUID)<br>    user.created_at.should.be.not.equal(user.updated_at)<br>    user.uid.should.be.equal(appUser4.uid)<br>    user.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    user.ACL.should.be.deep.equal({ })<br>    user._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>    user.isApplicationUser.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
      "isRoot": false,
      "uuid": "2b2cbb19-12be-4cbe-b0fc-07307e13a3e3",
      "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid application user authtoken",
      "fullTitle": "App user token/uid should provide an error message for invalid application user authtoken",
      "timedOut": false,
      "duration": 1434,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">30000</span>)<br><br>R.Promisify(factories.create(<span class=\"hljs-string\">'get_current_app_user'</span>, <span class=\"hljs-string\">'899769kjnkj'</span>, api_key))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    res.status.should.be.equal(<span class=\"hljs-number\">422</span>)<br>    res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t})<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
      "isRoot": false,
      "uuid": "26da5db4-7320-4424-8352-a8fa96e81934",
      "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
      "skipped": false
    },
    {
      "title": "should be able to retrieve application user uid",
      "fullTitle": "App user token/uid should be able to retrieve application user uid",
      "timedOut": false,
      "duration": 1610,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'app_user_retrieve_user_uid'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"email\"</span>: appUser4.email<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.uid.should.be.equal(appUser4.uid)<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "afeb11f1-7407-448e-a4f7-924a5580c4b1",
      "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
      "skipped": false
    },
    {
      "title": "should be able to an application user token by using an application`s master key",
      "fullTitle": "App user token/uid should be able to an application user token by using an application`s master key",
      "timedOut": false,
      "duration": 2083,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'app_user_token'</span>, master_key, api_key, appUser4.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <br>  res.body.token.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  done()<br>})",
      "isRoot": false,
      "uuid": "269f0342-4cc0-4d4a-9971-45ee85b18dd4",
      "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
      "skipped": false
    },
    {
      "title": "should provide an error message for an invalid application`s master key",
      "fullTitle": "App user token/uid should provide an error message for an invalid application`s master key",
      "timedOut": false,
      "duration": 1473,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'app_user_token'</span>, <span class=\"hljs-string\">'kdsj43fvbgkj'</span>, api_key, appUser4.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  <span class=\"hljs-comment\">// res.body.token.should.be.a('string')</span><br>  done()<br>})",
      "isRoot": false,
      "uuid": "b231c12f-98ae-4901-8c80-42f2fd108f9f",
      "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
      "skipped": false
    },
    {
      "title": "should be able to activate app user`s account",
      "fullTitle": "App user activations should be able to activate app user`s account",
      "timedOut": false,
      "duration": 1501,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'activate_app_user'</span>, api_key, appUser5.uid, token))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Account activated successfully!'</span>)<br>  done()<br>})",
      "isRoot": false,
      "uuid": "3a711939-ed89-4ab4-bae0-c641eea7ddc3",
      "parentUUID": "221c4c39-8375-46cc-84b2-397e441427f8",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid token",
      "fullTitle": "App user activations should provide an error message for invalid token",
      "timedOut": false,
      "duration": 1749,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'activate_app_user'</span>, api_key, appUser5.uid, <span class=\"hljs-string\">'4569y8zvzkdfgzdf'</span>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.status.should.be.equal(<span class=\"hljs-number\">422</span>)<br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't retreive the token for you.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">147</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"token\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"Bummer. The token provided is invalid. Please try again.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
      "isRoot": false,
      "uuid": "9d85fafa-b589-4d26-88da-362464ef12f9",
      "parentUUID": "221c4c39-8375-46cc-84b2-397e441427f8",
      "skipped": false
    },
    {
      "title": "should be able to request reset password, for an application",
      "fullTitle": "App user requests should be able to request reset password, for an application",
      "timedOut": false,
      "duration": 1657,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'req_forgot_password'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"email\"</span>: appUser6.email<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'OK! We\\'ve sent you an email. Please check it for further instructions.'</span>)<br>  <br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "c4e4a834-4e06-4d3c-8d49-a59172810a37",
      "parentUUID": "ecd2cd96-803b-451b-b654-10907ad987bd",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid email for forgot password",
      "fullTitle": "App user requests should provide an error message for invalid email for forgot password",
      "timedOut": false,
      "duration": 1472,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'req_forgot_password'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't help you with your password. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">148</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"email\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "623ec6d6-ebcb-43b4-a454-2a98efc813ba",
      "parentUUID": "ecd2cd96-803b-451b-b654-10907ad987bd",
      "skipped": false
    },
    {
      "title": "should be able to reset password using provided token",
      "fullTitle": "App user forgot password should be able to reset password using provided token",
      "timedOut": false,
      "duration": 1485,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'reset_password_app_user'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"reset_password_token\"</span>: token,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! You\\'ve successfully reset your password.'</span>)<br>  <br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "a8185b62-1cec-4cfd-a1ef-7212f2b695bd",
      "parentUUID": "f3176f0e-ae33-4afb-8637-a7005ffe226e",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid reset password token",
      "fullTitle": "App user forgot password should provide an error message for invalid reset password token",
      "timedOut": false,
      "duration": 1788,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'reset_password_app_user'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"reset_password_token\"</span>: <span class=\"hljs-string\">\"swapnil\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't reset your password. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">149</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"reset_password_token\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"Bummer. The token provided is invalid. Please try again.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "beccee72-5360-4678-800d-d639467b2ba4",
      "parentUUID": "f3176f0e-ae33-4afb-8637-a7005ffe226e",
      "skipped": false
    },
    {
      "title": "should be able to check whether reset password token is valid or not",
      "fullTitle": "App user validate_token should be able to check whether reset password token is valid or not",
      "timedOut": false,
      "duration": 1757,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'validate_token_app_user'</span>, api_key, { <span class=\"hljs-string\">'application_user[reset_password_token]'</span>: token }))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'That token works!'</span>)<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "bcdd2423-126e-44e4-ad8d-6bf4d95c4492",
      "parentUUID": "34eb9474-218e-47bc-8f42-19a8ced504e2",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid provided token",
      "fullTitle": "App user validate_token should provide an error message for invalid provided token",
      "timedOut": false,
      "duration": 1847,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'validate_token_app_user'</span>, api_key, { <span class=\"hljs-string\">'application_user[reset_password_token]'</span>: <span class=\"hljs-string\">'swapnil'</span> }))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The token provided is invalid. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">210</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"reset_password_token\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not valid, or it might have expired\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "ae812842-1156-4bd7-b205-f4de982661a9",
      "parentUUID": "34eb9474-218e-47bc-8f42-19a8ced504e2",
      "skipped": false
    },
    {
      "title": "should be able to restricted whitelisted files only",
      "fullTitle": "uploads whitelist restrictions should be able to restricted whitelisted files only",
      "timedOut": false,
      "duration": 8299,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, sys_user1.authtoken, app1.api_key, filename2))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser2.authtoken, app1.api_key, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File creation failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">142</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
      "isRoot": false,
      "uuid": "8559bc3b-13cd-4f1d-9ac8-de91ca7591f1",
      "parentUUID": "24a77326-d8c3-41bd-9716-374cde59e5e9",
      "skipped": false
    },
    {
      "title": "should be able to restrict blackted files only",
      "fullTitle": "uploads blacklist restrictions should be able to restrict blackted files only",
      "timedOut": false,
      "duration": 9829,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File creation failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">142</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, sys_user1.authtoken, app1.api_key, filename2))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File creation failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">142</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser2.authtoken, app1.api_key, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'application/json'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, sys_user1.authtoken, app1.api_key, filename4))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'application/pdf'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
      "isRoot": false,
      "uuid": "fd9e80e0-fce9-4803-b03e-65f96519c7a2",
      "parentUUID": "82a262bd-6cc5-45cb-80d6-37ff4dbe813b",
      "skipped": false
    },
    {
      "title": "should be able to restrict whitelisted files only on update upload object",
      "fullTitle": "uploads restrictions on update object should be able to restrict whitelisted files only on update upload object",
      "timedOut": false,
      "duration": 4047,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br>    userFile = res.body.upload<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_upload'</span>, sys_user1.authtoken, app1.api_key, userFile.uid, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File update failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">143</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
      "isRoot": false,
      "uuid": "771c5a22-d66e-4afd-b7cc-a76c07923a11",
      "parentUUID": "f30573b8-70d5-4dc5-8671-47e7db21d930",
      "skipped": false
    },
    {
      "title": "should be able to disable restrictions on whitelisted files",
      "fullTitle": "uploads disable restrictions should be able to disable restrictions on whitelisted files",
      "timedOut": false,
      "duration": 5829,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br>    userFile = res.body.upload<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_upload'</span>, sys_user1.authtoken, app1.api_key, userFile.uid, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.deep.equal(<span class=\"hljs-string\">'Woot! File updated successfully.'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
      "isRoot": false,
      "uuid": "71ea8e6f-7da7-452a-92ec-0fd1e72a4e10",
      "parentUUID": "114e040f-cf0c-4e5d-89ac-da1691cf4c3b",
      "skipped": false
    },
    {
      "title": "should be able to restricted whitelisted files only",
      "fullTitle": "users profile whitelist restrictions should be able to restricted whitelisted files only",
      "timedOut": false,
      "duration": 1480,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser2.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"superman\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    user.username.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    user.first_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    <span class=\"hljs-comment\">// user.last_name.should.be.equal('superman')</span><br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err.trace)<br>  })",
      "isRoot": false,
      "uuid": "4619e1ba-b538-4d5e-9337-fd527882d938",
      "parentUUID": "eba5a843-ffea-4a1d-a480-44f0a0404bd2",
      "skipped": false
    },
    {
      "title": "should be able to restrict whitelisted uploads files only",
      "fullTitle": "users profile blacklist restrictions should be able to restrict whitelisted uploads files only",
      "timedOut": false,
      "duration": 1692,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser1.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"superman\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    user.username.should.be.equal(user1.username)<br>    user.last_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
      "isRoot": false,
      "uuid": "d3e04d3c-0b7d-4657-b4e0-327bbac20f83",
      "parentUUID": "a548b2c8-0324-46e0-a022-d1bcc7e32c19",
      "skipped": false
    },
    {
      "title": "should be able to restrict whitelisted user profile only",
      "fullTitle": "users profile disable restrictions should be able to restrict whitelisted user profile only",
      "timedOut": false,
      "duration": 1726,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser2.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"superman\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    user.username.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    user.first_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    user.last_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
      "isRoot": false,
      "uuid": "a8af99a2-a2b8-487f-83e8-06a6546105ce",
      "parentUUID": "cbbdc6e2-3040-4c39-aea7-57ddd8950e70",
      "skipped": false
    },
    {
      "title": "should be update by only system user",
      "fullTitle": "users restricted profile  should be update by only system user",
      "timedOut": false,
      "duration": 1644,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">30000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, sys_user1.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"object\"</span>: {<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"hulk\"</span>,<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"hulk\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"hulk\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.object<br>    user.username.should.be.equal(<span class=\"hljs-string\">'hulk'</span>)<br>    user.first_name.should.be.equal(<span class=\"hljs-string\">'hulk'</span>)<br>    user.last_name.should.be.equal(<span class=\"hljs-string\">'hulk'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
      "isRoot": false,
      "uuid": "e4e887ac-8f37-4963-bfd4-f49e72827bd9",
      "parentUUID": "da1bdb97-78b5-43c8-9470-add8f30df9e1",
      "skipped": false
    },
    {
      "title": "should be able to disable traditional login",
      "fullTitle": "Enable or disable, Permitted login schemes should be able to disable traditional login",
      "timedOut": false,
      "duration": 1626,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'login_app_user'</span>, app1.api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"email\"</span>: user2.email,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via traditional is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "135f6544-cae2-4eb8-950d-1c3084370176",
      "parentUUID": "b629e8e9-bb4a-45fa-be56-349305f069cb",
      "skipped": false
    },
    {
      "title": "should be able to disable Google login",
      "fullTitle": "Enable or disable, Permitted login schemes should be able to disable Google login",
      "timedOut": false,
      "duration": 1450,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'register_app_user'</span>, app1.api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"auth_data\"</span>: {<br>      <span class=\"hljs-string\">\"google\"</span>: {<br>          <span class=\"hljs-string\">\"access_token\"</span>: <span class=\"hljs-string\">\"ya29.CjHeAiM_voLZbQFdGxlzuHW1sweJFFzWfK5mHZn5Q5wkxTnnnZFa7axbhxEbuJ8cJz-N\"</span><br>      }<br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via google is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "ad6d7776-1999-4fa7-b4fc-825799c27a5f",
      "parentUUID": "b629e8e9-bb4a-45fa-be56-349305f069cb",
      "skipped": false
    },
    {
      "title": "should be able to disable facebook login",
      "fullTitle": "Enable or disable, Permitted login schemes should be able to disable facebook login",
      "timedOut": false,
      "duration": 1464,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'register_app_user'</span>, app1.api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"auth_data\"</span>: {<br>      <span class=\"hljs-string\">\"facebook\"</span>: {<br>        <span class=\"hljs-string\">\"access_token\"</span>: <span class=\"hljs-string\">\"ya29.AHES6ZSvSaMpLeToKeNVowjHEZrJA_J0k8\"</span><br>      }<br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via facebook is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "0ff6df4e-a5f4-4e12-ab43-1ac5e218e508",
      "parentUUID": "b629e8e9-bb4a-45fa-be56-349305f069cb",
      "skipped": false
    },
    {
      "title": "should be able to disable twitter login",
      "fullTitle": "Enable or disable, Permitted login schemes should be able to disable twitter login",
      "timedOut": false,
      "duration": 1443,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'register_app_user'</span>, app1.api_key, {<br><span class=\"hljs-string\">\"application_user\"</span>: {<br>  <span class=\"hljs-string\">\"auth_data\"</span>: {<br>      <span class=\"hljs-string\">\"twitter\"</span>: {<br>        <span class=\"hljs-string\">\"token\"</span>: <span class=\"hljs-string\">\"ya29.AHES6ZSvSaMpLeToKeNVowjHEZrJA_J0k8\"</span>,<br>        <span class=\"hljs-string\">\"token_secret\"</span>: <span class=\"hljs-string\">\"aMpLeToKeNVowjHEZrJA_J0k8\"</span>,<br>        <span class=\"hljs-string\">\"consumer_key\"</span>: <span class=\"hljs-string\">\"aMpLeToKeNVowjHEZrJA_J0k8kjfs78\"</span>,<br>        <span class=\"hljs-string\">\"consumer_secret\"</span>: <span class=\"hljs-string\">\"aMpLeToKeNVowjHEZrJA_J0kfd878\"</span><br>      }<br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via twitter is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "26e53b73-758c-49ae-8a57-dd4c6260b889",
      "parentUUID": "b629e8e9-bb4a-45fa-be56-349305f069cb",
      "skipped": false
    },
    {
      "title": "should be able to get list of all restricted uids for an application",
      "fullTitle": "Get restricted uids should be able to get list of all restricted uids for an application",
      "timedOut": false,
      "duration": 1422,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(api.get(config.endpoints.restricted_uids)<br>.set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>.expect(<span class=\"hljs-number\">200</span>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"restricted\"</span>: [<br>      <span class=\"hljs-string\">\"published\"</span>,<br>      <span class=\"hljs-string\">\"uid\"</span>,<br>      <span class=\"hljs-string\">\"created_at\"</span>,<br>      <span class=\"hljs-string\">\"deleted_at\"</span>,<br>      <span class=\"hljs-string\">\"updated_at\"</span>,<br>      <span class=\"hljs-string\">\"tags_array\"</span>,<br>      <span class=\"hljs-string\">\"klass_id\"</span>,<br>      <span class=\"hljs-string\">\"applikation_id\"</span>,<br>      <span class=\"hljs-string\">\"*_ids\"</span>,<br>      <span class=\"hljs-string\">\"id\"</span>,<br>      <span class=\"hljs-string\">\"_id\"</span>,<br>      <span class=\"hljs-string\">\"ACL\"</span>,<br>      <span class=\"hljs-string\">\"SYS_ACL\"</span>,<br>      <span class=\"hljs-string\">\"DEFAULT_ACL\"</span>,<br>      <span class=\"hljs-string\">\"app_user_object_uid\"</span>,<br>      <span class=\"hljs-string\">\"built_io_upload\"</span>,<br>      <span class=\"hljs-string\">\"__loc\"</span>,<br>      <span class=\"hljs-string\">\"tags\"</span>,<br>      <span class=\"hljs-string\">\"_owner\"</span>,<br>      <span class=\"hljs-string\">\"_version\"</span>,<br>      <span class=\"hljs-string\">\"toJSON\"</span>,<br>      <span class=\"hljs-string\">\"save\"</span>,<br>      <span class=\"hljs-string\">\"update\"</span>,<br>      <span class=\"hljs-string\">\"domain\"</span>,<br>      <span class=\"hljs-string\">\"shard_account\"</span>,<br>      <span class=\"hljs-string\">\"shard_app\"</span>,<br>      <span class=\"hljs-string\">\"shard_random\"</span>,<br>      <span class=\"hljs-string\">\"hook\"</span>,<br>      <span class=\"hljs-string\">\"__indexes\"</span>,<br>      <span class=\"hljs-string\">\"__meta\"</span>,<br>      <span class=\"hljs-string\">\"created_by\"</span>,<br>      <span class=\"hljs-string\">\"updated_by\"</span>,<br>      <span class=\"hljs-string\">\"inbuilt_class\"</span>,<br>      <span class=\"hljs-string\">\"tenant_id\"</span>,<br>      <span class=\"hljs-string\">\"isSystemUser\"</span>,<br>      <span class=\"hljs-string\">\"isApplicationUser\"</span>,<br>      <span class=\"hljs-string\">\"isNew\"</span>,<br>      <span class=\"hljs-string\">\"_shouldLean\"</span>,<br>      <span class=\"hljs-string\">\"_shouldFilter\"</span>,<br>      <span class=\"hljs-string\">\"_shouldSyncPostHooks\"</span>,<br>      <span class=\"hljs-string\">\"_skip_transformations\"</span>,<br>      <span class=\"hljs-string\">\"_filterOptions\"</span>,<br>      <span class=\"hljs-string\">\"options\"</span>,<br>      <span class=\"hljs-string\">\"_version\"</span>,<br>      <span class=\"hljs-string\">\"__v\"</span><br>    ]<br>  })<br>  <br>  done()<br>});",
      "isRoot": false,
      "uuid": "b22e862a-1956-4f56-a27d-d5cbde1eee78",
      "parentUUID": "d33d91bb-9e9f-486a-a0e0-433d3dad050d",
      "skipped": false
    },
    {
      "title": "should be able to create an application as a system user",
      "fullTitle": "App creation should be able to create an application as a system user",
      "timedOut": false,
      "duration": 3662,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> appName = <span class=\"hljs-string\">\"Post App\"</span><br>      factories.create(<span class=\"hljs-string\">'Create_application'</span>, authtoken, {<br>          <span class=\"hljs-string\">\"name\"</span>: appName<br>      })<br>      .expect(<span class=\"hljs-number\">201</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> application = res.body.application<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Hurray! Application created successfully.'</span>)<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>        application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        application.name.should.be.equal(appName)<br>        application.created_at.should.be.equal(application.updated_at)<br>        application.owner_uid.should.be.equal(userUID)<br>        application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>        factories.create(<span class=\"hljs-string\">'Delete_application'</span>, authtoken, application.api_key)<br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>            <br>            done(err)<br>          })<br>      })",
      "isRoot": false,
      "uuid": "c0b60afb-cf2b-424b-88b4-8a328a80a96c",
      "parentUUID": "5a19d2e9-fa9b-4e52-9f01-7bd3d0b04341",
      "skipped": false
    },
    {
      "title": "should provide error message for invalid authtoken while creating application",
      "fullTitle": "App creation should provide error message for invalid authtoken while creating application",
      "timedOut": false,
      "duration": 1456,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> appName = <span class=\"hljs-string\">\"Post App\"</span><br>      factories.create(<span class=\"hljs-string\">'Create_application'</span>, <span class=\"hljs-string\">\"asdasd\"</span>, {<br>          <span class=\"hljs-string\">\"name\"</span>: appName<br>      })<br>      .expect(<span class=\"hljs-number\">401</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {}<br>        })<br>         done(err)<br>      })",
      "isRoot": false,
      "uuid": "5c589063-cd13-48da-990b-20df2f02844f",
      "parentUUID": "5a19d2e9-fa9b-4e52-9f01-7bd3d0b04341",
      "skipped": false
    },
    {
      "title": "should be able to get all applications",
      "fullTitle": "Get applications should be able to get all applications",
      "timedOut": false,
      "duration": 1678,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br><br>    <span class=\"hljs-keyword\">var</span> application = res.body.applications[<span class=\"hljs-number\">0</span>]<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    application.api_key.should.be.equal(api_key)<br>    application.created_at.should.be.equal(application.updated_at)<br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br><br><br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "29ff5c48-05d7-4800-992d-66bb8e2785b7",
      "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
      "skipped": false
    },
    {
      "title": "should be able to get count of applications created",
      "fullTitle": "Get applications should be able to get count of applications created",
      "timedOut": false,
      "duration": 1638,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-literal\">true</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(res.body).should.to.be.deep.equal([<span class=\"hljs-string\">'applications'</span>])<br>    res.body.applications.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "d8c87e57-1b27-43c5-9f9c-9a1ca68eb5c9",
      "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
      "skipped": false
    },
    {
      "title": "should be able to get an application using query",
      "fullTitle": "Get applications should be able to get an application using query",
      "timedOut": false,
      "duration": 1693,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"query\"</span>: {<br>      <span class=\"hljs-string\">\"api_key\"</span>: api_key<br>    }<br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br><br>    <span class=\"hljs-keyword\">var</span> application = res.body.applications[<span class=\"hljs-number\">0</span>]<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    application.api_key.should.be.equal(api_key)<br>    application.created_at.should.be.equal(application.updated_at)<br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br><br><br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "f8a7d916-a6c2-4126-a97e-8678f774a502",
      "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
      "skipped": false
    },
    {
      "title": "should be able to provide an applications count in response",
      "fullTitle": "Get applications should be able to provide an applications count in response",
      "timedOut": false,
      "duration": 1577,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-literal\">true</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> response = res.body<br>    <br>    response.applications.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>    response.applications.should.not.equal(<span class=\"hljs-number\">0</span>)<br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "afed5fa2-7940-46f9-b5aa-6771899a0589",
      "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
      "skipped": false
    },
    {
      "title": "should be able to get an applications including collaborators info in response",
      "fullTitle": "Get applications should be able to get an applications including collaborators info in response",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">25000</span>)<br>factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>        <span class=\"hljs-string\">\"emails\"</span>: [<br>          res.body.user.email<br>        ]<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        <br>        factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>            <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>            <span class=\"hljs-string\">\"include_collaborators\"</span>: <span class=\"hljs-literal\">true</span>,<br>            <span class=\"hljs-string\">\"query\"</span>: {<br>              <span class=\"hljs-string\">\"api_key\"</span>: api_key<br>            }<br>          })<br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>            <br>            <span class=\"hljs-keyword\">var</span> application = res2.body.applications[<span class=\"hljs-number\">0</span>]<br>            <br>          <span class=\"hljs-comment\">// Keys assertion</span><br>            <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'collaborators'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>            <span class=\"hljs-built_in\">Object</span>.keys(application.collaborators[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>, <span class=\"hljs-string\">'is_owner'</span>, <span class=\"hljs-string\">'roles'</span>])<br>            <span class=\"hljs-built_in\">Object</span>.keys(application.collaborators[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>, <span class=\"hljs-string\">'roles'</span>])<br>              <span class=\"hljs-comment\">// Data type assertion</span><br>            application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].plan_id.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].plan_id.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].is_owner.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            <span class=\"hljs-comment\">//application.collaborators[1].roles[0].should.be.a('string') </span><br>            application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>            application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>            application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>            <span class=\"hljs-comment\">// Value assertion</span><br>            application.api_key.should.be.equal(api_key)<br>            application.owner_uid.should.be.equal(userUID)<br>            application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>            application.collaborators[<span class=\"hljs-number\">1</span>].uid.should.be.equal(userUID)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].uid.should.not.be.equal(userUID)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'free_trial'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'free_trial'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].username.should.be.equal(username)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].email.should.be.equal(email)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].is_owner.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>            <span class=\"hljs-comment\">//application.created_at.should.be.equal(application.updated_at)</span><br>            done(err)<br>          })<br>      })<br>  })",
      "err": {
        "name": "AssertionError",
        "message": "expected [ Array(9) ] to deeply equal [ Array(8) ]",
        "stack": "AssertionError: expected [ Array(9) ] to deeply equal [ Array(8) ]<br>    at assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/addMethod.js:41:25)<br>    at doAsserterAsyncAndAddThen (node_modules/chai-as-promised/lib/chai-as-promised.js:292:33)<br>    at null.&lt;anonymous&gt; (node_modules/chai-as-promised/lib/chai-as-promised.js:251:21)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at somethingMethod (node_modules/chai-things/lib/chai-things.js:97:25)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at allMethod (node_modules/chai-things/lib/chai-things.js:165:25)<br>    at ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at Test.&lt;anonymous&gt; (spec/application/application_spec.js:348:79)<br>    at Test.assert (node_modules/supertest/lib/test.js:156:6)<br>    at assert (node_modules/supertest/lib/test.js:127:12)<br>    at node_modules/supertest/lib/test.js:124:5<br>    at Test.Request.callback (node_modules/supertest/node_modules/superagent/lib/node/index.js:785:12)<br>    at Stream.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/index.js:990:12)<br>    at Unzip.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/utils.js:108:12)<br>    at endReadableNT (_stream_readable.js:913:12)"
      },
      "isRoot": false,
      "uuid": "dc40d363-7db2-42be-8c75-0fc73dafb1a8",
      "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
      "skipped": false
    },
    {
      "title": "should be able to get an application including application variables in response.",
      "fullTitle": "Get applications should be able to get an application including application variables in response.",
      "timedOut": false,
      "duration": 3158,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Update_app_settings'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"app_settings\"</span>: {<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"test_tool\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>      }<br>    }<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    <br>    factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>        <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>        <span class=\"hljs-string\">\"include_application_variables\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>        <span class=\"hljs-comment\">//res2.body.applications.length.should.be.equal(1)</span><br>        <br>        <span class=\"hljs-keyword\">var</span> application = R.last(res2.body.applications)<br>        <br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(application.application_variables).should.to.be.deep.equal([<span class=\"hljs-string\">'test_tool'</span>])<br>        <br>          <span class=\"hljs-comment\">// Data type assertion</span><br>        application.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        <br>        application.application_variables.test_tool.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br><br>        done(err)<br>      })<br>  })",
      "isRoot": false,
      "uuid": "2b60ef61-f263-4e2f-9321-d9519e8efa57",
      "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
      "skipped": false
    },
    {
      "title": "should be able to skip number of applications while getting all apps",
      "fullTitle": "Get an applications skip/limit should be able to skip number of applications while getting all apps",
      "timedOut": false,
      "duration": 1492,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">3</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-keyword\">var</span> application = res.body.applications<br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "ad7ffa63-bc58-4fbf-97b3-e12ca16f0677",
      "parentUUID": "550eeb5f-6e6a-48f8-8e55-18ab9a0738ea",
      "skipped": false
    },
    {
      "title": "should be able to limit number of applications while getting all apps",
      "fullTitle": "Get an applications skip/limit should be able to limit number of applications while getting all apps",
      "timedOut": false,
      "duration": 1654,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">20000</span>)<br>factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-string\">\"2\"</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>    <br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "9ff7d759-2cb5-460e-aa01-5d5e34619400",
      "parentUUID": "550eeb5f-6e6a-48f8-8e55-18ab9a0738ea",
      "skipped": false
    },
    {
      "title": "should provide error message for -ve skip/limit values while getting all apps",
      "fullTitle": "Get an applications skip/limit should provide error message for -ve skip/limit values while getting all apps",
      "timedOut": false,
      "duration": 1616,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"skip\"</span>: -<span class=\"hljs-number\">2</span>,<br>    <span class=\"hljs-string\">\"limit\"</span>: -<span class=\"hljs-number\">2</span><br>  })<br>.expect(<span class=\"hljs-number\">422</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Failed to fetch applications. Please try again with valid parameters.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">109</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"params\"</span>: [<br>        <span class=\"hljs-string\">\"has an invalid operation.\"</span><br>      ]<br>    }<br>  })<br>  <br>  done(err)<br>})",
      "isRoot": false,
      "uuid": "a5a3ec67-ebc2-4ac4-b85f-240f775d5da1",
      "parentUUID": "550eeb5f-6e6a-48f8-8e55-18ab9a0738ea",
      "skipped": false
    },
    {
      "title": "should be able to get field datatypes supported and the various options for these fields",
      "fullTitle": "Get valid field types for an application should be able to get field datatypes supported and the various options for these fields",
      "timedOut": false,
      "duration": 1635,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "api.get(config.endpoints.applications + config.endpoints.valid_field_types)<br>  .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>  .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>  .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"field_types\"</span>: [<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Text\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this datatype we can enter string literals for the field. Additionaly you can also assign blob data.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"isodate\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"ISODate\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this datatype you can assign either date, time or datetime values for the particular field.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"file\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"File\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"When you upload any asset in your built.io application, you can apply that upload's UID to this field. This will form a link between that asset and the object.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"boolean\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Boolean\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Use this datatype when you would like to add fields that can act as a switch for you. For Example: In an Invoice class, there can be a boolean field called, 'paid'\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"reference\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Reference\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"You can refer to objects of other classes in your application, when you use this field.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"group\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Group\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this field, you can group other fields into this one. An example usage can be, an address field, which is a composite of streeet address, city, state.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"link\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Link\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this field you can save hyperlinks into your objects. The link field itself is composite of two fields, link title and link href.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Number\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"This datatype can be used to store numerical values.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"mixed\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Mixed\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"This datatype helps you save a key-value store in your object.\"</span><br>        }<br>      ]<br>    })<br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "3ad8aca2-89f8-492e-8153-c9e12d667eb4",
      "parentUUID": "55410991-7f0a-4e08-8a55-11e3ba1c56aa",
      "skipped": false
    },
    {
      "title": "should be able to get application as an owner",
      "fullTitle": "Get app should be able to get application as an owner",
      "timedOut": false,
      "duration": 7745,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_application'</span>, authtoken)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> app = res.body.application<br>    factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, app.api_key)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> application = res1.body.application<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>        application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        application.api_key.should.be.equal(app.api_key)<br>          <span class=\"hljs-comment\">// bug</span><br>          <span class=\"hljs-comment\">//application.created_at.should.be.equal(application.updated_at)</span><br>        application.owner_uid.should.be.equal(userUID)<br>        application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>        factories.create(<span class=\"hljs-string\">'Delete_application'</span>, authtoken, app.api_key)<br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>            done(err)<br>          })<br><br>      })<br>  });",
      "isRoot": false,
      "uuid": "cd5e31c8-cc2c-4f7f-934c-ba56192134fe",
      "parentUUID": "05cc5d88-4600-482c-b994-ad99838e0b59",
      "skipped": false
    },
    {
      "title": "should be able to get application as a collaborator without master_key in response",
      "fullTitle": "Get app should be able to get application as a collaborator without master_key in response",
      "timedOut": false,
      "duration": 1691,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken1, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    <span class=\"hljs-keyword\">var</span> application = res.body.application<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    application.user_uids.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    application.api_key.should.be.equal(api_key)<br>    <span class=\"hljs-comment\">//bug</span><br>    <span class=\"hljs-comment\">//application.created_at.should.be.equal(application.updated_at)</span><br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>    application.owner_uid.should.not.equal(application.user_uids[<span class=\"hljs-number\">1</span>])<br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "00f6a994-81b1-48c3-8cba-c7daf53c7449",
      "parentUUID": "05cc5d88-4600-482c-b994-ad99838e0b59",
      "skipped": false
    },
    {
      "title": "should be able to update created application",
      "fullTitle": "Update app should be able to update created application",
      "timedOut": false,
      "duration": 1454,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Update_application'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    <span class=\"hljs-keyword\">var</span> application = res.body.application<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    <span class=\"hljs-comment\">// application.user_uids[0].length.should.be.a('string')</span><br>    <span class=\"hljs-comment\">// console.log(\"==\", application.user_uids)</span><br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Awesome! Application updated successfully.'</span>)<br>    application.name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>    application.api_key.should.be.equal(api_key)<br>    application.created_at.should.be.not.equal(application.updated_at)<br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "583726d8-6775-489b-bbe4-c13d63e50637",
      "parentUUID": "e7444b60-0020-4df7-b396-5211e15b89e5",
      "skipped": false
    },
    {
      "title": "should not be able to update application as a collaborator",
      "fullTitle": "Update app should not be able to update application as a collaborator",
      "timedOut": false,
      "duration": 4911,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'Update_application'</span>, res.body.user.authtoken, api_key, {<br>                  <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated by collaborator\"</span><br>                })<br>                .expect(<span class=\"hljs-number\">422</span>) <span class=\"hljs-comment\">//need to fix in factory</span><br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.error_message.should.to.be.equal(<span class=\"hljs-string\">'Bummer. Access denied. It seems you are not the owner of the app.'</span>)<br>                  done(err)<br>                })<br>            })<br>        })",
      "isRoot": false,
      "uuid": "41c2522c-e713-4a1e-9488-30229df5e1fc",
      "parentUUID": "e7444b60-0020-4df7-b396-5211e15b89e5",
      "skipped": false
    },
    {
      "title": "should be able to delete careated application",
      "fullTitle": "Delete app should be able to delete careated application",
      "timedOut": false,
      "duration": 3767,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> appName = <span class=\"hljs-string\">\"Delete App\"</span><br>      factories.create(<span class=\"hljs-string\">'Create_application'</span>, authtoken, {<br>          <span class=\"hljs-string\">\"name\"</span>: appName<br>        })<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          <span class=\"hljs-keyword\">var</span> application = res.body.application<br>          res.body.notice.should.be.equal(<span class=\"hljs-string\">'Hurray! Application created successfully.'</span>)<br>          factories.create(<span class=\"hljs-string\">'Delete_application'</span>, authtoken, application.api_key)<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              res1.body.notice.should.be.equal(<span class=\"hljs-string\">'That worked. Application deleted successfully!'</span>)<br>              done(err)<br>            })<br>        })",
      "isRoot": false,
      "uuid": "e7320f15-6f41-49a8-acd9-241206d78d18",
      "parentUUID": "83ba1904-ea0a-486d-895c-8244b2945520",
      "skipped": false
    },
    {
      "title": "should not be able to delete application as a collaborator",
      "fullTitle": "Delete app should not be able to delete application as a collaborator",
      "timedOut": false,
      "duration": 4796,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>        <span class=\"hljs-string\">\"emails\"</span>: [<br>          res.body.user.email<br>        ]<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        factories.create(<span class=\"hljs-string\">'Delete_application'</span>, res.body.user.authtoken, api_key)<br>          .expect(<span class=\"hljs-number\">422</span>) <span class=\"hljs-comment\">//need to fix in factory</span><br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> response = res2.body<br>            response.error_message.should.to.be.equal(<span class=\"hljs-string\">'Bummer. Access denied. It seems you are not the owner of the app.'</span>)<br>            done(err)<br>          })<br>      })<br>  })",
      "isRoot": false,
      "uuid": "262afe98-de87-455b-86ec-a3f527109201",
      "parentUUID": "83ba1904-ea0a-486d-895c-8244b2945520",
      "skipped": false
    },
    {
      "title": "should be able to reset app master key as a owner",
      "fullTitle": "Reset app master key should be able to reset app master key as a owner",
      "timedOut": false,
      "duration": 2909,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.reset_master_key)<br>  .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>  .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>  .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'OK, we\\'ve generated a new master key for you.'</span>)<br>    factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> application = res1.body.application<br>        application.master_key.should.be.not.equal(master_key)<br>        done(err)<br>      })<br>  })",
      "isRoot": false,
      "uuid": "1356d930-8626-466f-94f6-b591297f20f5",
      "parentUUID": "cbae1fe4-af1a-4de0-9e80-1916b43b2520",
      "skipped": false
    },
    {
      "title": "should not be able to reset app master key as a collaborator",
      "fullTitle": "Reset app master key should not be able to reset app master key as a collaborator",
      "timedOut": false,
      "duration": 1686,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.reset_master_key)<br>  .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>  .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken3)<br>  .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>  .expect(<span class=\"hljs-number\">422</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Access denied. It seems you are not the owner of the app.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">133</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {}<br>    })          <br>    done(err)<br>    <br>  })",
      "isRoot": false,
      "uuid": "1fb3d8b4-b52c-4048-aaf7-d703c4e1779f",
      "parentUUID": "cbae1fe4-af1a-4de0-9e80-1916b43b2520",
      "skipped": false
    },
    {
      "title": "should be able to get application settings",
      "fullTitle": "App settings should be able to get application settings",
      "timedOut": false,
      "duration": 1436,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_app_settings'</span>, authtoken, api_key)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>  <span class=\"hljs-keyword\">var</span> settings = res.body.app_settings<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>  <span class=\"hljs-built_in\">Object</span>.keys(settings).should.to.be.deep.equal([<span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>, <span class=\"hljs-string\">'smtp_settings'</span>, <span class=\"hljs-string\">'login_schemes'</span>, <span class=\"hljs-string\">'upload_type_restriction'</span>, <span class=\"hljs-string\">'restricted_profile_update'</span>, <span class=\"hljs-string\">'hide_email'</span>, <span class=\"hljs-string\">'allow_client_notifications'</span>, <span class=\"hljs-string\">'active_user_threshold'</span>, <span class=\"hljs-string\">'auto_create_tenants'</span>, <span class=\"hljs-string\">'activation_template'</span>, <span class=\"hljs-string\">'welcome_template'</span>, <span class=\"hljs-string\">'forgot_password_template'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.login_schemes).should.to.be.deep.equal([<span class=\"hljs-string\">'google'</span>, <span class=\"hljs-string\">'facebook'</span>, <span class=\"hljs-string\">'twitter'</span>, <span class=\"hljs-string\">'tibbr'</span>, <span class=\"hljs-string\">'traditional'</span>, <span class=\"hljs-string\">'anyauth'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.upload_type_restriction).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'list'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.restricted_profile_update).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'keys'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.activation_template).should.to.be.deep.equal([<span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.welcome_template).should.to.be.deep.equal([<span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.forgot_password_template).should.to.be.deep.equal([<span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'template'</span>])<br><br>  <span class=\"hljs-comment\">// Data type assertion</span><br>  settings.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.login_schemes.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.upload_type_restriction.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.restricted_profile_update.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.hide_email.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.allow_client_notifications.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.active_user_threshold.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>  settings.auto_create_tenants.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.activation_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.welcome_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.forgot_password_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.login_schemes.google.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.facebook.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.twitter.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.tibbr.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.traditional.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.anyauth.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.upload_type_restriction.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.upload_type_restriction.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.upload_type_restriction.list.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  settings.restricted_profile_update.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.restricted_profile_update.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.restricted_profile_update.keys.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  settings.activation_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.activation_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.activation_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.activation_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.welcome_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.welcome_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.welcome_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.welcome_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.forgot_password_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.forgot_password_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.forgot_password_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>  <span class=\"hljs-comment\">// Value assertion</span><br>  settings.login_schemes.google.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.facebook.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.twitter.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.tibbr.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.traditional.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.anyauth.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.upload_type_restriction.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.upload_type_restriction.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.upload_type_restriction.list.should.be.deep.equal([])<br>  settings.restricted_profile_update.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.restricted_profile_update.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.restricted_profile_update.keys.should.be.deep.equal([])<br><br>  settings.hide_email.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.allow_client_notifications.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.active_user_threshold.should.be.equal(<span class=\"hljs-number\">15</span>)<br>  settings.auto_create_tenants.should.be.equal(<span class=\"hljs-literal\">false</span>)<br><br>  settings.activation_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>  settings.activation_template.subject.should.be.equal(<span class=\"hljs-string\">'Activate Your Account'</span>)<br>  settings.activation_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;Hi!&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Thank you for creating an account!\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Please &lt;a href=\"{{confirm_link}}\"&gt;confirm&lt;/a&gt; your account to continue.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\nIf you have any problems, please feel free to contact us.\\n&lt;/p&gt;\\n\\n&lt;br/&gt;\\n\\n&lt;p&gt;\\n  Cheers.\\n&lt;/p&gt;'</span>)<br>  settings.activation_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.welcome_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>  settings.welcome_template.subject.should.be.equal(<span class=\"hljs-string\">'Welcome!'</span>)<br>  settings.welcome_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;\\n  Hi!\\n&lt;/p&gt;\\n&lt;p&gt;\\n  Welcome to {{app_name}}.\\n  &lt;br/&gt;\\n  &lt;br/&gt;\\n  Your registration has been confirmed successfully.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Cheers\\n&lt;/p&gt;'</span>)<br>  settings.welcome_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.forgot_password_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>  settings.forgot_password_template.subject.should.be.equal(<span class=\"hljs-string\">'Reset Your Password'</span>)<br>  settings.forgot_password_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;Hi!&lt;/p&gt;\\n\\n&lt;p&gt;\\n  You (or someone else) have requested to reset your password for {{app_name}}.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  If you follow the link below you will be able to personally reset your password\\n&lt;/p&gt;\\n\\n&lt;br /&gt;\\n{{reset_password_link}}\\n\\n&lt;p&gt;Cheers&lt;/p&gt;'</span>)<br>  done(err)<br>})",
      "isRoot": false,
      "uuid": "73ee943b-9e7f-4fe1-a978-85b40163150b",
      "parentUUID": "97c07ea4-479d-4e74-bc41-a221a780f95e",
      "skipped": false
    },
    {
      "title": "should be able to update application settings",
      "fullTitle": "App settings should be able to update application settings",
      "timedOut": false,
      "duration": 1614,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Update_app_settings'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"app_settings\"</span>: {<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"test_tool\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>      },<br>      <span class=\"hljs-string\">\"discrete_variables\"</span>: {<br>        <span class=\"hljs-string\">\"supertest\"</span>: <span class=\"hljs-string\">\"is a nodejs test tool\"</span><br>      },<br>      <span class=\"hljs-string\">\"activation_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"activation_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail activation template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"welcome_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"welcome_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail welcome template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"forgot_password_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"forgot_password_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"forgot password template\"</span><br>      },<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"testing_tool\"</span>: <span class=\"hljs-string\">\"using supertest and mocha\"</span><br>      },<br>      <span class=\"hljs-string\">\"allow_client_notifications\"</span>: <span class=\"hljs-string\">\"true\"</span>,<br>      <span class=\"hljs-string\">\"active_user_threshold\"</span>: <span class=\"hljs-string\">\"20\"</span>,<br>      <span class=\"hljs-string\">\"auto_create_tenants\"</span>: <span class=\"hljs-string\">\"false\"</span><br>    }<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> settings = res.body.app_settings<br>    <br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Awesome! The application settings were updated successfully.'</span>)<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(settings).should.to.be.deep.equal([<span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>, <span class=\"hljs-string\">'smtp_settings'</span>, <span class=\"hljs-string\">'login_schemes'</span>, <span class=\"hljs-string\">'upload_type_restriction'</span>, <span class=\"hljs-string\">'restricted_profile_update'</span>, <span class=\"hljs-string\">'hide_email'</span>, <span class=\"hljs-string\">'allow_client_notifications'</span>, <span class=\"hljs-string\">'active_user_threshold'</span>, <span class=\"hljs-string\">'auto_create_tenants'</span>, <span class=\"hljs-string\">'activation_template'</span>, <span class=\"hljs-string\">'welcome_template'</span>, <span class=\"hljs-string\">'forgot_password_template'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.login_schemes).should.to.be.deep.equal([<span class=\"hljs-string\">'google'</span>, <span class=\"hljs-string\">'facebook'</span>, <span class=\"hljs-string\">'twitter'</span>, <span class=\"hljs-string\">'tibbr'</span>, <span class=\"hljs-string\">'traditional'</span>, <span class=\"hljs-string\">'anyauth'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.upload_type_restriction).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'list'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.restricted_profile_update).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'keys'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.activation_template).should.to.be.deep.equal([<span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.welcome_template).should.to.be.deep.equal([<span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.forgot_password_template).should.to.be.deep.equal([<span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'template'</span>])<br><br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    settings.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.login_schemes.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.upload_type_restriction.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.restricted_profile_update.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.hide_email.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.allow_client_notifications.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.active_user_threshold.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>    settings.auto_create_tenants.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.activation_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.welcome_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.forgot_password_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.login_schemes.google.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.facebook.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.twitter.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.tibbr.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.traditional.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.anyauth.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.upload_type_restriction.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.upload_type_restriction.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.upload_type_restriction.list.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    settings.restricted_profile_update.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.restricted_profile_update.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.restricted_profile_update.keys.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    settings.activation_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.activation_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.activation_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.activation_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.welcome_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.welcome_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.welcome_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.welcome_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.forgot_password_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.forgot_password_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.forgot_password_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>    <span class=\"hljs-comment\">// Value assertion</span><br>    settings.login_schemes.google.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.facebook.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.twitter.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.tibbr.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.traditional.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.anyauth.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.upload_type_restriction.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.upload_type_restriction.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.upload_type_restriction.list.should.be.deep.equal([])<br>    settings.restricted_profile_update.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.restricted_profile_update.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.restricted_profile_update.keys.should.be.deep.equal([])<br>    settings.hide_email.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.allow_client_notifications.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.active_user_threshold.should.be.equal(<span class=\"hljs-number\">20</span>)<br>    settings.auto_create_tenants.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.activation_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>    settings.activation_template.subject.should.be.equal(<span class=\"hljs-string\">'activation_template'</span>)<br>    settings.activation_template.template.should.be.equal(<span class=\"hljs-string\">'the mail activation template'</span>)<br>    settings.activation_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.welcome_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>    settings.welcome_template.subject.should.be.equal(<span class=\"hljs-string\">'welcome_template'</span>)<br>    settings.welcome_template.template.should.be.equal(<span class=\"hljs-string\">'the mail welcome template'</span>)<br>    settings.welcome_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.forgot_password_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>    settings.forgot_password_template.subject.should.be.equal(<span class=\"hljs-string\">'forgot_password_template'</span>)<br>    settings.forgot_password_template.template.should.be.equal(<span class=\"hljs-string\">'forgot password template'</span>)<br>    settings.application_variables.testing_tool.should.be.equal(<span class=\"hljs-string\">'using supertest and mocha'</span>)<br>    settings.discrete_variables.supertest.should.be.equal(<span class=\"hljs-string\">'is a nodejs test tool'</span>)<br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "4309f5c0-04d9-4296-9d17-dda877176403",
      "parentUUID": "97c07ea4-479d-4e74-bc41-a221a780f95e",
      "skipped": false
    },
    {
      "title": "should be able to reset application settings",
      "fullTitle": "App settings should be able to reset application settings",
      "timedOut": false,
      "duration": 3182,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Update_app_settings'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"app_settings\"</span>: {<br>      <span class=\"hljs-string\">\"activation_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"activation_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail activation template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"welcome_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"welcome_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail welcome template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"forgot_password_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"forgot_password_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"forgot password template\"</span><br>      },<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"testing_tool\"</span>: <span class=\"hljs-string\">\"using 'supertest and mocha'\"</span><br>      },<br>      <span class=\"hljs-string\">\"allow_client_notifications\"</span>: <span class=\"hljs-string\">\"true\"</span>,<br>      <span class=\"hljs-string\">\"active_user_threshold\"</span>: <span class=\"hljs-string\">\"20\"</span>,<br>      <span class=\"hljs-string\">\"auto_create_tenants\"</span>: <span class=\"hljs-string\">\"false\"</span><br>    }<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    factories.create(<span class=\"hljs-string\">'reset_app_settings'</span>, authtoken, api_key, {<br>        <span class=\"hljs-string\">\"scope\"</span>: {<br>          <span class=\"hljs-string\">\"activation_template\"</span>: []<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> settings = res.body.app_settings<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Awesome! The application settings were updated successfully.'</span>)<br>        <br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(settings).should.to.be.deep.equal([<span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>, <span class=\"hljs-string\">'smtp_settings'</span>, <span class=\"hljs-string\">'login_schemes'</span>, <span class=\"hljs-string\">'upload_type_restriction'</span>, <span class=\"hljs-string\">'restricted_profile_update'</span>, <span class=\"hljs-string\">'hide_email'</span>, <span class=\"hljs-string\">'allow_client_notifications'</span>, <span class=\"hljs-string\">'active_user_threshold'</span>, <span class=\"hljs-string\">'auto_create_tenants'</span>, <span class=\"hljs-string\">'activation_template'</span>, <span class=\"hljs-string\">'welcome_template'</span>, <span class=\"hljs-string\">'forgot_password_template'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(settings.login_schemes).should.to.be.deep.equal([<span class=\"hljs-string\">'google'</span>, <span class=\"hljs-string\">'facebook'</span>, <span class=\"hljs-string\">'twitter'</span>, <span class=\"hljs-string\">'tibbr'</span>, <span class=\"hljs-string\">'traditional'</span>, <span class=\"hljs-string\">'anyauth'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(settings.upload_type_restriction).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'list'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(settings.restricted_profile_update).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'keys'</span>])<br>        <span class=\"hljs-comment\">// order is not static need to change</span><br>        <span class=\"hljs-comment\">// Object.keys(settings.activation_template).should.to.be.deep.equal(['subject', 'reply_to', 'template', 'use'])</span><br>        <span class=\"hljs-comment\">// Object.keys(settings.welcome_template).should.to.be.equal(['subject', 'template', 'use', 'reply_to'])</span><br>        <span class=\"hljs-comment\">// Object.keys(settings.forgot_password_template).should.to.be.equal(['reply_to', 'subject', 'template'])</span><br><br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        settings.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.login_schemes.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.upload_type_restriction.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.restricted_profile_update.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.hide_email.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.allow_client_notifications.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.active_user_threshold.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        settings.auto_create_tenants.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.activation_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.welcome_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.forgot_password_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.login_schemes.google.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.facebook.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.twitter.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.tibbr.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.traditional.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.anyauth.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.upload_type_restriction.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.upload_type_restriction.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.upload_type_restriction.list.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        settings.restricted_profile_update.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.restricted_profile_update.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.restricted_profile_update.keys.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        settings.activation_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.activation_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.activation_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.activation_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.welcome_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.welcome_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.welcome_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.welcome_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.forgot_password_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.forgot_password_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.forgot_password_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>        <span class=\"hljs-comment\">// Value assertion</span><br>        settings.login_schemes.google.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.facebook.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.twitter.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.tibbr.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.traditional.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.anyauth.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.upload_type_restriction.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        settings.upload_type_restriction.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.upload_type_restriction.list.should.be.deep.equal([])<br>        settings.restricted_profile_update.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        settings.restricted_profile_update.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.restricted_profile_update.keys.should.be.deep.equal([])<br><br>        settings.hide_email.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        settings.allow_client_notifications.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.active_user_threshold.should.be.equal(<span class=\"hljs-number\">20</span>)<br>        settings.auto_create_tenants.should.be.equal(<span class=\"hljs-literal\">false</span>)<br><br>        settings.activation_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>        settings.activation_template.subject.should.be.equal(<span class=\"hljs-string\">'Activate Your Account'</span>)<br>        settings.activation_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;Hi!&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Thank you for creating an account!\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Please &lt;a href=\"{{confirm_link}}\"&gt;confirm&lt;/a&gt; your account to continue.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\nIf you have any problems, please feel free to contact us.\\n&lt;/p&gt;\\n\\n&lt;br/&gt;\\n\\n&lt;p&gt;\\n  Cheers.\\n&lt;/p&gt;'</span>)<br>        settings.activation_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.welcome_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>        settings.welcome_template.subject.should.be.equal(<span class=\"hljs-string\">'welcome_template'</span>)<br>        settings.welcome_template.template.should.be.equal(<span class=\"hljs-string\">'the mail welcome template'</span>)<br>        settings.welcome_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.forgot_password_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>        settings.forgot_password_template.subject.should.be.equal(<span class=\"hljs-string\">'forgot_password_template'</span>)<br>        settings.forgot_password_template.template.should.be.equal(<span class=\"hljs-string\">'forgot password template'</span>)<br>        done(err)<br>      });<br>  });",
      "isRoot": false,
      "uuid": "70327c79-aaff-42fa-adaf-e1e2360bdbca",
      "parentUUID": "97c07ea4-479d-4e74-bc41-a221a780f95e",
      "skipped": false
    },
    {
      "title": "should be able to get all collaborators present in an application",
      "fullTitle": "Collaborators invite and unaccepted_invitations should be able to get all collaborators present in an application",
      "timedOut": true,
      "duration": 60050,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">60000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  collaborator = res.body.user<br>  <span class=\"hljs-keyword\">return</span> res<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"emails\"</span>: [<br>      res.body.user.email<br>    ]<br>  }))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Get_collaborators'</span>, authtoken, api_key)) <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  users = res.body.users<br>  <span class=\"hljs-built_in\">Object</span>.keys(users[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'email'</span>,<span class=\"hljs-string\">'username'</span>,<span class=\"hljs-string\">'company'</span>,<span class=\"hljs-string\">'plan_id'</span>,<span class=\"hljs-string\">'roles'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(users[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'email'</span>,<span class=\"hljs-string\">'username'</span>,<span class=\"hljs-string\">'plan_id'</span>,<span class=\"hljs-string\">'is_owner'</span>,<span class=\"hljs-string\">'roles'</span>])<br>  users[<span class=\"hljs-number\">0</span>].email.should.be.equal(collaborator.email)<br>  users[<span class=\"hljs-number\">1</span>].email.should.be.equal(email)<br>  users[<span class=\"hljs-number\">1</span>].is_owner.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "err": {
        "name": "Error",
        "message": "timeout of 60000ms exceeded. Ensure the done() callback is being called in this test.",
        "stack": "<span class=\"hljs-built_in\">Error</span>: timeout <span class=\"hljs-keyword\">of</span> <span class=\"hljs-number\">60000</span>ms exceeded. Ensure the done() callback is being called <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">this</span> test."
      },
      "isRoot": false,
      "uuid": "21eea86b-9f72-4da5-a8f5-63b6ca66bb92",
      "parentUUID": "ee0922bb-d23b-4069-86af-be83617d5015",
      "skipped": false
    },
    {
      "title": "should be able to invite collaborators for an application",
      "fullTitle": "Collaborators invite and unaccepted_invitations should be able to invite collaborators for an application",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"emails\"</span>: [<br>      <span class=\"hljs-string\">\"test1user@mailinator.com\"</span>,<br>      <span class=\"hljs-string\">\"test2user@mailinator.com\"</span><br>    ]<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> response = res.body<br>    response.notice.should.be.equal(<span class=\"hljs-string\">'The invitation has been sent successfully.'</span>)<br>    done(err)<br>  })",
      "err": {
        "name": "TypeError",
        "message": "Cannot read property 'should' of undefined",
        "stack": "<span class=\"hljs-built_in\">TypeError</span>: Cannot read property <span class=\"hljs-string\">'should'</span> <span class=\"hljs-keyword\">of</span> <span class=\"hljs-literal\">undefined</span><br>    at Test.&lt;anonymous&gt; (spec/application/application_spec.js:<span class=\"hljs-number\">1532</span>:<span class=\"hljs-number\">26</span>)<br>    at Test.assert (node_modules/supertest/lib/test.js:<span class=\"hljs-number\">156</span>:<span class=\"hljs-number\">6</span>)<br>    at assert (node_modules/supertest/lib/test.js:<span class=\"hljs-number\">127</span>:<span class=\"hljs-number\">12</span>)<br>    at node_modules/supertest/lib/test.js:<span class=\"hljs-number\">124</span>:<span class=\"hljs-number\">5</span><br>    at Test.Request.callback (node_modules/supertest/node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">785</span>:<span class=\"hljs-number\">12</span>)<br>    at IncomingMessage.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">990</span>:<span class=\"hljs-number\">12</span>)<br>    at endReadableNT (_stream_readable.js:<span class=\"hljs-number\">913</span>:<span class=\"hljs-number\">12</span>)"
      },
      "isRoot": false,
      "uuid": "b7b835f4-b541-4ed2-8901-6e7673356218",
      "parentUUID": "ee0922bb-d23b-4069-86af-be83617d5015",
      "skipped": false
    },
    {
      "title": "should be able to get unaccepted invitations for an application",
      "fullTitle": "Collaborators invite and unaccepted_invitations should be able to get unaccepted invitations for an application",
      "timedOut": false,
      "duration": 1594,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "api.get(config.endpoints.applications + <span class=\"hljs-string\">\"/\"</span> + api_key + config.endpoints.unaccepted_invitations)<br>        .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>        .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>        .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>        .expect(<span class=\"hljs-number\">200</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>          <span class=\"hljs-keyword\">var</span> response = res1.body<br>          response.emails.should.be.deep.equal([<br>            <span class=\"hljs-string\">\"test1user@mailinator.com\"</span>,<br>            <span class=\"hljs-string\">\"test2user@mailinator.com\"</span><br>          ])<br>          done(err)<br>        })",
      "isRoot": false,
      "uuid": "aa396834-a6a5-4040-af18-a89ceb698bcb",
      "parentUUID": "ee0922bb-d23b-4069-86af-be83617d5015",
      "skipped": false
    },
    {
      "title": "should be able to unshare application from collaborator as a system user",
      "fullTitle": "App unshare should be able to unshare application from collaborator as a system user",
      "timedOut": false,
      "duration": 15759,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, authtoken, api_key, {<br>                  <span class=\"hljs-string\">\"unshare_from\"</span>: res.body.user.email<br>                })<br>                .expect(<span class=\"hljs-number\">200</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.notice.should.to.be.equal(<span class=\"hljs-string\">'The application has been successfully unshared.'</span>)<br>                  done(err)<br>                })<br>            })<br>        })",
      "isRoot": false,
      "uuid": "43d99aea-37ea-46ae-8cab-74dc57669d05",
      "parentUUID": "f18c8ac3-f801-45bb-b050-6adfb4dd7f0b",
      "skipped": false
    },
    {
      "title": "should be able to unshare collaborator application as a collaborator",
      "fullTitle": "App unshare should be able to unshare collaborator application as a collaborator",
      "timedOut": false,
      "duration": 8305,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                .expect(<span class=\"hljs-number\">200</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.notice.should.to.be.equal(<span class=\"hljs-string\">'The application has been successfully unshared.'</span>)<br>                  done(err)<br>                })<br>            })<br>        })",
      "isRoot": false,
      "uuid": "9cfa913c-9f4f-41f8-951c-b2ae21cf8afb",
      "parentUUID": "f18c8ac3-f801-45bb-b050-6adfb4dd7f0b",
      "skipped": false
    },
    {
      "title": "should provide error message when collaborators email is invalid",
      "fullTitle": "App unshare should provide error message when collaborators email is invalid",
      "timedOut": false,
      "duration": 10348,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                <span class=\"hljs-string\">\"swapnil@mailinator.com\"</span><br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                .expect(<span class=\"hljs-number\">422</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res3</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res3.body<br>                  <br>                  response.should.to.be.deep.equal({<br>                    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Access denied. You need to be a collaborator before accessing this app.\"</span>,<br>                    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">133</span>,<br>                    <span class=\"hljs-string\">\"errors\"</span>: {}<br>                  })<br>                  done(err)<br>                })<br>            })<br>        })",
      "isRoot": false,
      "uuid": "4a703f56-525a-4e97-9361-839406f080f4",
      "parentUUID": "f18c8ac3-f801-45bb-b050-6adfb4dd7f0b",
      "skipped": false
    },
    {
      "title": "should provide error message when user is not a collaborator for given application",
      "fullTitle": "App unshare should provide error message when user is not a collaborator for given application",
      "timedOut": false,
      "duration": 9527,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                .expect(<span class=\"hljs-number\">200</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.notice.should.to.be.equal(<span class=\"hljs-string\">'The application has been successfully unshared.'</span>)<br>                  factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>                    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>                    res.body.should.be.deep.equal({<br>                      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Access denied. You need to be a collaborator before accessing this app.\"</span>,<br>                      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">133</span>,<br>                      <span class=\"hljs-string\">\"errors\"</span>: {}<br>                    })<br>                    done(err)<br>                  })<br>                })<br>            })<br>        })",
      "isRoot": false,
      "uuid": "4663c7a9-9ed0-4e17-bec6-b79fda266a63",
      "parentUUID": "f18c8ac3-f801-45bb-b050-6adfb4dd7f0b",
      "skipped": false
    },
    {
      "title": "should be able to transfer app ownership to registered system users",
      "fullTitle": "App Transfer/Accept Ownership should be able to transfer app ownership to registered system users",
      "timedOut": false,
      "duration": 6803,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: email<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'An email has been sent to '</span>+ config.user2.email +<span class=\"hljs-string\">' about transferring ownership of \\''</span> + res1.body.application.name + <span class=\"hljs-string\">'\\'. The ownership will be transferred after the other user accepts ownership.'</span>)<br>        done(err)<br>      })<br>  })",
      "isRoot": false,
      "uuid": "0433c23a-b6a6-4dc4-82b2-ed7a2832860c",
      "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
      "skipped": false
    },
    {
      "title": "should give error for transfer app ownership to non-registered system users",
      "fullTitle": "App Transfer/Accept Ownership should give error for transfer app ownership to non-registered system users",
      "timedOut": false,
      "duration": 3240,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: <span class=\"hljs-string\">\"non_registered@mailinator.com\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Sorry about that. non_registered@mailinator.com is not registered in Built.io Backend. Create an account first.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">179</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {}<br>        })<br>        done(err)<br>      })<br>  })",
      "isRoot": false,
      "uuid": "2762a97e-afe3-42ed-bd54-a2335348877e",
      "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
      "skipped": false
    },
    {
      "title": "should be able to accept application ownership",
      "fullTitle": "App Transfer/Accept Ownership should be able to accept application ownership",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "4ad6feec-085c-46a9-9d8d-d8211bdf9760",
      "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
      "skipped": false
    },
    {
      "title": "should be able to create application user role",
      "fullTitle": "Application user roles should be able to create application user role",
      "timedOut": false,
      "duration": 4579,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_app_user_role'</span>, appUser1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"createRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\trole1 = res.body.object<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role1).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole1.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole1.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole1.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole1.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole1.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole1._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole1.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole1.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole1.name.should.be.equal(<span class=\"hljs-string\">\"createRole\"</span>)<br>\trole1.users.should.be.deep.equal([])<br>\trole1.roles.should.be.deep.equal([])<br>\trole1.app_user_object_uid.should.be.equal(appUser1.uid)<br>\texpect(role1.created_by).to.be.null<br>\texpect(role1.created_by).to.be.null<br>\trole1.created_at.should.be.equal(role1.updated_at)<br>\trole1._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'delete_role'</span>, appUser1.authtoken, app.api_key, role1.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err.trace)<br>})",
      "isRoot": false,
      "uuid": "c1f027c3-3611-4e36-b152-cfa3a2d15af9",
      "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
      "skipped": false
    },
    {
      "title": "should provide error for invalid role field",
      "fullTitle": "Application user roles should provide error for invalid role field",
      "timedOut": false,
      "duration": 1509,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">45000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_app_user_role'</span>, appUser1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-comment\">// \"name\": \"createRole\",</span><br>\t\t<span class=\"hljs-string\">\"users\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "c100b3e1-48bb-44e6-b43d-c238aa9349bf",
      "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
      "skipped": false
    },
    {
      "title": "should be able to get all application user roles created",
      "fullTitle": "Application user roles should be able to get all application user roles created",
      "timedOut": false,
      "duration": 1680,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_app_user_roles'</span>, appUser2.authtoken, app.api_key))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\trole2 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role2).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'users'</span>,<span class=\"hljs-string\">'roles'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole2.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole2.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole2.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole2.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole2.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// role2.created_by.should.be.a('string')</span><br>\t<span class=\"hljs-comment\">// role2.updated_by.should.be.a('string')</span><br>\trole2.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole2._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole2.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole2.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole2.name.should.be.equal(roleName)<br>\trole2.users.should.be.deep.equal([])<br>\trole2.roles.should.be.deep.equal([])<br>\trole2.app_user_object_uid.should.be.equal(appUser1.uid)<br>\texpect(role2.created_by).to.be.null<br>\texpect(role2.created_by).to.be.null<br>\trole2.created_at.should.be.equal(role2.updated_at)<br>\trole2._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "e5f8bf2e-048a-42b8-85c8-6e38d473b7d0",
      "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
      "skipped": false
    },
    {
      "title": "should be able to get single application user role",
      "fullTitle": "Application user roles should be able to get single application user role",
      "timedOut": false,
      "duration": 1473,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_single_role'</span>, appUser1.authtoken, app.api_key, roleUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t<br>\trole3 = res.body.object<br>\t<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role3).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole3.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole3.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole3.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole3.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole3.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole3._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole3.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole3.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole3.name.should.be.equal(roleName)<br>\trole3.users.should.be.deep.equal([])<br>\trole3.roles.should.be.deep.equal([])<br>\trole3.app_user_object_uid.should.be.equal(appUser1.uid)<br>\texpect(role3.created_by).to.be.null<br>\texpect(role3.created_by).to.be.null<br>\trole3.created_at.should.be.equal(role3.updated_at)<br>\trole3._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "4545fef3-53d0-46e0-9a64-9c6badabe885",
      "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
      "skipped": false
    },
    {
      "title": "should be able to update application user role",
      "fullTitle": "Application user roles should be able to update application user role",
      "timedOut": false,
      "duration": 1526,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_app_user_role'</span>, sys_user.authtoken, app.api_key, roleUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updateRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [appUser2.uid],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [roleUid]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\trole4 = res.body.object<br>\t<span class=\"hljs-comment\">//Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role4).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'users'</span>,<span class=\"hljs-string\">'roles'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole4.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole4.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// role4.created_by.should.be.a('string')</span><br>\trole4.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole4._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole4.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.users.should.be.deep.equal([appUser2.uid])<br>\trole4.roles.should.be.deep.equal([roleUid])<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole4.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole4.name.should.be.equal(<span class=\"hljs-string\">\"updateRole\"</span>)<br>\t<span class=\"hljs-comment\">// role4.users.should.be.equal('array')</span><br>\t<span class=\"hljs-comment\">// role4.roles.should.be.equal('array')</span><br>\trole4.app_user_object_uid.should.be.equal(appUser1.uid)<br>\t<br>\t<span class=\"hljs-comment\">// expect(role4.created_by).should.to.be.null</span><br>\t<br>\trole4.updated_by.should.be.equal(sys_user.uid)<br>\trole4.created_at.should.not.equal(role4.updated_at)<br>\trole4._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "63dfe378-133e-45df-951a-904e0d4165da",
      "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
      "skipped": false
    },
    {
      "title": "should proide error message for invalid role uid while updating role",
      "fullTitle": "Application user roles should proide error message for invalid role uid while updating role",
      "timedOut": false,
      "duration": 1517,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_app_user_role'</span>, sys_user.authtoken, app.api_key, <span class=\"hljs-string\">\"asd\"</span>, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updateRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [appUser2.uid],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [roleUid]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "a2f66e68-f76d-4c5e-aad5-20a11d428fb4",
      "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
      "skipped": false
    },
    {
      "title": "should be able to delete application user role created",
      "fullTitle": "Application user roles should be able to delete application user role created",
      "timedOut": false,
      "duration": 3325,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_app_user_role'</span>, appUser1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"createRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\trole5 = res.body.object<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-comment\">// Object.keys(role5).should.to.be.deep.equal(['published', '__loc', 'name', 'users', 'roles', 'app_user_object_uid', 'created_at', 'updated_at', 'uid', 'ACL', '_version', 'created_by', 'updated_by', 'tags'])</span><br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'delete_role'</span>, appUser1.authtoken, app.api_key, role5.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "2c4b9b3f-852e-42f3-8864-4154aba61977",
      "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
      "skipped": false
    },
    {
      "title": "should proide error message for invalid role uid while deleting role",
      "fullTitle": "Application user roles should proide error message for invalid role uid while deleting role",
      "timedOut": false,
      "duration": 2613,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'delete_role'</span>, appUser1.authtoken, app.api_key, <span class=\"hljs-string\">\"asd\"</span>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "874e4cdf-ae6d-4b3c-a9e9-e6292794d927",
      "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
      "skipped": false
    },
    {
      "title": "should be able to get all classes present",
      "fullTitle": "Get classes(inbuilt) should be able to get all classes present",
      "timedOut": false,
      "duration": 1720,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> app_user = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> app_user_role = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> installation_data = res.body.classes[<span class=\"hljs-number\">2</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> upload_class = res.body.classes[<span class=\"hljs-number\">3</span>]<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user_role).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation_data).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<br>\t\t<span class=\"hljs-comment\">//console.log(app_user.schema[0])</span><br>\t\t<span class=\"hljs-comment\">// Keys assertion schema</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user_role.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation_data.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>])<br>\t\t<span class=\"hljs-comment\">// Object.keys(upload_class.schema[0]).should.to.be.deep.equal(['display_name', 'uid', 'data_type', 'field_metadata', 'multiple', 'mandatory'])</span><br><br><br>\t\tapp_user.schema.length.should.be.equal(<span class=\"hljs-number\">9</span>)<br>\t\tapp_user_role.schema.length.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\tinstallation_data.schema.length.should.be.equal(<span class=\"hljs-number\">7</span>)<br>\t\t<span class=\"hljs-comment\">// upload_class.schema.length.should.be.equal(3)</span><br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\tapp_user.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tapp_user.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user_role.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user_role.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tapp_user_role.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user_role.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user_role.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user_role.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tinstallation_data.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tinstallation_data.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tinstallation_data.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tinstallation_data.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tinstallation_data.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tinstallation_data.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t<span class=\"hljs-comment\">// upload_class.created_at.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.updated_at.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.title.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.uid.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.inbuilt_class.should.be.a('boolean')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.schema.should.be.a('array')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.maintain_revisions.should.be.a('boolean')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.abilities.should.be.a('object')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.DEFAULT_ACL.should.be.a('object')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.SYS_ACL.should.be.a('object')</span><br><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tapp_user.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\tapp_user.title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\tapp_user.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tapp_user_role.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\tapp_user_role.title.should.be.equal(<span class=\"hljs-string\">'Application User Role'</span>)<br>\t\tapp_user_role.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tinstallation_data.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\tinstallation_data.title.should.be.equal(<span class=\"hljs-string\">'Installation Data'</span>)<br>\t\tinstallation_data.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t<span class=\"hljs-comment\">// upload_class.uid.should.be.equal('built_io_upload')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.title.should.be.equal('built.io Uploads')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.inbuilt_class.should.be.equal(true)</span><br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "53b4fde1-12a3-4cb3-8bfc-962a4cec2f64",
      "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
      "skipped": false
    },
    {
      "title": "should be able to get count for the classes present",
      "fullTitle": "Get classes(inbuilt) should be able to get count for the classes present",
      "timedOut": false,
      "duration": 1674,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-literal\">true</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">//console.log(res.body)</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body).should.to.be.deep.equal([<span class=\"hljs-string\">'classes'</span>])<br>\t\tres.body.classes.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\tres.body.classes.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "5034077b-1964-4937-9c39-af7d2db2aed4",
      "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
      "skipped": false
    },
    {
      "title": "should be able to get classes using limit param",
      "fullTitle": "Get classes(inbuilt) should be able to get classes using limit param",
      "timedOut": false,
      "duration": 2860,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> response = res.body.classes<br>\t\tresponse.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(response[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tresponse[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\tresponse[<span class=\"hljs-number\">0</span>].title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\tresponse[<span class=\"hljs-number\">0</span>].inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "7362d325-8e2a-4a5d-ac48-168ffb24b0d7",
      "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
      "skipped": false
    },
    {
      "title": "should be able to get classes using skip param",
      "fullTitle": "Get classes(inbuilt) should be able to get classes using skip param",
      "timedOut": false,
      "duration": 1697,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> classes = res.body.classes<br>\t\tclasses.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tclasses[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].title.should.be.equal(<span class=\"hljs-string\">'Installation Data'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "8b90e9a0-9e76-40db-9923-20e37cb8f911",
      "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
      "skipped": false
    },
    {
      "title": "should be able to get classes simple query",
      "fullTitle": "Get classes(inbuilt) should be able to get classes simple query",
      "timedOut": false,
      "duration": 1514,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>\t}<br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">//console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> classes = res.body.classes<br>\t\tclasses.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tclasses[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].title.should.be.equal(<span class=\"hljs-string\">'Application User Role'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "5616c4c3-8ed6-4724-b98f-33df88e2d53c",
      "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
      "skipped": false
    },
    {
      "title": "should provide error message for -ve skip/limit value",
      "fullTitle": "Get classes(inbuilt) should provide error message for -ve skip/limit value",
      "timedOut": false,
      "duration": 1484,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"skip\"</span>: -<span class=\"hljs-number\">3</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">422</span>) <br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Failed to fetch classes. Please try again with valid parameters.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"params\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"has an invalid operation.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
      "isRoot": false,
      "uuid": "823bf7c8-b02f-4b27-9d7a-c2072c0db105",
      "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
      "skipped": false
    },
    {
      "title": "should be able to create a class for given app",
      "fullTitle": "Class creation should be able to create a class for given app",
      "timedOut": false,
      "duration": 1567,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> res = res.body<br>\t\t\t\t\tres.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class created successfully!'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">//console.log(res)</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.schema[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.abilities).should.be.deep.equal([<span class=\"hljs-string\">'get_one_object'</span>, <span class=\"hljs-string\">'get_all_objects'</span>, <span class=\"hljs-string\">'create_object'</span>, <span class=\"hljs-string\">'update_object'</span>, <span class=\"hljs-string\">'delete_object'</span>, <span class=\"hljs-string\">'delete_all_objects'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.DEFAULT_ACL).should.be.deep.equal([<span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.DEFAULT_ACL.others).should.be.deep.equal([<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tres.class.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tres.class.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tres.class.last_activity.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tres.class.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tres.class.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tres.class.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tres.class.schema.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tres.class.title.should.be.equal(<span class=\"hljs-string\">'class_name'</span>)<br>\t\t\t\t\tres.class.uid.should.be.equal(<span class=\"hljs-string\">'class_uid'</span>)<br>\t\t\t\t\tres.class.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tres.class.maintain_revisions.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tres.class.abilities.get_one_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.get_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.create_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.update_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.delete_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.delete_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.DEFAULT_ACL.others.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.DEFAULT_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// res.class.SYS_ACL.should.be.equal({})</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// res.class.DEFAULT_ACL.length.should.be.equal('others')</span><br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "1ed8d2ec-cdb6-4098-a606-af76ee3a5057",
      "parentUUID": "1c9cf3dd-a011-4bf5-9bdd-4506f6734cde",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid json param",
      "fullTitle": "Class creation should provide an error message for invalid json param",
      "timedOut": false,
      "duration": 1470,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t<span class=\"hljs-comment\">// .expect(201)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Please send your attributes wrapped in 'class'\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
      "isRoot": false,
      "uuid": "5580dacd-f3ab-4d04-aeb6-dd4eee4ce5d4",
      "parentUUID": "1c9cf3dd-a011-4bf5-9bdd-4506f6734cde",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid schema",
      "fullTitle": "Class creation should provide an error message for invalid schema",
      "timedOut": false,
      "duration": 1555,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span><br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t<span class=\"hljs-comment\">// .expect(201)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class creation failed. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">115</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"schema\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"should have a group schema\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
      "isRoot": false,
      "uuid": "dfa65208-ef00-46b9-af85-fd3eca84129d",
      "parentUUID": "1c9cf3dd-a011-4bf5-9bdd-4506f6734cde",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid authtoken",
      "fullTitle": "Class creation should provide an error message for invalid authtoken",
      "timedOut": false,
      "duration": 1703,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, <span class=\"hljs-string\">''</span>, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t<span class=\"hljs-comment\">// .expect(201)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
      "isRoot": false,
      "uuid": "c3a5bc74-19c8-45a2-8167-088d0a80c49c",
      "parentUUID": "1c9cf3dd-a011-4bf5-9bdd-4506f6734cde",
      "skipped": false
    },
    {
      "title": "should be able to get single(built_io_installation_data) class",
      "fullTitle": "Get class should be able to get single(built_io_installation_data) class",
      "timedOut": false,
      "duration": 2309,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_installation_data\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> installation = res.body.class<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>])<br>\t\t\t\t\tinstallation.schema.length.should.be.equal(<span class=\"hljs-number\">7</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tinstallation.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tinstallation.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tinstallation.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tinstallation.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tinstallation.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tinstallation.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tinstallation.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\t\t\t\tinstallation.title.should.be.equal(<span class=\"hljs-string\">'Installation Data'</span>)<br>\t\t\t\t\tinstallation.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "fdd4d33a-6d2c-4cf6-9672-743fca7e9900",
      "parentUUID": "5b36cf9f-90b6-4d82-b423-121773a2f9ea",
      "skipped": false
    },
    {
      "title": "should be able to get single(built_io_application_user_role) class",
      "fullTitle": "Get class should be able to get single(built_io_application_user_role) class",
      "timedOut": false,
      "duration": 2099,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> appUserRole = res.body.class<br>\t\t\t\t\t\t<span class=\"hljs-comment\">//console.log(appUserRole)</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserRole).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserRole.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>])<br>\t\t\t\t\tappUserRole.schema.length.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tappUserRole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserRole.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tappUserRole.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserRole.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserRole.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserRole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tappUserRole.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\t\t\t\tappUserRole.title.should.be.equal(<span class=\"hljs-string\">'Application User Role'</span>)<br>\t\t\t\t\tappUserRole.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "102d62d5-4aac-4c58-9a07-3c3252af0ba0",
      "parentUUID": "5b36cf9f-90b6-4d82-b423-121773a2f9ea",
      "skipped": false
    },
    {
      "title": "should be able to get single(built_io_application_user) class",
      "fullTitle": "Get class should be able to get single(built_io_application_user) class",
      "timedOut": false,
      "duration": 1471,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> appUserClass = res.body.class<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserClass).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserClass.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>])<br>\t\t\t\t\tappUserClass.schema.length.should.be.equal(<span class=\"hljs-number\">9</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tappUserClass.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserClass.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tappUserClass.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserClass.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserClass.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserClass.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tappUserClass.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tappUserClass.title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\t\t\t\tappUserClass.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "f674a93f-ef75-4c4a-b1b6-c26f3e9c7d91",
      "parentUUID": "5b36cf9f-90b6-4d82-b423-121773a2f9ea",
      "skipped": false
    },
    {
      "title": "should be able to get single(inbuilt) class",
      "fullTitle": "Get class should be able to get single(inbuilt) class",
      "timedOut": false,
      "duration": 1851,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> uploadClass = res.body.class<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(uploadClass).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(uploadClass.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// console.log(uploadClass.schema.length)</span><br>\t\t\t\t\tuploadClass.schema.length.should.be.equal(<span class=\"hljs-number\">9</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tuploadClass.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tuploadClass.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tuploadClass.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tuploadClass.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tuploadClass.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tuploadClass.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tuploadClass.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tuploadClass.title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\t\t\t\tuploadClass.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "2d9ef486-0b75-4569-8803-a67fef41fb52",
      "parentUUID": "5b36cf9f-90b6-4d82-b423-121773a2f9ea",
      "skipped": false
    },
    {
      "title": "should be able to update the given class",
      "fullTitle": "Update class should be able to update the given class",
      "timedOut": false,
      "duration": 3545,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"testclas\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"testclass\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classUid = res1.body.class.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Update_class'</span>, authtoken, api_key, classUid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"changed\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"count\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"count\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t]<br>\t\t\t\t\t\t}<br>\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> updatedClss = res2.body.class<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.schema[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.abilities).should.be.deep.equal([<span class=\"hljs-string\">'get_one_object'</span>, <span class=\"hljs-string\">'get_all_objects'</span>, <span class=\"hljs-string\">'create_object'</span>, <span class=\"hljs-string\">'update_object'</span>, <span class=\"hljs-string\">'delete_object'</span>, <span class=\"hljs-string\">'delete_all_objects'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.DEFAULT_ACL).should.be.deep.equal([<span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.DEFAULT_ACL.others).should.be.deep.equal([<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t\t\tupdatedClss.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tupdatedClss.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tupdatedClss.last_activity.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tupdatedClss.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tupdatedClss.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tupdatedClss.schema.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\tupdatedClss.title.should.be.equal(<span class=\"hljs-string\">'changed'</span>)<br>\t\t\t\t\t\t\tupdatedClss.uid.should.be.equal(<span class=\"hljs-string\">'testclass'</span>)<br>\t\t\t\t\t\t\tupdatedClss.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tupdatedClss.maintain_revisions.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.get_one_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.get_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.create_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.update_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.delete_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.delete_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.DEFAULT_ACL.others.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.DEFAULT_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "ec009ca4-584b-4ccc-b457-37286c644e0c",
      "parentUUID": "4da90a46-5de1-46bd-afe8-15a19778eae4",
      "skipped": false
    },
    {
      "title": "should be able to delete class",
      "fullTitle": "Delete Class should be able to delete class",
      "timedOut": false,
      "duration": 3001,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"new class\"</span>,<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"new_class\"</span>,<br>\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t}]<br>\t}<br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br><br>\t\t<span class=\"hljs-keyword\">var</span> classUid = res1.body.class.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class deleted successfully!'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br><br>\t})",
      "isRoot": false,
      "uuid": "474d0158-926c-41e9-bb43-6dccd747a919",
      "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
      "skipped": false
    },
    {
      "title": "should provide an error messgae on application user class delete",
      "fullTitle": "Delete Class should provide an error messgae on application user class delete",
      "timedOut": false,
      "duration": 1631,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
      "isRoot": false,
      "uuid": "ee00d943-fd1e-4a88-a7c0-475f33eb8268",
      "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
      "skipped": false
    },
    {
      "title": "should provide an error messgae on application user role class delete",
      "fullTitle": "Delete Class should provide an error messgae on application user role class delete",
      "timedOut": false,
      "duration": 1592,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
      "isRoot": false,
      "uuid": "f8bfafd7-a963-4ade-a8b0-72734efe473d",
      "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
      "skipped": false
    },
    {
      "title": "should provide an error messgae on upload class delete",
      "fullTitle": "Delete Class should provide an error messgae on upload class delete",
      "timedOut": false,
      "duration": 0,
      "pass": false,
      "fail": false,
      "pending": true,
      "code": "",
      "isRoot": false,
      "uuid": "e4957b55-fab0-4c41-9b62-d4f60eb21c67",
      "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
      "skipped": false
    },
    {
      "title": "should provide an error messgae on upload class delete",
      "fullTitle": "Delete Class should provide an error messgae on upload class delete",
      "timedOut": false,
      "duration": 1483,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_installation_data\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
      "isRoot": false,
      "uuid": "b917f366-229f-449f-a9dc-2bcc161a24c5",
      "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
      "skipped": false
    },
    {
      "title": "should apply bulk sys ACL on given classes",
      "fullTitle": "Classes Bulk sys ACL should apply bulk sys ACL on given classes",
      "timedOut": false,
      "duration": 1573,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'apply_bulk_sys_acl'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_application_user\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_application_user_role\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_installation_data\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_upload\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: classUid,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}]<br>\t\t\t})<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes1 = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes2 = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes3 = res.body.classes[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes4 = res.body.classes[<span class=\"hljs-number\">3</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes5 = res.body.classes[<span class=\"hljs-number\">4</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tclasses1.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses2.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses3.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses4.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses5.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tclasses1.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tclasses2.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\t\t\t\tclasses3.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\t\t\t\tclasses4.uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\t\tclasses5.uid.should.be.equal(<span class=\"hljs-string\">'supertest_class'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].uid.should.be.equal(contentRole)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">//</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.read.should.be.equal(false)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.update.should.be.equal(false)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.delete.should.be.equal(false)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.create.should.be.equal(false)</span><br>\t\t\t\t\tdone()<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "95691e09-0420-4855-995a-5f9969271b79",
      "parentUUID": "36ac7ff5-4cff-4d29-9d29-1244c00fd5be",
      "skipped": false
    },
    {
      "title": "should get bulk sys ACL applied on classes",
      "fullTitle": "Get classes bulk acl should get bulk sys ACL applied on classes",
      "timedOut": false,
      "duration": 1695,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_bulk_sys_acl'</span>, authtoken, api_key)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes1 = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes2 = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes3 = res.body.classes[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes4 = res.body.classes[<span class=\"hljs-number\">3</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes5 = res.body.classes[<span class=\"hljs-number\">4</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tclasses1.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tclasses2.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\t\t\t\tclasses3.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\t\t\t\tclasses4.uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\t\tclasses5.uid.should.be.equal(<span class=\"hljs-string\">'supertest_class'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">//</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "72488da9-d9ae-416d-b490-aa37d5a68316",
      "parentUUID": "6ea90d2e-f486-42ee-83c7-4aedb693d3fa",
      "skipped": false
    },
    {
      "title": "should get bulk sys ACL applied on specified class",
      "fullTitle": "Get classes bulk acl should get bulk sys ACL applied on specified class",
      "timedOut": false,
      "duration": 1497,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_bulk_sys_acl'</span>, authtoken, api_key, {<br>\t\t\t\tclass_uids: <span class=\"hljs-string\">'[\"supertest_class\", \"built_io_upload\"]'</span><br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> classes1 = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> classes2 = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1]).should.to.be.deep.equal(['uid', 'read', 'update', 'delete', 'sub_acl'])</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1].sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1]).should.to.be.deep.equal(['uid', 'read', 'update', 'delete', 'sub_acl'])</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1].sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br>\t\t\t\t<span class=\"hljs-comment\">// data assertion</span><br>\t\t\t\tclasses1.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tclasses2.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tclasses1.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].should.be.a('object')</span><br>\t\t\t\t<span class=\"hljs-comment\">// value assertion\t</span><br>\t\t\t\tclasses1.uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\tclasses2.uid.should.be.equal(<span class=\"hljs-string\">'supertest_class'</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t<span class=\"hljs-comment\">// classes1.SYS_ACL.roles[1].uid.should.be.equal(contentRole)</span><br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].uid.should.be.equal(contentRole)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].read.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].update.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].delete.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.read.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.update.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.delete.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.create.should.be.equal(false)</span><br>\t\t\t\tdone()<br>\t\t\t})",
      "isRoot": false,
      "uuid": "1607b882-6f5e-4f3b-b8c8-793feb920bfa",
      "parentUUID": "6ea90d2e-f486-42ee-83c7-4aedb693d3fa",
      "skipped": false
    },
    {
      "title": "should set roles to collaborators in bulk",
      "fullTitle": "Collaborators permissions should set roles to collaborators in bulk",
      "timedOut": false,
      "duration": 1505,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// console.log(userUID_2)</span><br><span class=\"hljs-comment\">// console.log(email_2)</span><br><span class=\"hljs-comment\">// console.log(supertestRole)</span><br><span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">55000</span>)<br><span class=\"hljs-keyword\">var</span> users = {}<br>users[userUID_2] = [<br>\tsupertestRole,<br>\tcontentRole<br>]<br>factories.create(<span class=\"hljs-string\">'set_role_collaborator'</span>, authtoken, api_key, {<br>\tusers: users<br>})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">\"The roles were applied successfully.\"</span>)<br>\t\t<span class=\"hljs-keyword\">var</span> users1 = res.body.users[<span class=\"hljs-number\">1</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> users2 = res.body.users[<span class=\"hljs-number\">0</span>]<br>\t\t<br>\t<span class=\"hljs-comment\">// // key assertions</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users2).should.to.be.deep.equal(['uid', 'created_at', 'updated_at', 'email', 'username', 'plan_id', 'roles'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users2.roles[0]).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users2.roles[1]).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users1).should.to.be.deep.equal(['uid', 'created_at', 'updated_at', 'email', 'username', 'plan_id', 'roles'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users1.roles[0]).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL'])</span><br>\t<span class=\"hljs-comment\">// \t// value assertions</span><br>\t<span class=\"hljs-comment\">// \tusers2.uid.should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.email.should.be.equal(email_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.username.should.be.equal(username_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].uid.should.be.equal(devRole)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].users[0].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].owner.should.be.equal(email)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.api_key.should.be.equal(api_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.owner_uid.should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.master_key.should.be.equal(master_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.user_uids[0].should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.user_uids[1].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.user_uids[2].should.be.equal(userUID_2)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].uid.should.be.equal(contentRole)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].users[0].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].owner.should.be.equal(email)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].application.api_key.should.be.equal(api_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.master_key.should.be.equal(master_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].application.owner_uid.should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers1.uid.should.be.equal(userUID_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.email.should.be.equal(email_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.username.should.be.equal(username_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].uid.should.be.equal(supertestRole)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].users[0].should.be.equal(userUID_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].owner.should.be.equal(email)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.api_key.should.be.equal(api_key)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.owner_uid.should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.master_key.should.be.equal(master_key)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.user_uids[0].should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.user_uids[1].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.user_uids[2].should.be.equal(userUID_2)</span><br><br><br>\t\tdone()<br>\t})",
      "isRoot": false,
      "uuid": "4dd7b42a-cfe9-4a53-94b5-716903f71597",
      "parentUUID": "868128ef-1fd3-4d7b-af81-f46e29f1a26e",
      "skipped": false
    },
    {
      "title": "should Fetch permissions for one or more users",
      "fullTitle": "Collaborators permissions should Fetch permissions for one or more users",
      "timedOut": false,
      "duration": 1497,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_permissions_user'</span>, authtoken, api_key, {<br>\t\t\t\tusers: [userUID, userUID_2]<br>\t\t\t})<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body, err)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> users1 = res.body.users[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> users2 = res.body.users[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(users1)</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users2).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'classes'</span>, <span class=\"hljs-string\">'isOwner'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users2.classes).should.to.be.deep.equal([<span class=\"hljs-string\">'built_io_application_user'</span>, <span class=\"hljs-string\">'built_io_application_user_role'</span>, <span class=\"hljs-string\">'built_io_installation_data'</span>, <span class=\"hljs-string\">'built_io_upload'</span>, <span class=\"hljs-string\">'supertest_class'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users1).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'classes'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users1.classes).should.to.be.deep.equal([<span class=\"hljs-string\">'built_io_application_user'</span>, <span class=\"hljs-string\">'built_io_application_user_role'</span>, <span class=\"hljs-string\">'built_io_installation_data'</span>, <span class=\"hljs-string\">'built_io_upload'</span>, <span class=\"hljs-string\">'supertest_class'</span>])<br>\t\t\t\t\tdone()<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "582967ea-db56-4354-a1fe-e2c86857abca",
      "parentUUID": "868128ef-1fd3-4d7b-af81-f46e29f1a26e",
      "skipped": false
    },
    {
      "title": "should Fetch permissions for one or more users after updating role",
      "fullTitle": "Collaborators permissions should Fetch permissions for one or more users after updating role",
      "timedOut": false,
      "duration": 2902,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Update_system_role'</span>, authtoken, api_key, supertestRole.uid, {<br>\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"testRole\"</span><br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> factories.create(<span class=\"hljs-string\">'Get_system_roles'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"include_permissions\"</span>: <span class=\"hljs-literal\">true</span><br>\t}) <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t<span class=\"hljs-keyword\">var</span> roles = res.body.system_roles[<span class=\"hljs-number\">0</span>]<br><span class=\"hljs-comment\">// // key assertion</span><br><span class=\"hljs-comment\">// \tObject.keys(roles).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL', 'permissions'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[0]).should.to.be.deep.equal(['class_uid', 'SYS_ACL'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[1]).should.to.be.deep.equal(['class_uid', 'SYS_ACL'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[0].SYS_ACL).should.to.be.deep.equal(['read', 'update', 'delete', 'sub_acl'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[0].SYS_ACL.sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[1].SYS_ACL).should.to.be.deep.equal(['read', 'update', 'delete', 'sub_acl'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[1].SYS_ACL.sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br><span class=\"hljs-comment\">// \t// Data assertion</span><br><span class=\"hljs-comment\">// \troles.uid.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.name.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.users.should.be.a('array')</span><br><span class=\"hljs-comment\">// \troles.roles.should.be.a('array')</span><br><span class=\"hljs-comment\">// \troles.created_at.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.updated_at.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.owner.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.application.should.be.a('object')</span><br><span class=\"hljs-comment\">// \troles.SYS_ACL.should.be.a('object')</span><br><span class=\"hljs-comment\">// \troles.permissions.should.be.a('array')</span><br><span class=\"hljs-comment\">// \t// value assertion</span><br><span class=\"hljs-comment\">// \troles.uid.should.be.equal(devRole1)</span><br><span class=\"hljs-comment\">// \troles.created_at.should.be.equal(roles.updated_at)</span><br><span class=\"hljs-comment\">// \troles.owner.should.be.equal(email)</span><br><span class=\"hljs-comment\">// \troles.application.api_key.should.be.equal(api_key1)</span><br><span class=\"hljs-comment\">// \troles.application.owner_uid.should.be.equal(userUID)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].class_uid.should.be.equal(classUid1)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.read.should.be.equal(true)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.read.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.create.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].class_uid.should.be.equal('built_io_upload')</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.read.should.be.equal(true)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.read.should.be.equal(true)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.create.should.be.equal(false)</span><br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
      "isRoot": false,
      "uuid": "9b4f44de-1b59-4610-a4d6-312074b3e82b",
      "parentUUID": "868128ef-1fd3-4d7b-af81-f46e29f1a26e",
      "skipped": false
    },
    {
      "title": "should apply system roles on classes in bulk",
      "fullTitle": "system roles Bulk ACL should apply system roles on classes in bulk",
      "timedOut": false,
      "duration": 1704,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'set_role_bulk_acl'</span>, authtoken, api_key1, {<br>\t\t\t\t<span class=\"hljs-string\">\"system_roles\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: roleid,<br>\t\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: classUid1,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_upload\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}]<br>\t\t\t\t}]<br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> roles = res.body.system_roles[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'permissions'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\troles.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.permissions.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\troles.uid.should.be.equal(roleid)<br>\t\t\t\troles.created_at.should.be.equal(roles.updated_at)<br>\t\t\t\troles.owner.should.be.equal(email)<br>\t\t\t\troles.application.api_key.should.be.equal(api_key1)<br>\t\t\t\troles.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].class_uid.should.be.equal(classUid1)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].class_uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})",
      "isRoot": false,
      "uuid": "ace6acdb-162b-4677-bebc-52db4fc50cad",
      "parentUUID": "1411a74f-2f0b-4ced-9288-52b7dc95083d",
      "skipped": false
    },
    {
      "title": "should get all roles, and the ACL set for it on each class",
      "fullTitle": "permissions should get all roles, and the ACL set for it on each class",
      "timedOut": false,
      "duration": 1456,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_system_roles'</span>, authtoken, api_key1, {<br>\t\t\t\t<span class=\"hljs-string\">\"include_permissions\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> roles = res.body.system_roles[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'permissions'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\troles.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.permissions.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\troles.uid.should.be.equal(devRole1)<br>\t\t\t\troles.created_at.should.be.equal(roles.updated_at)<br>\t\t\t\troles.owner.should.be.equal(email)<br>\t\t\t\troles.application.api_key.should.be.equal(api_key1)<br>\t\t\t\troles.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].class_uid.should.be.equal(classUid1)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].class_uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tdone(err)<br>\t\t\t<br>\t\t\t})",
      "isRoot": false,
      "uuid": "a8540025-eea2-41b8-8861-7b3d69dcd3a1",
      "parentUUID": "44491fae-8530-4704-b4f1-a35adad6e599",
      "skipped": false
    },
    {
      "title": "should be able to ignore metadata field while creating object",
      "fullTitle": "Create metadata (POST call) should be able to ignore metadata field while creating object",
      "timedOut": false,
      "duration": 1474,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_object'</span>, authtoken, api_key, classUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"metadata object\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata create\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"isAtool\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"environment\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"dev\"</span>: <span class=\"hljs-string\">\"new server\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"stag\"</span>: <span class=\"hljs-string\">\"old server\"</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "fe0cbbc9-b3b4-4b74-9c79-4acd6526877d",
      "parentUUID": "0d55c7a0-9b98-457e-aca1-3bab1cee1bc4",
      "skipped": false
    },
    {
      "title": "should be able to ignore _metadata field while creating object",
      "fullTitle": "Create metadata (POST call) should be able to ignore _metadata field while creating object",
      "timedOut": false,
      "duration": 1485,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_object'</span>, authtoken, api_key, classUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"_metadata object\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata create\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"isAtool\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"environment\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"dev\"</span>: <span class=\"hljs-string\">\"new server\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"stag\"</span>: <span class=\"hljs-string\">\"old server\"</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tobject = res.body.object<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "0e1f578a-0f71-4986-b975-8d07cc7490dc",
      "parentUUID": "0d55c7a0-9b98-457e-aca1-3bab1cee1bc4",
      "skipped": false
    },
    {
      "title": "should be able to ignore metadata field while updating object",
      "fullTitle": "Update object with metadata (PUT call) should be able to ignore metadata field while updating object",
      "timedOut": false,
      "duration": 1789,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "cbda84a6-9a8a-40b0-a2bf-3ddaba7ce092",
      "parentUUID": "69318c1b-7ed3-43be-9eaf-d9a5634768c0",
      "skipped": false
    },
    {
      "title": "should be able to provide error message for _metadata field while updating object",
      "fullTitle": "Update object with metadata (PUT call) should be able to provide error message for _metadata field while updating object",
      "timedOut": false,
      "duration": 2730,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"isupertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tobject = res.body.object<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "370cb9dc-f7f0-44f1-ae67-a12a75ce72a5",
      "parentUUID": "69318c1b-7ed3-43be-9eaf-d9a5634768c0",
      "skipped": false
    },
    {
      "title": "should update object with metadata",
      "fullTitle": "Update object with metadata (/metadata PUT call) should update object with metadata",
      "timedOut": false,
      "duration": 3254,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'update_metadata'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"metadata\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t}<br>\t\t}, {<br>\t\t\t<span class=\"hljs-string\">\"$set\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata update\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-number\">4</span><br>\t\t\t}<br>\t\t}]<br>\t})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'_metadata'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object._metadata).should.to.be.deep.equal([<span class=\"hljs-string\">'increment'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'multiple'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\tobject._metadata.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tobject._metadata.increment.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\tobject._metadata.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tobject._metadata.multiple.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tobject._metadata.name.should.be.equal(<span class=\"hljs-string\">'supertest metadata update'</span>)<br>\t\tobject._metadata.multiple.should.be.equal(<span class=\"hljs-number\">4</span>)<br>\t\tobject._metadata.increment.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_metadata'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t<span class=\"hljs-string\">\"metadata\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"$mul\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-number\">4</span><br>\t\t\t\t\t}<br>\t\t\t\t}]<br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'_metadata'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object._metadata).should.to.be.deep.equal([<span class=\"hljs-string\">'increment'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'multiple'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\tobject._metadata.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject._metadata.increment.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject._metadata.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject._metadata.multiple.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tobject._metadata.name.should.be.equal(<span class=\"hljs-string\">'supertest metadata update'</span>)<br>\t\t\t\tobject._metadata.increment.should.be.equal(<span class=\"hljs-number\">4</span>)<br>\t\t\t\tobject._metadata.multiple.should.be.equal(<span class=\"hljs-number\">16</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
      "isRoot": false,
      "uuid": "8a19a2b3-21c8-4d23-ab2a-4ccd4724b9f7",
      "parentUUID": "e8ecd5e3-7121-4985-b8f0-5473959a62db",
      "skipped": false
    },
    {
      "title": "should provide error message for _metadata field while updating object",
      "fullTitle": "Update object with metadata (/metadata PUT call) should provide error message for _metadata field while updating object",
      "timedOut": false,
      "duration": 1848,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'update_metadata'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"_metadata\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t}<br>\t\t}, {<br>\t\t\t<span class=\"hljs-string\">\"$set\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata update\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-number\">4</span><br>\t\t\t}<br>\t\t}]<br>\t})<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tres.body.error_message.should.be.equal(<span class=\"hljs-string\">\"Please send your attributes wrapped in 'metadata'\"</span>)<br>\t\tres.body.error_code.should.be.equal(<span class=\"hljs-number\">141</span>)<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "0a030224-f6a0-45ed-ae75-86d22201bad3",
      "parentUUID": "e8ecd5e3-7121-4985-b8f0-5473959a62db",
      "skipped": false
    },
    {
      "title": "should get object owner information in created_by key",
      "fullTitle": "get object should get object owner information in created_by key",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"include_created_by\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.created_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\tobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\tobject.created_by.uid.should.be.equal(userUID)<br>\t\t\t\tobject.created_by.uid.should.be.equal(object.updated_by)<br>\t\t\t\tobject.created_by.email.should.be.equal(email)<br>\t\t\t\tobject.created_by.username.should.be.equal(username)<br>\t\t\t\tobject.updated_by.should.be.equal(userUID)<br>\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// object.ACL.should.be.equal({})</span><br>\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// object.tags.should.be.equal([])\t\t\t\t               </span><br>\t\t\t\tdone()<br>\t\t\t});",
      "err": {
        "name": "AssertionError",
        "message": "expected [ Array(7) ] to deeply equal [ Array(6) ]",
        "stack": "AssertionError: expected [ Array(7) ] to deeply equal [ Array(6) ]<br>    at assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/addMethod.js:41:25)<br>    at doAsserterAsyncAndAddThen (node_modules/chai-as-promised/lib/chai-as-promised.js:292:33)<br>    at null.&lt;anonymous&gt; (node_modules/chai-as-promised/lib/chai-as-promised.js:251:21)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at somethingMethod (node_modules/chai-things/lib/chai-things.js:97:25)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at allMethod (node_modules/chai-things/lib/chai-things.js:165:25)<br>    at ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at Test.&lt;anonymous&gt; (spec/cms_apis/object_revisions_revert_spec.js:119:54)<br>    at Test.assert (node_modules/supertest/lib/test.js:156:6)<br>    at assert (node_modules/supertest/lib/test.js:127:12)<br>    at node_modules/supertest/lib/test.js:124:5<br>    at Test.Request.callback (node_modules/supertest/node_modules/superagent/lib/node/index.js:785:12)<br>    at Stream.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/index.js:990:12)<br>    at Unzip.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/utils.js:108:12)<br>    at endReadableNT (_stream_readable.js:913:12)"
      },
      "isRoot": false,
      "uuid": "f2332ed3-6613-4e51-8fe8-b7a5315c64a6",
      "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
      "skipped": false
    },
    {
      "title": "should get object owner information in updated_by key",
      "fullTitle": "get object should get object owner information in updated_by key",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"include_updated_by\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t})<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.updated_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.uid.should.be.equal(userUID)<br>\t\t\t\t\tobject.updated_by.uid.should.be.equal(object.created_by)<br>\t\t\t\t\tobject.updated_by.email.should.be.equal(email)<br>\t\t\t\t\tobject.updated_by.username.should.be.equal(username)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// object.ACL.should.be.equal({})</span><br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// object.tags.should.be.equal([])\t\t\t\t               </span><br>\t\t\t\t\tdone()<br>\t\t\t\t});",
      "err": {
        "name": "AssertionError",
        "message": "expected [ Array(7) ] to deeply equal [ Array(6) ]",
        "stack": "AssertionError: expected [ Array(7) ] to deeply equal [ Array(6) ]<br>    at assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/addMethod.js:41:25)<br>    at doAsserterAsyncAndAddThen (node_modules/chai-as-promised/lib/chai-as-promised.js:292:33)<br>    at null.&lt;anonymous&gt; (node_modules/chai-as-promised/lib/chai-as-promised.js:251:21)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at somethingMethod (node_modules/chai-things/lib/chai-things.js:97:25)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at allMethod (node_modules/chai-things/lib/chai-things.js:165:25)<br>    at ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at Test.&lt;anonymous&gt; (spec/cms_apis/object_revisions_revert_spec.js:171:55)<br>    at Test.assert (node_modules/supertest/lib/test.js:156:6)<br>    at assert (node_modules/supertest/lib/test.js:127:12)<br>    at node_modules/supertest/lib/test.js:124:5<br>    at Test.Request.callback (node_modules/supertest/node_modules/superagent/lib/node/index.js:785:12)<br>    at Stream.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/index.js:990:12)<br>    at Unzip.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/utils.js:108:12)<br>    at endReadableNT (_stream_readable.js:913:12)"
      },
      "isRoot": false,
      "uuid": "322987e9-10b3-4729-b820-81c647d7163b",
      "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
      "skipped": false
    },
    {
      "title": "should get object owner information in updated_by/created_by key",
      "fullTitle": "get object should get object owner information in updated_by/created_by key",
      "timedOut": false,
      "duration": 3319,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, authtoken_1, api_key, classUid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"include_updated_by\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"include_created_by\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t}))<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.updated_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.created_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'company'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tobject.created_by.uid.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_by.email.should.be.equal(email)<br>\t\t\t\t\tobject.created_by.username.should.be.equal(username)<br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.updated_by.uid.should.be.equal(userUID_1)<br>\t\t\t\t\tobject.updated_by.email.should.be.equal(email_1)<br>\t\t\t\t\tobject.updated_by.username.should.be.equal(username_1)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
      "isRoot": false,
      "uuid": "c2b08013-f609-477a-9711-47a54e017e53",
      "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
      "skipped": false
    },
    {
      "title": "should get object with specific version",
      "fullTitle": "get object should get object with specific version",
      "timedOut": false,
      "duration": 3185,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"version\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t\t}))<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
      "isRoot": false,
      "uuid": "0dc8dd4c-34a1-4225-98af-6ace35ce17bf",
      "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
      "skipped": false
    },
    {
      "title": "should get all objects with revisions",
      "fullTitle": "get object should get all objects with revisions",
      "timedOut": false,
      "duration": 3069,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// R.pretty(res.body)</span><br><span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t}<br>\t}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_revisions'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: objectUid<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> object1 = res1.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> object2 = res1.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object1).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object2).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobject1.uid.should.be.equal(objectUid)<br>\t\tobject1.name.should.be.equal(<span class=\"hljs-string\">'supertest_update'</span>)<br>\t\tobject1.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\tobject1.updated_by.should.be.equal(userUID_1)<br>\t\tobject1.created_by.should.be.equal(userUID)<br>\t\tobject1.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject1.created_at.should.be.not.equal(object1.updated_at)<br>\t\tobject1._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\tobject2.uid.should.be.equal(objectUid)<br>\t\tobject2.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\tobject2.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\tobject2.updated_by.should.be.equal(userUID)<br>\t\tobject2.updated_by.should.be.equal(object2.created_by)<br>\t\tobject2.created_by.should.be.equal(userUID)<br>\t\tobject2.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject2.created_at.should.be.equal(object2.updated_at)<br>\t\tobject2._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\tdone()<br>\t});",
      "isRoot": false,
      "uuid": "e8fa29f6-186e-4027-8bcd-35d80c182769",
      "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
      "skipped": false
    },
    {
      "title": "should update object with preserve_version",
      "fullTitle": "object update should update object with preserve_version",
      "timedOut": false,
      "duration": 1680,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_preserve_version'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">\"Woot! Object updated successfully.\"</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest_update'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.not.equal(object.created_by)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID_1)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject.created_at.should.be.not.equal(object.updated_at)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
      "isRoot": false,
      "uuid": "0eefe134-2a6c-4cac-82e6-319297115a87",
      "parentUUID": "1cb45777-64a1-4830-a079-5b4388fa5b51",
      "skipped": false
    },
    {
      "title": "should perform a silent update on object",
      "fullTitle": "object update should perform a silent update on object",
      "timedOut": false,
      "duration": 1679,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"timeless\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">\"Woot! Object updated successfully.\"</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest_update'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.not.equal(object.created_by)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID_1)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
      "isRoot": false,
      "uuid": "e7c75b44-1595-4bee-acdf-003303b8317a",
      "parentUUID": "1cb45777-64a1-4830-a079-5b4388fa5b51",
      "skipped": false
    },
    {
      "title": "should revert object to specific version",
      "fullTitle": "object revert should revert object to specific version",
      "timedOut": false,
      "duration": 2964,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// res.body.object._version.should.be.equal(2)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'object_revert'</span>, authtoken, api_key, classUid, objectUid, tenant_uid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"version\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t\t}))<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// new copy of object is getting created with new verison </span><br>\t\t\t\t\tdone()<br>\t\t\t\t});",
      "isRoot": false,
      "uuid": "678e0934-8b7b-4b76-84b7-553d12ce407d",
      "parentUUID": "ccae40cf-eac5-4733-be59-5160103939a9",
      "skipped": false
    },
    {
      "title": "should be able to create installation object for an app",
      "fullTitle": "Create an installations should be able to create installation object for an app",
      "timedOut": false,
      "duration": 1657,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"__loc\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"device_token\"</span>: R.bltRandom(<span class=\"hljs-number\">8</span>),<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"subscribed_to_channels\"</span>: [<span class=\"hljs-string\">\"object.create\"</span>, <span class=\"hljs-string\">\"object.delete\"</span>],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"badge\"</span>: <span class=\"hljs-number\">1</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"timezone\"</span>: <span class=\"hljs-string\">\"+05:30\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"credentials_name\"</span>: <span class=\"hljs-string\">\"swapnil shirke\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"ACL\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t},<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"tags\"</span>: [<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"supertest object\"</span><br>\t\t\t\t\t\t]<br>\t\t\t\t\t}<br>\t\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objData = res.body.object<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.object.uid<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(objData).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(objData.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(objData.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\tobjData.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tobjData.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobjData.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tobjData.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobjData.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobjData.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobjData._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobjData.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tobjData.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\texpect(objData.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\t\tobjData.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobjData.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\tobjData.badge.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tobjData.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\t\tobjData.credentials_name.should.be.equal(<span class=\"hljs-string\">'swapnil shirke'</span>)<br>\t\t\t\t\tobjData.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tobjData.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object'</span>)<br>\t\t\t\t\tobjData.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobjData.created_by.should.be.equal(objData.updated_by)<br>\t\t\t\t\tobjData.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobjData.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tobjData.created_at.should.be.equal(objData.updated_at)<br>\t\t\t\t\tobjData.updated_at.should.be.equal(objData.created_at)<br>\t\t\t\t\tobjData.uid.should.be.equal(id)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "6aee920a-87f2-4eb4-880c-3e26803b0603",
      "parentUUID": "910957c6-9e05-4280-9d58-946bbd4dc520",
      "skipped": false
    },
    {
      "title": "should be able to get installation objects created for an app",
      "fullTitle": "Get all installations should be able to get installation objects created for an app",
      "timedOut": false,
      "duration": 3302,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Get_Installation_objects'</span>, authtoken, api_key)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// console.log(res1.body)</span><br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\t\t\tobject.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\texpect(object.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.equal(<span class=\"hljs-string\">'swapnil shirke'</span>)<br>\t\t\t\t\t\t\tobject.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t\t\tobject.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "c31c3ae9-1c73-41af-b3cd-06a20850f967",
      "parentUUID": "b95f7db5-32a0-407f-bc46-124d12ef41f4",
      "skipped": false
    },
    {
      "title": "should be able to get single object created for an app",
      "fullTitle": "Get single object should be able to get single object created for an app",
      "timedOut": false,
      "duration": 2962,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> id = res.body.object.uid<br>\t\t<br>\t\tfactories.create(<span class=\"hljs-string\">'Get_Installation_objects'</span>, authtoken, api_key, id)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\tobject.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\tobject.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tobject.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\tobject.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\texpect(object.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\tobject.badge.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\tobject.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\tobject.credentials_name.should.be.equal(<span class=\"hljs-string\">'swapnil shirke'</span>)<br>\t\t\t\tobject.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\tobject.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
      "isRoot": false,
      "uuid": "eba1671f-b4d7-4200-b441-4ed9a8fe4135",
      "parentUUID": "dd59554c-8aa1-4bd9-88f4-8dfd9bd6f011",
      "skipped": false
    },
    {
      "title": "should be able to update installation objects created for an app",
      "fullTitle": "Update an installation should be able to update installation objects created for an app",
      "timedOut": false,
      "duration": 3371,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectID = res.body.object.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Update_Installation_object'</span>, authtoken, api_key, objectID, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"__loc\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"device_token\"</span>: R.bltRandom(<span class=\"hljs-number\">8</span>),<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"subscribed_to_channels\"</span>: [<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"object.create\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"object.update\"</span><br>\t\t\t\t\t\t\t\t],<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"badge\"</span>: <span class=\"hljs-number\">3</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"timezone\"</span>: <span class=\"hljs-string\">\"+05:30\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"credentials_name\"</span>: <span class=\"hljs-string\">\"super test\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"ACL\"</span>: {<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t},<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tags\"</span>: [<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"supertest object update\"</span><br>\t\t\t\t\t\t\t\t]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//console.log(res1.body)</span><br>\t\t\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.update'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\t\t\tobject.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object update'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\texpect(object.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.update'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.equal(<span class=\"hljs-string\">'super test'</span>)<br>\t\t\t\t\t\t\tobject.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\t\t\tobject.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object update'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\t\t\tobject.created_at.should.not.equal(object.updated_at)<br>\t\t\t\t\t\t\tobject.updated_at.should.not.equal(object.created_at)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "5959eb7c-9f5d-4027-9851-3d5fbd700fff",
      "parentUUID": "063e6bc4-f578-431e-ab87-9ee704562453",
      "skipped": false
    },
    {
      "title": "should be able to delete an installation object created for an app",
      "fullTitle": "Delete an installation should be able to delete an installation object created for an app",
      "timedOut": false,
      "duration": 3313,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectUid = res.body.object.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Delete_Installation_object'</span>, authtoken, api_key, objectUid)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "4829c6eb-d14c-4bab-a322-e8bfcb24465b",
      "parentUUID": "535ae889-d26a-4121-aa0c-3f1ea854620e",
      "skipped": false
    },
    {
      "title": "should provide an error message for min value for given text field",
      "fullTitle": "Text should provide an error message for min value for given text field",
      "timedOut": false,
      "duration": 1812,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asd\"</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is less than the minimum value 5\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "2898d94e-a539-43f0-bf75-b918c4a64710",
      "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
      "skipped": false
    },
    {
      "title": "should provide an error message for max value for given text field",
      "fullTitle": "Text should provide an error message for max value for given text field",
      "timedOut": false,
      "duration": 1501,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asdsfsdd5555\"</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is greater than the maximum value 10\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "1e00ba62-7cd5-4b6b-a452-83f6b00d9a27",
      "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
      "skipped": false
    },
    {
      "title": "should provide an error message for mandatory value for given text field",
      "fullTitle": "Text should provide an error message for mandatory value for given text field",
      "timedOut": false,
      "duration": 1629,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "6cda9265-9342-4f23-bd34-36e625170bc4",
      "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
      "skipped": false
    },
    {
      "title": "should provide an error message for object value for given text field",
      "fullTitle": "Text should provide an error message for object value for given text field",
      "timedOut": false,
      "duration": 2458,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: {<span class=\"hljs-string\">\"testing\"</span>: <span class=\"hljs-string\">\"backend\"</span>}\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not text\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "cae54228-1dc7-4f8e-9cf7-079a2d41e798",
      "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
      "skipped": false
    },
    {
      "title": "should provide an error message for array value for given text field",
      "fullTitle": "Text should provide an error message for array value for given text field",
      "timedOut": false,
      "duration": 1637,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"testing\"</span>, <span class=\"hljs-string\">\"backend\"</span>]\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"should be a single value instead of multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "082c7666-171c-438e-a2ee-af520c4556ec",
      "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
      "skipped": false
    },
    {
      "title": "should provide an error message for null value for given text field",
      "fullTitle": "Text should provide an error message for null value for given text field",
      "timedOut": false,
      "duration": 1738,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-literal\">null</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "6b962024-101e-41f0-86c2-de5e7eeeaf61",
      "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
      "skipped": false
    },
    {
      "title": "should provide an error message for blank array when field is mandatory",
      "fullTitle": "Text Multiple and field format  should provide an error message for blank array when field is mandatory",
      "timedOut": false,
      "duration": 1716,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: []<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "0826846f-ec7e-4643-a4e9-09b03e1b8082",
      "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
      "skipped": false
    },
    {
      "title": "should provide an error message for multiple field when array is not provided",
      "fullTitle": "Text Multiple and field format  should provide an error message for multiple field when array is not provided",
      "timedOut": false,
      "duration": 1452,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asd\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "e86fbe7a-3953-4e00-abbf-c2271ffbf203",
      "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
      "skipped": false
    },
    {
      "title": "should provide an error message for multiple field if blank",
      "fullTitle": "Text Multiple and field format  should provide an error message for multiple field if blank",
      "timedOut": false,
      "duration": 1600,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "54134a48-3231-4b25-8f43-5b77e248dcea",
      "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
      "skipped": false
    },
    {
      "title": "should be able to create object with valid format",
      "fullTitle": "Text Multiple and field format  should be able to create object with valid format",
      "timedOut": false,
      "duration": 1467,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>    <span class=\"hljs-string\">\"object\"</span>: {<br>        <span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"ASD\"</span>],<br>        <span class=\"hljs-string\">\"list\"</span>: [<span class=\"hljs-literal\">null</span>]<br>    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tres.body.object.textfield[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'ASD'</span>)<br>\tres.body.object.app_user_object_uid.should.be.equal(appUser1.uid)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "7b8b42c7-a91d-466b-9bd3-52cd0ee4ff51",
      "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid value format for field",
      "fullTitle": "Text Multiple and field format  should provide an error message for invalid value format for field",
      "timedOut": false,
      "duration": 1464,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"asdasd\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"does not match the required format for the field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "bf31f495-87f7-4105-8341-ac23297f1246",
      "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid value format in array field",
      "fullTitle": "Text Multiple and field format  should provide an error message for invalid value format in array field",
      "timedOut": false,
      "duration": 2341,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"ADS\"</span>, <span class=\"hljs-string\">\"asdasd\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.1\"</span>: [<br>\t      <span class=\"hljs-string\">\"does not match the required format for the field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "1245c800-8127-4d5a-8b17-c9fe45c59bf6",
      "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
      "skipped": false
    },
    {
      "title": "should provide an error message for object value inside array field",
      "fullTitle": "Text Multiple and field format  should provide an error message for object value inside array field",
      "timedOut": false,
      "duration": 1672,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [{<span class=\"hljs-string\">\"ASD\"</span>: <span class=\"hljs-string\">\"AD\"</span>}]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not text\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "d3542f09-9044-4184-8372-34e1c56bf231",
      "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
      "skipped": false
    },
    {
      "title": "should behave...",
      "fullTitle": "Links should behave...",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "",
      "isRoot": false,
      "uuid": "377bd9eb-5bd5-457e-88ed-69d6f23c4900",
      "parentUUID": "a7be833d-02f1-4572-a11a-3687a682479d",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using simple query",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using simple query",
      "timedOut": false,
      "duration": 1457,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid, {<br>\t\t\t <span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"author\"</span>: <span class=\"hljs-string\">\"swapnil\"</span><br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'swapnil'</span>)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'FTJ'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "648300ca-972f-427b-b9ef-229ca5df90ab",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using regex in query",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using regex in query",
      "timedOut": false,
      "duration": 1615,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"author\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^chet\"</span>,<br>\t\t\t      <span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'chetan'</span>)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'Life of psy'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "d3ef7ef5-e265-4f9e-8969-cb283c7af0ec",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using query on simple group field",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using query on simple group field",
      "timedOut": false,
      "duration": 1452,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t    \t<span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"anjuna\"</span>  <br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'pratick'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// object.bookname.should.be.equal('Life of psy')</span><br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "a6dc910c-c2e1-4d69-bf65-bc67168815b0",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using $or query",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using $or query",
      "timedOut": false,
      "duration": 1691,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t\t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"$or\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"author\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^chetan\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"bookname\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^FTJ\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject1.author.should.be.equal(<span class=\"hljs-string\">'chetan'</span>)<br>\t\t\t\tobject2.bookname.should.be.equal(<span class=\"hljs-string\">'FTJ'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "dc33d847-a635-47a1-a1c6-8f724491ccc2",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using $and query",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using $and query",
      "timedOut": false,
      "duration": 1445,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t\t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"$and\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"author\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^chetan\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"daysold\"</span>: <span class=\"hljs-number\">90</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'chetan'</span>)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'Life of psy'</span>)<br>\t\t\t\tobject.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "e0caad94-9dc4-43ae-9b4f-c5b7bb2862a4",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using $lt(less then) operators",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using $lt(less then) operators",
      "timedOut": false,
      "duration": 1452,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$lt\"</span>: <span class=\"hljs-number\">125</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "9a7527f7-6430-48b8-a7ba-8c6ae951c911",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able t0 get objects created for an app using $lte(less then or equal to) operators",
      "fullTitle": "Get objects Queries should be able t0 get objects created for an app using $lte(less then or equal to) operators",
      "timedOut": false,
      "duration": 1490,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$lte\"</span>: <span class=\"hljs-number\">125</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">125</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "a593074b-fe77-49f2-a7b7-a641a20fc217",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using $gt(greater than) operators",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using $gt(greater than) operators",
      "timedOut": false,
      "duration": 1585,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$gt\"</span>: <span class=\"hljs-number\">125</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">130</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "85feb0df-20dc-4676-8b21-e461d7c44a59",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using $gte(greater than or equal to) operators",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using $gte(greater than or equal to) operators",
      "timedOut": false,
      "duration": 1451,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$gte\"</span>: <span class=\"hljs-number\">130</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">130</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "67db5b3d-250e-4fbe-b1d2-6e7d084e115b",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using $ne(not equal to) operators",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using $ne(not equal to) operators",
      "timedOut": false,
      "duration": 1680,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$ne\"</span>: <span class=\"hljs-number\">130</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br><br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject4 = res.body.objects[<span class=\"hljs-number\">3</span>]<br>\t\t\t\tobject5 = res.body.objects[<span class=\"hljs-number\">4</span>]<br>\t\t\t\t<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">125</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject4.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t\tobject5.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "d3405fc2-d31e-4b45-b061-f78013480bb2",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using $in(contained In) operators",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using $in(contained In) operators",
      "timedOut": false,
      "duration": 1445,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$in\"</span>: [<span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">125</span>, <span class=\"hljs-number\">90</span>]<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">125</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">130</span>)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "8e08a3bf-91ae-4e3d-9d9a-66df632a3136",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using $in(not contained In) operators",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using $in(not contained In) operators",
      "timedOut": false,
      "duration": 2638,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$nin\"</span>: [<span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">125</span>, <span class=\"hljs-number\">90</span>]<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br><br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "ca3b9276-01c8-4ac2-8021-8e810588c071",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using $exists(exists) operators",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using $exists(exists) operators",
      "timedOut": false,
      "duration": 1464,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"bookname\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$exists\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'FTJ'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "f7b64c01-095c-44a6-9887-709ad56fc694",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app and include its owner",
      "fullTitle": "Get objects Queries should be able to get objects created for an app and include its owner",
      "timedOut": false,
      "duration": 1463,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include_owner\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'author'</span>,<span class=\"hljs-string\">'bookname'</span>,<span class=\"hljs-string\">'address'</span>,<span class=\"hljs-string\">'daysold'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'_owner'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object._owner).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'username'</span>,<span class=\"hljs-string\">'email'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'active'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'last_login_at'</span>])<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "85936e46-2470-412c-a0be-e55b768f9cf2",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app and include its count",
      "fullTitle": "Get objects Queries should be able to get objects created for an app and include its count",
      "timedOut": false,
      "duration": 1728,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tres.body.count.should.be.equal(<span class=\"hljs-number\">6</span>)<br>\t\t\t\tres.body.objects.length.should.be.equal(<span class=\"hljs-number\">6</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "127864e2-ff98-4775-b45b-c603715ef7f8",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app and include its schema",
      "fullTitle": "Get objects Queries should be able to get objects created for an app and include its schema",
      "timedOut": false,
      "duration": 2398,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include_schema\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body).should.to.be.deep.equal([<span class=\"hljs-string\">'objects'</span>,<span class=\"hljs-string\">'schema'</span>])<br>\t\t\t\tres.body.schema[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'author'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "e621a39d-33ba-483e-b71d-6fd18c046a05",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app and include unpublished objects",
      "fullTitle": "Get objects Queries should be able to get objects created for an app and include unpublished objects",
      "timedOut": false,
      "duration": 3795,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"one\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t})<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t  \t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"include_unpublished\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t}))<br>\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "6c7a7ffc-905e-434f-9565-6325925a82d9",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get all objects present for given class as app owner(system user)",
      "fullTitle": "Get objects should be able to get all objects present for given class as app owner(system user)",
      "timedOut": false,
      "duration": 1620,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\tobjCan  = R.last(res.body.objects)<br>\tobjCan.ACL.should.be.deep.equal({})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "6e62708d-a24c-4734-a95d-ea81a16dc6bf",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects present for given class as a collaborator",
      "fullTitle": "Get objects should be able to get all objects present for given class as a collaborator",
      "timedOut": false,
      "duration": 1493,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user2.authtoken, app.api_key, myclass.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\tobjCan  = R.last(res.body.objects)<br>\tobjCan.ACL.should.be.deep.equal({})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "90835103-2da5-4b45-9754-08a22bf496d5",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects present for given class as app user(owner)",
      "fullTitle": "Get objects should be able to get all objects present for given class as app user(owner)",
      "timedOut": false,
      "duration": 1456,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\tobjCan  = R.last(res.body.objects)<br>\tobjCan.ACL.should.be.deep.equal({<br>\t        <span class=\"hljs-string\">\"can\"</span>: []<br>\t      })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "d2b6e6b9-a056-4ecb-8fe4-32dbb940589c",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects present for given class as a other app user",
      "fullTitle": "Get objects should be able to get all objects present for given class as a other app user",
      "timedOut": false,
      "duration": 1658,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\tobjCan  = R.last(res.body.objects)<br>\tobjCan.ACL.should.be.deep.equal({<br>\t        <span class=\"hljs-string\">\"can\"</span>: [<br>\t          <span class=\"hljs-string\">\"update\"</span>,<br>\t          <span class=\"hljs-string\">\"delete\"</span><br>\t        ]<br>\t      })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "5b7de832-b163-4f25-904a-d8bd047a8296",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects and limit it to 1",
      "fullTitle": "Get objects should be able to get all objects and limit it to 1",
      "timedOut": false,
      "duration": 1632,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "626ec495-8397-4b35-8088-388057992f5c",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should get be able to get all objects and skip it to 2",
      "fullTitle": "Get objects should get be able to get all objects and skip it to 2",
      "timedOut": false,
      "duration": 1778,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "7ec06436-4770-4b71-ba89-2dadcaf25592",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should get be able to get all objects using query",
      "fullTitle": "Get objects should get be able to get all objects using query",
      "timedOut": false,
      "duration": 1630,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"query\"</span>: {<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-number\">4</span>}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "e8ba1e50-0df4-41d1-b514-36a4cde2135a",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects skip 2 / limit 1 ",
      "fullTitle": "Get objects should be able to get all objects skip 2 / limit 1 ",
      "timedOut": false,
      "duration": 1478,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span>,<br>\t<span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "8cdf677d-3c28-43d7-9596-4cd40875a367",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get only object`s count in response",
      "fullTitle": "Get objects should be able to get only object`s count in response",
      "timedOut": false,
      "duration": 1613,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "47104955-5ee7-4b94-be2b-e9367d998316",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects and include schema for given class",
      "fullTitle": "Get objects should be able to get all objects and include schema for given class",
      "timedOut": false,
      "duration": 1639,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"include_schema\"</span>: <span class=\"hljs-string\">\"false\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\tschema = res.body.schema<br>\t\tshould.exist(schema)<br>\t\tschema[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">\"name\"</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "a9da2cc1-36dd-43cd-907b-3a529c29cc53",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects and include count in response",
      "fullTitle": "Get objects should be able to get all objects and include count in response",
      "timedOut": false,
      "duration": 1451,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\tcount = res.body.count<br>\t\tshould.exist(count)<br>\t\tcount.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "d4c40e0d-bd47-4975-92f9-4ef8930d29a2",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get zero objects and include count as a \"0\"",
      "fullTitle": "Get objects should be able to get zero objects and include count as a \"0\"",
      "timedOut": false,
      "duration": 1608,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, classZero.uid, {<br>\t<span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"objects\"</span>: [],<br>\t  <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-number\">0</span><br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "530ce74d-eef2-4783-afa0-22710fff132a",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects in ascending order",
      "fullTitle": "Get objects should be able to get all objects in ascending order",
      "timedOut": false,
      "duration": 1480,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"asc\"</span>: <span class=\"hljs-string\">\"name\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobjects[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'1'</span>)<br>\t\tobjects[<span class=\"hljs-number\">1</span>].name.should.be.equal(<span class=\"hljs-string\">'2'</span>)<br>\t\tobjects[<span class=\"hljs-number\">2</span>].name.should.be.equal(<span class=\"hljs-string\">'3'</span>)<br>\t\tobjects[<span class=\"hljs-number\">3</span>].name.should.be.equal(<span class=\"hljs-string\">'4'</span>)<br>\t\tobjects[<span class=\"hljs-number\">4</span>].name.should.be.equal(<span class=\"hljs-string\">'5'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "9d58f648-2f79-4e67-ae91-fc37e2922fbf",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects in descending order",
      "fullTitle": "Get objects should be able to get all objects in descending order",
      "timedOut": false,
      "duration": 1581,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"desc\"</span>: <span class=\"hljs-string\">\"name\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobjects[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'5'</span>)<br>\t\tobjects[<span class=\"hljs-number\">1</span>].name.should.be.equal(<span class=\"hljs-string\">'4'</span>)<br>\t\tobjects[<span class=\"hljs-number\">2</span>].name.should.be.equal(<span class=\"hljs-string\">'3'</span>)<br>\t\tobjects[<span class=\"hljs-number\">3</span>].name.should.be.equal(<span class=\"hljs-string\">'2'</span>)<br>\t\tobjects[<span class=\"hljs-number\">4</span>].name.should.be.equal(<span class=\"hljs-string\">'1'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "344953ae-3988-4dec-868d-3b9cc125ed4b",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects using (ALL) delta query",
      "fullTitle": "Delta queries should be able to get all objects using (ALL) delta query",
      "timedOut": false,
      "duration": 1472,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"ALL\"</span>: date<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'deleted_at'</span>])<br>\t\t\t\tcreatedAt = res.body.objects.created_at<br>\t\t\t\tupdatedAt = res.body.objects.updated_at<br>\t\t\t\tdeletedAt = res.body.objects.deleted_at<br>\t\t\t\tres.body.objects.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tcreatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tdeletedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tcreatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\tupdatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\tdeletedAt.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object3.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(object3.name)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
      "isRoot": false,
      "uuid": "43feaa93-18b9-4a28-9670-461d1ced6a4c",
      "parentUUID": "f67a3605-43ed-4ec2-8ca6-172e817c1e69",
      "skipped": false
    },
    {
      "title": "should be able to get all objects by (created_at) delta query",
      "fullTitle": "Delta queries should be able to get all objects by (created_at) delta query",
      "timedOut": false,
      "duration": 2657,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"created_at\"</span>: object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>])<br>\t\t\t\tcreatedAt = res.body.objects.created_at<br>\t\t\t\tcreatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tcreatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
      "isRoot": false,
      "uuid": "ab18dfb5-d459-4c50-8172-95eb835c05f4",
      "parentUUID": "f67a3605-43ed-4ec2-8ca6-172e817c1e69",
      "skipped": false
    },
    {
      "title": "should be able to get all objects by (updated_at) delta query",
      "fullTitle": "Delta queries should be able to get all objects by (updated_at) delta query",
      "timedOut": false,
      "duration": 1479,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"updated_at\"</span>: object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'updated_at'</span>])<br>\t\t\t\t\tupdatedAt = res.body.objects.updated_at<br>\t\t\t\t\tupdatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupdatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "71819568-406a-4afa-a8fb-d8b2d9bde959",
      "parentUUID": "f67a3605-43ed-4ec2-8ca6-172e817c1e69",
      "skipped": false
    },
    {
      "title": "should be able to get all objects by delete_at delta query",
      "fullTitle": "Delta queries should be able to get all objects by delete_at delta query",
      "timedOut": false,
      "duration": 1881,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"deleted_at\"</span>: object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'deleted_at'</span>])<br>\t\t\t\t\tdeletedAt = res.body.objects.deleted_at<br>\t\t\t\t\tdeletedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tdeletedAt.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object3.uid)<br>\t\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "4362f654-7ef5-4b22-b6a5-74e072fa598e",
      "parentUUID": "f67a3605-43ed-4ec2-8ca6-172e817c1e69",
      "skipped": false
    },
    {
      "title": "should be able to get single object present as system user",
      "fullTitle": "Object CURD should be able to get single object present as system user",
      "timedOut": false,
      "duration": 1437,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\tobject.ACL.should.be.deep.equal({})<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "8e2638e3-b61f-401b-bbff-d275045a777a",
      "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
      "skipped": false
    },
    {
      "title": "should be able to get single object(sys) present as a app user",
      "fullTitle": "Object CURD should be able to get single object(sys) present as a app user",
      "timedOut": false,
      "duration": 1757,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, appUser10.authtoken, app.api_key, myclass3.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t\tobject.ACL.should.be.deep.equal({<br>\t\t\t      <span class=\"hljs-string\">\"can\"</span>: []<br>\t\t\t    })<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "f7ed1054-787d-42f4-8953-49d33685f335",
      "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
      "skipped": false
    },
    {
      "title": "should be able to get single object present as a app user",
      "fullTitle": "Object CURD should be able to get single object present as a app user",
      "timedOut": false,
      "duration": 1474,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, appUser10.authtoken, app.api_key, myclass3.uid, object2.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t\tobject.ACL.should.be.deep.equal({<br>\t\t\t      <span class=\"hljs-string\">\"can\"</span>: [<br>\t\t\t        <span class=\"hljs-string\">\"update\"</span>,<br>\t\t\t        <span class=\"hljs-string\">\"delete\"</span><br>\t\t\t      ]<br>\t\t\t    })<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "a1e0ba85-ceed-4735-a94c-d20c510e72ba",
      "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
      "skipped": false
    },
    {
      "title": "should be able to get single object present as a other app user",
      "fullTitle": "Object CURD should be able to get single object present as a other app user",
      "timedOut": false,
      "duration": 1476,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, appUser9.authtoken, app.api_key, myclass3.uid, object2.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t\tobject.ACL.should.be.deep.equal({<br>\t\t\t      <span class=\"hljs-string\">\"can\"</span>: []<br>\t\t\t    })<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "5262f166-9531-4d83-84a7-86b9ddcdcb4e",
      "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
      "skipped": false
    },
    {
      "title": "should be able to update object present",
      "fullTitle": "Object CURD should be able to update object present",
      "timedOut": false,
      "duration": 1750,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, object1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "39c73f23-480d-4165-968c-045d5d56663e",
      "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
      "skipped": false
    },
    {
      "title": "should be able to perform scilent update on object",
      "fullTitle": "Object CURD should be able to perform scilent update on object",
      "timedOut": false,
      "duration": 1464,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object_sclient'</span>, sys_user1.authtoken, app.api_key, <span class=\"hljs-literal\">true</span>, myclass3.uid, object2.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.object<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t<span class=\"hljs-comment\">// Object.keys(object).should.to.be.deep.equal(['name', 'app_user_object_uid', 'created_by', 'updated_by', 'created_at', 'updated_at', 'uid', 'published', 'ACL', '__loc', '_version', 'tags'])</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\tobject.created_at.should.be.equal(object.updated_at)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "491ff019-de18-4b9d-a80c-5f9642944d39",
      "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid object uid",
      "fullTitle": "Object CURD should provide an error message for invalid object uid",
      "timedOut": false,
      "duration": 1444,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, <span class=\"hljs-string\">\"swapnil\"</span>, {<br>\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
      "isRoot": false,
      "uuid": "55bc3002-03b4-445a-a494-23a58df8908d",
      "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
      "skipped": false
    },
    {
      "title": "should be able to delete object present",
      "fullTitle": "Object CURD should be able to delete object present",
      "timedOut": false,
      "duration": 1852,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'delete_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "ad194417-8082-4147-9f01-fe22b7ff7810",
      "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
      "skipped": false
    },
    {
      "title": "should be able to get all object includeing unpublish",
      "fullTitle": "Unpublish object CURD should be able to get all object includeing unpublish",
      "timedOut": false,
      "duration": 1649,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass5.uid))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
      "isRoot": false,
      "uuid": "2148a42f-3fe0-4f04-9b95-a0a766471600",
      "parentUUID": "92f6be2d-c0bb-4675-bc26-bcec7889faab",
      "skipped": false
    },
    {
      "title": "should be able to get single unpublish object present",
      "fullTitle": "Unpublish object CURD should be able to get single unpublish object present",
      "timedOut": false,
      "duration": 1692,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, sys_user1.authtoken, app.api_key, myclass5.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "a06d0763-9ee2-4f4e-8d2c-1d0a7f1a01f5",
      "parentUUID": "92f6be2d-c0bb-4675-bc26-bcec7889faab",
      "skipped": false
    },
    {
      "title": "should be able to update object present",
      "fullTitle": "Unpublish object CURD should be able to update object present",
      "timedOut": false,
      "duration": 1488,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, myclass5.uid, object1.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: [<span class=\"hljs-string\">\"updated\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobject = res.body.object<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "13c2b258-243a-4a96-815c-63ccb11c37b5",
      "parentUUID": "92f6be2d-c0bb-4675-bc26-bcec7889faab",
      "skipped": false
    },
    {
      "title": "should be able to delete object present",
      "fullTitle": "Unpublish object CURD should be able to delete object present",
      "timedOut": false,
      "duration": 1671,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'delete_object'</span>, sys_user1.authtoken, app.api_key, myclass5.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "3c8d8b74-62a9-4ef6-82b8-7b0649aea624",
      "parentUUID": "92f6be2d-c0bb-4675-bc26-bcec7889faab",
      "skipped": false
    },
    {
      "title": "should provide an error message for -ve index key",
      "fullTitle": "PUSH-PULL should provide an error message for -ve index key",
      "timedOut": false,
      "duration": 1616,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"888\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: -<span class=\"hljs-number\">6</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"Invalid parameters\"</span>: [<br>\t      <span class=\"hljs-string\">\"have invalid update operation(s). Please check if they were performed on null values.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "4feee1ec-e69b-4505-8650-c7d173082cf0",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should be able to PUSH value (object property) in array field present in group",
      "fullTitle": "PUSH-PULL should be able to PUSH value (object property) in array field present in group",
      "timedOut": false,
      "duration": 1808,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"1222222\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "57fe91ac-f782-4a8d-af9c-bf8c3d395b45",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should able to PUSH value (object property) in array field present in group without pasing index",
      "fullTitle": "PUSH-PULL should able to PUSH value (object property) in array field present in group without pasing index",
      "timedOut": false,
      "duration": 2315,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">555</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "c706f955-a1ce-4b8c-a3c8-737b919db4a6",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should able to PUSH value(dot property) in array field present in group",
      "fullTitle": "PUSH-PULL should able to PUSH value(dot property) in array field present in group",
      "timedOut": false,
      "duration": 1636,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"666\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.object<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t<span class=\"hljs-comment\">// object.roundone.hits.should.have.length(6)</span><br>\tobject.roundone.hits[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">666</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "721fba78-48da-4d7f-a1dc-ff9ac7d486d8",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should provide an error message for field datatype validation for PUSH operation",
      "fullTitle": "PUSH-PULL should provide an error message for field datatype validation for PUSH operation",
      "timedOut": false,
      "duration": 2689,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone.hits.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not number\"</span><br>\t    ]<br>\t  }<br>\t})\t\t\t\t\t<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "81383316-f95c-4be8-b008-cba0ad7b29f0",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should able to PUSH value(dot property) without passing index",
      "fullTitle": "PUSH-PULL should able to PUSH value(dot property) without passing index",
      "timedOut": false,
      "duration": 1562,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">999</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = R.last(res.body.object.roundone.hits)<br>\tobject.should.be.equal(<span class=\"hljs-number\">999</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "5eb7ab16-fae2-4ce4-b0ed-3e7d97d4f290",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should able to create object and PUSH values in it",
      "fullTitle": "PUSH-PULL should able to create object and PUSH values in it",
      "timedOut": false,
      "duration": 1509,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"555\"</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tobject = res.body.object.roundone.hits[<span class=\"hljs-number\">0</span>]<br>\tobject.should.be.equal(<span class=\"hljs-number\">555</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "074aed3e-cb59-4a58-b634-5aa62a3eb94f",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should able to create object without PUSH operation (blank object)",
      "fullTitle": "PUSH-PULL should able to create object without PUSH operation (blank object)",
      "timedOut": false,
      "duration": 1663,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: [<span class=\"hljs-string\">\"786\"</span>]<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">\"Woot! Object created successfully.\"</span>)<br>\tres.body.object.roundone.should.be.deep.equal({<br>\t\t\t      <span class=\"hljs-string\">\"hits\"</span>: []<br>\t\t\t    })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "edc0f106-39a7-40e7-8b16-0598ac3f1903",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should able to create object and PUSH values in it using dot property",
      "fullTitle": "PUSH-PULL should able to create object and PUSH values in it using dot property",
      "timedOut": false,
      "duration": 1639,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">777</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"parameter\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "66b459ed-4a51-4051-9494-901b4531ce4c",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should be able to PULL value(object property) from array while updating object",
      "fullTitle": "PUSH-PULL should be able to PULL value(object property) from array while updating object",
      "timedOut": false,
      "duration": 2954,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"101\"</span>, <span class=\"hljs-string\">\"102\"</span>, <span class=\"hljs-string\">\"103\"</span>, <span class=\"hljs-string\">\"104\"</span>, <span class=\"hljs-string\">\"105\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest1\"</span><br>\t\t}<br>\t}<br>}))<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">105</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))\t<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.roundone.hits.should.be.deep.equal([<span class=\"hljs-number\">101</span>, <span class=\"hljs-number\">102</span>, <span class=\"hljs-number\">103</span>, <span class=\"hljs-number\">104</span>])<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "513d9185-748b-4e66-9494-e593eba7a4fd",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should be able to PULL multiple values(object property) from array while updating object",
      "fullTitle": "PUSH-PULL should be able to PULL multiple values(object property) from array while updating object",
      "timedOut": false,
      "duration": 3182,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"201\"</span>, <span class=\"hljs-string\">\"202\"</span>, <span class=\"hljs-string\">\"203\"</span>, <span class=\"hljs-string\">\"204\"</span>, <span class=\"hljs-string\">\"205\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest2\"</span><br>\t\t}<br>\t}<br>}))<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-number\">201</span>, <span class=\"hljs-number\">202</span>, <span class=\"hljs-number\">203</span>, <span class=\"hljs-number\">204</span>, <span class=\"hljs-number\">205</span>]<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))\t<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.roundone.hits.should.be.deep.equal([])<br>\t<span class=\"hljs-comment\">// object.roundone.hits[1].should.be.not.equal([3])</span><br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "71ac13b1-6445-4da3-80a2-6b4b125614d7",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should provide an error message for data key for PULL operation",
      "fullTitle": "PUSH-PULL should provide an error message for data key for PULL operation",
      "timedOut": false,
      "duration": 1667,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone.hits\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "6367803c-5be2-4faf-bdcf-539b06cbbfae",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should provide an error message if index specified for PULL operation ",
      "fullTitle": "PUSH-PULL should provide an error message if index specified for PULL operation ",
      "timedOut": false,
      "duration": 3402,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"401\"</span>, <span class=\"hljs-string\">\"402\"</span>, <span class=\"hljs-string\">\"403\"</span>, <span class=\"hljs-string\">\"404\"</span>, <span class=\"hljs-string\">\"405\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest3\"</span><br>\t\t}<br>\t}<br>}))<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone.hits\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "0db37458-7e1d-49e2-b102-e536b68b85b4",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should provide an error message for -ve index in UPDATE operation",
      "fullTitle": "UPDATE on group(array) field should provide an error message for -ve index in UPDATE operation",
      "timedOut": false,
      "duration": 3268,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">55000</span>)<br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"201\"</span>, <span class=\"hljs-string\">\"202\"</span>, <span class=\"hljs-string\">\"203\"</span>, <span class=\"hljs-string\">\"204\"</span>, <span class=\"hljs-string\">\"205\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest122\"</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// console.log(objUid)</span><br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">9999</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: -<span class=\"hljs-number\">1</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "29dcf2b4-67f8-4e4f-a785-4c1e5849dde2",
      "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
      "skipped": false
    },
    {
      "title": "should be able to update the given value(object property) at provided index",
      "fullTitle": "UPDATE on group(array) field should be able to update the given value(object property) at provided index",
      "timedOut": false,
      "duration": 3450,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">35000</span>)<br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"201\"</span>, <span class=\"hljs-string\">\"202\"</span>, <span class=\"hljs-string\">\"203\"</span>, <span class=\"hljs-string\">\"204\"</span>, <span class=\"hljs-string\">\"205\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest12\"</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">9999</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "6d331dcd-e3bf-49b6-94ab-08be796878d4",
      "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
      "skipped": false
    },
    {
      "title": "should be able to update then value(dot property) at provided index",
      "fullTitle": "UPDATE on group(array) field should be able to update then value(dot property) at provided index",
      "timedOut": false,
      "duration": 3502,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">40000</span>)<br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"501\"</span>, <span class=\"hljs-string\">\"502\"</span>, <span class=\"hljs-string\">\"503\"</span>, <span class=\"hljs-string\">\"504\"</span>, <span class=\"hljs-string\">\"505\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest22\"</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"UPDATE\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"666\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.roundone.hits[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">666</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "0a53d14a-a15a-4dff-8f5c-289460b0b237",
      "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
      "skipped": false
    },
    {
      "title": "should provide an error message for multiple values(object property) PUSH on same object",
      "fullTitle": "UPDATE on group(array) field should provide an error message for multiple values(object property) PUSH on same object",
      "timedOut": false,
      "duration": 2101,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object1.uid<br><br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass8.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"UPDATE\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"marks\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-number\">502</span>, <span class=\"hljs-number\">503</span>]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t},<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"subject\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"list\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-string\">\"ENG\"</span>]<br>\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"group.0.subject\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "b3524300-04ae-4024-9daa-60c9617ff4ec",
      "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
      "skipped": false
    },
    {
      "title": "should provide an error message for multiple values(dot property) PUSH on same object",
      "fullTitle": "UPDATE on group(array) field should provide an error message for multiple values(dot property) PUSH on same object",
      "timedOut": false,
      "duration": 1551,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">25000</span>)<br><span class=\"hljs-keyword\">var</span> objUid = object1.uid<br><br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass8.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"group\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"UPDATE\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"marks\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-number\">99</span>, <span class=\"hljs-number\">98</span>]<br>\t\t\t\t\t\t}<br>\t\t\t\t\t},<br>\t\t\t\t\t<span class=\"hljs-string\">\"subject.0.list\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-string\">\"FRN\"</span>]<br>\t\t\t\t\t\t},<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"subject.0.list\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-string\">\"PHY\"</span>]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object.group[<span class=\"hljs-number\">0</span>]<br>\tobject.marks[<span class=\"hljs-number\">4</span>].should.be.equal(<span class=\"hljs-number\">99</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "b5d110f0-bc91-422d-aadf-fd6926526536",
      "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
      "skipped": false
    },
    {
      "title": "should provide an error message for array field when index is not specifyed for field to ADD/SUB",
      "fullTitle": "ADD_SUB should provide an error message for array field when index is not specifyed for field to ADD/SUB",
      "timedOut": false,
      "duration": 1486,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_plus\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t},<br>\t\t<span class=\"hljs-string\">\"cash_minus\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">500</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"cash_plus\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "d59c7c1d-553f-4cdb-9dec-6479391d3031",
      "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
      "skipped": false
    },
    {
      "title": "should be able to ADD provided number in present field in an array",
      "fullTitle": "ADD_SUB should be able to ADD provided number in present field in an array",
      "timedOut": false,
      "duration": 1912,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_plus.0\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.cash_plus[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">6900</span>)<br>\tobject.cash_plus[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-number\">6300</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "289f1c39-37ce-4fe6-9e40-911b014a128d",
      "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
      "skipped": false
    },
    {
      "title": "should be able to SUB given number in present field in an array",
      "fullTitle": "ADD_SUB should be able to SUB given number in present field in an array",
      "timedOut": false,
      "duration": 1646,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_minus\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">500.7</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.cash_minus.should.be.equal(<span class=\"hljs-number\">8000.000000000001</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "1af1ff4c-227c-4fcf-bb68-911eef543e49",
      "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
      "skipped": false
    },
    {
      "title": "should provide an error message for null field ADD/sub operation",
      "fullTitle": "ADD_SUB should provide an error message for null field ADD/sub operation",
      "timedOut": false,
      "duration": 3300,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_plus.4\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"cash_plus.3\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"3\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "c720c35c-00dc-4ee8-ba74-14525d632e9b",
      "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
      "skipped": false
    },
    {
      "title": "should be able to ADD given number to number field present inside the group",
      "fullTitle": "ADD_SUB should be able to ADD given number to number field present inside the group",
      "timedOut": false,
      "duration": 1514,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group_cash.add_cash.0\"</span>: {<span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">50</span>}<br>\t\t}<br>\t}<br>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.group_cash.add_cash[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">102</span>)<br>\tobject.group_cash.add_cash[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-number\">75</span>)<br>\tobject.group_cash.remove_cash.should.be.equal(<span class=\"hljs-number\">264.56</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "e5628e87-e774-4056-a1ee-945007b47d4e",
      "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
      "skipped": false
    },
    {
      "title": "should be able to SUB given number to number field present inside the group",
      "fullTitle": "ADD_SUB should be able to SUB given number to number field present inside the group",
      "timedOut": false,
      "duration": 1675,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group_cash.remove_cash\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">200</span><br>\t\t\t}<br>\t\t}<br>\t}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.group_cash.remove_cash.should.be.equal(<span class=\"hljs-number\">64.56</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "db064ee2-e8af-432c-b753-1d1f6980e96c",
      "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
      "skipped": false
    },
    {
      "title": "should provide an error message for incorrect group field",
      "fullTitle": "ADD_SUB should provide an error message for incorrect group field",
      "timedOut": false,
      "duration": 1470,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">35000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"group_cash.remove_cash.0\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">264</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"parameters\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "91dfadf0-1661-48de-be75-4c07e1e0bf89",
      "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
      "skipped": false
    },
    {
      "title": "should be able to ADD given number to number field present inside the group",
      "fullTitle": "ADD_SUB should be able to ADD given number to number field present inside the group",
      "timedOut": false,
      "duration": 1593,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group_cash.add_cash\"</span>: {<span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">50</span>}<br>\t\t}<br>\t}<br>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"group_cash.add_cash\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "9ec22c9c-d755-4acb-bbfd-71a6b622feb5",
      "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
      "skipped": false
    },
    {
      "title": "should be able to search and update object using UPSERT operation",
      "fullTitle": "UPSERT should be able to search and update object using UPSERT operation",
      "timedOut": false,
      "duration": 2924,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classInfo.uid, {<br>  <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>    <span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"pune\"</span><br>  },<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"sachin\"</span>,<br>    <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">36</span>,<br>    <span class=\"hljs-string\">\"address\"</span>: {<br>      <span class=\"hljs-string\">\"state\"</span>: <span class=\"hljs-string\">\"DL\"</span>,<br>      <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"mumbai\"</span><br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, classInfo.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\tobject.name.should.be.equal(<span class=\"hljs-string\">'sachin'</span>)<br>\tobject.address.state.should.be.equal(<span class=\"hljs-string\">'DL'</span>)<br>\tobject.address.city.should.be.equal(<span class=\"hljs-string\">'mumbai'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "260d1753-7bda-4ef2-8d2d-1c915dcafcb1",
      "parentUUID": "2d9102fe-6ba4-440c-9d18-12ffc71b8af3",
      "skipped": false
    },
    {
      "title": "should be able to search and create new object if not found",
      "fullTitle": "UPSERT should be able to search and create new object if not found",
      "timedOut": false,
      "duration": 1853,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// console.log(classInfo.uid)</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classInfo.uid, {<br>  <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"ooty\"</span><br>  },<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"hari\"</span>,<br>    <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">28</span>,<br>    <span class=\"hljs-string\">\"address\"</span>: {<br>      <span class=\"hljs-string\">\"state\"</span>: <span class=\"hljs-string\">\"kerala\"</span>,<br>      <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"ooty\"</span><br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.name.should.be.equal(<span class=\"hljs-string\">'hari'</span>)<br>\tobject.age.should.be.equal(<span class=\"hljs-number\">28</span>)<br>\tobject.address.state.should.be.equal(<span class=\"hljs-string\">'kerala'</span>)<br>\tobject.address.city.should.be.equal(<span class=\"hljs-string\">'ooty'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "15eabe5e-1414-4a8f-be8a-f524978b177c",
      "parentUUID": "2d9102fe-6ba4-440c-9d18-12ffc71b8af3",
      "skipped": false
    },
    {
      "title": "should be able to update reference object using UPSERT operation",
      "fullTitle": "UPSERT should be able to update reference object using UPSERT operation",
      "timedOut": false,
      "duration": 3545,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// console.log(classInfo.uid)</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classRef.uid, {<br>\t\t\t    <span class=\"hljs-string\">\"object\"</span>: {<br>\t\t        <span class=\"hljs-string\">\"owner\"</span>: [{<br>\t\t          <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>\t\t              <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"sing\"</span><br>\t\t          },<br>\t\t          <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">55</span>,<br>\t\t          <span class=\"hljs-string\">\"address.state\"</span>: <span class=\"hljs-string\">\"KT\"</span>,<br>\t\t          <span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"hampi\"</span><br>\t\t        }]<br>\t\t\t    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, classInfo.uid, {<br>\t <span class=\"hljs-string\">\"query\"</span>: {<br>\t    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"sing\"</span><br>\t  }<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "f21d3177-61c6-4f1b-866a-24db1b4c20e2",
      "parentUUID": "2d9102fe-6ba4-440c-9d18-12ffc71b8af3",
      "skipped": false
    },
    {
      "title": "should provide an error message for Multiple matching objects while UPSERT operation",
      "fullTitle": "UPSERT should provide an error message for Multiple matching objects while UPSERT operation",
      "timedOut": false,
      "duration": 1713,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// console.log(classInfo.uid)</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classRef.uid, {<br>\t\t\t    <span class=\"hljs-string\">\"object\"</span>: {<br>\t\t        <span class=\"hljs-string\">\"owner\"</span>: [{<br>\t\t          <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>\t\t              <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"peter\"</span><br>\t\t          },<br>\t\t          <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">55</span>,<br>\t\t          <span class=\"hljs-string\">\"address.state\"</span>: <span class=\"hljs-string\">\"KT\"</span>,<br>\t\t          <span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"hampi\"</span><br>\t\t        }]<br>\t\t\t    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"owner.0.UPSERT\"</span>: [<br>\t      <span class=\"hljs-string\">\"Bummer. Upsert failed. Multiple matching objects were found.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "69a795ad-6392-4b44-8cb1-d23b1b334bd2",
      "parentUUID": "2d9102fe-6ba4-440c-9d18-12ffc71b8af3",
      "skipped": false
    },
    {
      "title": "should be able to have only localy unique objects per system user",
      "fullTitle": "Localy unique should be able to have only localy unique objects per system user",
      "timedOut": false,
      "duration": 3005,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">20000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test\"</span><br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "40ac2a26-b8a7-44b9-9b7c-89128339c98a",
      "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
      "skipped": false
    },
    {
      "title": "should be able to have only localy unique objects per application user(tenant)",
      "fullTitle": "Localy unique should be able to have only localy unique objects per application user(tenant)",
      "timedOut": false,
      "duration": 5119,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">45000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}, tenant1.uid))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}, tenant1.uid))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}, tenant1.uid))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "6ed896a2-5382-476f-886a-6b11a9a8bcf8",
      "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
      "skipped": false
    },
    {
      "title": "should be able to have only localy unique objects as per application user and system user",
      "fullTitle": "Localy unique should be able to have only localy unique objects as per application user and system user",
      "timedOut": false,
      "duration": 8190,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">45000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, <span class=\"hljs-string\">''</span>, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, <span class=\"hljs-string\">''</span>, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser3.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}, tenant2.uid))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "eeb9534a-8186-47ba-beac-9449dbd69c24",
      "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
      "skipped": false
    },
    {
      "title": "should be able to have only localy unique objects as per application user in tenant",
      "fullTitle": "Localy unique should be able to have only localy unique objects as per application user in tenant",
      "timedOut": false,
      "duration": 5600,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">95000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser6.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "2f4a62b5-2f48-4ed1-b44c-c70777bfe25e",
      "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
      "skipped": false
    },
    {
      "title": "should provide an error message for localy unique object present",
      "fullTitle": "Localy unique should provide an error message for localy unique object present",
      "timedOut": false,
      "duration": 3041,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classLocal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "0fe02564-d0d0-46af-9fa7-62fa14333ac6",
      "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
      "skipped": false
    },
    {
      "title": "should be able to have only globaly unique objects per user",
      "fullTitle": "Global unique should be able to have only globaly unique objects per user",
      "timedOut": false,
      "duration": 6633,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">35000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, classGlobal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, <span class=\"hljs-string\">''</span>, app.api_key, classGlobal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: [<br>\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t]<br>\t\t}<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classGlobal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t\t}<br>\t}, tenant1.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classGlobal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t\t}<br>\t}, tenant1.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: [<br>\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t]<br>\t\t}<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "c6f75acc-72a7-4d23-93da-609a7a15083c",
      "parentUUID": "a7ab7c54-3e41-443e-8f80-cf39ca47dc03",
      "skipped": false
    },
    {
      "title": "should provide an error message for global object already present",
      "fullTitle": "Global unique should provide an error message for global object already present",
      "timedOut": false,
      "duration": 1672,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classGlobal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"swapnil\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "9ca35576-ae84-45cb-be0d-c5e2fad2b2a7",
      "parentUUID": "a7ab7c54-3e41-443e-8f80-cf39ca47dc03",
      "skipped": false
    },
    {
      "title": "should not be able to uniquness change local to global on class",
      "fullTitle": "Change uniquness should not be able to uniquness change local to global on class",
      "timedOut": false,
      "duration": 3787,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"uniqueclass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"uniqueclass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}]<br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tclassUnique = res.body.class<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'global'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, classUnique.uid, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t}]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}))<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class updated successfully!'</span>)<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'global'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tdone()<br>\t\t\t\t\t})<br>\t\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t\t})",
      "isRoot": false,
      "uuid": "bb164850-0f58-4c9c-b7ca-322f538a8da6",
      "parentUUID": "4cdf162d-5411-4586-bdbe-30baabf179f2",
      "skipped": false
    },
    {
      "title": "should be able to change uniquness local to null on class",
      "fullTitle": "Change uniquness should be able to change uniquness local to null on class",
      "timedOut": false,
      "duration": 3251,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"uniqueClass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"uniqueClass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}]<br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t\tclassUnique = res.body.class<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'local'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, classUnique.uid, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t}]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}))<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class updated successfully!'</span>)<br>\t\t\t\t\t\tclassUpdated = res.body.class<br>\t\t\t\t\t\tshould.not.exist(classUpdated.schema[<span class=\"hljs-number\">0</span>].unique)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tdone()<br>\t\t\t\t\t})<br>\t\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t\t})",
      "isRoot": false,
      "uuid": "ec3acbf6-f6db-4381-ac01-fa9b635a857c",
      "parentUUID": "4cdf162d-5411-4586-bdbe-30baabf179f2",
      "skipped": false
    },
    {
      "title": "should be able to change uniquness global to null on class",
      "fullTitle": "Change uniquness should be able to change uniquness global to null on class",
      "timedOut": false,
      "duration": 3450,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"uniqueClass2\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"uniqueClass2\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}]<br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t\tclassUnique = res.body.class<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'global'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, classUnique.uid, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t}]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}))<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class updated successfully!'</span>)<br>\t\t\t\t\t\tclassUpdated = res.body.class<br>\t\t\t\t\t\tshould.not.exist(classUpdated.schema[<span class=\"hljs-number\">0</span>].unique)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tdone()<br>\t\t\t\t\t})<br>\t\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t\t})",
      "isRoot": false,
      "uuid": "b15c7191-e2c7-4600-bceb-c753192155e7",
      "parentUUID": "4cdf162d-5411-4586-bdbe-30baabf179f2",
      "skipped": false
    },
    {
      "title": "should be able to update class with other unique fields and create objects",
      "fullTitle": "Change uniquness should be able to update class with other unique fields and create objects",
      "timedOut": false,
      "duration": 10270,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">25000</span>)<br><span class=\"hljs-comment\">// grp Golbal fields local</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grpClass\"</span>,<br>\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"grpClass\"</span>,<br>\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t}<br>\t\t}, {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"group\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t},<br>\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t}<br>\t\t\t}, {<br>\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t}<br>\t\t\t}]<br>\t\t}]<br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tclassUpdate = res.body.class<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid123\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"1\"</span>, <span class=\"hljs-string\">\"2\"</span>, <span class=\"hljs-string\">\"3\"</span>]<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser6.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid123\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"3\"</span>, <span class=\"hljs-string\">\"2\"</span>, <span class=\"hljs-string\">\"1\"</span>]<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, <span class=\"hljs-string\">'built_io_application_user'</span>, {<br>\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"grpClass\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grpclass\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"inbuilt_class\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"group\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t},<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}]<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"age\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"age\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t}<br>\t\t\t\t}]<br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser6.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid456\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"4\"</span>, <span class=\"hljs-string\">\"5\"</span>, <span class=\"hljs-string\">\"6\"</span>]<br>\t\t\t\t},<br>\t\t\t\t<span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">10</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid456\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"4\"</span>, <span class=\"hljs-string\">\"5\"</span>, <span class=\"hljs-string\">\"6\"</span>]<br>\t\t\t\t},<br>\t\t\t\t<span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">10</span> <span class=\"hljs-comment\">//checking</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "38f3c3b5-2eb1-4f6d-8a23-cca8584b5734",
      "parentUUID": "4cdf162d-5411-4586-bdbe-30baabf179f2",
      "skipped": false
    },
    {
      "title": "should be able to get tenant uid for upload object link present in created object",
      "fullTitle": "Tenant uid in url should be able to get tenant uid for upload object link present in created object",
      "timedOut": false,
      "duration": 1698,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classFile.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"swapnil\"</span>,<br>\t\t<span class=\"hljs-string\">\"file\"</span>: uploadGet1.uid<br>\t}<br>}, tenant1.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobject = res.body.object<br>\texpect(object.file.url).to.contain(<span class=\"hljs-string\">'tenant_uid'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
      "isRoot": false,
      "uuid": "773243a1-868e-46b4-b113-8989f9180de8",
      "parentUUID": "30759dc2-c09b-4f51-b8bf-51bdd0cce220",
      "skipped": false
    },
    {
      "title": "should be able to get application user object and check group fields present",
      "fullTitle": "System class group fields should be able to get application user object and check group fields present",
      "timedOut": false,
      "duration": 1639,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, sys_user1.authtoken, app.api_key))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobject = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'group1'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_field1'</span>, <span class=\"hljs-string\">'g1_field2'</span>, <span class=\"hljs-string\">'g1_group1'</span>, <span class=\"hljs-string\">'g1_group2'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_field1'</span>, <span class=\"hljs-string\">'g1_g1_group1'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1.g1_g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_g1_field1'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>, <span class=\"hljs-string\">'g1_g2_group1'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>].g1_g2_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>])<br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject.group1.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"g1_field1\"</span>: <span class=\"hljs-string\">\"group 1 field 1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_field2\"</span>: <span class=\"hljs-number\">100</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_field1\"</span>: <span class=\"hljs-string\">\"group 1 group 1 field1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g1_g1_field1\"</span>: <span class=\"hljs-string\">\"group 1 group 1 group 1 field1\"</span><br>\t\t\t\t}<br>\t\t\t},<br>\t\t\t<span class=\"hljs-string\">\"g1_group2\"</span>: [{<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-number\">100</span>,<br>\t\t\t\t\t<span class=\"hljs-number\">100</span><br>\t\t\t\t],<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"abcde\"</span><br>\t\t\t\t\t]<br>\t\t\t\t}<br>\t\t\t}]<br>\t\t})<br>\t\tobject.username.should.be.equal(userObj.username)<br>\t\tobject.email.should.be.equal(userObj.email)<br>\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\tobject.uid.should.be.equal(userObj.uid)<br>\t\tobject.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject.ACL.should.be.deep.equal({})<br>\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\tobject.tags.should.be.deep.equal([])<br>\t\tshould.not.exist(object.__loc)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "3b56d7cb-d17a-4c1f-ae99-4a6046e50440",
      "parentUUID": "63dd1488-8e9a-4418-883d-aca7222570f9",
      "skipped": false
    },
    {
      "title": "should update application user objects group fields present ",
      "fullTitle": "System class group fields should update application user objects group fields present ",
      "timedOut": false,
      "duration": 1497,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, sys_user1.authtoken, app.api_key, userObj.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"group1\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 field 1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_field2\"</span>: <span class=\"hljs-string\">\"900\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 field1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 group 1 field1\"</span><br>\t\t\t\t}<br>\t\t\t},<br>\t\t\t<span class=\"hljs-string\">\"g1_group2\"</span>: [{<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-string\">\"900\"</span>, <span class=\"hljs-string\">\"900\"</span>, <span class=\"hljs-string\">\"900\"</span>],<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-string\">\"zxcvb\"</span>]<br>\t\t\t\t}<br>\t\t\t}]<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.object<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t<span class=\"hljs-comment\">// key assertion </span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'group1'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_field1'</span>, <span class=\"hljs-string\">'g1_field2'</span>, <span class=\"hljs-string\">'g1_group2'</span>, <span class=\"hljs-string\">'g1_group1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_field1'</span>, <span class=\"hljs-string\">'g1_g1_group1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1.g1_g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_g1_field1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>, <span class=\"hljs-string\">'g1_g2_group1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>].g1_g2_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>])<br>\t<span class=\"hljs-comment\">// value assertion</span><br>\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\tobject.group1.should.be.deep.equal({<br>\t\t<span class=\"hljs-string\">\"g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 field 1\"</span>,<br>\t\t<span class=\"hljs-string\">\"g1_field2\"</span>: <span class=\"hljs-number\">900</span>,<br>\t\t<span class=\"hljs-string\">\"g1_group1\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 field1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_g1_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 group 1 field1\"</span><br>\t\t\t}<br>\t\t},<br>\t\t<span class=\"hljs-string\">\"g1_group2\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-number\">900</span>, <span class=\"hljs-number\">900</span>, <span class=\"hljs-number\">900</span>],<br>\t\t\t<span class=\"hljs-string\">\"g1_g2_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-string\">\"zxcvb\"</span>]<br>\t\t\t}<br>\t\t}]<br>\t})<br>\tobject.username.should.be.equal(userObj.username)<br>\tobject.email.should.be.equal(userObj.email)<br>\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\tobject.created_by.should.be.equal(object.updated_by)<br>\tobject.created_at.should.be.not.equal(object.updated_at)<br>\tobject.uid.should.be.equal(userObj.uid)<br>\tobject.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\tobject.ACL.should.be.deep.equal({})<br>\tobject._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\tobject.tags.should.be.deep.equal([])<br>\tshould.not.exist(object.__loc)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "6dbb7dc9-2414-40f3-b1f8-1a7c2c347543",
      "parentUUID": "63dd1488-8e9a-4418-883d-aca7222570f9",
      "skipped": false
    },
    {
      "title": "should be able to create a system roles for an app",
      "fullTitle": "Create an system roles should be able to create a system roles for an app",
      "timedOut": false,
      "duration": 1640,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> role = res.body.system_role<br>\t\t\t<span class=\"hljs-comment\">//console.log(res.body)</span><br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(role).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(role.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was created successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\trole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\trole.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\trole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\trole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\trole.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\trole.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\trole.application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\trole.name.should.be.equal(<span class=\"hljs-string\">'role_test'</span>)<br>\t\trole.owner.should.be.equal(email)<br>\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t<span class=\"hljs-comment\">//role.application.created_at.should.be.equal(role.application.updated_at)</span><br>\t\trole.application.uid.should.be.equal(appuid)<br>\t\trole.application.name.should.be.equal(appname)<br>\t\trole.application.api_key.should.be.equal(api_key)<br>\t\trole.application.owner_uid.should.be.equal(userUID)<br>\t\trole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\trole.application.master_key.should.be.equal(master_key)<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "8648b2e7-7726-41bd-8887-098e0daa223f",
      "parentUUID": "e3d3c282-8764-41d7-8df7-4f3a217b7425",
      "skipped": false
    },
    {
      "title": "should provide error message for mandetory field",
      "fullTitle": "Create an system roles should provide error message for mandetory field",
      "timedOut": false,
      "duration": 1482,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. System creation failed. Please try again.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">157</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t\t    ]<br>\t\t  }<br>\t\t})\t<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "46a97315-e05c-47b2-8d87-b8b9eedf1400",
      "parentUUID": "e3d3c282-8764-41d7-8df7-4f3a217b7425",
      "skipped": false
    },
    {
      "title": "should provide error message for unique name",
      "fullTitle": "Create an system roles should provide error message for unique name",
      "timedOut": false,
      "duration": 3107,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tfactories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t\t})<br>\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\tres.body.should.be.deep.equal({<br>\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. System creation failed. Please try again.\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">157</span>,<br>\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t    ]<br>\t\t\t  }<br>\t\t\t})<br>\t\t\tdone(err)<br>\t\t})<br>\t})",
      "isRoot": false,
      "uuid": "a8f3fbe4-cb78-4106-8c86-591ee4054637",
      "parentUUID": "e3d3c282-8764-41d7-8df7-4f3a217b7425",
      "skipped": false
    },
    {
      "title": "should be able to get all system roles created for an app",
      "fullTitle": "Get system_roles should be able to get all system roles created for an app",
      "timedOut": false,
      "duration": 5896,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"dev manager\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> role1 = res.body.system_role.name<br>\t\tfactories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"content manager\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> role2 = res1.body.system_role.name<br>\t\t\t\tfactories.create(<span class=\"hljs-string\">'Get_system_roles'</span>, authtoken, api_key)<br>\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res3</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> allroles = res3.body.system_roles<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(allroles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(allroles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(allroles[<span class=\"hljs-number\">0</span>].application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br><br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'role_test'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].owner.should.be.equal(email)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//allroles[0].application.created_at.should.be.equal(allroles[0].application.updated_at)</span><br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.uid.should.be.equal(appuid)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.name.should.be.equal(appname)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.api_key.should.be.equal(api_key)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.owner_uid.should.be.equal(userUID)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.master_key.should.be.equal(master_key)<br>\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t})<br>\t\t\t})<br><br>\t})",
      "isRoot": false,
      "uuid": "6b3e3821-acc1-44c8-9f92-6a96910cd853",
      "parentUUID": "f2594566-5955-4f73-8337-906277feda00",
      "skipped": false
    },
    {
      "title": "should be able to get single system_role created for an app",
      "fullTitle": "Get single system role should be able to get single system_role created for an app",
      "timedOut": false,
      "duration": 3384,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res.body.system_role.uid<br><br>\t\tfactories.create(<span class=\"hljs-string\">'Get_single_role'</span>, authtoken, api_key, role_uid)<br>\t\t\t<span class=\"hljs-comment\">// .expect(200)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> roleobject = res1.body.system_role<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roleobject).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roleobject).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roleobject.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\troleobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troleobject.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troleobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troleobject.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troleobject.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\troleobject.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troleobject.application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\troleobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\troleobject.owner.should.be.equal(email)<br>\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t<span class=\"hljs-comment\">//roleobject.application.created_at.should.be.equal(roleobject.application.updated_at)</span><br>\t\t\t\troleobject.application.uid.should.be.equal(appuid)<br>\t\t\t\troleobject.application.name.should.be.equal(appname)<br>\t\t\t\troleobject.application.api_key.should.be.equal(api_key)<br>\t\t\t\troleobject.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\troleobject.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\troleobject.application.master_key.should.be.equal(master_key)<br>\t\t\t\tdone(err)<br>\t\t\t});<br>\t});",
      "isRoot": false,
      "uuid": "a3df1ead-1caf-4993-a348-aa916aa651af",
      "parentUUID": "1124a109-d181-4d9c-82a4-083e00d55ec0",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid uid for get operation",
      "fullTitle": "Get single system role should provide an error message for invalid uid for get operation",
      "timedOut": false,
      "duration": 1645,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_single_role'</span>, authtoken, api_key, <span class=\"hljs-string\">'asdardf'</span>)<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The system role was not found. Please try again.\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">158</span>,<br>\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t})<br>\t\tdone(err)<br>\t});",
      "isRoot": false,
      "uuid": "50bbe56f-dc2d-4150-9cbe-4078164cf160",
      "parentUUID": "1124a109-d181-4d9c-82a4-083e00d55ec0",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid authtoken",
      "fullTitle": "Get single system role should provide an error message for invalid authtoken",
      "timedOut": false,
      "duration": 1661,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_single_role'</span>, <span class=\"hljs-string\">'blt69cf33d54698aaeca4fd5c9a'</span>, api_key, role_uid)<br>\t<span class=\"hljs-comment\">// .expect(200)</span><br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\tdone(err)<br>\t});",
      "isRoot": false,
      "uuid": "c5041e52-8a7e-4071-8f82-691345c7b8d8",
      "parentUUID": "1124a109-d181-4d9c-82a4-083e00d55ec0",
      "skipped": false
    },
    {
      "title": "should be able to update system role created for an app",
      "fullTitle": "Update system role should be able to update system role created for an app",
      "timedOut": false,
      "duration": 3581,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"managers\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res1.body.system_role.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Update_system_role'</span>, authtoken, api_key, role_uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> updatedRole = res2.body.system_role<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was updated successfully.'</span>)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\tupdatedRole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\tupdatedRole.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tupdatedRole.name.should.be.equal(<span class=\"hljs-string\">'developers'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.equal(email)<br>\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t<span class=\"hljs-comment\">//updatedRole.application.created_at.should.be.equal(updatedRole.application.updated_at)</span><br>\t\t\t\tupdatedRole.application.uid.should.be.equal(appuid)<br>\t\t\t\tupdatedRole.application.name.should.be.equal(appname)<br>\t\t\t\tupdatedRole.application.api_key.should.be.equal(api_key)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\tupdatedRole.application.master_key.should.be.equal(master_key)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
      "isRoot": false,
      "uuid": "d1db2330-3e36-4b5b-b8cb-58e81e0f70d7",
      "parentUUID": "b194063b-efba-4746-a9dd-77a9411ad42b",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid uid whlie updating system roles",
      "fullTitle": "Update system role should provide an error message for invalid uid whlie updating system roles",
      "timedOut": false,
      "duration": 1469,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Update_system_role'</span>, authtoken, api_key, <span class=\"hljs-string\">'ddfbkdfkjf'</span>, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The system role was not found. Please try again.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">158</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\tdone(err)<br>\t});",
      "isRoot": false,
      "uuid": "acbe603f-41e9-4498-83f2-07661826121e",
      "parentUUID": "b194063b-efba-4746-a9dd-77a9411ad42b",
      "skipped": false
    },
    {
      "title": "should be able to update role as collaborator when not restricted",
      "fullTitle": "Update system role should be able to update role as collaborator when not restricted",
      "timedOut": false,
      "duration": 8027,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"QA_manager\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res1.body.system_role.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Update_system_role'</span>, sys_user2.authtoken, api_key, role_uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Tester\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> updatedRole = res2.body.system_role<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was updated successfully.'</span>)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\tupdatedRole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\tupdatedRole.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// updatedRole.application.master_key.should.be.a('string')</span><br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tupdatedRole.name.should.be.equal(<span class=\"hljs-string\">'Tester'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.equal(email)<br>\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t<span class=\"hljs-comment\">//updatedRole.application.created_at.should.be.equal(updatedRole.application.updated_at)</span><br>\t\t\t\tupdatedRole.application.uid.should.be.equal(appuid)<br>\t\t\t\tupdatedRole.application.name.should.be.equal(appname)<br>\t\t\t\tupdatedRole.application.api_key.should.be.equal(api_key)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\t<span class=\"hljs-comment\">// updatedRole.application.master_key.should.be.equal(master_key)</span><br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
      "isRoot": false,
      "uuid": "b4ca21b7-cd47-474c-a0be-a335829ea9b3",
      "parentUUID": "b194063b-efba-4746-a9dd-77a9411ad42b",
      "skipped": false
    },
    {
      "title": "should be able to delete a system role created for an app",
      "fullTitle": "Delete system role should be able to delete a system role created for an app",
      "timedOut": false,
      "duration": 2913,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"clients\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res1.body.system_role.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'delete_system_role'</span>, authtoken, api_key, role_uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-comment\">//var updatedRole = res2.body.system_role</span><br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was deleted successfully.'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
      "isRoot": false,
      "uuid": "b896054c-b660-4fae-9e06-a140c4756c56",
      "parentUUID": "2623b90e-12de-4cfd-a58a-1a7c07feb203",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid uid for delete operation",
      "fullTitle": "Delete system role should provide an error message for invalid uid for delete operation",
      "timedOut": false,
      "duration": 2107,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_system_role'</span>, authtoken, api_key, <span class=\"hljs-string\">'ddfbkdfkjf'</span>, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The system role was not found. Please try again.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">158</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\tdone(err)<br>\t});",
      "isRoot": false,
      "uuid": "f8091c37-95f5-4b80-b0c8-300f22b43849",
      "parentUUID": "2623b90e-12de-4cfd-a58a-1a7c07feb203",
      "skipped": false
    },
    {
      "title": "should be able to get single tenant created for an app",
      "fullTitle": "Get single tenant should be able to get single tenant created for an app",
      "timedOut": false,
      "duration": 2994,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_single_tenant'</span>, user.authtoken, app.api_key, myTenant.uid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> tenant = res1.body.tenant<br>\t\t\t\t\t<span class=\"hljs-comment\">// var id     = res1.body.tenant.uid</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenant).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.equal(res1.body.tenant.updated_at)<br>\t\t\t\t\ttenant.uid.should.be.equal(myTenant.uid)<br>\t\t\t\t\ttenant.name.should.be.equal(myTenant.name)<br>\t\t\t\t\ttenant.description.should.be.equal(<span class=\"hljs-string\">'supertest tenant is created by supertest'</span>)<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, tenant.uid)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "d8c678a9-b4ca-45e9-9c82-7310566635be",
      "parentUUID": "76fd7eb0-320d-4195-9d9d-d08c1ecc3293",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid tenant uid",
      "fullTitle": "Get single tenant should provide an error message for invalid tenant uid",
      "timedOut": false,
      "duration": 1457,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_single_tenant'</span>, user.authtoken, app.api_key, <span class=\"hljs-string\">\"asd\"</span>)<br>\t\t\t\t.expect(<span class=\"hljs-number\">422</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Tenant was not found. Please try again.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">166</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})\t\t<br>\t\t\t\t\t<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "6116e2ea-9373-480f-80e5-a270d152c9cf",
      "parentUUID": "76fd7eb0-320d-4195-9d9d-d08c1ecc3293",
      "skipped": false
    },
    {
      "title": "should be able to create tenants for an app",
      "fullTitle": "Create tenants should be able to create tenants for an app",
      "timedOut": false,
      "duration": 2976,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tenantId   = <span class=\"hljs-string\">\"mumbai\"</span>;<br>\t\t\t<span class=\"hljs-keyword\">var</span> tenantName = <span class=\"hljs-string\">\"mumbai\"</span>;<br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: tenantId,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: tenantName,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"mumbai tenant\"</span><br>\t\t\t\t\t}<br>\t\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The tenant was created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> tenant = res.body.tenant<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id     = res.body.tenant.uid<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenant).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.equal(res.body.tenant.updated_at)<br>\t\t\t\t\ttenant.uid.should.be.equal(tenantId)<br>\t\t\t\t\ttenant.name.should.be.equal(tenantName)<br>\t\t\t\t\ttenant.description.should.be.equal(<span class=\"hljs-string\">'mumbai tenant'</span>)<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "3b4729a2-a2f5-4747-8561-3ddc28f9e1d2",
      "parentUUID": "eaa7527c-cfd5-412b-ab34-826ae333e022",
      "skipped": false
    },
    {
      "title": "should provide an error message when auto_create_tenants setting is false",
      "fullTitle": "Create tenants should provide an error message when auto_create_tenants setting is false",
      "timedOut": false,
      "duration": 1429,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tenantId   = <span class=\"hljs-string\">\"virar\"</span>;<br><span class=\"hljs-keyword\">var</span> tenantName = <span class=\"hljs-string\">\"virar\"</span>;<br>factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, <span class=\"hljs-string\">''</span>, app.api_key, {<br>\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: tenantId,<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: tenantName,<br>\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"mumbai tenant\"</span><br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">401</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\t<br>\t\tdone(err)<br>\t<br>\t})",
      "isRoot": false,
      "uuid": "953653b9-2ca6-4182-a99f-c562844b7432",
      "parentUUID": "eaa7527c-cfd5-412b-ab34-826ae333e022",
      "skipped": false
    },
    {
      "title": "should provide an error message for unique tenant name",
      "fullTitle": "Create tenants should provide an error message for unique tenant name",
      "timedOut": false,
      "duration": 3018,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Kokan tenant\"</span><br>\t\t\t\t\t}<br>\t\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"Kokan\"</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">422</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\tres1.body.should.be.deep.equal({<br>\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Tenant creation failed. Please try again.\"</span>,<br>\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">164</span>,<br>\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t\t\t\t    ]<br>\t\t\t\t\t\t\t  }<br>\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "b7ac2543-385a-4e4c-9b67-171fff080ca8",
      "parentUUID": "eaa7527c-cfd5-412b-ab34-826ae333e022",
      "skipped": false
    },
    {
      "title": "should be able to update created tenant object",
      "fullTitle": "Update tenant should be able to update created tenant object",
      "timedOut": false,
      "duration": 5075,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'update_tenant'</span>, user.authtoken, app.api_key, id, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Kokan tenant\"</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id1 = res1.body.tenant.uid<br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> tenant = res1.body.tenant<br>\t\t\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The tenant was updated successfully.'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenant).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\t\t\t\ttenant.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\ttenant.created_at.should.not.equal(res1.body.tenant.updated_at)<br>\t\t\t\t\t\t\ttenant.uid.should.be.equal(id)<br>\t\t\t\t\t\t\ttenant.name.should.be.equal(<span class=\"hljs-string\">'Kokan'</span>)<br>\t\t\t\t\t\t\ttenant.description.should.be.equal(<span class=\"hljs-string\">'Kokan tenant'</span>)<br>\t\t\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id1)<br>\t\t\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "fab2e025-6cea-4768-a6e1-28c9eeb31a92",
      "parentUUID": "ee7e4c68-5895-46ce-bc39-d0842c243328",
      "skipped": false
    },
    {
      "title": "should provide an error message when app user updates tenant object",
      "fullTitle": "Update tenant should provide an error message when app user updates tenant object",
      "timedOut": false,
      "duration": 5359,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'update_tenant'</span>, appUser1.authtoken, app.api_key, id, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Kokan tenant\"</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\tres1.body.should.be.deep.equal({<br>\t\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id)<br>\t\t\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "08944c63-b1d5-4eda-9157-b202a69dcf16",
      "parentUUID": "ee7e4c68-5895-46ce-bc39-d0842c243328",
      "skipped": false
    },
    {
      "title": "should be able to get all created tenant as a list",
      "fullTitle": "Get all tenants should be able to get all created tenant as a list",
      "timedOut": false,
      "duration": 3151,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Get all tenants\"</span><br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tfactories.create(<span class=\"hljs-string\">'Get_tenants_list'</span>, user.authtoken, app.api_key)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> tenants = res2.body.tenants<br>\t\t\t\ttenants.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenants[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].created_at.should.be.equal(res2.body.tenants[<span class=\"hljs-number\">0</span>].updated_at)<br>\t\t\t\t<span class=\"hljs-comment\">// tenants[0].uid.should.be.equal('supertest')</span><br>\t\t\t\t<span class=\"hljs-comment\">// tenants[0].name.should.be.equal('supertest')</span><br>\t\t\t\t<span class=\"hljs-comment\">// tenants[0].description.should.be.equal('Get all tenants')</span><br><br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
      "isRoot": false,
      "uuid": "691b2667-0cab-4b8f-90e1-e7986be3877c",
      "parentUUID": "5253d784-6490-467b-b19c-082aad0c8a0a",
      "skipped": false
    },
    {
      "title": "should be able to delete created tenant",
      "fullTitle": "Delete tenant should be able to delete created tenant",
      "timedOut": false,
      "duration": 3201,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key)<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The tenant was deleted successfully.'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t\t<br>\t});",
      "isRoot": false,
      "uuid": "5ceeec4f-29e5-496b-a2b3-d24d0e7edfff",
      "parentUUID": "e2cf79f1-e169-495b-91d7-f4d40ad302f1",
      "skipped": false
    },
    {
      "title": "should be able to get all created uploads for an app",
      "fullTitle": "Get Uploads should be able to get all created uploads for an app",
      "timedOut": false,
      "duration": 1847,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_uploads'</span>, authtoken, api_key)<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\t\tuploadID = res.body.uploads[<span class=\"hljs-number\">0</span>].uid<br>\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tupload.uid.should.be.equal(uploadID)<br>\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\tupload.created_by.should.be.equal(userUID)<br>\t\tupload.updated_by.should.be.equal(userUID)<br>\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'application/json'</span>)<br><br>\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.filename.should.be.equal(uploadName)</span><br><br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "3afd59cc-42f2-4626-8255-c0c12747f658",
      "parentUUID": "efc5f3bc-6340-4d25-a9de-966b637270d7",
      "skipped": false
    },
    {
      "title": "should be able to get all created uploads for an app using query",
      "fullTitle": "Get Uploads should be able to get all created uploads for an app using query",
      "timedOut": false,
      "duration": 1448,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_uploads'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"query\"</span>: {<span class=\"hljs-string\">\"filename\"</span>: <span class=\"hljs-string\">\"pdf_1.pdf\"</span>}<br>})<br>.expect(<span class=\"hljs-number\">200</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\tuploadID = res.body.uploads[<span class=\"hljs-number\">0</span>].uid<br>\t<span class=\"hljs-comment\">// key assertion </span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t<span class=\"hljs-comment\">// Data assertion</span><br>\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\texpect(upload.created_by).to.be.null;<br>\texpect(upload.updated_by).to.be.null;<br>\t<br>\t<span class=\"hljs-comment\">// upload.created_by.should.be.a(null)</span><br>\t<span class=\"hljs-comment\">// upload.updated_by.should.be.a(null)</span><br>\t<br>\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\tupload.uid.should.be.equal(uploadID)<br>\tupload.created_at.should.be.equal(upload.updated_at)<br>\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'application/pdf'</span>)<br>\tupload.app_user_object_uid.should.be.equal(app_user.uid)<br>\t<span class=\"hljs-comment\">// upload.filename.should.be.equal(uploadName)</span><br><br>\tdone(err)<br>})",
      "isRoot": false,
      "uuid": "ea985568-614a-4ddc-82e2-801efaf21ee6",
      "parentUUID": "efc5f3bc-6340-4d25-a9de-966b637270d7",
      "skipped": false
    },
    {
      "title": "should be able to get single upload created for an app",
      "fullTitle": "Get Uploads should be able to get single upload created for an app",
      "timedOut": false,
      "duration": 1437,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_single_upload'</span>, authtoken, api_key, uploadUID)<br>.expect(<span class=\"hljs-number\">200</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tupload = res.body.upload<br>\tuploadID = res.body.upload.uid<br>\t<span class=\"hljs-comment\">// key assertion </span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t<span class=\"hljs-comment\">// Data assertion</span><br>\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\tupload.uid.should.be.equal(uploadID)<br>\tupload.created_at.should.be.equal(upload.updated_at)<br>\tupload.created_by.should.be.equal(upload.updated_by)<br>\tupload.created_by.should.be.equal(userUID)<br>\tupload.updated_by.should.be.equal(userUID)<br>\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br><br>\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\tupload.filename.should.be.equal(uploadName)<br><br>\tdone(err)<br>})",
      "isRoot": false,
      "uuid": "3c6fc3a6-cfd3-4c61-8326-62608b77a9ed",
      "parentUUID": "efc5f3bc-6340-4d25-a9de-966b637270d7",
      "skipped": false
    },
    {
      "title": "should provided an error message for invalid upload uid",
      "fullTitle": "Get Uploads should provided an error message for invalid upload uid",
      "timedOut": false,
      "duration": 1696,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_single_upload'</span>, authtoken, api_key, <span class=\"hljs-string\">'asdasd'</span>)<br>.expect(<span class=\"hljs-number\">404</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Oops! That file was not found.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">145</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br><br>\tdone(err)<br>})",
      "isRoot": false,
      "uuid": "75487cc8-306d-43fa-916c-1800e9788d1d",
      "parentUUID": "efc5f3bc-6340-4d25-a9de-966b637270d7",
      "skipped": false
    },
    {
      "title": "should be able to get all images uploaded for an app",
      "fullTitle": "Get images and videos should be able to get all images uploaded for an app",
      "timedOut": false,
      "duration": 1674,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_uploads_images'</span>, authtoken, api_key)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\t\tuploadID = res.body.uploads[<span class=\"hljs-number\">0</span>].uid<br>\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tupload.uid.should.be.equal(uploadID)<br>\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\tupload.created_by.should.be.equal(collaborator.uid)<br>\t\tupload.updated_by.should.be.equal(collaborator.uid)<br>\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br><br>\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.filename.should.be.equal(uploadName)</span><br><br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "ee9e421e-dfd7-47ac-8e13-7d96b4eb8be0",
      "parentUUID": "12c6dc37-0c58-4225-9ab3-3044fbc97fc6",
      "skipped": false
    },
    {
      "title": "should be able to get all videos uploaded for an app",
      "fullTitle": "Get images and videos should be able to get all videos uploaded for an app",
      "timedOut": false,
      "duration": 1704,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_uploads_videos'</span>, authtoken, api_key)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<br>\t\t\t\t\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.uid.should.be.equal(uploadVideo.uid)<br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'video/x-ms-wmv'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename2)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "e7cbed8d-d759-470a-ac75-6e4f08fdc633",
      "parentUUID": "12c6dc37-0c58-4225-9ab3-3044fbc97fc6",
      "skipped": false
    },
    {
      "title": "should be able to create an upload(system) for an app",
      "fullTitle": "create_upload should be able to create an upload(system) for an app",
      "timedOut": false,
      "duration": 2395,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'jpg_1.JPG'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'create_upload'</span>, authtoken, api_key, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tupload = res.body.upload<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tupload.ACL.should.to.be.deep.equal({})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "1ea04c8b-98d1-4a5d-a5fd-f9f602dcdc85",
      "parentUUID": "db720e5a-5c6a-4900-9f14-6240af00b42d",
      "skipped": false
    },
    {
      "title": "should be able to create an upload(collaborator) for an app",
      "fullTitle": "create_upload should be able to create an upload(collaborator) for an app",
      "timedOut": false,
      "duration": 2119,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'jpg_2.jpg'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'create_upload'</span>, collaborator.authtoken, api_key, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tupload = res.body.upload<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(collaborator.uid)<br>\t\t\t\t\tupload.updated_by.should.be.equal(collaborator.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tupload.ACL.should.to.be.deep.equal({})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "0817eb03-935a-430f-b52c-cd080adc2981",
      "parentUUID": "db720e5a-5c6a-4900-9f14-6240af00b42d",
      "skipped": false
    },
    {
      "title": "should be able to create an upload(anonymous) for an app",
      "fullTitle": "create_upload should be able to create an upload(anonymous) for an app",
      "timedOut": false,
      "duration": 2606,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'jpg_1.JPG'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'create_upload'</span>, <span class=\"hljs-string\">''</span>, api_key, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tupload = res.body.upload<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.ACL.can.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// value assretion </span><br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tshould.not.exist(upload.created_by)<br>\t\t\t\t\tshould.not.exist(upload.updated_by)<br>\t\t\t\t\tshould.not.exist(upload.app_user_object_uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tupload.ACL.can.should.to.be.deep.equal([<span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "62b3591d-fc7b-4c0e-be54-ee28f6dab4a8",
      "parentUUID": "db720e5a-5c6a-4900-9f14-6240af00b42d",
      "skipped": false
    },
    {
      "title": "should be able to create an upload(application user) for an app",
      "fullTitle": "create_upload should be able to create an upload(application user) for an app",
      "timedOut": false,
      "duration": 2124,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> filename = <span class=\"hljs-string\">'json_1.json'</span><br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, app_user.authtoken, api_key, filename))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> upload = res.body.upload<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.ACL.can.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// value assretion </span><br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tshould.not.exist(upload.created_by)<br>\t\t\t\t\tshould.not.exist(upload.updated_by)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(app_user.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'application/json'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename)<br>\t\t\t\t\tupload.ACL.can.should.to.be.deep.equal([<span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "b8b8f3e4-73e9-4bc7-927e-4ba2a0809ade",
      "parentUUID": "db720e5a-5c6a-4900-9f14-6240af00b42d",
      "skipped": false
    },
    {
      "title": "should be able to get a list of all tags created for an upload",
      "fullTitle": "Uploads tags should be able to get a list of all tags created for an upload",
      "timedOut": false,
      "duration": 1485,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_upload_tags'</span>, authtoken, api_key)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\tres.body.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest'</span>, <span class=\"hljs-string\">'backend'</span>])<br>\tdone(err)<br>})",
      "isRoot": false,
      "uuid": "b60390e5-80a9-4860-846b-99b43e3204e4",
      "parentUUID": "2618efc2-982a-4b66-b8f4-45c36fdb0806",
      "skipped": false
    },
    {
      "title": "should be able to update given upload object as a collaborator",
      "fullTitle": "Update upload should be able to update given upload object as a collaborator",
      "timedOut": false,
      "duration": 6194,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, collaborator.authtoken, api_key, uploadUID, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File updated successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> upload = res.body.upload<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.uid.should.be.equal(uploadUID)<br>\t\t\t\t\tupload.created_at.should.be.not.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.not.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.updated_by.should.be.equal(collaborator.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'text/csv'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "4cc85f58-69e8-4ce3-bdb9-c01061a2ba70",
      "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
      "skipped": false
    },
    {
      "title": "should be able to provide an error message when application user updates upload object created by sysuser",
      "fullTitle": "Update upload should be able to provide an error message when application user updates upload object created by sysuser",
      "timedOut": false,
      "duration": 3349,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, api_key, uploadUID1, filename1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.error_message.should.be.equal(<span class=\"hljs-string\">'Access denied. You have insufficient permissions to perform this operation.'</span>)<br>\t\t\t\t\tres.body.error_code.should.be.equal(<span class=\"hljs-number\">162</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "0400ea66-1109-4fc8-b033-e09e45c7a94f",
      "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
      "skipped": false
    },
    {
      "title": "should be able to update upload object as a application user",
      "fullTitle": "Update upload should be able to update upload object as a application user",
      "timedOut": false,
      "duration": 5094,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> filename9 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\t<br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, api_key, uploadAppuser.uid, filename9)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File updated successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> upload = res.body.upload<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.ACL.can.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// value assretion </span><br>\t\t\t\t\tupload.created_at.should.be.not.equal(upload.updated_at)<br>\t\t\t\t\tshould.not.exist(upload.created_by)<br>\t\t\t\t\tshould.not.exist(upload.updated_by)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(app_user.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'text/csv'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename9)<br>\t\t\t\t\tupload.ACL.can.should.to.be.deep.equal([<span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "63d36f10-27ed-4f6b-acee-34bc20e34ee8",
      "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid update upload",
      "fullTitle": "Update upload should provide an error message for invalid update upload",
      "timedOut": false,
      "duration": 5013,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, api_key, <span class=\"hljs-string\">'asd'</span>, filename1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">404</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Oops! That file was not found.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">145</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "8c05cf4e-3a33-45ac-bcca-685de9e162c7",
      "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid api key for update upload",
      "fullTitle": "Update upload should provide an error message for invalid api key for update upload",
      "timedOut": false,
      "duration": 3279,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, <span class=\"hljs-string\">'asdasdad'</span>, <span class=\"hljs-string\">'asd'</span>, filename1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">412</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bad news! We can't find that application. Please try again.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">109</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"api_key\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "afae1756-7a37-4807-bdfa-3b1034a6a855",
      "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
      "skipped": false
    },
    {
      "title": "should be able to delete given upload object as a collaborator",
      "fullTitle": "delete upload should be able to delete given upload object as a collaborator",
      "timedOut": false,
      "duration": 2037,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, collaborator.authtoken, api_key, uploadUID)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File deleted successfully.'</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "d1809875-fc9e-42a6-a10c-08373ed3b65a",
      "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
      "skipped": false
    },
    {
      "title": "should be able to provide an error message when delete object(system) as a application user",
      "fullTitle": "delete upload should be able to provide an error message when delete object(system) as a application user",
      "timedOut": false,
      "duration": 1589,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, app_user.authtoken, api_key, uploadUID1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.error_message.should.be.equal(<span class=\"hljs-string\">'Access denied. You have insufficient permissions to perform this operation.'</span>)<br>\t\t\t\t\tres.body.error_code.should.be.equal(<span class=\"hljs-number\">162</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "1825c142-282c-4395-9518-4b8ddf10a19f",
      "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
      "skipped": false
    },
    {
      "title": "should provide error message invalid upload delete",
      "fullTitle": "delete upload should provide error message invalid upload delete",
      "timedOut": false,
      "duration": 1627,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, app_user.authtoken, api_key, <span class=\"hljs-string\">'asd'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// .expect(200)</span><br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Oops! That file was not found.\"</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">145</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t\t    ]<br>\t\t\t\t\t\t  }<br>\t\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "2da6fb06-7da1-40ac-9850-7d292f981837",
      "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
      "skipped": false
    },
    {
      "title": "should provide error message invalid user authtoken for upload delete",
      "fullTitle": "delete upload should provide error message invalid user authtoken for upload delete",
      "timedOut": false,
      "duration": 1715,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, <span class=\"hljs-string\">''</span>, api_key, uploadAppuser.uid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "7aaeb8f4-8118-4f08-aead-9813ab58d51f",
      "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
      "skipped": false
    },
    {
      "title": "should be able to delete upload object as a application user",
      "fullTitle": "delete upload should be able to delete upload object as a application user",
      "timedOut": false,
      "duration": 1448,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, app_user.authtoken, api_key, uploadAppuser.uid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File deleted successfully.'</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "c8c17cdb-2355-41a2-9299-66a04483d56f",
      "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
      "skipped": false
    },
    {
      "title": "should be able to get the default ACL set for an uploads",
      "fullTitle": "uploads default_acl should be able to get the default ACL set for an uploads",
      "timedOut": false,
      "duration": 1441,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_default_acl'</span>, authtoken, api_key)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\t<span class=\"hljs-keyword\">var</span> acl = res.body.DEFAULT_ACL<br>\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t<span class=\"hljs-comment\">// data assertion</span><br>\t\tacl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tacl.others.read.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tacl.others.create.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion </span><br>\t\tacl.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tacl.others.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "b943d41c-9f22-4b6f-ac8c-1cbe0f4b918d",
      "parentUUID": "5e7e2475-d307-4dc7-be72-7cfd48a23752",
      "skipped": false
    },
    {
      "title": "should be able to specify a default ACL for uploads",
      "fullTitle": "uploads default_acl should be able to specify a default ACL for uploads",
      "timedOut": false,
      "duration": 1461,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'set_default_acl'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"DEFAULT_ACL\"</span>: {<br>\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t},<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"anonymous\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t}],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: []<br>\t}<br>})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Default ACL updated successfully.'</span>)<br>\t\t<span class=\"hljs-keyword\">var</span> acl = res.body.DEFAULT_ACL<br>\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'users'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl.others).should.to.be.deep.equal([<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl.users[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t<span class=\"hljs-comment\">// data assertion</span><br>\t\tacl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tacl.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tacl.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion </span><br>\t\tacl.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tacl.others.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'anonymous'</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "0dea8459-6da2-4e13-ab30-5be7f1877802",
      "parentUUID": "5e7e2475-d307-4dc7-be72-7cfd48a23752",
      "skipped": false
    }
  ],
  "allPending": [
    {
      "title": "should be able to accept application ownership",
      "sync": true,
      "_timeout": 95000,
      "_slow": 75,
      "_enableTimeouts": true,
      "timedOut": false,
      "_trace": {},
      "_retries": -1,
      "_currentRetry": 0,
      "pending": true,
      "type": "test",
      "body": "",
      "file": "/home/ss/Documents/backend/test.js",
      "parent": {
        "title": "App Transfer/Accept Ownership",
        "suites": [],
        "tests": [
          {
            "title": "should be able to transfer app ownership to registered system users",
            "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to transfer app ownership to registered system users",
            "timedOut": false,
            "duration": 6803,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: email<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'An email has been sent to '</span>+ config.user2.email +<span class=\"hljs-string\">' about transferring ownership of \\''</span> + res1.body.application.name + <span class=\"hljs-string\">'\\'. The ownership will be transferred after the other user accepts ownership.'</span>)<br>        done(err)<br>      })<br>  })",
            "isRoot": false,
            "uuid": "8b541375-77ae-450d-99ae-1a13733ae8c5",
            "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
            "skipped": false
          },
          {
            "title": "should give error for transfer app ownership to non-registered system users",
            "fullTitle": "Applications --- App Transfer/Accept Ownership should give error for transfer app ownership to non-registered system users",
            "timedOut": false,
            "duration": 3240,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: <span class=\"hljs-string\">\"non_registered@mailinator.com\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Sorry about that. non_registered@mailinator.com is not registered in Built.io Backend. Create an account first.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">179</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {}<br>        })<br>        done(err)<br>      })<br>  })",
            "isRoot": false,
            "uuid": "6fb02c58-22cc-47cc-b648-630e6e5f3104",
            "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
            "skipped": false
          },
          {
            "title": "should be able to accept application ownership",
            "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to accept application ownership",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "isRoot": false,
            "uuid": "c6f45ea0-a0dc-42f3-b35f-1066e03083e7",
            "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
            "skipped": false
          }
        ],
        "pending": [
          {
            "title": "should be able to accept application ownership",
            "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to accept application ownership",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "isRoot": false,
            "uuid": "c6f45ea0-a0dc-42f3-b35f-1066e03083e7",
            "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
            "skipped": false
          }
        ],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [
          {
            "title": "should be able to transfer app ownership to registered system users",
            "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to transfer app ownership to registered system users",
            "timedOut": false,
            "duration": 6803,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: email<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'An email has been sent to '</span>+ config.user2.email +<span class=\"hljs-string\">' about transferring ownership of \\''</span> + res1.body.application.name + <span class=\"hljs-string\">'\\'. The ownership will be transferred after the other user accepts ownership.'</span>)<br>        done(err)<br>      })<br>  })",
            "isRoot": false,
            "uuid": "8b541375-77ae-450d-99ae-1a13733ae8c5",
            "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
            "skipped": false
          },
          {
            "title": "should give error for transfer app ownership to non-registered system users",
            "fullTitle": "Applications --- App Transfer/Accept Ownership should give error for transfer app ownership to non-registered system users",
            "timedOut": false,
            "duration": 3240,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: <span class=\"hljs-string\">\"non_registered@mailinator.com\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Sorry about that. non_registered@mailinator.com is not registered in Built.io Backend. Create an account first.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">179</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {}<br>        })<br>        done(err)<br>      })<br>  })",
            "isRoot": false,
            "uuid": "6fb02c58-22cc-47cc-b648-630e6e5f3104",
            "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 3,
        "totalPasses": 2,
        "totalFailures": 0,
        "totalPending": 1,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": true,
        "hasSkipped": false,
        "duration": 10043
      },
      "ctx": {
        "_runnable": {
          "title": "should give error for transfer app ownership to non-registered system users",
          "async": 1,
          "sync": false,
          "_timeout": 95000,
          "_slow": 75,
          "_enableTimeouts": true,
          "timedOut": false,
          "_trace": {},
          "_retries": -1,
          "_currentRetry": 0,
          "pending": false,
          "type": "test",
          "body": "function (done) {\n      factories.create('Get_application', authtoken, api_key)\n        .end(function(err, res1) {\n\n          api.post(config.endpoints.applications + '/' + api_key + config.endpoints.transfer_ownership)\n            .set('web_ui_api_key', config.web_ui_api_key)\n            .set('authtoken', authtoken)\n            .set('application_api_key', api_key)\n            .send({\n              \"transfer_to\": \"non_registered@mailinator.com\"\n            })\n            .expect(422)\n            .end(function(err, res) {\n              // R.pretty(res.body)\n              res.body.should.be.deep.equal({\n                \"error_message\": \"Sorry about that. non_registered@mailinator.com is not registered in Built.io Backend. Create an account first.\",\n                \"error_code\": 179,\n                \"errors\": {}\n              })\n\n              done(err)\n            })\n        })\n    \n    }",
          "file": "/home/ss/Documents/backend/test.js",
          "parent": {
            "title": "App Transfer/Accept Ownership",
            "suites": [],
            "tests": [
              {
                "title": "should be able to transfer app ownership to registered system users",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to transfer app ownership to registered system users",
                "timedOut": false,
                "duration": 6803,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: email<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'An email has been sent to '</span>+ config.user2.email +<span class=\"hljs-string\">' about transferring ownership of \\''</span> + res1.body.application.name + <span class=\"hljs-string\">'\\'. The ownership will be transferred after the other user accepts ownership.'</span>)<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "8b541375-77ae-450d-99ae-1a13733ae8c5",
                "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
                "skipped": false
              },
              {
                "title": "should give error for transfer app ownership to non-registered system users",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should give error for transfer app ownership to non-registered system users",
                "timedOut": false,
                "duration": 3240,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: <span class=\"hljs-string\">\"non_registered@mailinator.com\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Sorry about that. non_registered@mailinator.com is not registered in Built.io Backend. Create an account first.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">179</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {}<br>        })<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "6fb02c58-22cc-47cc-b648-630e6e5f3104",
                "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
                "skipped": false
              },
              {
                "title": "should be able to accept application ownership",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to accept application ownership",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "c6f45ea0-a0dc-42f3-b35f-1066e03083e7",
                "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "should be able to accept application ownership",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to accept application ownership",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "c6f45ea0-a0dc-42f3-b35f-1066e03083e7",
                "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to transfer app ownership to registered system users",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to transfer app ownership to registered system users",
                "timedOut": false,
                "duration": 6803,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: email<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'An email has been sent to '</span>+ config.user2.email +<span class=\"hljs-string\">' about transferring ownership of \\''</span> + res1.body.application.name + <span class=\"hljs-string\">'\\'. The ownership will be transferred after the other user accepts ownership.'</span>)<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "8b541375-77ae-450d-99ae-1a13733ae8c5",
                "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
                "skipped": false
              },
              {
                "title": "should give error for transfer app ownership to non-registered system users",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should give error for transfer app ownership to non-registered system users",
                "timedOut": false,
                "duration": 3240,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: <span class=\"hljs-string\">\"non_registered@mailinator.com\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Sorry about that. non_registered@mailinator.com is not registered in Built.io Backend. Create an account first.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">179</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {}<br>        })<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "6fb02c58-22cc-47cc-b648-630e6e5f3104",
                "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 10043
          },
          "ctx": "[Circular ~.allPending.0.ctx]",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "0": null,
            "_called": false,
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 406520,
            "_onTimeout": null,
            "_repeat": null
          },
          "duration": 3240,
          "state": "passed",
          "speed": "slow"
        },
        "test": {
          "title": "should give error for transfer app ownership to non-registered system users",
          "async": 1,
          "sync": false,
          "_timeout": 95000,
          "_slow": 75,
          "_enableTimeouts": true,
          "timedOut": false,
          "_trace": {},
          "_retries": -1,
          "_currentRetry": 0,
          "pending": false,
          "type": "test",
          "body": "function (done) {\n      factories.create('Get_application', authtoken, api_key)\n        .end(function(err, res1) {\n\n          api.post(config.endpoints.applications + '/' + api_key + config.endpoints.transfer_ownership)\n            .set('web_ui_api_key', config.web_ui_api_key)\n            .set('authtoken', authtoken)\n            .set('application_api_key', api_key)\n            .send({\n              \"transfer_to\": \"non_registered@mailinator.com\"\n            })\n            .expect(422)\n            .end(function(err, res) {\n              // R.pretty(res.body)\n              res.body.should.be.deep.equal({\n                \"error_message\": \"Sorry about that. non_registered@mailinator.com is not registered in Built.io Backend. Create an account first.\",\n                \"error_code\": 179,\n                \"errors\": {}\n              })\n\n              done(err)\n            })\n        })\n    \n    }",
          "file": "/home/ss/Documents/backend/test.js",
          "parent": {
            "title": "App Transfer/Accept Ownership",
            "suites": [],
            "tests": [
              {
                "title": "should be able to transfer app ownership to registered system users",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to transfer app ownership to registered system users",
                "timedOut": false,
                "duration": 6803,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: email<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'An email has been sent to '</span>+ config.user2.email +<span class=\"hljs-string\">' about transferring ownership of \\''</span> + res1.body.application.name + <span class=\"hljs-string\">'\\'. The ownership will be transferred after the other user accepts ownership.'</span>)<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "8b541375-77ae-450d-99ae-1a13733ae8c5",
                "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
                "skipped": false
              },
              {
                "title": "should give error for transfer app ownership to non-registered system users",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should give error for transfer app ownership to non-registered system users",
                "timedOut": false,
                "duration": 3240,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: <span class=\"hljs-string\">\"non_registered@mailinator.com\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Sorry about that. non_registered@mailinator.com is not registered in Built.io Backend. Create an account first.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">179</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {}<br>        })<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "6fb02c58-22cc-47cc-b648-630e6e5f3104",
                "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
                "skipped": false
              },
              {
                "title": "should be able to accept application ownership",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to accept application ownership",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "c6f45ea0-a0dc-42f3-b35f-1066e03083e7",
                "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "should be able to accept application ownership",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to accept application ownership",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "c6f45ea0-a0dc-42f3-b35f-1066e03083e7",
                "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to transfer app ownership to registered system users",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should be able to transfer app ownership to registered system users",
                "timedOut": false,
                "duration": 6803,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: email<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'An email has been sent to '</span>+ config.user2.email +<span class=\"hljs-string\">' about transferring ownership of \\''</span> + res1.body.application.name + <span class=\"hljs-string\">'\\'. The ownership will be transferred after the other user accepts ownership.'</span>)<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "8b541375-77ae-450d-99ae-1a13733ae8c5",
                "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
                "skipped": false
              },
              {
                "title": "should give error for transfer app ownership to non-registered system users",
                "fullTitle": "Applications --- App Transfer/Accept Ownership should give error for transfer app ownership to non-registered system users",
                "timedOut": false,
                "duration": 3240,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: <span class=\"hljs-string\">\"non_registered@mailinator.com\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Sorry about that. non_registered@mailinator.com is not registered in Built.io Backend. Create an account first.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">179</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {}<br>        })<br>        done(err)<br>      })<br>  })",
                "isRoot": false,
                "uuid": "6fb02c58-22cc-47cc-b648-630e6e5f3104",
                "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 10043
          },
          "ctx": "[Circular ~.allPending.0.ctx]",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "0": null,
            "_called": false,
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 406520,
            "_onTimeout": null,
            "_repeat": null
          },
          "duration": 3240,
          "state": "passed",
          "speed": "slow"
        }
      }
    },
    {
      "title": "should provide an error messgae on upload class delete",
      "sync": true,
      "_timeout": 95000,
      "_slow": 75,
      "_enableTimeouts": true,
      "timedOut": false,
      "_trace": {},
      "_retries": -1,
      "_currentRetry": 0,
      "pending": true,
      "type": "test",
      "body": "",
      "file": "/home/ss/Documents/backend/test.js",
      "parent": {
        "title": "Delete Class",
        "suites": [],
        "tests": [
          {
            "title": "should be able to delete class",
            "fullTitle": "classes --- Delete Class should be able to delete class",
            "timedOut": false,
            "duration": 3001,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "factories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"new class\"</span>,<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"new_class\"</span>,<br>\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t}]<br>\t}<br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br><br>\t\t<span class=\"hljs-keyword\">var</span> classUid = res1.body.class.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class deleted successfully!'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br><br>\t})",
            "isRoot": false,
            "uuid": "d1346540-f513-4808-9ab1-04f701d41485",
            "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
            "skipped": false
          },
          {
            "title": "should provide an error messgae on application user class delete",
            "fullTitle": "classes --- Delete Class should provide an error messgae on application user class delete",
            "timedOut": false,
            "duration": 1631,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
            "isRoot": false,
            "uuid": "0be3095b-98b7-4d55-84be-bdab89bbacc1",
            "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
            "skipped": false
          },
          {
            "title": "should provide an error messgae on application user role class delete",
            "fullTitle": "classes --- Delete Class should provide an error messgae on application user role class delete",
            "timedOut": false,
            "duration": 1592,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
            "isRoot": false,
            "uuid": "b9616162-6e45-45ca-bbf2-680fc26c4209",
            "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
            "skipped": false
          },
          {
            "title": "should provide an error messgae on upload class delete",
            "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "isRoot": false,
            "uuid": "9ee9b38d-a19a-42ab-98a6-938087ab914a",
            "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
            "skipped": false
          },
          {
            "title": "should provide an error messgae on upload class delete",
            "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
            "timedOut": false,
            "duration": 1483,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_installation_data\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
            "isRoot": false,
            "uuid": "6c446b0b-ecfa-4ed4-931e-82cf2e40d28d",
            "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
            "skipped": false
          }
        ],
        "pending": [
          {
            "title": "should provide an error messgae on upload class delete",
            "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": true,
            "code": "",
            "isRoot": false,
            "uuid": "9ee9b38d-a19a-42ab-98a6-938087ab914a",
            "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
            "skipped": false
          }
        ],
        "root": false,
        "_timeout": 95000,
        "file": "/test.js",
        "uuid": "3028a635-df64-426e-9fd5-d49475fbd210",
        "fullFile": "/home/ss/Documents/backend/test.js",
        "passes": [
          {
            "title": "should be able to delete class",
            "fullTitle": "classes --- Delete Class should be able to delete class",
            "timedOut": false,
            "duration": 3001,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "factories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"new class\"</span>,<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"new_class\"</span>,<br>\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t}]<br>\t}<br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br><br>\t\t<span class=\"hljs-keyword\">var</span> classUid = res1.body.class.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class deleted successfully!'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br><br>\t})",
            "isRoot": false,
            "uuid": "d1346540-f513-4808-9ab1-04f701d41485",
            "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
            "skipped": false
          },
          {
            "title": "should provide an error messgae on application user class delete",
            "fullTitle": "classes --- Delete Class should provide an error messgae on application user class delete",
            "timedOut": false,
            "duration": 1631,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
            "isRoot": false,
            "uuid": "0be3095b-98b7-4d55-84be-bdab89bbacc1",
            "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
            "skipped": false
          },
          {
            "title": "should provide an error messgae on application user role class delete",
            "fullTitle": "classes --- Delete Class should provide an error messgae on application user role class delete",
            "timedOut": false,
            "duration": 1592,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
            "isRoot": false,
            "uuid": "b9616162-6e45-45ca-bbf2-680fc26c4209",
            "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
            "skipped": false
          },
          {
            "title": "should provide an error messgae on upload class delete",
            "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
            "timedOut": false,
            "duration": 1483,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_installation_data\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
            "isRoot": false,
            "uuid": "6c446b0b-ecfa-4ed4-931e-82cf2e40d28d",
            "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
            "skipped": false
          }
        ],
        "failures": [],
        "skipped": [],
        "hasTests": true,
        "hasSuites": false,
        "totalTests": 5,
        "totalPasses": 4,
        "totalFailures": 0,
        "totalPending": 1,
        "totalSkipped": 0,
        "hasPasses": true,
        "hasFailures": false,
        "hasPending": true,
        "hasSkipped": false,
        "duration": 7707
      },
      "ctx": {
        "_runnable": {
          "title": "should provide an error messgae on upload class delete",
          "async": 1,
          "sync": false,
          "_timeout": 95000,
          "_slow": 75,
          "_enableTimeouts": true,
          "timedOut": false,
          "_trace": {},
          "_retries": -1,
          "_currentRetry": 0,
          "pending": false,
          "type": "test",
          "body": "function (done) {\n\t\t\t\n\t\t\tvar classUid = \"built_io_installation_data\"\n\n\t\t\tR.Promisify(factories.create('Delete_class', authtoken, api_key, classUid))\n\t\t\t.then(function(res) {\n\t\t\t\tres.body.should.be.deep.equal({\n\t\t\t\t  \"error_message\": \"Bummer. Class delete failed. Please try again.\",\n\t\t\t\t  \"error_code\": 117,\n\t\t\t\t  \"errors\": {\n\t\t\t\t    \"inbuilt_class\": [\n\t\t\t\t      \"cannot be removed\"\n\t\t\t\t    ]\n\t\t\t\t  }\n\t\t\t\t})\n\t\t\t})\n\t\t\t.then(function(res) {\n\t\t\t\tdone()\n\t\t\t})\n\t\t\n\t\t}",
          "file": "/home/ss/Documents/backend/test.js",
          "parent": {
            "title": "Delete Class",
            "suites": [],
            "tests": [
              {
                "title": "should be able to delete class",
                "fullTitle": "classes --- Delete Class should be able to delete class",
                "timedOut": false,
                "duration": 3001,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"new class\"</span>,<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"new_class\"</span>,<br>\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t}]<br>\t}<br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br><br>\t\t<span class=\"hljs-keyword\">var</span> classUid = res1.body.class.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class deleted successfully!'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br><br>\t})",
                "isRoot": false,
                "uuid": "d1346540-f513-4808-9ab1-04f701d41485",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on application user class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on application user class delete",
                "timedOut": false,
                "duration": 1631,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "0be3095b-98b7-4d55-84be-bdab89bbacc1",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on application user role class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on application user role class delete",
                "timedOut": false,
                "duration": 1592,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "b9616162-6e45-45ca-bbf2-680fc26c4209",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on upload class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "9ee9b38d-a19a-42ab-98a6-938087ab914a",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on upload class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
                "timedOut": false,
                "duration": 1483,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_installation_data\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "6c446b0b-ecfa-4ed4-931e-82cf2e40d28d",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "should provide an error messgae on upload class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "9ee9b38d-a19a-42ab-98a6-938087ab914a",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "3028a635-df64-426e-9fd5-d49475fbd210",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to delete class",
                "fullTitle": "classes --- Delete Class should be able to delete class",
                "timedOut": false,
                "duration": 3001,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"new class\"</span>,<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"new_class\"</span>,<br>\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t}]<br>\t}<br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br><br>\t\t<span class=\"hljs-keyword\">var</span> classUid = res1.body.class.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class deleted successfully!'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br><br>\t})",
                "isRoot": false,
                "uuid": "d1346540-f513-4808-9ab1-04f701d41485",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on application user class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on application user class delete",
                "timedOut": false,
                "duration": 1631,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "0be3095b-98b7-4d55-84be-bdab89bbacc1",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on application user role class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on application user role class delete",
                "timedOut": false,
                "duration": 1592,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "b9616162-6e45-45ca-bbf2-680fc26c4209",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on upload class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
                "timedOut": false,
                "duration": 1483,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_installation_data\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "6c446b0b-ecfa-4ed4-931e-82cf2e40d28d",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 7707
          },
          "ctx": "[Circular ~.allPending.1.ctx]",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "0": null,
            "_called": false,
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 506829,
            "_onTimeout": null,
            "_repeat": null
          },
          "duration": 1483,
          "state": "passed",
          "speed": "slow"
        },
        "test": {
          "title": "should provide an error messgae on upload class delete",
          "async": 1,
          "sync": false,
          "_timeout": 95000,
          "_slow": 75,
          "_enableTimeouts": true,
          "timedOut": false,
          "_trace": {},
          "_retries": -1,
          "_currentRetry": 0,
          "pending": false,
          "type": "test",
          "body": "function (done) {\n\t\t\t\n\t\t\tvar classUid = \"built_io_installation_data\"\n\n\t\t\tR.Promisify(factories.create('Delete_class', authtoken, api_key, classUid))\n\t\t\t.then(function(res) {\n\t\t\t\tres.body.should.be.deep.equal({\n\t\t\t\t  \"error_message\": \"Bummer. Class delete failed. Please try again.\",\n\t\t\t\t  \"error_code\": 117,\n\t\t\t\t  \"errors\": {\n\t\t\t\t    \"inbuilt_class\": [\n\t\t\t\t      \"cannot be removed\"\n\t\t\t\t    ]\n\t\t\t\t  }\n\t\t\t\t})\n\t\t\t})\n\t\t\t.then(function(res) {\n\t\t\t\tdone()\n\t\t\t})\n\t\t\n\t\t}",
          "file": "/home/ss/Documents/backend/test.js",
          "parent": {
            "title": "Delete Class",
            "suites": [],
            "tests": [
              {
                "title": "should be able to delete class",
                "fullTitle": "classes --- Delete Class should be able to delete class",
                "timedOut": false,
                "duration": 3001,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"new class\"</span>,<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"new_class\"</span>,<br>\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t}]<br>\t}<br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br><br>\t\t<span class=\"hljs-keyword\">var</span> classUid = res1.body.class.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class deleted successfully!'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br><br>\t})",
                "isRoot": false,
                "uuid": "d1346540-f513-4808-9ab1-04f701d41485",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on application user class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on application user class delete",
                "timedOut": false,
                "duration": 1631,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "0be3095b-98b7-4d55-84be-bdab89bbacc1",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on application user role class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on application user role class delete",
                "timedOut": false,
                "duration": 1592,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "b9616162-6e45-45ca-bbf2-680fc26c4209",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on upload class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "9ee9b38d-a19a-42ab-98a6-938087ab914a",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on upload class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
                "timedOut": false,
                "duration": 1483,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_installation_data\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "6c446b0b-ecfa-4ed4-931e-82cf2e40d28d",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              }
            ],
            "pending": [
              {
                "title": "should provide an error messgae on upload class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
                "timedOut": false,
                "duration": 0,
                "pass": false,
                "fail": false,
                "pending": true,
                "code": "",
                "isRoot": false,
                "uuid": "9ee9b38d-a19a-42ab-98a6-938087ab914a",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              }
            ],
            "root": false,
            "_timeout": 95000,
            "file": "/test.js",
            "uuid": "3028a635-df64-426e-9fd5-d49475fbd210",
            "fullFile": "/home/ss/Documents/backend/test.js",
            "passes": [
              {
                "title": "should be able to delete class",
                "fullTitle": "classes --- Delete Class should be able to delete class",
                "timedOut": false,
                "duration": 3001,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "factories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"new class\"</span>,<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"new_class\"</span>,<br>\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t}]<br>\t}<br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br><br>\t\t<span class=\"hljs-keyword\">var</span> classUid = res1.body.class.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class deleted successfully!'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br><br>\t})",
                "isRoot": false,
                "uuid": "d1346540-f513-4808-9ab1-04f701d41485",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on application user class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on application user class delete",
                "timedOut": false,
                "duration": 1631,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "0be3095b-98b7-4d55-84be-bdab89bbacc1",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on application user role class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on application user role class delete",
                "timedOut": false,
                "duration": 1592,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "b9616162-6e45-45ca-bbf2-680fc26c4209",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              },
              {
                "title": "should provide an error messgae on upload class delete",
                "fullTitle": "classes --- Delete Class should provide an error messgae on upload class delete",
                "timedOut": false,
                "duration": 1483,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_installation_data\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
                "isRoot": false,
                "uuid": "6c446b0b-ecfa-4ed4-931e-82cf2e40d28d",
                "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 1,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": true,
            "hasSkipped": false,
            "duration": 7707
          },
          "ctx": "[Circular ~.allPending.1.ctx]",
          "_events": {},
          "_eventsCount": 1,
          "timer": {
            "0": null,
            "_called": false,
            "_idleTimeout": -1,
            "_idlePrev": null,
            "_idleNext": null,
            "_idleStart": 506829,
            "_onTimeout": null,
            "_repeat": null
          },
          "duration": 1483,
          "state": "passed",
          "speed": "slow"
        }
      }
    }
  ],
  "allPasses": [
    {
      "title": "should be able to create application user as an object",
      "fullTitle": "App user Object should be able to create application user as an object",
      "timedOut": false,
      "duration": 1673,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUserName,<br>    <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>  <span class=\"hljs-keyword\">var</span> object = res.body.object<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>  <span class=\"hljs-comment\">// Keys assertion</span><br>  <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'_version'</span>])<br>  <span class=\"hljs-comment\">// Data type assertion</span><br>  object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>  object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  object.ACL.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  object.ACL.others.read.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.others.update.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.others.delete.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br><br>  <span class=\"hljs-comment\">// Value assertion</span><br>  object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  object.__loc[<span class=\"hljs-number\">0</span>].should.be.equal(-<span class=\"hljs-number\">122.4431164995849</span>)<br>  object.__loc[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-number\">37.74045209829323</span>)<br>  object.username.should.be.equal(appUserName)<br>  object.email.should.be.equal(appUseremail)<br>  object.first_name.should.be.equal(<span class=\"hljs-string\">'james'</span>)<br>  object.last_name.should.be.equal(<span class=\"hljs-string\">'bond'</span>)<br>  object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>  object.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(roleId)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>  object.created_by.should.be.equal(userUID)<br>  object.updated_by.should.be.equal(object.created_by)<br>  object.created_at.should.be.equal(object.updated_at)<br><br>  object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>  object.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>  done(err)<br>})",
      "isRoot": false,
      "uuid": "c0979c38-fc18-4058-96cd-66431fe9b407",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should provide an error message for mandetory fields(email)",
      "fullTitle": "App user Object should provide an error message for mandetory fields(email)",
      "timedOut": false,
      "duration": 1517,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-comment\">// \"email\": appUseremail,</span><br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"email\"</span>: [<br>        <span class=\"hljs-string\">\"is a required field\"</span><br>      ]<br>    }<br>  })<br>  done(err)<br>})",
      "isRoot": false,
      "uuid": "877a54f5-3e5f-40ac-b9dd-f4a12836a980",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should provide an error message for unique email",
      "fullTitle": "App user Object should provide an error message for unique email",
      "timedOut": false,
      "duration": 1666,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUserName,<br>    <span class=\"hljs-string\">\"email\"</span>: appUser1.email,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"email\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  done(err)<br>})",
      "isRoot": false,
      "uuid": "085b8edb-13d3-49f3-8fe0-2426d573db00",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should provide an error message for unique username",
      "fullTitle": "App user Object should provide an error message for unique username",
      "timedOut": false,
      "duration": 1670,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, authtoken, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUser1.username,<br>    <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"username\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  done(err)<br>})",
      "isRoot": false,
      "uuid": "acfe744a-9ed1-4613-947e-2c6518792c54",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid authtoken(app user)",
      "fullTitle": "App user Object should provide an error message for invalid authtoken(app user)",
      "timedOut": false,
      "duration": 1519,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// var roleId</span><br><span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br><span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>factories.create(<span class=\"hljs-string\">'create_app_user_object'</span>, <span class=\"hljs-string\">'fhts2323432'</span>, api_key, {<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>    <span class=\"hljs-string\">\"active\"</span>: <span class=\"hljs-literal\">true</span>,<br>    <span class=\"hljs-string\">\"username\"</span>: appUserName,<br>    <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>    <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"james\"</span>,<br>    <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"bond\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>    <span class=\"hljs-string\">\"ACL\"</span>: {<br>      <span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>      <span class=\"hljs-string\">\"roles\"</span>: [{<br>        <span class=\"hljs-string\">\"uid\"</span>: roleId,<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>      }],<br>      <span class=\"hljs-string\">\"others\"</span>: {<br>        <span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>        <span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>      }<br>    },<br>    <span class=\"hljs-string\">\"tags\"</span>: [<span class=\"hljs-string\">\"supertest\"</span>, <span class=\"hljs-string\">\"backend\"</span>]<br>  }<br>})<br>.expect(<span class=\"hljs-number\">401</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>  done(err)<br>})",
      "isRoot": false,
      "uuid": "00cc3f2a-859d-489a-b7fa-2a20af8cbe24",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to get all application user objects present",
      "fullTitle": "App user Object should be able to get all application user objects present",
      "timedOut": false,
      "duration": 2594,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key)<br>        .expect(<span class=\"hljs-number\">200</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          <span class=\"hljs-keyword\">var</span> object = R.last(res.body.objects)<br>          <span class=\"hljs-comment\">// Keys assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>          <span class=\"hljs-comment\">// Data type assertion</span><br>          object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          <span class=\"hljs-comment\">// Value assertion</span><br>          object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          object.__loc.should.be.deep.equal(appUser.__loc)<br>          <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>          <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>          object.username.should.be.equal(appUser.username)<br>          object.email.should.be.equal(appUser.email)<br>          object.first_name.should.be.equal(appUser.first_name)<br>          object.last_name.should.be.equal(appUser.last_name)<br>          object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          object.created_by.should.be.equal(userUID)<br>          object.updated_by.should.be.equal(object.created_by)<br>          object.created_at.should.be.equal(object.updated_at)<br>          object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>          object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          done(err)<br>        })",
      "isRoot": false,
      "uuid": "fd35165f-19e8-43f9-9226-918cf722b0ab",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to get single application user object",
      "fullTitle": "App user Object should be able to get single application user object",
      "timedOut": false,
      "duration": 3814,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_object_app_user'</span>, authtoken, api_key, appUser1.uid)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          <span class=\"hljs-keyword\">var</span> object = res.body.object<br>          <span class=\"hljs-comment\">// Keys assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>          <span class=\"hljs-comment\">// Data type assertion</span><br>          object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          <span class=\"hljs-comment\">// Value assertion</span><br>          object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          object.__loc.should.be.deep.equal(appUser1.__loc)<br>          <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>          <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>          object.username.should.be.equal(appUser1.username)<br>          object.email.should.be.equal(appUser1.email)<br>          object.first_name.should.be.equal(appUser1.first_name)<br>          object.last_name.should.be.equal(appUser1.last_name)<br>          object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          object.created_by.should.be.equal(userUID)<br>          object.updated_by.should.be.equal(object.created_by)<br>          object.created_at.should.be.equal(object.updated_at)<br>          object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>          object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          done(err)<br>        })",
      "isRoot": false,
      "uuid": "ca9d100f-f45c-4d07-a15c-58e49173a352",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid uid",
      "fullTitle": "App user Object should provide an error message for invalid uid",
      "timedOut": false,
      "duration": 4981,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_object_app_user'</span>, authtoken, api_key, <span class=\"hljs-string\">'adafewt34vf'</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>          done(err)<br>        })",
      "isRoot": false,
      "uuid": "fbcb8ff2-6c0b-46d2-8aed-1327b04f2b6c",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to update application user object",
      "fullTitle": "App user Object should be able to update application user object",
      "timedOut": false,
      "duration": 2573,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, authtoken, api_key, appUser1.uid, {<br>        <span class=\"hljs-string\">\"object\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span><br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.object<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal(appUser1.__loc)<br>        <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>        <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>        object.username.should.be.equal(appUser1.username)<br>        object.email.should.be.equal(appUser1.email)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(object.created_by)<br>        object.created_at.should.be.not.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "9fae17ba-e268-403b-8405-249e1c976baf",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid authtoken(app user) for update",
      "fullTitle": "App user Object should provide an error message for invalid authtoken(app user) for update",
      "timedOut": false,
      "duration": 1498,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, <span class=\"hljs-string\">'asdafe2323dfr445'</span>, api_key, appUser1.uid, {<br>        <span class=\"hljs-string\">\"object\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span><br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">401</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "b8439342-239c-4796-8656-3649dc3d81df",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid uid for update",
      "fullTitle": "App user Object should provide an error message for invalid uid for update",
      "timedOut": false,
      "duration": 1682,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, authtoken, api_key, <span class=\"hljs-string\">'asfa323dfgs'</span>, {<br>        <span class=\"hljs-string\">\"object\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span><br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "adc57603-34aa-4865-9ff6-38a13e428fff",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to search application users using query",
      "fullTitle": "App user Object should be able to search application users using query",
      "timedOut": false,
      "duration": 2018,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, { query: {<span class=\"hljs-string\">\"email\"</span>: appUser.email } })<br>        .expect(<span class=\"hljs-number\">200</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          <br>          <span class=\"hljs-keyword\">var</span> object = R.last(res.body.objects)<br>          <br>          <span class=\"hljs-comment\">// Keys assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>          <span class=\"hljs-comment\">// Data type assertion</span><br>          object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          <span class=\"hljs-comment\">// Value assertion</span><br>          object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          object.__loc.should.be.deep.equal(appUser.__loc)<br>          <br>          object.username.should.be.equal(appUser.username)<br>          object.email.should.be.equal(appUser.email)<br>          object.first_name.should.be.equal(appUser.first_name)<br>          object.last_name.should.be.equal(appUser.last_name)<br>          object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          object.created_by.should.be.equal(userUID)<br>          object.updated_by.should.be.equal(object.created_by)<br>          object.created_at.should.be.equal(object.updated_at)<br>          object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>          object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          done(err)<br>        })",
      "isRoot": false,
      "uuid": "f79c677b-c53e-47db-8f05-05c26b473662",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid authtoken for delete",
      "fullTitle": "App user Object should provide an error message for invalid authtoken for delete",
      "timedOut": false,
      "duration": 2201,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_object_app_user'</span>, <span class=\"hljs-string\">'asdwvf434vdfv'</span>, api_key, appUser1.uid)<br>        .expect(<span class=\"hljs-number\">401</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t})<br>          done(err)<br>        })",
      "isRoot": false,
      "uuid": "46bfe0b1-24fd-459d-8207-14fca6e8db25",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to delete application user object",
      "fullTitle": "App user Object should be able to delete application user object",
      "timedOut": false,
      "duration": 2496,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_object_app_user'</span>, authtoken, api_key, appUser1.uid)<br>      .expect(<span class=\"hljs-number\">200</span>)  <br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "799d2db0-b080-4986-aadc-5ca67e6fabb1",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid uid for delete",
      "fullTitle": "App user Object should provide an error message for invalid uid for delete",
      "timedOut": false,
      "duration": 2360,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_object_app_user'</span>, authtoken, api_key, <span class=\"hljs-string\">'adf34d34d'</span>)<br>        .expect(<span class=\"hljs-number\">422</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>          res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>          done(err)<br>        })",
      "isRoot": false,
      "uuid": "77c8d860-3b56-4993-a369-060124a5a9a0",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to get application user objects count",
      "fullTitle": "App user Object should be able to get application user objects count",
      "timedOut": false,
      "duration": 2963,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <br>        res.body.objects.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "cdee6eca-1373-479f-8be9-d0f9de33dbbd",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to get application user objects includeing count",
      "fullTitle": "App user Object should be able to get application user objects includeing count",
      "timedOut": false,
      "duration": 1722,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        <span class=\"hljs-keyword\">var</span> object = R.last(res.body.objects)<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal(appUser.__loc)<br>        <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>        <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>        object.username.should.be.equal(appUser.username)<br>        object.email.should.be.equal(appUser.email)<br>        object.first_name.should.be.equal(appUser.first_name)<br>        object.last_name.should.be.equal(appUser.last_name)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(object.created_by)<br>        object.created_at.should.be.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "cf8f89eb-46ce-4af0-af63-7d70d8611781",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to get application user objects using skip and count",
      "fullTitle": "App user Object should be able to get application user objects using skip and count",
      "timedOut": false,
      "duration": 4271,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.objects.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "d979aedd-df68-4416-a297-0dee33763446",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to get application user objects using limit and count",
      "fullTitle": "App user Object should be able to get application user objects using limit and count",
      "timedOut": false,
      "duration": 1524,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.objects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)  <br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "93dcd60f-d325-4720-8c0c-8b325dd7376d",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to get application user objects using skip",
      "fullTitle": "App user Object should be able to get application user objects using skip",
      "timedOut": false,
      "duration": 1605,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span>,<br>        <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.objects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        res.body.count.should.be.equal(<span class=\"hljs-number\">3</span>)<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "1b9798e7-7900-4210-8724-4beb3cb26c2d",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to get application user objects using -ve skip value",
      "fullTitle": "App user Object should be able to get application user objects using -ve skip value",
      "timedOut": false,
      "duration": 1495,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"skip\"</span>: -<span class=\"hljs-number\">2</span><br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Failed to fetch objects. Please try again with valid parameters.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"params\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"has an invalid operation.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "7fb6985f-3168-4265-b8d3-0078a133a938",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to get application user objects using -ve limit value",
      "fullTitle": "App user Object should be able to get application user objects using -ve limit value",
      "timedOut": false,
      "duration": 1882,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, authtoken, api_key, <span class=\"hljs-string\">''</span>, {<br>        <span class=\"hljs-string\">\"limit\"</span>: -<span class=\"hljs-number\">1</span>,<br>        <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">1</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        <span class=\"hljs-keyword\">var</span> object = res.body.objects[<span class=\"hljs-number\">0</span>]<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'_version'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal(object.__loc)<br>        <span class=\"hljs-comment\">// object.__loc[0].should.be.equal(appUser.__loc[0])</span><br>        <span class=\"hljs-comment\">// object.__loc[1].should.be.equal(appUser.__loc[1])</span><br>        object.username.should.be.equal(object.username)<br>        object.email.should.be.equal(object.email)<br>        object.first_name.should.be.equal(object.first_name)<br>        object.last_name.should.be.equal(object.last_name)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'android'</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(object.created_by)<br>        object.created_at.should.be.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">'catwoman'</span>, <span class=\"hljs-string\">'backend'</span>])<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "e494b2ff-b116-4649-870a-b05bda7f1ac6",
      "parentUUID": "59a39f17-6b55-43be-8e81-eb2fde48d638",
      "skipped": false
    },
    {
      "title": "should be able to register application users",
      "fullTitle": "App users registration should be able to register application users",
      "timedOut": false,
      "duration": 1953,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUserName<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.application_user<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! You have successfully registered!'</span>)<br>        <span class=\"hljs-comment\">// // Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>        <span class=\"hljs-comment\">// // Data type assertion</span><br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.active.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        should.not.exist(object.updated_by)<br>        should.not.exist(object.created_by)<br>        should.not.exist(object.__loc)<br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.email.should.be.equal(appUseremail)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'john'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'smith'</span>)<br>        object.username.should.be.equal(appUserName)<br>        object.active.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_at.should.be.equal(object.updated_at)<br>        object._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        object.tags.should.be.deep.equal([])<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "3ab2ee41-0fb2-4cc8-a25d-25c82763c40c",
      "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
      "skipped": false
    },
    {
      "title": "should provide error message for password confirmation",
      "fullTitle": "App users registration should provide error message for password confirmation",
      "timedOut": false,
      "duration": 1959,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw1234\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUserName<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't sign you up. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">192</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"password_confirmation\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"password and password_confirmation must match\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "008c5e36-417a-409d-aff2-1c07386483e8",
      "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
      "skipped": false
    },
    {
      "title": "should provide error message for register unique username",
      "fullTitle": "App users registration should provide error message for register unique username",
      "timedOut": false,
      "duration": 1627,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUseremail,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUser2.username<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    \t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't sign you up. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">127</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"username\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "49bcc02d-fe6c-49b0-88b6-0fdc447fe442",
      "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
      "skipped": false
    },
    {
      "title": "should provide error message for register unique email",
      "fullTitle": "App users registration should provide error message for register unique email",
      "timedOut": false,
      "duration": 1885,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> appUseremail = R.bltRandom(<span class=\"hljs-number\">8</span>) + <span class=\"hljs-string\">\"@\"</span> + <span class=\"hljs-string\">\"mailinator.com\"</span>;<br>      <span class=\"hljs-keyword\">var</span> appUserName = R.bltRandom(<span class=\"hljs-number\">8</span>);<br>      factories.create(<span class=\"hljs-string\">'register_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUser2.email,<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"john\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"smith\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"raw123\"</span>,<br>          <span class=\"hljs-string\">\"username\"</span>: appUserName<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    \t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't sign you up. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">127</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"email\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "124342fd-d483-457d-80fc-4d1a84b3fa18",
      "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
      "skipped": false
    },
    {
      "title": "should be able to update registered application user",
      "fullTitle": "App users registration should be able to update registered application user",
      "timedOut": false,
      "duration": 1509,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser_authtoken, api_key, appUser2.uid, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.application_user<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        <span class=\"hljs-comment\">// value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>        object.email.should.be.equal(appUser2.email)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.username.should.be.equal(appUser2.username)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">\"testuser\"</span>, <span class=\"hljs-string\">\"backend\"</span>])<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(userUID)<br>        object.created_at.should.be.not.equal(object.updated_at)<br>        object.uid.should.be.equal(appUser2.uid)<br>        object.ACL.can[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'update'</span>)<br>        object.ACL.can[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'delete'</span>)<br>        object._version.should.be.equal(<span class=\"hljs-number\">3</span>)<br>        <span class=\"hljs-comment\">// object.last_login_at.should.be.equal('string')</span><br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "f9afde5a-8cdd-4949-ac7a-eea5715d8529",
      "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid app user authtoken ",
      "fullTitle": "App users registration should provide an error message for invalid app user authtoken ",
      "timedOut": false,
      "duration": 1678,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, <span class=\"hljs-string\">''</span>, api_key, appUser2.uid, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>          <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"objectUpdate\"</span>,<br>        }<br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>      \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>      \tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "574a5534-616f-4982-a7d8-d479bb0ac90c",
      "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
      "skipped": false
    },
    {
      "title": "should be able to get registered application user",
      "fullTitle": "App users registration should be able to get registered application user",
      "timedOut": false,
      "duration": 1462,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_register_app_user'</span>, appUser_authtoken, api_key, appUser2.uid)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> object = res.body.application_user<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        object.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        object.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        object.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        object.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        object._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        object.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        <span class=\"hljs-comment\">// value assertion</span><br>        object.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        object.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>        object.email.should.be.equal(appUser2.email)<br>        object.first_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.last_name.should.be.equal(<span class=\"hljs-string\">'objectUpdate'</span>)<br>        object.username.should.be.equal(appUser2.username)<br>        object.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>        object.tags.should.be.deep.equal([<span class=\"hljs-string\">\"testuser\"</span>, <span class=\"hljs-string\">\"backend\"</span>])<br>        object.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>        object.created_by.should.be.equal(userUID)<br>        object.updated_by.should.be.equal(userUID)<br>        object.created_at.should.be.not.equal(object.updated_at)<br>        object.uid.should.be.equal(appUser2.uid)<br>        object.ACL.can[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'update'</span>)<br>        object.ACL.can[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'delete'</span>)<br>        object._version.should.be.equal(<span class=\"hljs-number\">3</span>)<br>        <span class=\"hljs-comment\">// object.last_login_at.should.be.equal('string')</span><br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "8864afe4-0fcb-4559-8853-349a08d68ace",
      "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
      "skipped": false
    },
    {
      "title": "should be able to deactivate an existing application user",
      "fullTitle": "App users registration should be able to deactivate an existing application user",
      "timedOut": false,
      "duration": 1692,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_register_app_user'</span>, appUser_authtoken, api_key, appUser2.uid)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "ef77a8ce-8e2f-46a6-a23b-a4fd75041777",
      "parentUUID": "6e92288d-ed36-4cdf-9fa4-2f5134aa68d8",
      "skipped": false
    },
    {
      "title": "should provide error message for invalid application user login operation",
      "fullTitle": "App user login/logout should provide error message for invalid application user login operation",
      "timedOut": false,
      "duration": 1441,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'login_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"asd\"</span>,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {<br>            <span class=\"hljs-string\">\"auth\"</span>: [<br>              <span class=\"hljs-string\">\"Looks like your email or password is invalid\"</span><br>            ]<br>          }<br>        })<br>        done(err)<br>      })",
      "isRoot": false,
      "uuid": "580dc1c8-f719-4c98-ba00-7b0d076e94d6",
      "parentUUID": "d8e0be76-df5b-491e-80e4-e3d433f962b8",
      "skipped": false
    },
    {
      "title": "should be able to login users registered for an application",
      "fullTitle": "App user login/logout should be able to login users registered for an application",
      "timedOut": false,
      "duration": 1487,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'login_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUser3.email,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>        }<br>      })<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Logged in successfully!'</span>)<br>          user = res.body.application_user<br>          userAuthtoken = res.body.application_user.authtoken<br>          <span class=\"hljs-comment\">// key assertion</span><br>          <span class=\"hljs-built_in\">Object</span>.keys(user).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>, <span class=\"hljs-string\">'authtoken'</span>])<br>          <span class=\"hljs-comment\">// data assertion</span><br>          user.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          user.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          user.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>          user.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.active.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>          user.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>          user._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>          user.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          user.authtoken.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>          <span class=\"hljs-comment\">// value assertion</span><br>          user.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          user.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>          user.email.should.be.equal(appUser3.email)<br>          user.first_name.should.be.equal(appUser3.first_name)<br>          user.last_name.should.be.equal(appUser3.last_name)<br>          user.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>          user.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>          user.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>          user.created_by.should.be.equal(userUID)<br>          user.updated_by.should.be.equal(userUID)<br>          user.created_at.should.be.not.equal(user.updated_at)<br>          user.uid.should.be.equal(appUser3.uid)<br>          user.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>          user.ACL.should.be.deep.equal({<span class=\"hljs-string\">\"can\"</span>: []})<br>          user._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>          done(err)<br>        })",
      "isRoot": false,
      "uuid": "37de429b-bda0-4d0e-a576-8241b7e108b3",
      "parentUUID": "d8e0be76-df5b-491e-80e4-e3d433f962b8",
      "skipped": false
    },
    {
      "title": "should provide error message for invalid application user logout operation",
      "fullTitle": "App user login/logout should provide error message for invalid application user logout operation",
      "timedOut": false,
      "duration": 1455,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'logout_app_user'</span>, <span class=\"hljs-string\">\"userAuthtoken\"</span>, api_key)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          res.body.error_message.should.be.equal(<span class=\"hljs-string\">'Access denied. You have insufficient permissions to perform this operation.'</span>)<br>          res.body.error_code.should.be.equal(<span class=\"hljs-number\">162</span>)<br>          done(err)<br>        })",
      "isRoot": false,
      "uuid": "cfcd6a33-d62c-4f29-a9ab-5f96b90c639b",
      "parentUUID": "d8e0be76-df5b-491e-80e4-e3d433f962b8",
      "skipped": false
    },
    {
      "title": "should be able to logout application user from an application",
      "fullTitle": "App user login/logout should be able to logout application user from an application",
      "timedOut": false,
      "duration": 3154,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'login_app_user'</span>, api_key, {<br>        <span class=\"hljs-string\">\"application_user\"</span>: {<br>          <span class=\"hljs-string\">\"email\"</span>: appUser3.email,<br>          <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>        }<br>      }))<br>        .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>          <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'logout_app_user'</span>, res.body.application_user.authtoken, api_key))<br>        })<br>        .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>          res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Logged out successfully.'</span>)<br>        })<br>        .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>          done()<br>        })<br>        .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>          <span class=\"hljs-built_in\">console</span>.log(err)<br>        })",
      "isRoot": false,
      "uuid": "ce005bdb-099a-4767-af73-f39916083ee0",
      "parentUUID": "d8e0be76-df5b-491e-80e4-e3d433f962b8",
      "skipped": false
    },
    {
      "title": "should be able to get current logged in application user",
      "fullTitle": "App user token/uid should be able to get current logged in application user",
      "timedOut": false,
      "duration": 1719,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">30000</span>)<br><br>R.Promisify(factories.create(<span class=\"hljs-string\">'get_current_app_user'</span>, userAuthtoken1, api_key))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    userAuthtoken = res.body.application_user.authtoken<br>    <span class=\"hljs-comment\">// key assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(user).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'first_name'</span>, <span class=\"hljs-string\">'last_name'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'last_login_at'</span>, <span class=\"hljs-string\">'isApplicationUser'</span>, <span class=\"hljs-string\">'authtoken'</span>])<br>    <span class=\"hljs-comment\">// data assertion</span><br>    user.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    user.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    user.email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.first_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.last_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    user.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.active.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    user.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    user._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>    user.last_login_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    user.isApplicationUser.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    user.authtoken.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    <span class=\"hljs-comment\">// value assertion</span><br>    user.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    user.__loc.should.be.deep.equal([<span class=\"hljs-number\">72.79246119999993</span>, <span class=\"hljs-number\">19.4563596</span>])<br>    user.email.should.be.equal(appUser4.email)<br>    user.first_name.should.be.equal(appUser4.first_name)<br>    user.last_name.should.be.equal(appUser4.last_name)<br>    user.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>    user.tags.should.be.deep.equal([<span class=\"hljs-string\">'testuser'</span>, <span class=\"hljs-string\">'backend'</span>])<br>    user.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>    user.created_by.should.be.equal(userUID)<br>    user.updated_by.should.be.equal(userUID)<br>    user.created_at.should.be.not.equal(user.updated_at)<br>    user.uid.should.be.equal(appUser4.uid)<br>    user.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    user.ACL.should.be.deep.equal({ })<br>    user._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>    user.isApplicationUser.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
      "isRoot": false,
      "uuid": "878a76a4-5fa7-4956-ba72-e63778d91144",
      "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid application user authtoken",
      "fullTitle": "App user token/uid should provide an error message for invalid application user authtoken",
      "timedOut": false,
      "duration": 1434,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">30000</span>)<br><br>R.Promisify(factories.create(<span class=\"hljs-string\">'get_current_app_user'</span>, <span class=\"hljs-string\">'899769kjnkj'</span>, api_key))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  \t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    res.status.should.be.equal(<span class=\"hljs-number\">422</span>)<br>    res.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t})<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
      "isRoot": false,
      "uuid": "e9fe2314-052c-4bda-a0c3-9e560eaa596d",
      "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
      "skipped": false
    },
    {
      "title": "should be able to retrieve application user uid",
      "fullTitle": "App user token/uid should be able to retrieve application user uid",
      "timedOut": false,
      "duration": 1610,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'app_user_retrieve_user_uid'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"email\"</span>: appUser4.email<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.uid.should.be.equal(appUser4.uid)<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "10d64fad-1f0b-47b8-b846-206ed9b03b92",
      "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
      "skipped": false
    },
    {
      "title": "should be able to an application user token by using an application`s master key",
      "fullTitle": "App user token/uid should be able to an application user token by using an application`s master key",
      "timedOut": false,
      "duration": 2083,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'app_user_token'</span>, master_key, api_key, appUser4.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <br>  res.body.token.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  done()<br>})",
      "isRoot": false,
      "uuid": "269a8986-9f1c-4d72-8bad-7770b185448e",
      "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
      "skipped": false
    },
    {
      "title": "should provide an error message for an invalid application`s master key",
      "fullTitle": "App user token/uid should provide an error message for an invalid application`s master key",
      "timedOut": false,
      "duration": 1473,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'app_user_token'</span>, <span class=\"hljs-string\">'kdsj43fvbgkj'</span>, api_key, appUser4.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  <span class=\"hljs-comment\">// res.body.token.should.be.a('string')</span><br>  done()<br>})",
      "isRoot": false,
      "uuid": "3c3c1d05-0f53-42f8-aee9-5b7f20315695",
      "parentUUID": "6ce69b46-b664-4d91-b1ad-18420b096369",
      "skipped": false
    },
    {
      "title": "should be able to activate app user`s account",
      "fullTitle": "App user activations should be able to activate app user`s account",
      "timedOut": false,
      "duration": 1501,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'activate_app_user'</span>, api_key, appUser5.uid, token))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Account activated successfully!'</span>)<br>  done()<br>})",
      "isRoot": false,
      "uuid": "b5d58d58-b35c-463b-91f9-d6aed8f2a95b",
      "parentUUID": "221c4c39-8375-46cc-84b2-397e441427f8",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid token",
      "fullTitle": "App user activations should provide an error message for invalid token",
      "timedOut": false,
      "duration": 1749,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'activate_app_user'</span>, api_key, appUser5.uid, <span class=\"hljs-string\">'4569y8zvzkdfgzdf'</span>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.status.should.be.equal(<span class=\"hljs-number\">422</span>)<br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't retreive the token for you.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">147</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"token\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"Bummer. The token provided is invalid. Please try again.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
      "isRoot": false,
      "uuid": "6db2784e-0951-4e0a-8caa-1d124941e9ae",
      "parentUUID": "221c4c39-8375-46cc-84b2-397e441427f8",
      "skipped": false
    },
    {
      "title": "should be able to request reset password, for an application",
      "fullTitle": "App user requests should be able to request reset password, for an application",
      "timedOut": false,
      "duration": 1657,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'req_forgot_password'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"email\"</span>: appUser6.email<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'OK! We\\'ve sent you an email. Please check it for further instructions.'</span>)<br>  <br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "9bb95e1e-cadc-4b08-9a4e-7f66d09df8e4",
      "parentUUID": "ecd2cd96-803b-451b-b654-10907ad987bd",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid email for forgot password",
      "fullTitle": "App user requests should provide an error message for invalid email for forgot password",
      "timedOut": false,
      "duration": 1472,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'req_forgot_password'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"email\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't help you with your password. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">148</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"email\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "79166b96-965d-4e8e-a2a2-a8ae34f4aa3f",
      "parentUUID": "ecd2cd96-803b-451b-b654-10907ad987bd",
      "skipped": false
    },
    {
      "title": "should be able to reset password using provided token",
      "fullTitle": "App user forgot password should be able to reset password using provided token",
      "timedOut": false,
      "duration": 1485,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'reset_password_app_user'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"reset_password_token\"</span>: token,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! You\\'ve successfully reset your password.'</span>)<br>  <br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "2e3e8e31-2745-4dbe-a677-28188636e730",
      "parentUUID": "f3176f0e-ae33-4afb-8637-a7005ffe226e",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid reset password token",
      "fullTitle": "App user forgot password should provide an error message for invalid reset password token",
      "timedOut": false,
      "duration": 1788,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'reset_password_app_user'</span>, api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"reset_password_token\"</span>: <span class=\"hljs-string\">\"swapnil\"</span>,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"password\"</span>,<br>    <span class=\"hljs-string\">\"password_confirmation\"</span>: <span class=\"hljs-string\">\"password\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Couldn't reset your password. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">149</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"reset_password_token\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"Bummer. The token provided is invalid. Please try again.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "3db7d3ff-06bc-448c-99b1-6a659d4dd225",
      "parentUUID": "f3176f0e-ae33-4afb-8637-a7005ffe226e",
      "skipped": false
    },
    {
      "title": "should be able to check whether reset password token is valid or not",
      "fullTitle": "App user validate_token should be able to check whether reset password token is valid or not",
      "timedOut": false,
      "duration": 1757,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'validate_token_app_user'</span>, api_key, { <span class=\"hljs-string\">'application_user[reset_password_token]'</span>: token }))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.notice.should.be.equal(<span class=\"hljs-string\">'That token works!'</span>)<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "00e7626e-1c3c-429a-8b7c-370e3bf85317",
      "parentUUID": "34eb9474-218e-47bc-8f42-19a8ced504e2",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid provided token",
      "fullTitle": "App user validate_token should provide an error message for invalid provided token",
      "timedOut": false,
      "duration": 1847,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'validate_token_app_user'</span>, api_key, { <span class=\"hljs-string\">'application_user[reset_password_token]'</span>: <span class=\"hljs-string\">'swapnil'</span> }))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The token provided is invalid. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">210</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"reset_password_token\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is not valid, or it might have expired\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>  <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "21991bee-e454-4c65-af32-18caad178b5e",
      "parentUUID": "34eb9474-218e-47bc-8f42-19a8ced504e2",
      "skipped": false
    },
    {
      "title": "should be able to restricted whitelisted files only",
      "fullTitle": "uploads whitelist restrictions should be able to restricted whitelisted files only",
      "timedOut": false,
      "duration": 8299,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, sys_user1.authtoken, app1.api_key, filename2))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser2.authtoken, app1.api_key, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File creation failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">142</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
      "isRoot": false,
      "uuid": "4170bb2f-123c-4ac1-b3f1-a891e7272a75",
      "parentUUID": "24a77326-d8c3-41bd-9716-374cde59e5e9",
      "skipped": false
    },
    {
      "title": "should be able to restrict blackted files only",
      "fullTitle": "uploads blacklist restrictions should be able to restrict blackted files only",
      "timedOut": false,
      "duration": 9829,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File creation failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">142</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, sys_user1.authtoken, app1.api_key, filename2))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File creation failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">142</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser2.authtoken, app1.api_key, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'application/json'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, sys_user1.authtoken, app1.api_key, filename4))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'application/pdf'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
      "isRoot": false,
      "uuid": "9ab759a7-ca60-48b7-a17e-7dc4c22da4a2",
      "parentUUID": "82a262bd-6cc5-45cb-80d6-37ff4dbe813b",
      "skipped": false
    },
    {
      "title": "should be able to restrict whitelisted files only on update upload object",
      "fullTitle": "uploads restrictions on update object should be able to restrict whitelisted files only on update upload object",
      "timedOut": false,
      "duration": 4047,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br>    userFile = res.body.upload<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_upload'</span>, sys_user1.authtoken, app1.api_key, userFile.uid, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. File update failed. Please try again.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">143</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {<br>        <span class=\"hljs-string\">\"content_type\"</span>: [<br>          <span class=\"hljs-string\">\"is not included in the list of valid values\"</span><br>        ]<br>      }<br>    })<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
      "isRoot": false,
      "uuid": "e6609103-fb0c-473c-8eff-8a488f16bab4",
      "parentUUID": "f30573b8-70d5-4dc5-8671-47e7db21d930",
      "skipped": false
    },
    {
      "title": "should be able to disable restrictions on whitelisted files",
      "fullTitle": "uploads disable restrictions should be able to disable restrictions on whitelisted files",
      "timedOut": false,
      "duration": 5829,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, appUser1.authtoken, app1.api_key, filename1))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>    res.body.upload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br>    userFile = res.body.upload<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_upload'</span>, sys_user1.authtoken, app1.api_key, userFile.uid, filename3))<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    res.body.notice.should.be.deep.equal(<span class=\"hljs-string\">'Woot! File updated successfully.'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
      "isRoot": false,
      "uuid": "46380311-033b-450f-b6f8-27fa89d73bb3",
      "parentUUID": "114e040f-cf0c-4e5d-89ac-da1691cf4c3b",
      "skipped": false
    },
    {
      "title": "should be able to restricted whitelisted files only",
      "fullTitle": "users profile whitelist restrictions should be able to restricted whitelisted files only",
      "timedOut": false,
      "duration": 1480,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser2.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"superman\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    user.username.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    user.first_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    <span class=\"hljs-comment\">// user.last_name.should.be.equal('superman')</span><br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err.trace)<br>  })",
      "isRoot": false,
      "uuid": "97cb56a3-dc89-4b2a-a0df-78cdfcc619fe",
      "parentUUID": "eba5a843-ffea-4a1d-a480-44f0a0404bd2",
      "skipped": false
    },
    {
      "title": "should be able to restrict whitelisted uploads files only",
      "fullTitle": "users profile blacklist restrictions should be able to restrict whitelisted uploads files only",
      "timedOut": false,
      "duration": 1692,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser1.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"superman\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    user.username.should.be.equal(user1.username)<br>    user.last_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
      "isRoot": false,
      "uuid": "557c6de2-2108-408b-9a5a-d28e0b496403",
      "parentUUID": "a548b2c8-0324-46e0-a022-d1bcc7e32c19",
      "skipped": false
    },
    {
      "title": "should be able to restrict whitelisted user profile only",
      "fullTitle": "users profile disable restrictions should be able to restrict whitelisted user profile only",
      "timedOut": false,
      "duration": 1726,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_register_app_user'</span>, appUser2.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"application_user\"</span>: {<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"superman\"</span>,<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"superman\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.application_user<br>    user.username.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    user.first_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>    user.last_name.should.be.equal(<span class=\"hljs-string\">'superman'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
      "isRoot": false,
      "uuid": "b760bda9-ab56-4f4f-b492-3c02087cac32",
      "parentUUID": "cbbdc6e2-3040-4c39-aea7-57ddd8950e70",
      "skipped": false
    },
    {
      "title": "should be update by only system user",
      "fullTitle": "users restricted profile  should be update by only system user",
      "timedOut": false,
      "duration": 1644,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">30000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, sys_user1.authtoken, app1.api_key, appUser1.uid, {<br>    <span class=\"hljs-string\">\"object\"</span>: {<br>      <span class=\"hljs-string\">\"username\"</span>: <span class=\"hljs-string\">\"hulk\"</span>,<br>      <span class=\"hljs-string\">\"first_name\"</span>: <span class=\"hljs-string\">\"hulk\"</span>,<br>      <span class=\"hljs-string\">\"last_name\"</span>: <span class=\"hljs-string\">\"hulk\"</span><br>    }<br>  }))<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    user = res.body.object<br>    user.username.should.be.equal(<span class=\"hljs-string\">'hulk'</span>)<br>    user.first_name.should.be.equal(<span class=\"hljs-string\">'hulk'</span>)<br>    user.last_name.should.be.equal(<span class=\"hljs-string\">'hulk'</span>)<br>  })<br>  .then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>    done()<br>  })<br>  .catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>    <span class=\"hljs-built_in\">console</span>.log(err)<br>  })",
      "isRoot": false,
      "uuid": "c33c7a6b-dad7-4653-a8aa-10158aa16366",
      "parentUUID": "da1bdb97-78b5-43c8-9470-add8f30df9e1",
      "skipped": false
    },
    {
      "title": "should be able to disable traditional login",
      "fullTitle": "Enable or disable, Permitted login schemes should be able to disable traditional login",
      "timedOut": false,
      "duration": 1626,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'login_app_user'</span>, app1.api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"email\"</span>: user2.email,<br>    <span class=\"hljs-string\">\"password\"</span>: <span class=\"hljs-string\">\"raw123\"</span><br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via traditional is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "e2222580-4560-445a-af17-e0bc8f623e5c",
      "parentUUID": "b629e8e9-bb4a-45fa-be56-349305f069cb",
      "skipped": false
    },
    {
      "title": "should be able to disable Google login",
      "fullTitle": "Enable or disable, Permitted login schemes should be able to disable Google login",
      "timedOut": false,
      "duration": 1450,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'register_app_user'</span>, app1.api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"auth_data\"</span>: {<br>      <span class=\"hljs-string\">\"google\"</span>: {<br>          <span class=\"hljs-string\">\"access_token\"</span>: <span class=\"hljs-string\">\"ya29.CjHeAiM_voLZbQFdGxlzuHW1sweJFFzWfK5mHZn5Q5wkxTnnnZFa7axbhxEbuJ8cJz-N\"</span><br>      }<br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via google is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "13f6a172-36bd-4a36-b0ea-4fbad9103336",
      "parentUUID": "b629e8e9-bb4a-45fa-be56-349305f069cb",
      "skipped": false
    },
    {
      "title": "should be able to disable facebook login",
      "fullTitle": "Enable or disable, Permitted login schemes should be able to disable facebook login",
      "timedOut": false,
      "duration": 1464,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'register_app_user'</span>, app1.api_key, {<br>  <span class=\"hljs-string\">\"application_user\"</span>: {<br>    <span class=\"hljs-string\">\"auth_data\"</span>: {<br>      <span class=\"hljs-string\">\"facebook\"</span>: {<br>        <span class=\"hljs-string\">\"access_token\"</span>: <span class=\"hljs-string\">\"ya29.AHES6ZSvSaMpLeToKeNVowjHEZrJA_J0k8\"</span><br>      }<br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via facebook is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "88fb201b-a2ef-4971-add8-aa842f0b7efe",
      "parentUUID": "b629e8e9-bb4a-45fa-be56-349305f069cb",
      "skipped": false
    },
    {
      "title": "should be able to disable twitter login",
      "fullTitle": "Enable or disable, Permitted login schemes should be able to disable twitter login",
      "timedOut": false,
      "duration": 1443,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'register_app_user'</span>, app1.api_key, {<br><span class=\"hljs-string\">\"application_user\"</span>: {<br>  <span class=\"hljs-string\">\"auth_data\"</span>: {<br>      <span class=\"hljs-string\">\"twitter\"</span>: {<br>        <span class=\"hljs-string\">\"token\"</span>: <span class=\"hljs-string\">\"ya29.AHES6ZSvSaMpLeToKeNVowjHEZrJA_J0k8\"</span>,<br>        <span class=\"hljs-string\">\"token_secret\"</span>: <span class=\"hljs-string\">\"aMpLeToKeNVowjHEZrJA_J0k8\"</span>,<br>        <span class=\"hljs-string\">\"consumer_key\"</span>: <span class=\"hljs-string\">\"aMpLeToKeNVowjHEZrJA_J0k8kjfs78\"</span>,<br>        <span class=\"hljs-string\">\"consumer_secret\"</span>: <span class=\"hljs-string\">\"aMpLeToKeNVowjHEZrJA_J0kfd878\"</span><br>      }<br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Login failed. Please try again.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">131</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"access_denied\"</span>: [<br>        <span class=\"hljs-string\">\"Logging in via twitter is not allowed.\"</span><br>      ]<br>    }<br>  })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "22098788-c307-441c-8020-be88dbc348f4",
      "parentUUID": "b629e8e9-bb4a-45fa-be56-349305f069cb",
      "skipped": false
    },
    {
      "title": "should be able to get list of all restricted uids for an application",
      "fullTitle": "Get restricted uids should be able to get list of all restricted uids for an application",
      "timedOut": false,
      "duration": 1422,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(api.get(config.endpoints.restricted_uids)<br>.set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>.expect(<span class=\"hljs-number\">200</span>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"restricted\"</span>: [<br>      <span class=\"hljs-string\">\"published\"</span>,<br>      <span class=\"hljs-string\">\"uid\"</span>,<br>      <span class=\"hljs-string\">\"created_at\"</span>,<br>      <span class=\"hljs-string\">\"deleted_at\"</span>,<br>      <span class=\"hljs-string\">\"updated_at\"</span>,<br>      <span class=\"hljs-string\">\"tags_array\"</span>,<br>      <span class=\"hljs-string\">\"klass_id\"</span>,<br>      <span class=\"hljs-string\">\"applikation_id\"</span>,<br>      <span class=\"hljs-string\">\"*_ids\"</span>,<br>      <span class=\"hljs-string\">\"id\"</span>,<br>      <span class=\"hljs-string\">\"_id\"</span>,<br>      <span class=\"hljs-string\">\"ACL\"</span>,<br>      <span class=\"hljs-string\">\"SYS_ACL\"</span>,<br>      <span class=\"hljs-string\">\"DEFAULT_ACL\"</span>,<br>      <span class=\"hljs-string\">\"app_user_object_uid\"</span>,<br>      <span class=\"hljs-string\">\"built_io_upload\"</span>,<br>      <span class=\"hljs-string\">\"__loc\"</span>,<br>      <span class=\"hljs-string\">\"tags\"</span>,<br>      <span class=\"hljs-string\">\"_owner\"</span>,<br>      <span class=\"hljs-string\">\"_version\"</span>,<br>      <span class=\"hljs-string\">\"toJSON\"</span>,<br>      <span class=\"hljs-string\">\"save\"</span>,<br>      <span class=\"hljs-string\">\"update\"</span>,<br>      <span class=\"hljs-string\">\"domain\"</span>,<br>      <span class=\"hljs-string\">\"shard_account\"</span>,<br>      <span class=\"hljs-string\">\"shard_app\"</span>,<br>      <span class=\"hljs-string\">\"shard_random\"</span>,<br>      <span class=\"hljs-string\">\"hook\"</span>,<br>      <span class=\"hljs-string\">\"__indexes\"</span>,<br>      <span class=\"hljs-string\">\"__meta\"</span>,<br>      <span class=\"hljs-string\">\"created_by\"</span>,<br>      <span class=\"hljs-string\">\"updated_by\"</span>,<br>      <span class=\"hljs-string\">\"inbuilt_class\"</span>,<br>      <span class=\"hljs-string\">\"tenant_id\"</span>,<br>      <span class=\"hljs-string\">\"isSystemUser\"</span>,<br>      <span class=\"hljs-string\">\"isApplicationUser\"</span>,<br>      <span class=\"hljs-string\">\"isNew\"</span>,<br>      <span class=\"hljs-string\">\"_shouldLean\"</span>,<br>      <span class=\"hljs-string\">\"_shouldFilter\"</span>,<br>      <span class=\"hljs-string\">\"_shouldSyncPostHooks\"</span>,<br>      <span class=\"hljs-string\">\"_skip_transformations\"</span>,<br>      <span class=\"hljs-string\">\"_filterOptions\"</span>,<br>      <span class=\"hljs-string\">\"options\"</span>,<br>      <span class=\"hljs-string\">\"_version\"</span>,<br>      <span class=\"hljs-string\">\"__v\"</span><br>    ]<br>  })<br>  <br>  done()<br>});",
      "isRoot": false,
      "uuid": "96dcdae6-a72d-41e9-9f55-a36a5fcebd3d",
      "parentUUID": "d33d91bb-9e9f-486a-a0e0-433d3dad050d",
      "skipped": false
    },
    {
      "title": "should be able to create an application as a system user",
      "fullTitle": "App creation should be able to create an application as a system user",
      "timedOut": false,
      "duration": 3662,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> appName = <span class=\"hljs-string\">\"Post App\"</span><br>      factories.create(<span class=\"hljs-string\">'Create_application'</span>, authtoken, {<br>          <span class=\"hljs-string\">\"name\"</span>: appName<br>      })<br>      .expect(<span class=\"hljs-number\">201</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> application = res.body.application<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Hurray! Application created successfully.'</span>)<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>        application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        application.name.should.be.equal(appName)<br>        application.created_at.should.be.equal(application.updated_at)<br>        application.owner_uid.should.be.equal(userUID)<br>        application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>        factories.create(<span class=\"hljs-string\">'Delete_application'</span>, authtoken, application.api_key)<br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>            <br>            done(err)<br>          })<br>      })",
      "isRoot": false,
      "uuid": "e3a116d3-4d5c-4a9b-9284-1b4f56f8a078",
      "parentUUID": "5a19d2e9-fa9b-4e52-9f01-7bd3d0b04341",
      "skipped": false
    },
    {
      "title": "should provide error message for invalid authtoken while creating application",
      "fullTitle": "App creation should provide error message for invalid authtoken while creating application",
      "timedOut": false,
      "duration": 1456,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> appName = <span class=\"hljs-string\">\"Post App\"</span><br>      factories.create(<span class=\"hljs-string\">'Create_application'</span>, <span class=\"hljs-string\">\"asdasd\"</span>, {<br>          <span class=\"hljs-string\">\"name\"</span>: appName<br>      })<br>      .expect(<span class=\"hljs-number\">401</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {}<br>        })<br>         done(err)<br>      })",
      "isRoot": false,
      "uuid": "f4330a6a-f969-488c-b515-1616eb2d1c58",
      "parentUUID": "5a19d2e9-fa9b-4e52-9f01-7bd3d0b04341",
      "skipped": false
    },
    {
      "title": "should be able to get all applications",
      "fullTitle": "Get applications should be able to get all applications",
      "timedOut": false,
      "duration": 1678,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br><br>    <span class=\"hljs-keyword\">var</span> application = res.body.applications[<span class=\"hljs-number\">0</span>]<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    application.api_key.should.be.equal(api_key)<br>    application.created_at.should.be.equal(application.updated_at)<br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br><br><br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "a740f7ff-cb62-43ee-83f7-ccd8d947c489",
      "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
      "skipped": false
    },
    {
      "title": "should be able to get count of applications created",
      "fullTitle": "Get applications should be able to get count of applications created",
      "timedOut": false,
      "duration": 1638,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-literal\">true</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(res.body).should.to.be.deep.equal([<span class=\"hljs-string\">'applications'</span>])<br>    res.body.applications.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "194a434f-f5b8-4ed5-8aa6-658f03d4f3e4",
      "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
      "skipped": false
    },
    {
      "title": "should be able to get an application using query",
      "fullTitle": "Get applications should be able to get an application using query",
      "timedOut": false,
      "duration": 1693,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"query\"</span>: {<br>      <span class=\"hljs-string\">\"api_key\"</span>: api_key<br>    }<br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br><br>    <span class=\"hljs-keyword\">var</span> application = res.body.applications[<span class=\"hljs-number\">0</span>]<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    application.api_key.should.be.equal(api_key)<br>    application.created_at.should.be.equal(application.updated_at)<br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br><br><br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "1778d53b-3772-4291-a20c-17e35f6464c7",
      "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
      "skipped": false
    },
    {
      "title": "should be able to provide an applications count in response",
      "fullTitle": "Get applications should be able to provide an applications count in response",
      "timedOut": false,
      "duration": 1577,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-literal\">true</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> response = res.body<br>    <br>    response.applications.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>    response.applications.should.not.equal(<span class=\"hljs-number\">0</span>)<br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "3f83ecf1-793e-45e8-9dbf-11c88d089595",
      "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
      "skipped": false
    },
    {
      "title": "should be able to get an application including application variables in response.",
      "fullTitle": "Get applications should be able to get an application including application variables in response.",
      "timedOut": false,
      "duration": 3158,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Update_app_settings'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"app_settings\"</span>: {<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"test_tool\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>      }<br>    }<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    <br>    factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>        <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>        <span class=\"hljs-string\">\"include_application_variables\"</span>: <span class=\"hljs-literal\">true</span><br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>        <span class=\"hljs-comment\">//res2.body.applications.length.should.be.equal(1)</span><br>        <br>        <span class=\"hljs-keyword\">var</span> application = R.last(res2.body.applications)<br>        <br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(application.application_variables).should.to.be.deep.equal([<span class=\"hljs-string\">'test_tool'</span>])<br>        <br>          <span class=\"hljs-comment\">// Data type assertion</span><br>        application.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        <br>        application.application_variables.test_tool.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br><br>        done(err)<br>      })<br>  })",
      "isRoot": false,
      "uuid": "7c3c6b13-bcc0-408b-aceb-fe3d579a8d13",
      "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
      "skipped": false
    },
    {
      "title": "should be able to skip number of applications while getting all apps",
      "fullTitle": "Get an applications skip/limit should be able to skip number of applications while getting all apps",
      "timedOut": false,
      "duration": 1492,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">3</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>    <span class=\"hljs-keyword\">var</span> application = res.body.applications<br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "c5e7fcb1-e96c-4e80-b095-ce365fceb49c",
      "parentUUID": "550eeb5f-6e6a-48f8-8e55-18ab9a0738ea",
      "skipped": false
    },
    {
      "title": "should be able to limit number of applications while getting all apps",
      "fullTitle": "Get an applications skip/limit should be able to limit number of applications while getting all apps",
      "timedOut": false,
      "duration": 1654,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">20000</span>)<br>factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-string\">\"2\"</span><br>  })<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.applications.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>    <br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "e2d4d38b-8014-4ab8-9cf5-fa49a6b5e75f",
      "parentUUID": "550eeb5f-6e6a-48f8-8e55-18ab9a0738ea",
      "skipped": false
    },
    {
      "title": "should provide error message for -ve skip/limit values while getting all apps",
      "fullTitle": "Get an applications skip/limit should provide error message for -ve skip/limit values while getting all apps",
      "timedOut": false,
      "duration": 1616,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>    <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>    <span class=\"hljs-string\">\"skip\"</span>: -<span class=\"hljs-number\">2</span>,<br>    <span class=\"hljs-string\">\"limit\"</span>: -<span class=\"hljs-number\">2</span><br>  })<br>.expect(<span class=\"hljs-number\">422</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  res.body.should.be.deep.equal({<br>    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Failed to fetch applications. Please try again with valid parameters.\"</span>,<br>    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">109</span>,<br>    <span class=\"hljs-string\">\"errors\"</span>: {<br>      <span class=\"hljs-string\">\"params\"</span>: [<br>        <span class=\"hljs-string\">\"has an invalid operation.\"</span><br>      ]<br>    }<br>  })<br>  <br>  done(err)<br>})",
      "isRoot": false,
      "uuid": "c5f95960-a339-4b14-928b-11885e1904ad",
      "parentUUID": "550eeb5f-6e6a-48f8-8e55-18ab9a0738ea",
      "skipped": false
    },
    {
      "title": "should be able to get field datatypes supported and the various options for these fields",
      "fullTitle": "Get valid field types for an application should be able to get field datatypes supported and the various options for these fields",
      "timedOut": false,
      "duration": 1635,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "api.get(config.endpoints.applications + config.endpoints.valid_field_types)<br>  .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>  .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>  .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"field_types\"</span>: [<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Text\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this datatype we can enter string literals for the field. Additionaly you can also assign blob data.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"isodate\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"ISODate\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this datatype you can assign either date, time or datetime values for the particular field.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"file\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"File\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"When you upload any asset in your built.io application, you can apply that upload's UID to this field. This will form a link between that asset and the object.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"boolean\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Boolean\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Use this datatype when you would like to add fields that can act as a switch for you. For Example: In an Invoice class, there can be a boolean field called, 'paid'\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"reference\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Reference\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"You can refer to objects of other classes in your application, when you use this field.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"group\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Group\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this field, you can group other fields into this one. An example usage can be, an address field, which is a composite of streeet address, city, state.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"link\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Link\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"Using this field you can save hyperlinks into your objects. The link field itself is composite of two fields, link title and link href.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Number\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"This datatype can be used to store numerical values.\"</span><br>        },<br>        {<br>          <span class=\"hljs-string\">\"field_type\"</span>: <span class=\"hljs-string\">\"mixed\"</span>,<br>          <span class=\"hljs-string\">\"label\"</span>: <span class=\"hljs-string\">\"Mixed\"</span>,<br>          <span class=\"hljs-string\">\"allow_length_validations\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_regex\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_field_metadata\"</span>: <span class=\"hljs-literal\">true</span>,<br>          <span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>          <span class=\"hljs-string\">\"explaination\"</span>: <span class=\"hljs-string\">\"This datatype helps you save a key-value store in your object.\"</span><br>        }<br>      ]<br>    })<br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "5d908b7b-e1d7-42a2-862f-5a8a5f4e2dc7",
      "parentUUID": "55410991-7f0a-4e08-8a55-11e3ba1c56aa",
      "skipped": false
    },
    {
      "title": "should be able to get application as an owner",
      "fullTitle": "Get app should be able to get application as an owner",
      "timedOut": false,
      "duration": 7745,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_application'</span>, authtoken)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> app = res.body.application<br>    factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, app.api_key)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> application = res1.body.application<br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>        application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>        application.user_uids.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>        <span class=\"hljs-comment\">// Value assertion</span><br>        application.api_key.should.be.equal(app.api_key)<br>          <span class=\"hljs-comment\">// bug</span><br>          <span class=\"hljs-comment\">//application.created_at.should.be.equal(application.updated_at)</span><br>        application.owner_uid.should.be.equal(userUID)<br>        application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>        factories.create(<span class=\"hljs-string\">'Delete_application'</span>, authtoken, app.api_key)<br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>            done(err)<br>          })<br><br>      })<br>  });",
      "isRoot": false,
      "uuid": "d20c6851-bdf3-48ad-9ed7-0bf8e3ad47c6",
      "parentUUID": "05cc5d88-4600-482c-b994-ad99838e0b59",
      "skipped": false
    },
    {
      "title": "should be able to get application as a collaborator without master_key in response",
      "fullTitle": "Get app should be able to get application as a collaborator without master_key in response",
      "timedOut": false,
      "duration": 1691,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken1, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    <span class=\"hljs-keyword\">var</span> application = res.body.application<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    application.user_uids.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    application.api_key.should.be.equal(api_key)<br>    <span class=\"hljs-comment\">//bug</span><br>    <span class=\"hljs-comment\">//application.created_at.should.be.equal(application.updated_at)</span><br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>    application.owner_uid.should.not.equal(application.user_uids[<span class=\"hljs-number\">1</span>])<br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "a9752796-8e2b-4e85-9d04-744dc8d84eaf",
      "parentUUID": "05cc5d88-4600-482c-b994-ad99838e0b59",
      "skipped": false
    },
    {
      "title": "should be able to update created application",
      "fullTitle": "Update app should be able to update created application",
      "timedOut": false,
      "duration": 1454,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Update_application'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>    <span class=\"hljs-keyword\">var</span> application = res.body.application<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>])<br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    <span class=\"hljs-comment\">// application.user_uids[0].length.should.be.a('string')</span><br>    <span class=\"hljs-comment\">// console.log(\"==\", application.user_uids)</span><br>    application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.master_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>    application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>    <span class=\"hljs-comment\">// Value assertion</span><br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Awesome! Application updated successfully.'</span>)<br>    application.name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>    application.api_key.should.be.equal(api_key)<br>    application.created_at.should.be.not.equal(application.updated_at)<br>    application.owner_uid.should.be.equal(userUID)<br>    application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "e886412a-8418-49ba-895f-828a6eb37fd7",
      "parentUUID": "e7444b60-0020-4df7-b396-5211e15b89e5",
      "skipped": false
    },
    {
      "title": "should not be able to update application as a collaborator",
      "fullTitle": "Update app should not be able to update application as a collaborator",
      "timedOut": false,
      "duration": 4911,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'Update_application'</span>, res.body.user.authtoken, api_key, {<br>                  <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated by collaborator\"</span><br>                })<br>                .expect(<span class=\"hljs-number\">422</span>) <span class=\"hljs-comment\">//need to fix in factory</span><br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.error_message.should.to.be.equal(<span class=\"hljs-string\">'Bummer. Access denied. It seems you are not the owner of the app.'</span>)<br>                  done(err)<br>                })<br>            })<br>        })",
      "isRoot": false,
      "uuid": "a7ae9096-250f-45e7-9871-afaff7eb9647",
      "parentUUID": "e7444b60-0020-4df7-b396-5211e15b89e5",
      "skipped": false
    },
    {
      "title": "should be able to delete careated application",
      "fullTitle": "Delete app should be able to delete careated application",
      "timedOut": false,
      "duration": 3767,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> appName = <span class=\"hljs-string\">\"Delete App\"</span><br>      factories.create(<span class=\"hljs-string\">'Create_application'</span>, authtoken, {<br>          <span class=\"hljs-string\">\"name\"</span>: appName<br>        })<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          <span class=\"hljs-keyword\">var</span> application = res.body.application<br>          res.body.notice.should.be.equal(<span class=\"hljs-string\">'Hurray! Application created successfully.'</span>)<br>          factories.create(<span class=\"hljs-string\">'Delete_application'</span>, authtoken, application.api_key)<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              res1.body.notice.should.be.equal(<span class=\"hljs-string\">'That worked. Application deleted successfully!'</span>)<br>              done(err)<br>            })<br>        })",
      "isRoot": false,
      "uuid": "9d39b075-b308-484a-af3d-ecfc025e9021",
      "parentUUID": "83ba1904-ea0a-486d-895c-8244b2945520",
      "skipped": false
    },
    {
      "title": "should not be able to delete application as a collaborator",
      "fullTitle": "Delete app should not be able to delete application as a collaborator",
      "timedOut": false,
      "duration": 4796,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>        <span class=\"hljs-string\">\"emails\"</span>: [<br>          res.body.user.email<br>        ]<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        factories.create(<span class=\"hljs-string\">'Delete_application'</span>, res.body.user.authtoken, api_key)<br>          .expect(<span class=\"hljs-number\">422</span>) <span class=\"hljs-comment\">//need to fix in factory</span><br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>            <span class=\"hljs-keyword\">var</span> response = res2.body<br>            response.error_message.should.to.be.equal(<span class=\"hljs-string\">'Bummer. Access denied. It seems you are not the owner of the app.'</span>)<br>            done(err)<br>          })<br>      })<br>  })",
      "isRoot": false,
      "uuid": "46d16ef0-de7b-4833-9a45-45aa1b33ba18",
      "parentUUID": "83ba1904-ea0a-486d-895c-8244b2945520",
      "skipped": false
    },
    {
      "title": "should be able to reset app master key as a owner",
      "fullTitle": "Reset app master key should be able to reset app master key as a owner",
      "timedOut": false,
      "duration": 2909,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.reset_master_key)<br>  .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>  .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>  .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>  .expect(<span class=\"hljs-number\">200</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'OK, we\\'ve generated a new master key for you.'</span>)<br>    factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> application = res1.body.application<br>        application.master_key.should.be.not.equal(master_key)<br>        done(err)<br>      })<br>  })",
      "isRoot": false,
      "uuid": "5d120b75-96d1-4a4c-89e1-30560489d4e4",
      "parentUUID": "cbae1fe4-af1a-4de0-9e80-1916b43b2520",
      "skipped": false
    },
    {
      "title": "should not be able to reset app master key as a collaborator",
      "fullTitle": "Reset app master key should not be able to reset app master key as a collaborator",
      "timedOut": false,
      "duration": 1686,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.reset_master_key)<br>  .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>  .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken3)<br>  .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>  .expect(<span class=\"hljs-number\">422</span>)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    res.body.should.be.deep.equal({<br>      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Access denied. It seems you are not the owner of the app.\"</span>,<br>      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">133</span>,<br>      <span class=\"hljs-string\">\"errors\"</span>: {}<br>    })          <br>    done(err)<br>    <br>  })",
      "isRoot": false,
      "uuid": "e515b609-4248-459d-af7a-94935af3ea99",
      "parentUUID": "cbae1fe4-af1a-4de0-9e80-1916b43b2520",
      "skipped": false
    },
    {
      "title": "should be able to get application settings",
      "fullTitle": "App settings should be able to get application settings",
      "timedOut": false,
      "duration": 1436,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_app_settings'</span>, authtoken, api_key)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>  <span class=\"hljs-keyword\">var</span> settings = res.body.app_settings<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>  <span class=\"hljs-built_in\">Object</span>.keys(settings).should.to.be.deep.equal([<span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>, <span class=\"hljs-string\">'smtp_settings'</span>, <span class=\"hljs-string\">'login_schemes'</span>, <span class=\"hljs-string\">'upload_type_restriction'</span>, <span class=\"hljs-string\">'restricted_profile_update'</span>, <span class=\"hljs-string\">'hide_email'</span>, <span class=\"hljs-string\">'allow_client_notifications'</span>, <span class=\"hljs-string\">'active_user_threshold'</span>, <span class=\"hljs-string\">'auto_create_tenants'</span>, <span class=\"hljs-string\">'activation_template'</span>, <span class=\"hljs-string\">'welcome_template'</span>, <span class=\"hljs-string\">'forgot_password_template'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.login_schemes).should.to.be.deep.equal([<span class=\"hljs-string\">'google'</span>, <span class=\"hljs-string\">'facebook'</span>, <span class=\"hljs-string\">'twitter'</span>, <span class=\"hljs-string\">'tibbr'</span>, <span class=\"hljs-string\">'traditional'</span>, <span class=\"hljs-string\">'anyauth'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.upload_type_restriction).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'list'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.restricted_profile_update).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'keys'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.activation_template).should.to.be.deep.equal([<span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.welcome_template).should.to.be.deep.equal([<span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(settings.forgot_password_template).should.to.be.deep.equal([<span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'template'</span>])<br><br>  <span class=\"hljs-comment\">// Data type assertion</span><br>  settings.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.login_schemes.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.upload_type_restriction.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.restricted_profile_update.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.hide_email.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.allow_client_notifications.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.active_user_threshold.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>  settings.auto_create_tenants.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.activation_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.welcome_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.forgot_password_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>  settings.login_schemes.google.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.facebook.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.twitter.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.tibbr.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.traditional.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.login_schemes.anyauth.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.upload_type_restriction.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.upload_type_restriction.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.upload_type_restriction.list.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  settings.restricted_profile_update.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.restricted_profile_update.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.restricted_profile_update.keys.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>  settings.activation_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.activation_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.activation_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.activation_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.welcome_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.welcome_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.welcome_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.welcome_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>  settings.forgot_password_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.forgot_password_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>  settings.forgot_password_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>  <span class=\"hljs-comment\">// Value assertion</span><br>  settings.login_schemes.google.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.facebook.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.twitter.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.tibbr.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.traditional.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.login_schemes.anyauth.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.upload_type_restriction.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.upload_type_restriction.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.upload_type_restriction.list.should.be.deep.equal([])<br>  settings.restricted_profile_update.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.restricted_profile_update.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.restricted_profile_update.keys.should.be.deep.equal([])<br><br>  settings.hide_email.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.allow_client_notifications.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>  settings.active_user_threshold.should.be.equal(<span class=\"hljs-number\">15</span>)<br>  settings.auto_create_tenants.should.be.equal(<span class=\"hljs-literal\">false</span>)<br><br>  settings.activation_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>  settings.activation_template.subject.should.be.equal(<span class=\"hljs-string\">'Activate Your Account'</span>)<br>  settings.activation_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;Hi!&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Thank you for creating an account!\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Please &lt;a href=\"{{confirm_link}}\"&gt;confirm&lt;/a&gt; your account to continue.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\nIf you have any problems, please feel free to contact us.\\n&lt;/p&gt;\\n\\n&lt;br/&gt;\\n\\n&lt;p&gt;\\n  Cheers.\\n&lt;/p&gt;'</span>)<br>  settings.activation_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.welcome_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>  settings.welcome_template.subject.should.be.equal(<span class=\"hljs-string\">'Welcome!'</span>)<br>  settings.welcome_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;\\n  Hi!\\n&lt;/p&gt;\\n&lt;p&gt;\\n  Welcome to {{app_name}}.\\n  &lt;br/&gt;\\n  &lt;br/&gt;\\n  Your registration has been confirmed successfully.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Cheers\\n&lt;/p&gt;'</span>)<br>  settings.welcome_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>  settings.forgot_password_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>  settings.forgot_password_template.subject.should.be.equal(<span class=\"hljs-string\">'Reset Your Password'</span>)<br>  settings.forgot_password_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;Hi!&lt;/p&gt;\\n\\n&lt;p&gt;\\n  You (or someone else) have requested to reset your password for {{app_name}}.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  If you follow the link below you will be able to personally reset your password\\n&lt;/p&gt;\\n\\n&lt;br /&gt;\\n{{reset_password_link}}\\n\\n&lt;p&gt;Cheers&lt;/p&gt;'</span>)<br>  done(err)<br>})",
      "isRoot": false,
      "uuid": "e3495176-db92-4fae-a593-865be8614cdb",
      "parentUUID": "97c07ea4-479d-4e74-bc41-a221a780f95e",
      "skipped": false
    },
    {
      "title": "should be able to update application settings",
      "fullTitle": "App settings should be able to update application settings",
      "timedOut": false,
      "duration": 1614,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Update_app_settings'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"app_settings\"</span>: {<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"test_tool\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>      },<br>      <span class=\"hljs-string\">\"discrete_variables\"</span>: {<br>        <span class=\"hljs-string\">\"supertest\"</span>: <span class=\"hljs-string\">\"is a nodejs test tool\"</span><br>      },<br>      <span class=\"hljs-string\">\"activation_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"activation_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail activation template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"welcome_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"welcome_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail welcome template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"forgot_password_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"forgot_password_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"forgot password template\"</span><br>      },<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"testing_tool\"</span>: <span class=\"hljs-string\">\"using supertest and mocha\"</span><br>      },<br>      <span class=\"hljs-string\">\"allow_client_notifications\"</span>: <span class=\"hljs-string\">\"true\"</span>,<br>      <span class=\"hljs-string\">\"active_user_threshold\"</span>: <span class=\"hljs-string\">\"20\"</span>,<br>      <span class=\"hljs-string\">\"auto_create_tenants\"</span>: <span class=\"hljs-string\">\"false\"</span><br>    }<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> settings = res.body.app_settings<br>    <br>    res.body.notice.should.be.equal(<span class=\"hljs-string\">'Awesome! The application settings were updated successfully.'</span>)<br>    <span class=\"hljs-comment\">// Keys assertion</span><br>    <span class=\"hljs-built_in\">Object</span>.keys(settings).should.to.be.deep.equal([<span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>, <span class=\"hljs-string\">'smtp_settings'</span>, <span class=\"hljs-string\">'login_schemes'</span>, <span class=\"hljs-string\">'upload_type_restriction'</span>, <span class=\"hljs-string\">'restricted_profile_update'</span>, <span class=\"hljs-string\">'hide_email'</span>, <span class=\"hljs-string\">'allow_client_notifications'</span>, <span class=\"hljs-string\">'active_user_threshold'</span>, <span class=\"hljs-string\">'auto_create_tenants'</span>, <span class=\"hljs-string\">'activation_template'</span>, <span class=\"hljs-string\">'welcome_template'</span>, <span class=\"hljs-string\">'forgot_password_template'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.login_schemes).should.to.be.deep.equal([<span class=\"hljs-string\">'google'</span>, <span class=\"hljs-string\">'facebook'</span>, <span class=\"hljs-string\">'twitter'</span>, <span class=\"hljs-string\">'tibbr'</span>, <span class=\"hljs-string\">'traditional'</span>, <span class=\"hljs-string\">'anyauth'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.upload_type_restriction).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'list'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.restricted_profile_update).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'keys'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.activation_template).should.to.be.deep.equal([<span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.welcome_template).should.to.be.deep.equal([<span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'template'</span>, <span class=\"hljs-string\">'use'</span>])<br>    <span class=\"hljs-built_in\">Object</span>.keys(settings.forgot_password_template).should.to.be.deep.equal([<span class=\"hljs-string\">'subject'</span>, <span class=\"hljs-string\">'reply_to'</span>, <span class=\"hljs-string\">'template'</span>])<br><br>    <span class=\"hljs-comment\">// Data type assertion</span><br>    settings.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.login_schemes.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.upload_type_restriction.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.restricted_profile_update.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.hide_email.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.allow_client_notifications.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.active_user_threshold.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>    settings.auto_create_tenants.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.activation_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.welcome_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.forgot_password_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>    settings.login_schemes.google.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.facebook.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.twitter.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.tibbr.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.traditional.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.login_schemes.anyauth.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.upload_type_restriction.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.upload_type_restriction.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.upload_type_restriction.list.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    settings.restricted_profile_update.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.restricted_profile_update.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.restricted_profile_update.keys.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>    settings.activation_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.activation_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.activation_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.activation_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.welcome_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.welcome_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.welcome_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.welcome_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>    settings.forgot_password_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.forgot_password_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>    settings.forgot_password_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>    <span class=\"hljs-comment\">// Value assertion</span><br>    settings.login_schemes.google.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.facebook.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.twitter.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.tibbr.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.traditional.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.login_schemes.anyauth.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.upload_type_restriction.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.upload_type_restriction.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.upload_type_restriction.list.should.be.deep.equal([])<br>    settings.restricted_profile_update.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.restricted_profile_update.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.restricted_profile_update.keys.should.be.deep.equal([])<br>    settings.hide_email.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.allow_client_notifications.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.active_user_threshold.should.be.equal(<span class=\"hljs-number\">20</span>)<br>    settings.auto_create_tenants.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>    settings.activation_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>    settings.activation_template.subject.should.be.equal(<span class=\"hljs-string\">'activation_template'</span>)<br>    settings.activation_template.template.should.be.equal(<span class=\"hljs-string\">'the mail activation template'</span>)<br>    settings.activation_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.welcome_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>    settings.welcome_template.subject.should.be.equal(<span class=\"hljs-string\">'welcome_template'</span>)<br>    settings.welcome_template.template.should.be.equal(<span class=\"hljs-string\">'the mail welcome template'</span>)<br>    settings.welcome_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>    settings.forgot_password_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>    settings.forgot_password_template.subject.should.be.equal(<span class=\"hljs-string\">'forgot_password_template'</span>)<br>    settings.forgot_password_template.template.should.be.equal(<span class=\"hljs-string\">'forgot password template'</span>)<br>    settings.application_variables.testing_tool.should.be.equal(<span class=\"hljs-string\">'using supertest and mocha'</span>)<br>    settings.discrete_variables.supertest.should.be.equal(<span class=\"hljs-string\">'is a nodejs test tool'</span>)<br>    done(err)<br>  })",
      "isRoot": false,
      "uuid": "42003b97-2f9b-43d5-8ff2-8b1bae213161",
      "parentUUID": "97c07ea4-479d-4e74-bc41-a221a780f95e",
      "skipped": false
    },
    {
      "title": "should be able to reset application settings",
      "fullTitle": "App settings should be able to reset application settings",
      "timedOut": false,
      "duration": 3182,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Update_app_settings'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"app_settings\"</span>: {<br>      <span class=\"hljs-string\">\"activation_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"activation_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail activation template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"welcome_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"welcome_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"the mail welcome template\"</span>,<br>        <span class=\"hljs-string\">\"use\"</span>: <span class=\"hljs-string\">\"true\"</span><br>      },<br>      <span class=\"hljs-string\">\"forgot_password_template\"</span>: {<br>        <span class=\"hljs-string\">\"subject\"</span>: <span class=\"hljs-string\">\"forgot_password_template\"</span>,<br>        <span class=\"hljs-string\">\"reply_to\"</span>: <span class=\"hljs-string\">\"swapnil.shirke@raweng.com\"</span>,<br>        <span class=\"hljs-string\">\"template\"</span>: <span class=\"hljs-string\">\"forgot password template\"</span><br>      },<br>      <span class=\"hljs-string\">\"application_variables\"</span>: {<br>        <span class=\"hljs-string\">\"testing_tool\"</span>: <span class=\"hljs-string\">\"using 'supertest and mocha'\"</span><br>      },<br>      <span class=\"hljs-string\">\"allow_client_notifications\"</span>: <span class=\"hljs-string\">\"true\"</span>,<br>      <span class=\"hljs-string\">\"active_user_threshold\"</span>: <span class=\"hljs-string\">\"20\"</span>,<br>      <span class=\"hljs-string\">\"auto_create_tenants\"</span>: <span class=\"hljs-string\">\"false\"</span><br>    }<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    factories.create(<span class=\"hljs-string\">'reset_app_settings'</span>, authtoken, api_key, {<br>        <span class=\"hljs-string\">\"scope\"</span>: {<br>          <span class=\"hljs-string\">\"activation_template\"</span>: []<br>        }<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-keyword\">var</span> settings = res.body.app_settings<br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'Awesome! The application settings were updated successfully.'</span>)<br>        <br>        <span class=\"hljs-comment\">// Keys assertion</span><br>        <span class=\"hljs-built_in\">Object</span>.keys(settings).should.to.be.deep.equal([<span class=\"hljs-string\">'application_variables'</span>, <span class=\"hljs-string\">'discrete_variables'</span>, <span class=\"hljs-string\">'smtp_settings'</span>, <span class=\"hljs-string\">'login_schemes'</span>, <span class=\"hljs-string\">'upload_type_restriction'</span>, <span class=\"hljs-string\">'restricted_profile_update'</span>, <span class=\"hljs-string\">'hide_email'</span>, <span class=\"hljs-string\">'allow_client_notifications'</span>, <span class=\"hljs-string\">'active_user_threshold'</span>, <span class=\"hljs-string\">'auto_create_tenants'</span>, <span class=\"hljs-string\">'activation_template'</span>, <span class=\"hljs-string\">'welcome_template'</span>, <span class=\"hljs-string\">'forgot_password_template'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(settings.login_schemes).should.to.be.deep.equal([<span class=\"hljs-string\">'google'</span>, <span class=\"hljs-string\">'facebook'</span>, <span class=\"hljs-string\">'twitter'</span>, <span class=\"hljs-string\">'tibbr'</span>, <span class=\"hljs-string\">'traditional'</span>, <span class=\"hljs-string\">'anyauth'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(settings.upload_type_restriction).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'list'</span>])<br>        <span class=\"hljs-built_in\">Object</span>.keys(settings.restricted_profile_update).should.to.be.deep.equal([<span class=\"hljs-string\">'enabled'</span>, <span class=\"hljs-string\">'whitelist'</span>, <span class=\"hljs-string\">'keys'</span>])<br>        <span class=\"hljs-comment\">// order is not static need to change</span><br>        <span class=\"hljs-comment\">// Object.keys(settings.activation_template).should.to.be.deep.equal(['subject', 'reply_to', 'template', 'use'])</span><br>        <span class=\"hljs-comment\">// Object.keys(settings.welcome_template).should.to.be.equal(['subject', 'template', 'use', 'reply_to'])</span><br>        <span class=\"hljs-comment\">// Object.keys(settings.forgot_password_template).should.to.be.equal(['reply_to', 'subject', 'template'])</span><br><br>        <span class=\"hljs-comment\">// Data type assertion</span><br>        settings.application_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.discrete_variables.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.login_schemes.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.upload_type_restriction.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.restricted_profile_update.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.hide_email.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.allow_client_notifications.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.active_user_threshold.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>        settings.auto_create_tenants.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.activation_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.welcome_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.forgot_password_template.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>        settings.login_schemes.google.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.facebook.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.twitter.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.tibbr.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.traditional.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.login_schemes.anyauth.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.upload_type_restriction.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.upload_type_restriction.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.upload_type_restriction.list.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        settings.restricted_profile_update.enabled.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.restricted_profile_update.whitelist.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.restricted_profile_update.keys.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>        settings.activation_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.activation_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.activation_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.activation_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.welcome_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.welcome_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.welcome_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.welcome_template.use.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>        settings.forgot_password_template.reply_to.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.forgot_password_template.subject.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>        settings.forgot_password_template.template.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>        <span class=\"hljs-comment\">// Value assertion</span><br>        settings.login_schemes.google.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.facebook.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.twitter.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.tibbr.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.traditional.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.login_schemes.anyauth.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.upload_type_restriction.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        settings.upload_type_restriction.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.upload_type_restriction.list.should.be.deep.equal([])<br>        settings.restricted_profile_update.enabled.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        settings.restricted_profile_update.whitelist.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.restricted_profile_update.keys.should.be.deep.equal([])<br><br>        settings.hide_email.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>        settings.allow_client_notifications.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.active_user_threshold.should.be.equal(<span class=\"hljs-number\">20</span>)<br>        settings.auto_create_tenants.should.be.equal(<span class=\"hljs-literal\">false</span>)<br><br>        settings.activation_template.reply_to.should.be.equal(<span class=\"hljs-string\">'noreply@built.io'</span>)<br>        settings.activation_template.subject.should.be.equal(<span class=\"hljs-string\">'Activate Your Account'</span>)<br>        settings.activation_template.template.should.be.equal(<span class=\"hljs-string\">'&lt;p&gt;Hi!&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Thank you for creating an account!\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\n  Please &lt;a href=\"{{confirm_link}}\"&gt;confirm&lt;/a&gt; your account to continue.\\n&lt;/p&gt;\\n\\n&lt;p&gt;\\nIf you have any problems, please feel free to contact us.\\n&lt;/p&gt;\\n\\n&lt;br/&gt;\\n\\n&lt;p&gt;\\n  Cheers.\\n&lt;/p&gt;'</span>)<br>        settings.activation_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.welcome_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>        settings.welcome_template.subject.should.be.equal(<span class=\"hljs-string\">'welcome_template'</span>)<br>        settings.welcome_template.template.should.be.equal(<span class=\"hljs-string\">'the mail welcome template'</span>)<br>        settings.welcome_template.use.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>        settings.forgot_password_template.reply_to.should.be.equal(<span class=\"hljs-string\">'swapnil.shirke@raweng.com'</span>)<br>        settings.forgot_password_template.subject.should.be.equal(<span class=\"hljs-string\">'forgot_password_template'</span>)<br>        settings.forgot_password_template.template.should.be.equal(<span class=\"hljs-string\">'forgot password template'</span>)<br>        done(err)<br>      });<br>  });",
      "isRoot": false,
      "uuid": "87af0f45-290d-4e7b-9a66-142d08be6d35",
      "parentUUID": "97c07ea4-479d-4e74-bc41-a221a780f95e",
      "skipped": false
    },
    {
      "title": "should be able to get unaccepted invitations for an application",
      "fullTitle": "Collaborators invite and unaccepted_invitations should be able to get unaccepted invitations for an application",
      "timedOut": false,
      "duration": 1594,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "api.get(config.endpoints.applications + <span class=\"hljs-string\">\"/\"</span> + api_key + config.endpoints.unaccepted_invitations)<br>        .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>        .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>        .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>        .expect(<span class=\"hljs-number\">200</span>)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>          <span class=\"hljs-keyword\">var</span> response = res1.body<br>          response.emails.should.be.deep.equal([<br>            <span class=\"hljs-string\">\"test1user@mailinator.com\"</span>,<br>            <span class=\"hljs-string\">\"test2user@mailinator.com\"</span><br>          ])<br>          done(err)<br>        })",
      "isRoot": false,
      "uuid": "9f3e649e-5eb5-46e5-9c59-53c7dd8c406c",
      "parentUUID": "ee0922bb-d23b-4069-86af-be83617d5015",
      "skipped": false
    },
    {
      "title": "should be able to unshare application from collaborator as a system user",
      "fullTitle": "App unshare should be able to unshare application from collaborator as a system user",
      "timedOut": false,
      "duration": 15759,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, authtoken, api_key, {<br>                  <span class=\"hljs-string\">\"unshare_from\"</span>: res.body.user.email<br>                })<br>                .expect(<span class=\"hljs-number\">200</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.notice.should.to.be.equal(<span class=\"hljs-string\">'The application has been successfully unshared.'</span>)<br>                  done(err)<br>                })<br>            })<br>        })",
      "isRoot": false,
      "uuid": "5181c89b-2f1c-4975-80ca-1ba8356c89c2",
      "parentUUID": "f18c8ac3-f801-45bb-b050-6adfb4dd7f0b",
      "skipped": false
    },
    {
      "title": "should be able to unshare collaborator application as a collaborator",
      "fullTitle": "App unshare should be able to unshare collaborator application as a collaborator",
      "timedOut": false,
      "duration": 8305,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                .expect(<span class=\"hljs-number\">200</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.notice.should.to.be.equal(<span class=\"hljs-string\">'The application has been successfully unshared.'</span>)<br>                  done(err)<br>                })<br>            })<br>        })",
      "isRoot": false,
      "uuid": "c6cf4df3-14fd-4c51-8d37-77e4ca4c8125",
      "parentUUID": "f18c8ac3-f801-45bb-b050-6adfb4dd7f0b",
      "skipped": false
    },
    {
      "title": "should provide error message when collaborators email is invalid",
      "fullTitle": "App unshare should provide error message when collaborators email is invalid",
      "timedOut": false,
      "duration": 10348,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                <span class=\"hljs-string\">\"swapnil@mailinator.com\"</span><br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                .expect(<span class=\"hljs-number\">422</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res3</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res3.body<br>                  <br>                  response.should.to.be.deep.equal({<br>                    <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Access denied. You need to be a collaborator before accessing this app.\"</span>,<br>                    <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">133</span>,<br>                    <span class=\"hljs-string\">\"errors\"</span>: {}<br>                  })<br>                  done(err)<br>                })<br>            })<br>        })",
      "isRoot": false,
      "uuid": "a9e389ea-7eaa-4187-9844-ca380cfac5ff",
      "parentUUID": "f18c8ac3-f801-45bb-b050-6adfb4dd7f0b",
      "skipped": false
    },
    {
      "title": "should provide error message when user is not a collaborator for given application",
      "fullTitle": "App unshare should provide error message when user is not a collaborator for given application",
      "timedOut": false,
      "duration": 9527,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>        .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>          factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>              <span class=\"hljs-string\">\"emails\"</span>: [<br>                res.body.user.email<br>              ]<br>            })<br>            .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>              factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                .expect(<span class=\"hljs-number\">200</span>)<br>                .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>                  <span class=\"hljs-keyword\">var</span> response = res2.body<br>                  response.notice.should.to.be.equal(<span class=\"hljs-string\">'The application has been successfully unshared.'</span>)<br>                  factories.create(<span class=\"hljs-string\">'unshare_application'</span>, res.body.user.authtoken, api_key)<br>                  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>                    <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>                    res.body.should.be.deep.equal({<br>                      <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Access denied. You need to be a collaborator before accessing this app.\"</span>,<br>                      <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">133</span>,<br>                      <span class=\"hljs-string\">\"errors\"</span>: {}<br>                    })<br>                    done(err)<br>                  })<br>                })<br>            })<br>        })",
      "isRoot": false,
      "uuid": "0d84b73c-e572-4fe7-8bb8-ab1a9aca8557",
      "parentUUID": "f18c8ac3-f801-45bb-b050-6adfb4dd7f0b",
      "skipped": false
    },
    {
      "title": "should be able to transfer app ownership to registered system users",
      "fullTitle": "App Transfer/Accept Ownership should be able to transfer app ownership to registered system users",
      "timedOut": false,
      "duration": 6803,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: email<br>      })<br>      .expect(<span class=\"hljs-number\">200</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.notice.should.be.equal(<span class=\"hljs-string\">'An email has been sent to '</span>+ config.user2.email +<span class=\"hljs-string\">' about transferring ownership of \\''</span> + res1.body.application.name + <span class=\"hljs-string\">'\\'. The ownership will be transferred after the other user accepts ownership.'</span>)<br>        done(err)<br>      })<br>  })",
      "isRoot": false,
      "uuid": "9d621747-3611-4bf3-a303-e81e9693eb4f",
      "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
      "skipped": false
    },
    {
      "title": "should give error for transfer app ownership to non-registered system users",
      "fullTitle": "App Transfer/Accept Ownership should give error for transfer app ownership to non-registered system users",
      "timedOut": false,
      "duration": 3240,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_application'</span>, authtoken, api_key)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>    api.post(config.endpoints.applications + <span class=\"hljs-string\">'/'</span> + api_key + config.endpoints.transfer_ownership)<br>      .set(<span class=\"hljs-string\">'web_ui_api_key'</span>, config.web_ui_api_key)<br>      .set(<span class=\"hljs-string\">'authtoken'</span>, authtoken)<br>      .set(<span class=\"hljs-string\">'application_api_key'</span>, api_key)<br>      .send({<br>        <span class=\"hljs-string\">\"transfer_to\"</span>: <span class=\"hljs-string\">\"non_registered@mailinator.com\"</span><br>      })<br>      .expect(<span class=\"hljs-number\">422</span>)<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>        <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>        res.body.should.be.deep.equal({<br>          <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Sorry about that. non_registered@mailinator.com is not registered in Built.io Backend. Create an account first.\"</span>,<br>          <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">179</span>,<br>          <span class=\"hljs-string\">\"errors\"</span>: {}<br>        })<br>        done(err)<br>      })<br>  })",
      "isRoot": false,
      "uuid": "23c28818-b20a-4fe9-bc9b-83c65d48b176",
      "parentUUID": "cc268e60-f9a0-4701-8789-e3b1f5db61f9",
      "skipped": false
    },
    {
      "title": "should be able to create application user role",
      "fullTitle": "Application user roles should be able to create application user role",
      "timedOut": false,
      "duration": 4579,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_app_user_role'</span>, appUser1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"createRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\trole1 = res.body.object<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role1).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole1.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole1.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole1.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole1.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole1.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole1.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole1._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole1.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole1.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole1.name.should.be.equal(<span class=\"hljs-string\">\"createRole\"</span>)<br>\trole1.users.should.be.deep.equal([])<br>\trole1.roles.should.be.deep.equal([])<br>\trole1.app_user_object_uid.should.be.equal(appUser1.uid)<br>\texpect(role1.created_by).to.be.null<br>\texpect(role1.created_by).to.be.null<br>\trole1.created_at.should.be.equal(role1.updated_at)<br>\trole1._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'delete_role'</span>, appUser1.authtoken, app.api_key, role1.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err.trace)<br>})",
      "isRoot": false,
      "uuid": "4bf4aa04-790a-49be-8bcd-4bfdfe311dc3",
      "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
      "skipped": false
    },
    {
      "title": "should provide error for invalid role field",
      "fullTitle": "Application user roles should provide error for invalid role field",
      "timedOut": false,
      "duration": 1509,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">45000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_app_user_role'</span>, appUser1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-comment\">// \"name\": \"createRole\",</span><br>\t\t<span class=\"hljs-string\">\"users\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "779a2ae6-d753-44dc-a05b-4640e32d1022",
      "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
      "skipped": false
    },
    {
      "title": "should be able to get all application user roles created",
      "fullTitle": "Application user roles should be able to get all application user roles created",
      "timedOut": false,
      "duration": 1680,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_app_user_roles'</span>, appUser2.authtoken, app.api_key))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\trole2 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role2).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'users'</span>,<span class=\"hljs-string\">'roles'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole2.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole2.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole2.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole2.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole2.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// role2.created_by.should.be.a('string')</span><br>\t<span class=\"hljs-comment\">// role2.updated_by.should.be.a('string')</span><br>\trole2.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole2.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole2._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole2.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole2.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole2.name.should.be.equal(roleName)<br>\trole2.users.should.be.deep.equal([])<br>\trole2.roles.should.be.deep.equal([])<br>\trole2.app_user_object_uid.should.be.equal(appUser1.uid)<br>\texpect(role2.created_by).to.be.null<br>\texpect(role2.created_by).to.be.null<br>\trole2.created_at.should.be.equal(role2.updated_at)<br>\trole2._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "24879fcc-0110-481a-9d57-2fb1dff870f8",
      "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
      "skipped": false
    },
    {
      "title": "should be able to get single application user role",
      "fullTitle": "Application user roles should be able to get single application user role",
      "timedOut": false,
      "duration": 1473,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_single_role'</span>, appUser1.authtoken, app.api_key, roleUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t<br>\trole3 = res.body.object<br>\t<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role3).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole3.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole3.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole3.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole3.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole3.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole3.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole3._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole3.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole3.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole3.name.should.be.equal(roleName)<br>\trole3.users.should.be.deep.equal([])<br>\trole3.roles.should.be.deep.equal([])<br>\trole3.app_user_object_uid.should.be.equal(appUser1.uid)<br>\texpect(role3.created_by).to.be.null<br>\texpect(role3.created_by).to.be.null<br>\trole3.created_at.should.be.equal(role3.updated_at)<br>\trole3._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "9cf43352-6308-4d77-96d2-1fbe21a0bfce",
      "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
      "skipped": false
    },
    {
      "title": "should be able to update application user role",
      "fullTitle": "Application user roles should be able to update application user role",
      "timedOut": false,
      "duration": 1526,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_app_user_role'</span>, sys_user.authtoken, app.api_key, roleUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updateRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [appUser2.uid],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [roleUid]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\trole4 = res.body.object<br>\t<span class=\"hljs-comment\">//Keys assertion</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(role4).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'users'</span>,<span class=\"hljs-string\">'roles'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-comment\">// Data type assertion</span><br>\trole4.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\trole4.__loc.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// role4.created_by.should.be.a('string')</span><br>\trole4.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\trole4.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\trole4._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\trole4.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\trole4.users.should.be.deep.equal([appUser2.uid])<br>\trole4.roles.should.be.deep.equal([roleUid])<br>\t<span class=\"hljs-comment\">// Value assertion</span><br>\trole4.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\trole4.name.should.be.equal(<span class=\"hljs-string\">\"updateRole\"</span>)<br>\t<span class=\"hljs-comment\">// role4.users.should.be.equal('array')</span><br>\t<span class=\"hljs-comment\">// role4.roles.should.be.equal('array')</span><br>\trole4.app_user_object_uid.should.be.equal(appUser1.uid)<br>\t<br>\t<span class=\"hljs-comment\">// expect(role4.created_by).should.to.be.null</span><br>\t<br>\trole4.updated_by.should.be.equal(sys_user.uid)<br>\trole4.created_at.should.not.equal(role4.updated_at)<br>\trole4._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "849f2b54-4d28-45d2-9914-a47cb87778ea",
      "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
      "skipped": false
    },
    {
      "title": "should proide error message for invalid role uid while updating role",
      "fullTitle": "Application user roles should proide error message for invalid role uid while updating role",
      "timedOut": false,
      "duration": 1517,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_app_user_role'</span>, sys_user.authtoken, app.api_key, <span class=\"hljs-string\">\"asd\"</span>, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updateRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [appUser2.uid],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [roleUid]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "fccdcc87-629d-4f3e-ae36-7d3234da9b8d",
      "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
      "skipped": false
    },
    {
      "title": "should be able to delete application user role created",
      "fullTitle": "Application user roles should be able to delete application user role created",
      "timedOut": false,
      "duration": 3325,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_app_user_role'</span>, appUser1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t<span class=\"hljs-string\">\"__loc\"</span>: [-<span class=\"hljs-number\">122.4431164995849</span>, <span class=\"hljs-number\">37.74045209829323</span>],<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"createRole\"</span>,<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: [R.bltRandom(<span class=\"hljs-number\">8</span>), R.bltRandom(<span class=\"hljs-number\">8</span>)]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\trole5 = res.body.object<br>\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t<span class=\"hljs-comment\">// Object.keys(role5).should.to.be.deep.equal(['published', '__loc', 'name', 'users', 'roles', 'app_user_object_uid', 'created_at', 'updated_at', 'uid', 'ACL', '_version', 'created_by', 'updated_by', 'tags'])</span><br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'delete_role'</span>, appUser1.authtoken, app.api_key, role5.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "886217c1-c51f-40f3-8ad3-7b3047364502",
      "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
      "skipped": false
    },
    {
      "title": "should proide error message for invalid role uid while deleting role",
      "fullTitle": "Application user roles should proide error message for invalid role uid while deleting role",
      "timedOut": false,
      "duration": 2613,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'delete_role'</span>, appUser1.authtoken, app.api_key, <span class=\"hljs-string\">\"asd\"</span>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "9e6dba53-ac31-4f56-a031-e80c9b624937",
      "parentUUID": "1b9fd16d-3c3d-4c13-b8f8-10ba57784bae",
      "skipped": false
    },
    {
      "title": "should be able to get all classes present",
      "fullTitle": "Get classes(inbuilt) should be able to get all classes present",
      "timedOut": false,
      "duration": 1720,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> app_user = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> app_user_role = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> installation_data = res.body.classes[<span class=\"hljs-number\">2</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> upload_class = res.body.classes[<span class=\"hljs-number\">3</span>]<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user_role).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation_data).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<br>\t\t<span class=\"hljs-comment\">//console.log(app_user.schema[0])</span><br>\t\t<span class=\"hljs-comment\">// Keys assertion schema</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(app_user_role.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation_data.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>])<br>\t\t<span class=\"hljs-comment\">// Object.keys(upload_class.schema[0]).should.to.be.deep.equal(['display_name', 'uid', 'data_type', 'field_metadata', 'multiple', 'mandatory'])</span><br><br><br>\t\tapp_user.schema.length.should.be.equal(<span class=\"hljs-number\">9</span>)<br>\t\tapp_user_role.schema.length.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\tinstallation_data.schema.length.should.be.equal(<span class=\"hljs-number\">7</span>)<br>\t\t<span class=\"hljs-comment\">// upload_class.schema.length.should.be.equal(3)</span><br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\tapp_user.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tapp_user.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user_role.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tapp_user_role.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user_role.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tapp_user_role.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tapp_user_role.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user_role.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tapp_user_role.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tinstallation_data.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tinstallation_data.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tinstallation_data.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tinstallation_data.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tinstallation_data.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tinstallation_data.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tinstallation_data.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t<span class=\"hljs-comment\">// upload_class.created_at.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.updated_at.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.title.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.uid.should.be.a('string')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.inbuilt_class.should.be.a('boolean')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.schema.should.be.a('array')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.maintain_revisions.should.be.a('boolean')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.abilities.should.be.a('object')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.DEFAULT_ACL.should.be.a('object')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.SYS_ACL.should.be.a('object')</span><br><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tapp_user.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\tapp_user.title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\tapp_user.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tapp_user_role.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\tapp_user_role.title.should.be.equal(<span class=\"hljs-string\">'Application User Role'</span>)<br>\t\tapp_user_role.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tinstallation_data.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\tinstallation_data.title.should.be.equal(<span class=\"hljs-string\">'Installation Data'</span>)<br>\t\tinstallation_data.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t<span class=\"hljs-comment\">// upload_class.uid.should.be.equal('built_io_upload')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.title.should.be.equal('built.io Uploads')</span><br>\t\t<span class=\"hljs-comment\">// upload_class.inbuilt_class.should.be.equal(true)</span><br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "4c984039-5928-4c9e-9521-3f87587abf83",
      "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
      "skipped": false
    },
    {
      "title": "should be able to get count for the classes present",
      "fullTitle": "Get classes(inbuilt) should be able to get count for the classes present",
      "timedOut": false,
      "duration": 1674,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-literal\">true</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">//console.log(res.body)</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body).should.to.be.deep.equal([<span class=\"hljs-string\">'classes'</span>])<br>\t\tres.body.classes.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\tres.body.classes.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "cf0c0831-19da-406a-b6e9-c4697c02dd98",
      "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
      "skipped": false
    },
    {
      "title": "should be able to get classes using limit param",
      "fullTitle": "Get classes(inbuilt) should be able to get classes using limit param",
      "timedOut": false,
      "duration": 2860,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> response = res.body.classes<br>\t\tresponse.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(response[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tresponse[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\tresponse[<span class=\"hljs-number\">0</span>].title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\tresponse[<span class=\"hljs-number\">0</span>].inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "3cabf5e3-e62e-4170-bccf-bda64a5d643f",
      "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
      "skipped": false
    },
    {
      "title": "should be able to get classes using skip param",
      "fullTitle": "Get classes(inbuilt) should be able to get classes using skip param",
      "timedOut": false,
      "duration": 1697,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span><br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> classes = res.body.classes<br>\t\tclasses.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tclasses[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].title.should.be.equal(<span class=\"hljs-string\">'Installation Data'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "b94c2e2b-f54d-4b58-ae01-c5275c8753fe",
      "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
      "skipped": false
    },
    {
      "title": "should be able to get classes simple query",
      "fullTitle": "Get classes(inbuilt) should be able to get classes simple query",
      "timedOut": false,
      "duration": 1514,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>\t}<br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">//console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> classes = res.body.classes<br>\t\tclasses.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tclasses[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].title.should.be.equal(<span class=\"hljs-string\">'Application User Role'</span>)<br>\t\tclasses[<span class=\"hljs-number\">0</span>].inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "cd0d9d6c-4446-4609-b52c-569b5dfee549",
      "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
      "skipped": false
    },
    {
      "title": "should provide error message for -ve skip/limit value",
      "fullTitle": "Get classes(inbuilt) should provide error message for -ve skip/limit value",
      "timedOut": false,
      "duration": 1484,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_all_classes'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"skip\"</span>: -<span class=\"hljs-number\">3</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">422</span>) <br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Failed to fetch classes. Please try again with valid parameters.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"params\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"has an invalid operation.\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
      "isRoot": false,
      "uuid": "5e386dbf-3a4c-49f1-b9d5-1cd8e16165b5",
      "parentUUID": "abaedf5b-93ee-4eda-a69c-d924b7b3a419",
      "skipped": false
    },
    {
      "title": "should be able to create a class for given app",
      "fullTitle": "Class creation should be able to create a class for given app",
      "timedOut": false,
      "duration": 1567,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> res = res.body<br>\t\t\t\t\tres.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class created successfully!'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">//console.log(res)</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.schema[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.abilities).should.be.deep.equal([<span class=\"hljs-string\">'get_one_object'</span>, <span class=\"hljs-string\">'get_all_objects'</span>, <span class=\"hljs-string\">'create_object'</span>, <span class=\"hljs-string\">'update_object'</span>, <span class=\"hljs-string\">'delete_object'</span>, <span class=\"hljs-string\">'delete_all_objects'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.DEFAULT_ACL).should.be.deep.equal([<span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.class.DEFAULT_ACL.others).should.be.deep.equal([<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tres.class.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tres.class.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tres.class.last_activity.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tres.class.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tres.class.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tres.class.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tres.class.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tres.class.schema.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tres.class.title.should.be.equal(<span class=\"hljs-string\">'class_name'</span>)<br>\t\t\t\t\tres.class.uid.should.be.equal(<span class=\"hljs-string\">'class_uid'</span>)<br>\t\t\t\t\tres.class.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tres.class.maintain_revisions.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tres.class.abilities.get_one_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.get_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.create_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.update_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.delete_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.abilities.delete_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.DEFAULT_ACL.others.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tres.class.DEFAULT_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// res.class.SYS_ACL.should.be.equal({})</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// res.class.DEFAULT_ACL.length.should.be.equal('others')</span><br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "e340f491-1b6d-4ae9-9c38-c3241571d537",
      "parentUUID": "1c9cf3dd-a011-4bf5-9bdd-4506f6734cde",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid json param",
      "fullTitle": "Class creation should provide an error message for invalid json param",
      "timedOut": false,
      "duration": 1470,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t<span class=\"hljs-comment\">// .expect(201)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Please send your attributes wrapped in 'class'\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
      "isRoot": false,
      "uuid": "6994b68c-ba71-496e-a13b-6bc71aaf3d1a",
      "parentUUID": "1c9cf3dd-a011-4bf5-9bdd-4506f6734cde",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid schema",
      "fullTitle": "Class creation should provide an error message for invalid schema",
      "timedOut": false,
      "duration": 1555,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span><br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t<span class=\"hljs-comment\">// .expect(201)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class creation failed. Please try again.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">115</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"schema\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"should have a group schema\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
      "isRoot": false,
      "uuid": "4053c310-420f-408e-94f9-5e8a5b92afee",
      "parentUUID": "1c9cf3dd-a011-4bf5-9bdd-4506f6734cde",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid authtoken",
      "fullTitle": "Class creation should provide an error message for invalid authtoken",
      "timedOut": false,
      "duration": 1703,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// var class_name = product_supertest;</span><br>\t\t\t<span class=\"hljs-comment\">// var class_uid  = product_supertest;</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_class'</span>, <span class=\"hljs-string\">''</span>, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"class_name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"class_uid\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t<span class=\"hljs-comment\">// .expect(201)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t})<br>\t\t\t\tdone(err)<br>\t\t\t})",
      "isRoot": false,
      "uuid": "14009af2-2122-428d-b313-ec14b8ff14dc",
      "parentUUID": "1c9cf3dd-a011-4bf5-9bdd-4506f6734cde",
      "skipped": false
    },
    {
      "title": "should be able to get single(built_io_installation_data) class",
      "fullTitle": "Get class should be able to get single(built_io_installation_data) class",
      "timedOut": false,
      "duration": 2309,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_installation_data\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> installation = res.body.class<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(installation.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>])<br>\t\t\t\t\tinstallation.schema.length.should.be.equal(<span class=\"hljs-number\">7</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tinstallation.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tinstallation.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tinstallation.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tinstallation.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tinstallation.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tinstallation.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tinstallation.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tinstallation.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\t\t\t\tinstallation.title.should.be.equal(<span class=\"hljs-string\">'Installation Data'</span>)<br>\t\t\t\t\tinstallation.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "000ce465-9cd2-44d7-afac-5446178a5772",
      "parentUUID": "5b36cf9f-90b6-4d82-b423-121773a2f9ea",
      "skipped": false
    },
    {
      "title": "should be able to get single(built_io_application_user_role) class",
      "fullTitle": "Get class should be able to get single(built_io_application_user_role) class",
      "timedOut": false,
      "duration": 2099,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> appUserRole = res.body.class<br>\t\t\t\t\t\t<span class=\"hljs-comment\">//console.log(appUserRole)</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserRole).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserRole.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>])<br>\t\t\t\t\tappUserRole.schema.length.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tappUserRole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserRole.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserRole.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tappUserRole.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserRole.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserRole.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserRole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tappUserRole.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\t\t\t\tappUserRole.title.should.be.equal(<span class=\"hljs-string\">'Application User Role'</span>)<br>\t\t\t\t\tappUserRole.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "a0e009ab-4703-4f57-96b9-e669095a98b3",
      "parentUUID": "5b36cf9f-90b6-4d82-b423-121773a2f9ea",
      "skipped": false
    },
    {
      "title": "should be able to get single(built_io_application_user) class",
      "fullTitle": "Get class should be able to get single(built_io_application_user) class",
      "timedOut": false,
      "duration": 1471,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> appUserClass = res.body.class<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserClass).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(appUserClass.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>])<br>\t\t\t\t\tappUserClass.schema.length.should.be.equal(<span class=\"hljs-number\">9</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tappUserClass.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tappUserClass.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserClass.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tappUserClass.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tappUserClass.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserClass.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tappUserClass.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tappUserClass.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tappUserClass.title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\t\t\t\tappUserClass.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "a2d99806-35d5-4e51-9a10-737e260e39d2",
      "parentUUID": "5b36cf9f-90b6-4d82-b423-121773a2f9ea",
      "skipped": false
    },
    {
      "title": "should be able to get single(inbuilt) class",
      "fullTitle": "Get class should be able to get single(inbuilt) class",
      "timedOut": false,
      "duration": 1851,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'Get_a_class'</span>, authtoken, api_key, classUid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> uploadClass = res.body.class<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(uploadClass).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(uploadClass.schema[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>, <span class=\"hljs-string\">'field_metadata'</span>, <span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// console.log(uploadClass.schema.length)</span><br>\t\t\t\t\tuploadClass.schema.length.should.be.equal(<span class=\"hljs-number\">9</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tuploadClass.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tuploadClass.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tuploadClass.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tuploadClass.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tuploadClass.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tuploadClass.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tuploadClass.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tuploadClass.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tuploadClass.title.should.be.equal(<span class=\"hljs-string\">'Application User'</span>)<br>\t\t\t\t\tuploadClass.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "c2d216ba-5fd3-4c05-9b1b-ec77fc0b8d6b",
      "parentUUID": "5b36cf9f-90b6-4d82-b423-121773a2f9ea",
      "skipped": false
    },
    {
      "title": "should be able to update the given class",
      "fullTitle": "Update class should be able to update the given class",
      "timedOut": false,
      "duration": 3545,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"testclas\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"testclass\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classUid = res1.body.class.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Update_class'</span>, authtoken, api_key, classUid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"changed\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"count\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"count\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t]<br>\t\t\t\t\t\t}<br>\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> updatedClss = res2.body.class<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss).should.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'title'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'inbuilt_class'</span>, <span class=\"hljs-string\">'schema'</span>, <span class=\"hljs-string\">'last_activity'</span>, <span class=\"hljs-string\">'maintain_revisions'</span>, <span class=\"hljs-string\">'abilities'</span>, <span class=\"hljs-string\">'DEFAULT_ACL'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.schema[<span class=\"hljs-number\">0</span>]).should.be.deep.equal([<span class=\"hljs-string\">'multiple'</span>, <span class=\"hljs-string\">'mandatory'</span>, <span class=\"hljs-string\">'display_name'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'data_type'</span>, <span class=\"hljs-string\">'unique'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.abilities).should.be.deep.equal([<span class=\"hljs-string\">'get_one_object'</span>, <span class=\"hljs-string\">'get_all_objects'</span>, <span class=\"hljs-string\">'create_object'</span>, <span class=\"hljs-string\">'update_object'</span>, <span class=\"hljs-string\">'delete_object'</span>, <span class=\"hljs-string\">'delete_all_objects'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.DEFAULT_ACL).should.be.deep.equal([<span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedClss.DEFAULT_ACL.others).should.be.deep.equal([<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t\t\tupdatedClss.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.title.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.inbuilt_class.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tupdatedClss.schema.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tupdatedClss.last_activity.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tupdatedClss.maintain_revisions.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tupdatedClss.DEFAULT_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tupdatedClss.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tupdatedClss.schema.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\tupdatedClss.title.should.be.equal(<span class=\"hljs-string\">'changed'</span>)<br>\t\t\t\t\t\t\tupdatedClss.uid.should.be.equal(<span class=\"hljs-string\">'testclass'</span>)<br>\t\t\t\t\t\t\tupdatedClss.inbuilt_class.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tupdatedClss.maintain_revisions.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.get_one_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.get_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.create_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.update_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.delete_object.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.abilities.delete_all_objects.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.DEFAULT_ACL.others.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tupdatedClss.DEFAULT_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "34a7ea21-6b0e-4557-9ac3-81aef1f675dd",
      "parentUUID": "4da90a46-5de1-46bd-afe8-15a19778eae4",
      "skipped": false
    },
    {
      "title": "should be able to delete class",
      "fullTitle": "Delete Class should be able to delete class",
      "timedOut": false,
      "duration": 3001,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_class'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"new class\"</span>,<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"new_class\"</span>,<br>\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"Name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span><br>\t\t}]<br>\t}<br>})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br><br>\t\t<span class=\"hljs-keyword\">var</span> classUid = res1.body.class.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class deleted successfully!'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br><br>\t})",
      "isRoot": false,
      "uuid": "79d51173-3f54-40ba-9e02-fb72baae78b2",
      "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
      "skipped": false
    },
    {
      "title": "should provide an error messgae on application user class delete",
      "fullTitle": "Delete Class should provide an error messgae on application user class delete",
      "timedOut": false,
      "duration": 1631,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
      "isRoot": false,
      "uuid": "0b4582fb-f3c3-4104-a99d-b8e4336e49aa",
      "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
      "skipped": false
    },
    {
      "title": "should provide an error messgae on application user role class delete",
      "fullTitle": "Delete Class should provide an error messgae on application user role class delete",
      "timedOut": false,
      "duration": 1592,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_application_user_role\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
      "isRoot": false,
      "uuid": "6c281060-068a-4056-b1a6-459a4c9f3585",
      "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
      "skipped": false
    },
    {
      "title": "should provide an error messgae on upload class delete",
      "fullTitle": "Delete Class should provide an error messgae on upload class delete",
      "timedOut": false,
      "duration": 1483,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> classUid = <span class=\"hljs-string\">\"built_io_installation_data\"</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Delete_class'</span>, authtoken, api_key, classUid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Class delete failed. Please try again.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">117</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"inbuilt_class\"</span>: [<br>\t      <span class=\"hljs-string\">\"cannot be removed\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
      "isRoot": false,
      "uuid": "9c10a88c-1a24-4666-9899-7a6b5f57a673",
      "parentUUID": "3028a635-df64-426e-9fd5-d49475fbd210",
      "skipped": false
    },
    {
      "title": "should apply bulk sys ACL on given classes",
      "fullTitle": "Classes Bulk sys ACL should apply bulk sys ACL on given classes",
      "timedOut": false,
      "duration": 1573,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'apply_bulk_sys_acl'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_application_user\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_application_user_role\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_installation_data\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_upload\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: devRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: classUid,<br>\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"roles\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: contentRole,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}]<br>\t\t\t})<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes1 = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes2 = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes3 = res.body.classes[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes4 = res.body.classes[<span class=\"hljs-number\">3</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes5 = res.body.classes[<span class=\"hljs-number\">4</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tclasses1.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses2.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses3.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses4.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses5.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tclasses1.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tclasses2.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\t\t\t\tclasses3.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\t\t\t\tclasses4.uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\t\tclasses5.uid.should.be.equal(<span class=\"hljs-string\">'supertest_class'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].uid.should.be.equal(contentRole)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">//</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.read.should.be.equal(false)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.update.should.be.equal(false)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.delete.should.be.equal(false)</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// classes5.SYS_ACL.roles[1].sub_acl.create.should.be.equal(false)</span><br>\t\t\t\t\tdone()<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "24971b29-90fb-4df2-8250-964f8dd79d2c",
      "parentUUID": "36ac7ff5-4cff-4d29-9d29-1244c00fd5be",
      "skipped": false
    },
    {
      "title": "should get bulk sys ACL applied on classes",
      "fullTitle": "Get classes bulk acl should get bulk sys ACL applied on classes",
      "timedOut": false,
      "duration": 1695,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_bulk_sys_acl'</span>, authtoken, api_key)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes1 = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes2 = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes3 = res.body.classes[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes4 = res.body.classes[<span class=\"hljs-number\">3</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> classes5 = res.body.classes[<span class=\"hljs-number\">4</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tclasses1.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user'</span>)<br>\t\t\t\t\tclasses2.uid.should.be.equal(<span class=\"hljs-string\">'built_io_application_user_role'</span>)<br>\t\t\t\t\tclasses3.uid.should.be.equal(<span class=\"hljs-string\">'built_io_installation_data'</span>)<br>\t\t\t\t\tclasses4.uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\t\tclasses5.uid.should.be.equal(<span class=\"hljs-string\">'supertest_class'</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">//</span><br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses5.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses3.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tclasses4.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "9f79b9ff-ccf1-48b7-8d90-dc43aacd9c2b",
      "parentUUID": "6ea90d2e-f486-42ee-83c7-4aedb693d3fa",
      "skipped": false
    },
    {
      "title": "should get bulk sys ACL applied on specified class",
      "fullTitle": "Get classes bulk acl should get bulk sys ACL applied on specified class",
      "timedOut": false,
      "duration": 1497,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_bulk_sys_acl'</span>, authtoken, api_key, {<br>\t\t\t\tclass_uids: <span class=\"hljs-string\">'[\"supertest_class\", \"built_io_upload\"]'</span><br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> classes1 = res.body.classes[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> classes2 = res.body.classes[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'roles'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1]).should.to.be.deep.equal(['uid', 'read', 'update', 'delete', 'sub_acl'])</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.others.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1].sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1]).should.to.be.deep.equal(['uid', 'read', 'update', 'delete', 'sub_acl'])</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(classes1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Object.keys(classes2.SYS_ACL.roles[1].sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br>\t\t\t\t<span class=\"hljs-comment\">// data assertion</span><br>\t\t\t\tclasses1.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tclasses2.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tclasses1.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].should.be.a('object')</span><br>\t\t\t\t<span class=\"hljs-comment\">// value assertion\t</span><br>\t\t\t\tclasses1.uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\tclasses2.uid.should.be.equal(<span class=\"hljs-string\">'supertest_class'</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses2.SYS_ACL.others.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(devRole)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].uid.should.be.equal(contentRole)<br>\t\t\t\t<span class=\"hljs-comment\">// classes1.SYS_ACL.roles[1].uid.should.be.equal(contentRole)</span><br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].uid.should.be.equal(contentRole)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].read.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].update.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].delete.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.read.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.update.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.delete.should.be.equal(false)</span><br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tclasses2.SYS_ACL.roles[<span class=\"hljs-number\">0</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tclasses1.SYS_ACL.roles[<span class=\"hljs-number\">1</span>].sub_acl.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// classes2.SYS_ACL.roles[1].sub_acl.create.should.be.equal(false)</span><br>\t\t\t\tdone()<br>\t\t\t})",
      "isRoot": false,
      "uuid": "29c819d6-9fd2-4708-bc68-57cbc8763f47",
      "parentUUID": "6ea90d2e-f486-42ee-83c7-4aedb693d3fa",
      "skipped": false
    },
    {
      "title": "should set roles to collaborators in bulk",
      "fullTitle": "Collaborators permissions should set roles to collaborators in bulk",
      "timedOut": false,
      "duration": 1505,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// console.log(userUID_2)</span><br><span class=\"hljs-comment\">// console.log(email_2)</span><br><span class=\"hljs-comment\">// console.log(supertestRole)</span><br><span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">55000</span>)<br><span class=\"hljs-keyword\">var</span> users = {}<br>users[userUID_2] = [<br>\tsupertestRole,<br>\tcontentRole<br>]<br>factories.create(<span class=\"hljs-string\">'set_role_collaborator'</span>, authtoken, api_key, {<br>\tusers: users<br>})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">\"The roles were applied successfully.\"</span>)<br>\t\t<span class=\"hljs-keyword\">var</span> users1 = res.body.users[<span class=\"hljs-number\">1</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> users2 = res.body.users[<span class=\"hljs-number\">0</span>]<br>\t\t<br>\t<span class=\"hljs-comment\">// // key assertions</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users2).should.to.be.deep.equal(['uid', 'created_at', 'updated_at', 'email', 'username', 'plan_id', 'roles'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users2.roles[0]).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users2.roles[1]).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users1).should.to.be.deep.equal(['uid', 'created_at', 'updated_at', 'email', 'username', 'plan_id', 'roles'])</span><br>\t<span class=\"hljs-comment\">// \tObject.keys(users1.roles[0]).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL'])</span><br>\t<span class=\"hljs-comment\">// \t// value assertions</span><br>\t<span class=\"hljs-comment\">// \tusers2.uid.should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.email.should.be.equal(email_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.username.should.be.equal(username_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].uid.should.be.equal(devRole)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].users[0].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].owner.should.be.equal(email)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.api_key.should.be.equal(api_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.owner_uid.should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.master_key.should.be.equal(master_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.user_uids[0].should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.user_uids[1].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.user_uids[2].should.be.equal(userUID_2)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].uid.should.be.equal(contentRole)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].users[0].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].owner.should.be.equal(email)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].application.api_key.should.be.equal(api_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[0].application.master_key.should.be.equal(master_key)</span><br>\t<span class=\"hljs-comment\">// \tusers2.roles[1].application.owner_uid.should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers1.uid.should.be.equal(userUID_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.email.should.be.equal(email_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.username.should.be.equal(username_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].uid.should.be.equal(supertestRole)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].users[0].should.be.equal(userUID_2)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].owner.should.be.equal(email)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.api_key.should.be.equal(api_key)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.owner_uid.should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.master_key.should.be.equal(master_key)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.user_uids[0].should.be.equal(userUID)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.user_uids[1].should.be.equal(userUID_1)</span><br>\t<span class=\"hljs-comment\">// \tusers1.roles[0].application.user_uids[2].should.be.equal(userUID_2)</span><br><br><br>\t\tdone()<br>\t})",
      "isRoot": false,
      "uuid": "661a6ab3-6cd9-48b9-848a-936cebf6b7bf",
      "parentUUID": "868128ef-1fd3-4d7b-af81-f46e29f1a26e",
      "skipped": false
    },
    {
      "title": "should Fetch permissions for one or more users",
      "fullTitle": "Collaborators permissions should Fetch permissions for one or more users",
      "timedOut": false,
      "duration": 1497,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_permissions_user'</span>, authtoken, api_key, {<br>\t\t\t\tusers: [userUID, userUID_2]<br>\t\t\t})<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body, err)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> users1 = res.body.users[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> users2 = res.body.users[<span class=\"hljs-number\">1</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(users1)</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users2).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'classes'</span>, <span class=\"hljs-string\">'isOwner'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users2.classes).should.to.be.deep.equal([<span class=\"hljs-string\">'built_io_application_user'</span>, <span class=\"hljs-string\">'built_io_application_user_role'</span>, <span class=\"hljs-string\">'built_io_installation_data'</span>, <span class=\"hljs-string\">'built_io_upload'</span>, <span class=\"hljs-string\">'supertest_class'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users1).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'classes'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(users1.classes).should.to.be.deep.equal([<span class=\"hljs-string\">'built_io_application_user'</span>, <span class=\"hljs-string\">'built_io_application_user_role'</span>, <span class=\"hljs-string\">'built_io_installation_data'</span>, <span class=\"hljs-string\">'built_io_upload'</span>, <span class=\"hljs-string\">'supertest_class'</span>])<br>\t\t\t\t\tdone()<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "d4a0ab28-77c0-4cc6-8b70-746e248b0622",
      "parentUUID": "868128ef-1fd3-4d7b-af81-f46e29f1a26e",
      "skipped": false
    },
    {
      "title": "should Fetch permissions for one or more users after updating role",
      "fullTitle": "Collaborators permissions should Fetch permissions for one or more users after updating role",
      "timedOut": false,
      "duration": 2902,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Update_system_role'</span>, authtoken, api_key, supertestRole.uid, {<br>\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"testRole\"</span><br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> factories.create(<span class=\"hljs-string\">'Get_system_roles'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"include_permissions\"</span>: <span class=\"hljs-literal\">true</span><br>\t}) <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t<span class=\"hljs-keyword\">var</span> roles = res.body.system_roles[<span class=\"hljs-number\">0</span>]<br><span class=\"hljs-comment\">// // key assertion</span><br><span class=\"hljs-comment\">// \tObject.keys(roles).should.to.be.deep.equal(['uid', 'name', 'description', 'users', 'roles', 'created_at', 'updated_at', 'owner', 'application', 'SYS_ACL', 'permissions'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[0]).should.to.be.deep.equal(['class_uid', 'SYS_ACL'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[1]).should.to.be.deep.equal(['class_uid', 'SYS_ACL'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[0].SYS_ACL).should.to.be.deep.equal(['read', 'update', 'delete', 'sub_acl'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[0].SYS_ACL.sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[1].SYS_ACL).should.to.be.deep.equal(['read', 'update', 'delete', 'sub_acl'])</span><br><span class=\"hljs-comment\">// \tObject.keys(roles.permissions[1].SYS_ACL.sub_acl).should.to.be.deep.equal(['read', 'update', 'delete', 'create'])</span><br><span class=\"hljs-comment\">// \t// Data assertion</span><br><span class=\"hljs-comment\">// \troles.uid.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.name.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.users.should.be.a('array')</span><br><span class=\"hljs-comment\">// \troles.roles.should.be.a('array')</span><br><span class=\"hljs-comment\">// \troles.created_at.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.updated_at.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.owner.should.be.a('string')</span><br><span class=\"hljs-comment\">// \troles.application.should.be.a('object')</span><br><span class=\"hljs-comment\">// \troles.SYS_ACL.should.be.a('object')</span><br><span class=\"hljs-comment\">// \troles.permissions.should.be.a('array')</span><br><span class=\"hljs-comment\">// \t// value assertion</span><br><span class=\"hljs-comment\">// \troles.uid.should.be.equal(devRole1)</span><br><span class=\"hljs-comment\">// \troles.created_at.should.be.equal(roles.updated_at)</span><br><span class=\"hljs-comment\">// \troles.owner.should.be.equal(email)</span><br><span class=\"hljs-comment\">// \troles.application.api_key.should.be.equal(api_key1)</span><br><span class=\"hljs-comment\">// \troles.application.owner_uid.should.be.equal(userUID)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].class_uid.should.be.equal(classUid1)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.read.should.be.equal(true)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.read.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[0].SYS_ACL.sub_acl.create.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].class_uid.should.be.equal('built_io_upload')</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.read.should.be.equal(true)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.read.should.be.equal(true)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.update.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.delete.should.be.equal(false)</span><br><span class=\"hljs-comment\">// \troles.permissions[1].SYS_ACL.sub_acl.create.should.be.equal(false)</span><br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
      "isRoot": false,
      "uuid": "ae4daad1-d329-413e-b4f9-e02167451cd5",
      "parentUUID": "868128ef-1fd3-4d7b-af81-f46e29f1a26e",
      "skipped": false
    },
    {
      "title": "should apply system roles on classes in bulk",
      "fullTitle": "system roles Bulk ACL should apply system roles on classes in bulk",
      "timedOut": false,
      "duration": 1704,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'set_role_bulk_acl'</span>, authtoken, api_key1, {<br>\t\t\t\t<span class=\"hljs-string\">\"system_roles\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: roleid,<br>\t\t\t\t\t<span class=\"hljs-string\">\"classes\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: classUid1,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"built_io_upload\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"SYS_ACL\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"sub_acl\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}]<br>\t\t\t\t}]<br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> roles = res.body.system_roles[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'permissions'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\troles.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.permissions.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\troles.uid.should.be.equal(roleid)<br>\t\t\t\troles.created_at.should.be.equal(roles.updated_at)<br>\t\t\t\troles.owner.should.be.equal(email)<br>\t\t\t\troles.application.api_key.should.be.equal(api_key1)<br>\t\t\t\troles.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].class_uid.should.be.equal(classUid1)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].class_uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})",
      "isRoot": false,
      "uuid": "1f8c0368-c978-4830-b2d6-d8825d30905a",
      "parentUUID": "1411a74f-2f0b-4ced-9288-52b7dc95083d",
      "skipped": false
    },
    {
      "title": "should get all roles, and the ACL set for it on each class",
      "fullTitle": "permissions should get all roles, and the ACL set for it on each class",
      "timedOut": false,
      "duration": 1456,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_system_roles'</span>, authtoken, api_key1, {<br>\t\t\t\t<span class=\"hljs-string\">\"include_permissions\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> roles = res.body.system_roles[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>, <span class=\"hljs-string\">'permissions'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'class_uid'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'sub_acl'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\troles.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troles.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troles.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troles.permissions.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\troles.uid.should.be.equal(devRole1)<br>\t\t\t\troles.created_at.should.be.equal(roles.updated_at)<br>\t\t\t\troles.owner.should.be.equal(email)<br>\t\t\t\troles.application.api_key.should.be.equal(api_key1)<br>\t\t\t\troles.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].class_uid.should.be.equal(classUid1)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">0</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].class_uid.should.be.equal(<span class=\"hljs-string\">'built_io_upload'</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\troles.permissions[<span class=\"hljs-number\">1</span>].SYS_ACL.sub_acl.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tdone(err)<br>\t\t\t<br>\t\t\t})",
      "isRoot": false,
      "uuid": "303e54a9-1511-4881-8360-8fd3fa88d389",
      "parentUUID": "44491fae-8530-4704-b4f1-a35adad6e599",
      "skipped": false
    },
    {
      "title": "should be able to ignore metadata field while creating object",
      "fullTitle": "Create metadata (POST call) should be able to ignore metadata field while creating object",
      "timedOut": false,
      "duration": 1474,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_object'</span>, authtoken, api_key, classUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"metadata object\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata create\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"isAtool\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"environment\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"dev\"</span>: <span class=\"hljs-string\">\"new server\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"stag\"</span>: <span class=\"hljs-string\">\"old server\"</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "539ae6ba-348d-4cba-9319-03d19b62d943",
      "parentUUID": "0d55c7a0-9b98-457e-aca1-3bab1cee1bc4",
      "skipped": false
    },
    {
      "title": "should be able to ignore _metadata field while creating object",
      "fullTitle": "Create metadata (POST call) should be able to ignore _metadata field while creating object",
      "timedOut": false,
      "duration": 1485,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_object'</span>, authtoken, api_key, classUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"_metadata object\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata create\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"isAtool\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"environment\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"dev\"</span>: <span class=\"hljs-string\">\"new server\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"stag\"</span>: <span class=\"hljs-string\">\"old server\"</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tobject = res.body.object<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "3368cdf7-64fb-4da8-a600-8813e021ebd6",
      "parentUUID": "0d55c7a0-9b98-457e-aca1-3bab1cee1bc4",
      "skipped": false
    },
    {
      "title": "should be able to ignore metadata field while updating object",
      "fullTitle": "Update object with metadata (PUT call) should be able to ignore metadata field while updating object",
      "timedOut": false,
      "duration": 1789,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "d2bebd75-f26d-4855-ac7b-7cafb04019f3",
      "parentUUID": "69318c1b-7ed3-43be-9eaf-d9a5634768c0",
      "skipped": false
    },
    {
      "title": "should be able to provide error message for _metadata field while updating object",
      "fullTitle": "Update object with metadata (PUT call) should be able to provide error message for _metadata field while updating object",
      "timedOut": false,
      "duration": 2730,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"isupertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tobject = res.body.object<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "bd9fb6c9-ca86-4d66-b0ef-becb52d8728e",
      "parentUUID": "69318c1b-7ed3-43be-9eaf-d9a5634768c0",
      "skipped": false
    },
    {
      "title": "should update object with metadata",
      "fullTitle": "Update object with metadata (/metadata PUT call) should update object with metadata",
      "timedOut": false,
      "duration": 3254,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'update_metadata'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"metadata\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t}<br>\t\t}, {<br>\t\t\t<span class=\"hljs-string\">\"$set\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata update\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-number\">4</span><br>\t\t\t}<br>\t\t}]<br>\t})<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'_metadata'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object._metadata).should.to.be.deep.equal([<span class=\"hljs-string\">'increment'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'multiple'</span>])<br>\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\tobject._metadata.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tobject._metadata.increment.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\tobject._metadata.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tobject._metadata.multiple.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\tobject._metadata.name.should.be.equal(<span class=\"hljs-string\">'supertest metadata update'</span>)<br>\t\tobject._metadata.multiple.should.be.equal(<span class=\"hljs-number\">4</span>)<br>\t\tobject._metadata.increment.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_metadata'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t<span class=\"hljs-string\">\"metadata\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"$mul\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-number\">4</span><br>\t\t\t\t\t}<br>\t\t\t\t}]<br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'_metadata'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object._metadata).should.to.be.deep.equal([<span class=\"hljs-string\">'increment'</span>,<span class=\"hljs-string\">'name'</span>,<span class=\"hljs-string\">'multiple'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\tobject._metadata.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject._metadata.increment.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject._metadata.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject._metadata.multiple.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tobject._metadata.name.should.be.equal(<span class=\"hljs-string\">'supertest metadata update'</span>)<br>\t\t\t\tobject._metadata.increment.should.be.equal(<span class=\"hljs-number\">4</span>)<br>\t\t\t\tobject._metadata.multiple.should.be.equal(<span class=\"hljs-number\">16</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
      "isRoot": false,
      "uuid": "fc66a8ef-08d4-49a4-911d-8a06cb790576",
      "parentUUID": "e8ecd5e3-7121-4985-b8f0-5473959a62db",
      "skipped": false
    },
    {
      "title": "should provide error message for _metadata field while updating object",
      "fullTitle": "Update object with metadata (/metadata PUT call) should provide error message for _metadata field while updating object",
      "timedOut": false,
      "duration": 1848,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'update_metadata'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"_metadata\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"$inc\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"increment\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t}<br>\t\t}, {<br>\t\t\t<span class=\"hljs-string\">\"$set\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest metadata update\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-number\">4</span><br>\t\t\t}<br>\t\t}]<br>\t})<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tres.body.error_message.should.be.equal(<span class=\"hljs-string\">\"Please send your attributes wrapped in 'metadata'\"</span>)<br>\t\tres.body.error_code.should.be.equal(<span class=\"hljs-number\">141</span>)<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "7843e036-1acb-4dab-af0f-d9a7009ca012",
      "parentUUID": "e8ecd5e3-7121-4985-b8f0-5473959a62db",
      "skipped": false
    },
    {
      "title": "should get object owner information in updated_by/created_by key",
      "fullTitle": "get object should get object owner information in updated_by/created_by key",
      "timedOut": false,
      "duration": 3319,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, authtoken_1, api_key, classUid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"include_updated_by\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"include_created_by\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t\t}))<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.updated_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.created_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'company'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tobject.created_by.uid.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_by.email.should.be.equal(email)<br>\t\t\t\t\tobject.created_by.username.should.be.equal(username)<br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.updated_by.uid.should.be.equal(userUID_1)<br>\t\t\t\t\tobject.updated_by.email.should.be.equal(email_1)<br>\t\t\t\t\tobject.updated_by.username.should.be.equal(username_1)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
      "isRoot": false,
      "uuid": "1842d605-625c-4cc9-9b3a-635c43f60a68",
      "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
      "skipped": false
    },
    {
      "title": "should get object with specific version",
      "fullTitle": "get object should get object with specific version",
      "timedOut": false,
      "duration": 3185,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"version\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t\t}))<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
      "isRoot": false,
      "uuid": "4db45d53-25fc-4162-8acd-6fd0df1e45ec",
      "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
      "skipped": false
    },
    {
      "title": "should get all objects with revisions",
      "fullTitle": "get object should get all objects with revisions",
      "timedOut": false,
      "duration": 3069,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// R.pretty(res.body)</span><br><span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t}<br>\t}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_revisions'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: objectUid<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> object1 = res1.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t<span class=\"hljs-keyword\">var</span> object2 = res1.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object1).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object2).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobject1.uid.should.be.equal(objectUid)<br>\t\tobject1.name.should.be.equal(<span class=\"hljs-string\">'supertest_update'</span>)<br>\t\tobject1.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\tobject1.updated_by.should.be.equal(userUID_1)<br>\t\tobject1.created_by.should.be.equal(userUID)<br>\t\tobject1.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject1.created_at.should.be.not.equal(object1.updated_at)<br>\t\tobject1._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\tobject2.uid.should.be.equal(objectUid)<br>\t\tobject2.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\tobject2.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\tobject2.updated_by.should.be.equal(userUID)<br>\t\tobject2.updated_by.should.be.equal(object2.created_by)<br>\t\tobject2.created_by.should.be.equal(userUID)<br>\t\tobject2.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject2.created_at.should.be.equal(object2.updated_at)<br>\t\tobject2._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\tdone()<br>\t});",
      "isRoot": false,
      "uuid": "ff097ade-11bb-478e-a5c7-bc3adb9f645c",
      "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
      "skipped": false
    },
    {
      "title": "should update object with preserve_version",
      "fullTitle": "object update should update object with preserve_version",
      "timedOut": false,
      "duration": 1680,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_preserve_version'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">\"Woot! Object updated successfully.\"</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest_update'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.not.equal(object.created_by)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID_1)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject.created_at.should.be.not.equal(object.updated_at)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
      "isRoot": false,
      "uuid": "b20085f8-761b-4824-a196-66b32e825289",
      "parentUUID": "1cb45777-64a1-4830-a079-5b4388fa5b51",
      "skipped": false
    },
    {
      "title": "should perform a silent update on object",
      "fullTitle": "object update should perform a silent update on object",
      "timedOut": false,
      "duration": 1679,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"timeless\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">\"Woot! Object updated successfully.\"</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest_update'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.not.equal(object.created_by)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID_1)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\tdone()<br>\t\t\t\t});",
      "isRoot": false,
      "uuid": "cc74bc41-cf03-4ba9-a720-e94e48a0ab36",
      "parentUUID": "1cb45777-64a1-4830-a079-5b4388fa5b51",
      "skipped": false
    },
    {
      "title": "should revert object to specific version",
      "fullTitle": "object revert should revert object to specific version",
      "timedOut": false,
      "duration": 2964,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, authtoken_1, api_key, classUid, objectUid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest_update\"</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// res.body.object._version.should.be.equal(2)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectId = res.body.object.uid<br>\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'object_revert'</span>, authtoken, api_key, classUid, objectUid, tenant_uid, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"version\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t\t}))<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// new copy of object is getting created with new verison </span><br>\t\t\t\t\tdone()<br>\t\t\t\t});",
      "isRoot": false,
      "uuid": "49ed14e6-7526-4e0f-be97-bdd07ff1de79",
      "parentUUID": "ccae40cf-eac5-4733-be59-5160103939a9",
      "skipped": false
    },
    {
      "title": "should be able to create installation object for an app",
      "fullTitle": "Create an installations should be able to create installation object for an app",
      "timedOut": false,
      "duration": 1657,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"__loc\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"device_token\"</span>: R.bltRandom(<span class=\"hljs-number\">8</span>),<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"subscribed_to_channels\"</span>: [<span class=\"hljs-string\">\"object.create\"</span>, <span class=\"hljs-string\">\"object.delete\"</span>],<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"badge\"</span>: <span class=\"hljs-number\">1</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"timezone\"</span>: <span class=\"hljs-string\">\"+05:30\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"credentials_name\"</span>: <span class=\"hljs-string\">\"swapnil shirke\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"ACL\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t},<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"tags\"</span>: [<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"supertest object\"</span><br>\t\t\t\t\t\t]<br>\t\t\t\t\t}<br>\t\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objData = res.body.object<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.object.uid<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(objData).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(objData.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(objData.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\tobjData.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tobjData.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobjData.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tobjData.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobjData.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobjData.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobjData._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobjData.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tobjData.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobjData.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\texpect(objData.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\t\tobjData.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\tobjData.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\tobjData.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\tobjData.badge.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tobjData.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\t\tobjData.credentials_name.should.be.equal(<span class=\"hljs-string\">'swapnil shirke'</span>)<br>\t\t\t\t\tobjData.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\tobjData._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tobjData.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object'</span>)<br>\t\t\t\t\tobjData.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobjData.created_by.should.be.equal(objData.updated_by)<br>\t\t\t\t\tobjData.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobjData.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tobjData.created_at.should.be.equal(objData.updated_at)<br>\t\t\t\t\tobjData.updated_at.should.be.equal(objData.created_at)<br>\t\t\t\t\tobjData.uid.should.be.equal(id)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "9629c5d2-19dd-41e7-919c-9613e4a7a915",
      "parentUUID": "910957c6-9e05-4280-9d58-946bbd4dc520",
      "skipped": false
    },
    {
      "title": "should be able to get installation objects created for an app",
      "fullTitle": "Get all installations should be able to get installation objects created for an app",
      "timedOut": false,
      "duration": 3302,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Get_Installation_objects'</span>, authtoken, api_key)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// console.log(res1.body)</span><br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\t\t\tobject.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\texpect(object.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.equal(<span class=\"hljs-string\">'swapnil shirke'</span>)<br>\t\t\t\t\t\t\tobject.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t\t\tobject.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "261eb8e6-a733-4a80-af03-58f227de99e8",
      "parentUUID": "b95f7db5-32a0-407f-bc46-124d12ef41f4",
      "skipped": false
    },
    {
      "title": "should be able to get single object created for an app",
      "fullTitle": "Get single object should be able to get single object created for an app",
      "timedOut": false,
      "duration": 2962,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> id = res.body.object.uid<br>\t\t<br>\t\tfactories.create(<span class=\"hljs-string\">'Get_Installation_objects'</span>, authtoken, api_key, id)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\tobject.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\tobject.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tobject.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\tobject.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br><br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\texpect(object.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.delete'</span>)<br>\t\t\t\tobject.badge.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\tobject.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\tobject.credentials_name.should.be.equal(<span class=\"hljs-string\">'swapnil shirke'</span>)<br>\t\t\t\tobject.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\tobject.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
      "isRoot": false,
      "uuid": "ae9e4df2-d69d-4551-80bd-cac8a5714ab5",
      "parentUUID": "dd59554c-8aa1-4bd9-88f4-8dfd9bd6f011",
      "skipped": false
    },
    {
      "title": "should be able to update installation objects created for an app",
      "fullTitle": "Update an installation should be able to update installation objects created for an app",
      "timedOut": false,
      "duration": 3371,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectID = res.body.object.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Update_Installation_object'</span>, authtoken, api_key, objectID, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"__loc\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"device_type\"</span>: <span class=\"hljs-string\">\"ios\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"device_token\"</span>: R.bltRandom(<span class=\"hljs-number\">8</span>),<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"subscribed_to_channels\"</span>: [<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"object.create\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"object.update\"</span><br>\t\t\t\t\t\t\t\t],<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"badge\"</span>: <span class=\"hljs-number\">3</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"timezone\"</span>: <span class=\"hljs-string\">\"+05:30\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"credentials_name\"</span>: <span class=\"hljs-string\">\"super test\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"ACL\"</span>: {<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"disable\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t},<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tags\"</span>: [<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"supertest object update\"</span><br>\t\t\t\t\t\t\t\t]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//console.log(res1.body)</span><br>\t\t\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res1.body.object<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'device_token'</span>, <span class=\"hljs-string\">'subscribed_to_channels'</span>, <span class=\"hljs-string\">'badge'</span>, <span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'timezone'</span>, <span class=\"hljs-string\">'credentials_name'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'_version'</span>])<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.to.be.deep.equal(<span class=\"hljs-string\">'object.update'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL).should.to.be.deep.equal([<span class=\"hljs-string\">'disable'</span>, <span class=\"hljs-string\">'others'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.ACL.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\t\t\tobject.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest object update'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\texpect(object.__loc).to.be.equal(<span class=\"hljs-literal\">null</span>)<br>\t\t\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'object.create'</span>)<br>\t\t\t\t\t\t\tobject.subscribed_to_channels[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-string\">'object.update'</span>)<br>\t\t\t\t\t\t\tobject.badge.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t\t\t\t\t\tobject.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.timezone.should.be.equal(<span class=\"hljs-string\">'+05:30'</span>)<br>\t\t\t\t\t\t\tobject.credentials_name.should.be.equal(<span class=\"hljs-string\">'super test'</span>)<br>\t\t\t\t\t\t\tobject.ACL.disable.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.update.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t\t\tobject.ACL.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\t\t\tobject.tags[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'supertest object update'</span>)<br>\t\t\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\t\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\t\t\tobject.created_at.should.not.equal(object.updated_at)<br>\t\t\t\t\t\t\tobject.updated_at.should.not.equal(object.created_at)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "d037b64e-71b4-42c2-94e8-86376bbffb3c",
      "parentUUID": "063e6bc4-f578-431e-ab87-9ee704562453",
      "skipped": false
    },
    {
      "title": "should be able to delete an installation object created for an app",
      "fullTitle": "Delete an installation should be able to delete an installation object created for an app",
      "timedOut": false,
      "duration": 3313,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_Installation_object'</span>, authtoken, api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> objectUid = res.body.object.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Delete_Installation_object'</span>, authtoken, api_key, objectUid)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "7e60f69d-ab3b-48ca-b8f5-d542f9ee69f5",
      "parentUUID": "535ae889-d26a-4121-aa0c-3f1ea854620e",
      "skipped": false
    },
    {
      "title": "should provide an error message for min value for given text field",
      "fullTitle": "Text should provide an error message for min value for given text field",
      "timedOut": false,
      "duration": 1812,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asd\"</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is less than the minimum value 5\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "cc108b03-c2cb-44d5-b2a9-5d89ff81f0b6",
      "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
      "skipped": false
    },
    {
      "title": "should provide an error message for max value for given text field",
      "fullTitle": "Text should provide an error message for max value for given text field",
      "timedOut": false,
      "duration": 1501,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asdsfsdd5555\"</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is greater than the maximum value 10\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "845e36c2-3d1e-4556-aaa5-483ff3b4d169",
      "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
      "skipped": false
    },
    {
      "title": "should provide an error message for mandatory value for given text field",
      "fullTitle": "Text should provide an error message for mandatory value for given text field",
      "timedOut": false,
      "duration": 1629,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "495de603-886f-4eb4-a937-cac4c44ae998",
      "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
      "skipped": false
    },
    {
      "title": "should provide an error message for object value for given text field",
      "fullTitle": "Text should provide an error message for object value for given text field",
      "timedOut": false,
      "duration": 2458,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: {<span class=\"hljs-string\">\"testing\"</span>: <span class=\"hljs-string\">\"backend\"</span>}\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not text\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "d642e3c7-ba94-4b4d-b007-2328012a1dc4",
      "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
      "skipped": false
    },
    {
      "title": "should provide an error message for array value for given text field",
      "fullTitle": "Text should provide an error message for array value for given text field",
      "timedOut": false,
      "duration": 1637,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"testing\"</span>, <span class=\"hljs-string\">\"backend\"</span>]\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"should be a single value instead of multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "99089251-d6fc-412d-9910-a9005751c574",
      "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
      "skipped": false
    },
    {
      "title": "should provide an error message for null value for given text field",
      "fullTitle": "Text should provide an error message for null value for given text field",
      "timedOut": false,
      "duration": 1738,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classText.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-literal\">null</span>\t<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "05b8ed8e-4570-4a73-a439-3bd7e1fb425a",
      "parentUUID": "c71afcd1-c3e1-43de-8329-b6cbce4e35c7",
      "skipped": false
    },
    {
      "title": "should provide an error message for blank array when field is mandatory",
      "fullTitle": "Text Multiple and field format  should provide an error message for blank array when field is mandatory",
      "timedOut": false,
      "duration": 1716,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: []<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "82c0f0ce-2315-477f-a4eb-0a299202a502",
      "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
      "skipped": false
    },
    {
      "title": "should provide an error message for multiple field when array is not provided",
      "fullTitle": "Text Multiple and field format  should provide an error message for multiple field when array is not provided",
      "timedOut": false,
      "duration": 1452,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: <span class=\"hljs-string\">\"asd\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "e39add6f-dcc6-4c96-994d-1cdf9f4b24b8",
      "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
      "skipped": false
    },
    {
      "title": "should provide an error message for multiple field if blank",
      "fullTitle": "Text Multiple and field format  should provide an error message for multiple field if blank",
      "timedOut": false,
      "duration": 1600,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield\"</span>: [<br>\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "c0c299ba-e4b6-4fd2-a08f-a9e33e788caf",
      "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
      "skipped": false
    },
    {
      "title": "should be able to create object with valid format",
      "fullTitle": "Text Multiple and field format  should be able to create object with valid format",
      "timedOut": false,
      "duration": 1467,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>    <span class=\"hljs-string\">\"object\"</span>: {<br>        <span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"ASD\"</span>],<br>        <span class=\"hljs-string\">\"list\"</span>: [<span class=\"hljs-literal\">null</span>]<br>    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tres.body.object.textfield[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'ASD'</span>)<br>\tres.body.object.app_user_object_uid.should.be.equal(appUser1.uid)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "1016345f-8ffb-4174-99ad-bf852ee92885",
      "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid value format for field",
      "fullTitle": "Text Multiple and field format  should provide an error message for invalid value format for field",
      "timedOut": false,
      "duration": 1464,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"asdasd\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"does not match the required format for the field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "39249b5d-ca98-469f-8da1-8829e6738134",
      "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid value format in array field",
      "fullTitle": "Text Multiple and field format  should provide an error message for invalid value format in array field",
      "timedOut": false,
      "duration": 2341,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [<span class=\"hljs-string\">\"ADS\"</span>, <span class=\"hljs-string\">\"asdasd\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.1\"</span>: [<br>\t      <span class=\"hljs-string\">\"does not match the required format for the field\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "238ea891-67f1-43fb-a282-8e42e32ca0bc",
      "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
      "skipped": false
    },
    {
      "title": "should provide an error message for object value inside array field",
      "fullTitle": "Text Multiple and field format  should provide an error message for object value inside array field",
      "timedOut": false,
      "duration": 1672,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classTextMul.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"textfield\"</span>: [{<span class=\"hljs-string\">\"ASD\"</span>: <span class=\"hljs-string\">\"AD\"</span>}]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"textfield.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not text\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "0aa277b2-ee8e-4e5c-a748-75a83976ebe5",
      "parentUUID": "6ab05c0a-ebff-4daf-9771-18036d690fa8",
      "skipped": false
    },
    {
      "title": "should behave...",
      "fullTitle": "Links should behave...",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "",
      "isRoot": false,
      "uuid": "d5a1cea3-ea50-44b5-acbf-b2cac90b6714",
      "parentUUID": "a7be833d-02f1-4572-a11a-3687a682479d",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using simple query",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using simple query",
      "timedOut": false,
      "duration": 1457,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid, {<br>\t\t\t <span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"author\"</span>: <span class=\"hljs-string\">\"swapnil\"</span><br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'swapnil'</span>)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'FTJ'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "f4c9d6f2-151d-49d0-872b-4c1334ee26ec",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using regex in query",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using regex in query",
      "timedOut": false,
      "duration": 1615,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"author\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^chet\"</span>,<br>\t\t\t      <span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'chetan'</span>)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'Life of psy'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "7372b312-fd72-4cff-8041-8aeab5360739",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using query on simple group field",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using query on simple group field",
      "timedOut": false,
      "duration": 1452,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t    \t<span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"anjuna\"</span>  <br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'pratick'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// object.bookname.should.be.equal('Life of psy')</span><br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "5e2f6f89-c32f-4d31-b5a7-ec00a209d833",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using $or query",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using $or query",
      "timedOut": false,
      "duration": 1691,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t\t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"$or\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"author\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^chetan\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"bookname\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^FTJ\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject1.author.should.be.equal(<span class=\"hljs-string\">'chetan'</span>)<br>\t\t\t\tobject2.bookname.should.be.equal(<span class=\"hljs-string\">'FTJ'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "b77c1ee8-cfb8-4f05-b5da-c93be85b8fe0",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using $and query",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using $and query",
      "timedOut": false,
      "duration": 1445,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t\t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"$and\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"author\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$regex\"</span>: <span class=\"hljs-string\">\"^chetan\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"$options\"</span>: <span class=\"hljs-string\">\"i\"</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"daysold\"</span>: <span class=\"hljs-number\">90</span><br>\t\t\t\t\t}]<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.author.should.be.equal(<span class=\"hljs-string\">'chetan'</span>)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'Life of psy'</span>)<br>\t\t\t\tobject.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "ce366428-63fe-4cdd-9a13-57e4f8510686",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using $lt(less then) operators",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using $lt(less then) operators",
      "timedOut": false,
      "duration": 1452,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$lt\"</span>: <span class=\"hljs-number\">125</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "28d135b7-293a-4c10-a5f9-35ab53b4e0c6",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able t0 get objects created for an app using $lte(less then or equal to) operators",
      "fullTitle": "Get objects Queries should be able t0 get objects created for an app using $lte(less then or equal to) operators",
      "timedOut": false,
      "duration": 1490,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$lte\"</span>: <span class=\"hljs-number\">125</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">125</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "331820b0-d289-4edb-900c-d33f3d46161f",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using $gt(greater than) operators",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using $gt(greater than) operators",
      "timedOut": false,
      "duration": 1585,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$gt\"</span>: <span class=\"hljs-number\">125</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">130</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "90abf207-8d84-4b09-8784-59ee6ba8dc31",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using $gte(greater than or equal to) operators",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using $gte(greater than or equal to) operators",
      "timedOut": false,
      "duration": 1451,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$gte\"</span>: <span class=\"hljs-number\">130</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">130</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "1661294e-c27e-4a25-86e1-4c743e526abe",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using $ne(not equal to) operators",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using $ne(not equal to) operators",
      "timedOut": false,
      "duration": 1680,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$ne\"</span>: <span class=\"hljs-number\">130</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br><br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\tobject4 = res.body.objects[<span class=\"hljs-number\">3</span>]<br>\t\t\t\tobject5 = res.body.objects[<span class=\"hljs-number\">4</span>]<br>\t\t\t\t<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">125</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject4.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t\tobject5.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "8d0ab62d-69b0-4a05-aeca-bcc3d00973cf",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using $in(contained In) operators",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using $in(contained In) operators",
      "timedOut": false,
      "duration": 1445,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$in\"</span>: [<span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">125</span>, <span class=\"hljs-number\">90</span>]<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">125</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">90</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">130</span>)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "6c1c70b0-54c0-48d7-b1aa-a1bcabf30d03",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using $in(not contained In) operators",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using $in(not contained In) operators",
      "timedOut": false,
      "duration": 2638,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"daysold\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$nin\"</span>: [<span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">125</span>, <span class=\"hljs-number\">90</span>]<br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br><br>\t\t\t\tobject1 = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\tobject2 = res.body.objects[<span class=\"hljs-number\">1</span>]<br>\t\t\t\tobject3 = res.body.objects[<span class=\"hljs-number\">2</span>]<br>\t\t\t\t<br>\t\t\t\tobject1.daysold.should.be.equal(<span class=\"hljs-number\">135</span>)<br>\t\t\t\tobject2.daysold.should.be.equal(<span class=\"hljs-number\">160</span>)<br>\t\t\t\tobject3.daysold.should.be.equal(<span class=\"hljs-number\">100</span>)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "71394df2-0659-4b5e-9d88-68389f73329d",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app using $exists(exists) operators",
      "fullTitle": "Get objects Queries should be able to get objects created for an app using $exists(exists) operators",
      "timedOut": false,
      "duration": 1464,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t \t<span class=\"hljs-string\">\"query\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"bookname\"</span>: {<br>\t\t\t      <span class=\"hljs-string\">\"$exists\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t    }<br>\t\t\t  }<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\tobject.bookname.should.be.equal(<span class=\"hljs-string\">'FTJ'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "0e84eaca-feaa-4e47-8da4-e80de28b89ff",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app and include its owner",
      "fullTitle": "Get objects Queries should be able to get objects created for an app and include its owner",
      "timedOut": false,
      "duration": 1463,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include_owner\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'author'</span>,<span class=\"hljs-string\">'bookname'</span>,<span class=\"hljs-string\">'address'</span>,<span class=\"hljs-string\">'daysold'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'_owner'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object._owner).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'username'</span>,<span class=\"hljs-string\">'email'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'active'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'tags'</span>,<span class=\"hljs-string\">'last_login_at'</span>])<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "d20c8117-5140-4501-b259-079fc2d71d47",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app and include its count",
      "fullTitle": "Get objects Queries should be able to get objects created for an app and include its count",
      "timedOut": false,
      "duration": 1728,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tres.body.count.should.be.equal(<span class=\"hljs-number\">6</span>)<br>\t\t\t\tres.body.objects.length.should.be.equal(<span class=\"hljs-number\">6</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "4d40f2cb-b76e-406b-8d1c-5011112bafb3",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app and include its schema",
      "fullTitle": "Get objects Queries should be able to get objects created for an app and include its schema",
      "timedOut": false,
      "duration": 2398,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"include_schema\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body).should.to.be.deep.equal([<span class=\"hljs-string\">'objects'</span>,<span class=\"hljs-string\">'schema'</span>])<br>\t\t\t\tres.body.schema[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'author'</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "5baa6886-a32a-481c-b835-c0ec90543f8d",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get objects created for an app and include unpublished objects",
      "fullTitle": "Get objects Queries should be able to get objects created for an app and include unpublished objects",
      "timedOut": false,
      "duration": 3795,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"one\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"published\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t})<br>\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t  \t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid, <span class=\"hljs-string\">''</span>, {<br>\t\t\t\t  <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"include_unpublished\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t\t}))<br>\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>,<span class=\"hljs-string\">'app_user_object_uid'</span>,<span class=\"hljs-string\">'created_by'</span>,<span class=\"hljs-string\">'updated_by'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'ACL'</span>,<span class=\"hljs-string\">'__loc'</span>,<span class=\"hljs-string\">'_version'</span>,<span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>      <span class=\"hljs-built_in\">console</span>.log(err)<br>    })",
      "isRoot": false,
      "uuid": "cb1c3898-1e55-421b-97ca-400e96abb06a",
      "parentUUID": "d7d238a7-971b-4282-9c94-fe6b82ddca05",
      "skipped": false
    },
    {
      "title": "should be able to get all objects present for given class as app owner(system user)",
      "fullTitle": "Get objects should be able to get all objects present for given class as app owner(system user)",
      "timedOut": false,
      "duration": 1620,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\tobjCan  = R.last(res.body.objects)<br>\tobjCan.ACL.should.be.deep.equal({})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "73f705c5-42b4-4466-8269-1c4837ca6b1d",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects present for given class as a collaborator",
      "fullTitle": "Get objects should be able to get all objects present for given class as a collaborator",
      "timedOut": false,
      "duration": 1493,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user2.authtoken, app.api_key, myclass.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\tobjCan  = R.last(res.body.objects)<br>\tobjCan.ACL.should.be.deep.equal({})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "a1fc1cef-c15b-4c43-82a1-f6210f3db215",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects present for given class as app user(owner)",
      "fullTitle": "Get objects should be able to get all objects present for given class as app user(owner)",
      "timedOut": false,
      "duration": 1456,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\tobjCan  = R.last(res.body.objects)<br>\tobjCan.ACL.should.be.deep.equal({<br>\t        <span class=\"hljs-string\">\"can\"</span>: []<br>\t      })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "64b22c49-5a63-4c00-a974-93472a1a5362",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects present for given class as a other app user",
      "fullTitle": "Get objects should be able to get all objects present for given class as a other app user",
      "timedOut": false,
      "duration": 1658,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser2.authtoken, app.api_key, myclass.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\tobjCan  = R.last(res.body.objects)<br>\tobjCan.ACL.should.be.deep.equal({<br>\t        <span class=\"hljs-string\">\"can\"</span>: [<br>\t          <span class=\"hljs-string\">\"update\"</span>,<br>\t          <span class=\"hljs-string\">\"delete\"</span><br>\t        ]<br>\t      })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "a435282c-4aef-4919-9586-4518647fc6b6",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects and limit it to 1",
      "fullTitle": "Get objects should be able to get all objects and limit it to 1",
      "timedOut": false,
      "duration": 1632,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "f85b2b39-8cab-4ae4-92b4-08be20a6f186",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should get be able to get all objects and skip it to 2",
      "fullTitle": "Get objects should get be able to get all objects and skip it to 2",
      "timedOut": false,
      "duration": 1778,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">3</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "5ee5ab30-36db-4651-965e-e26b80f01948",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should get be able to get all objects using query",
      "fullTitle": "Get objects should get be able to get all objects using query",
      "timedOut": false,
      "duration": 1630,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, appUser1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"query\"</span>: {<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-number\">4</span>}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobjects = res.body.objects<br>\tobjects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "5839bd02-a5ea-44fc-8bd2-5e5b0f09104d",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects skip 2 / limit 1 ",
      "fullTitle": "Get objects should be able to get all objects skip 2 / limit 1 ",
      "timedOut": false,
      "duration": 1478,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"skip\"</span>: <span class=\"hljs-number\">2</span>,<br>\t<span class=\"hljs-string\">\"limit\"</span>: <span class=\"hljs-number\">1</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "84989246-1f95-4aa0-9677-ded962210023",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get only object`s count in response",
      "fullTitle": "Get objects should be able to get only object`s count in response",
      "timedOut": false,
      "duration": 1613,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "e1580fa8-4468-4106-9c9a-7c58283dc99c",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects and include schema for given class",
      "fullTitle": "Get objects should be able to get all objects and include schema for given class",
      "timedOut": false,
      "duration": 1639,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"include_schema\"</span>: <span class=\"hljs-string\">\"false\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\tschema = res.body.schema<br>\t\tshould.exist(schema)<br>\t\tschema[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">\"name\"</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "b3dd1fda-7cb2-4a87-8143-dc853193fc33",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects and include count in response",
      "fullTitle": "Get objects should be able to get all objects and include count in response",
      "timedOut": false,
      "duration": 1451,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\tcount = res.body.count<br>\t\tshould.exist(count)<br>\t\tcount.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "924fb3b9-3764-4485-8e26-b9913a9f16e5",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get zero objects and include count as a \"0\"",
      "fullTitle": "Get objects should be able to get zero objects and include count as a \"0\"",
      "timedOut": false,
      "duration": 1608,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, classZero.uid, {<br>\t<span class=\"hljs-string\">\"include_count\"</span>: <span class=\"hljs-string\">\"true\"</span><br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"objects\"</span>: [],<br>\t  <span class=\"hljs-string\">\"count\"</span>: <span class=\"hljs-number\">0</span><br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "272b9679-5ecd-4d47-a98d-d4502deb516e",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects in ascending order",
      "fullTitle": "Get objects should be able to get all objects in ascending order",
      "timedOut": false,
      "duration": 1480,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"asc\"</span>: <span class=\"hljs-string\">\"name\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobjects[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'1'</span>)<br>\t\tobjects[<span class=\"hljs-number\">1</span>].name.should.be.equal(<span class=\"hljs-string\">'2'</span>)<br>\t\tobjects[<span class=\"hljs-number\">2</span>].name.should.be.equal(<span class=\"hljs-string\">'3'</span>)<br>\t\tobjects[<span class=\"hljs-number\">3</span>].name.should.be.equal(<span class=\"hljs-string\">'4'</span>)<br>\t\tobjects[<span class=\"hljs-number\">4</span>].name.should.be.equal(<span class=\"hljs-string\">'5'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "b1ccf8c9-4ef2-412f-bc96-3378a8c6a6dc",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects in descending order",
      "fullTitle": "Get objects should be able to get all objects in descending order",
      "timedOut": false,
      "duration": 1581,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass.uid, {<br>\t<span class=\"hljs-string\">\"desc\"</span>: <span class=\"hljs-string\">\"name\"</span><br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobjects = res.body.objects<br>\t\tobjects.length.should.be.equal(<span class=\"hljs-number\">5</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobjects[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'5'</span>)<br>\t\tobjects[<span class=\"hljs-number\">1</span>].name.should.be.equal(<span class=\"hljs-string\">'4'</span>)<br>\t\tobjects[<span class=\"hljs-number\">2</span>].name.should.be.equal(<span class=\"hljs-string\">'3'</span>)<br>\t\tobjects[<span class=\"hljs-number\">3</span>].name.should.be.equal(<span class=\"hljs-string\">'2'</span>)<br>\t\tobjects[<span class=\"hljs-number\">4</span>].name.should.be.equal(<span class=\"hljs-string\">'1'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "c467e95a-2c9b-4b17-9a46-6b28137e7791",
      "parentUUID": "67d7abfe-90dc-4c70-aaa4-a6f76258503c",
      "skipped": false
    },
    {
      "title": "should be able to get all objects using (ALL) delta query",
      "fullTitle": "Delta queries should be able to get all objects using (ALL) delta query",
      "timedOut": false,
      "duration": 1472,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"ALL\"</span>: date<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'deleted_at'</span>])<br>\t\t\t\tcreatedAt = res.body.objects.created_at<br>\t\t\t\tupdatedAt = res.body.objects.updated_at<br>\t\t\t\tdeletedAt = res.body.objects.deleted_at<br>\t\t\t\tres.body.objects.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tcreatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tdeletedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tcreatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\tupdatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\tdeletedAt.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object3.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(object3.name)<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
      "isRoot": false,
      "uuid": "88d83cb9-b7ac-4852-bb2e-f7b5819b3a86",
      "parentUUID": "f67a3605-43ed-4ec2-8ca6-172e817c1e69",
      "skipped": false
    },
    {
      "title": "should be able to get all objects by (created_at) delta query",
      "fullTitle": "Delta queries should be able to get all objects by (created_at) delta query",
      "timedOut": false,
      "duration": 2657,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"created_at\"</span>: object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>])<br>\t\t\t\tcreatedAt = res.body.objects.created_at<br>\t\t\t\tcreatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tcreatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\tcreatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\t<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
      "isRoot": false,
      "uuid": "61306a60-f362-4730-9a43-b0f3a915e014",
      "parentUUID": "f67a3605-43ed-4ec2-8ca6-172e817c1e69",
      "skipped": false
    },
    {
      "title": "should be able to get all objects by (updated_at) delta query",
      "fullTitle": "Delta queries should be able to get all objects by (updated_at) delta query",
      "timedOut": false,
      "duration": 1479,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"updated_at\"</span>: object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'updated_at'</span>])<br>\t\t\t\t\tupdatedAt = res.body.objects.updated_at<br>\t\t\t\t\tupdatedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupdatedAt.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object2.uid)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].uid.should.be.equal(object1.uid)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'updated'</span>)<br>\t\t\t\t\tupdatedAt[<span class=\"hljs-number\">1</span>].name.should.be.equal(object1.name)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "1a9f6b4d-097a-4136-b183-5cfa7a0a2202",
      "parentUUID": "f67a3605-43ed-4ec2-8ca6-172e817c1e69",
      "skipped": false
    },
    {
      "title": "should be able to get all objects by delete_at delta query",
      "fullTitle": "Delta queries should be able to get all objects by delete_at delta query",
      "timedOut": false,
      "duration": 1881,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> date = object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"delta\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"deleted_at\"</span>: object3.created_at.substr(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">19</span>)<br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(res.body.objects).should.to.be.deep.equal([<span class=\"hljs-string\">'deleted_at'</span>])<br>\t\t\t\t\tdeletedAt = res.body.objects.deleted_at<br>\t\t\t\t\tdeletedAt.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tdeletedAt.length.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].uid.should.be.equal(object3.uid)<br>\t\t\t\t\tdeletedAt[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'one'</span>)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "bff9e6ee-46ca-48c4-97c9-58d4354f02c0",
      "parentUUID": "f67a3605-43ed-4ec2-8ca6-172e817c1e69",
      "skipped": false
    },
    {
      "title": "should be able to get single object present as system user",
      "fullTitle": "Object CURD should be able to get single object present as system user",
      "timedOut": false,
      "duration": 1437,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\tobject.ACL.should.be.deep.equal({})<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "4e376059-c3d7-42d0-8f20-17174afa21c1",
      "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
      "skipped": false
    },
    {
      "title": "should be able to get single object(sys) present as a app user",
      "fullTitle": "Object CURD should be able to get single object(sys) present as a app user",
      "timedOut": false,
      "duration": 1757,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, appUser10.authtoken, app.api_key, myclass3.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t\tobject.ACL.should.be.deep.equal({<br>\t\t\t      <span class=\"hljs-string\">\"can\"</span>: []<br>\t\t\t    })<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "a29e2f6c-e69b-4517-8226-7441bb0affab",
      "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
      "skipped": false
    },
    {
      "title": "should be able to get single object present as a app user",
      "fullTitle": "Object CURD should be able to get single object present as a app user",
      "timedOut": false,
      "duration": 1474,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, appUser10.authtoken, app.api_key, myclass3.uid, object2.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t\tobject.ACL.should.be.deep.equal({<br>\t\t\t      <span class=\"hljs-string\">\"can\"</span>: [<br>\t\t\t        <span class=\"hljs-string\">\"update\"</span>,<br>\t\t\t        <span class=\"hljs-string\">\"delete\"</span><br>\t\t\t      ]<br>\t\t\t    })<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "4d8f113f-ca6c-4145-8dec-6012059c866e",
      "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
      "skipped": false
    },
    {
      "title": "should be able to get single object present as a other app user",
      "fullTitle": "Object CURD should be able to get single object present as a other app user",
      "timedOut": false,
      "duration": 1476,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, appUser9.authtoken, app.api_key, myclass3.uid, object2.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t\tobject.ACL.should.be.deep.equal({<br>\t\t\t      <span class=\"hljs-string\">\"can\"</span>: []<br>\t\t\t    })<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "14d651fd-50c2-4f57-bcfd-d277401a5e1b",
      "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
      "skipped": false
    },
    {
      "title": "should be able to update object present",
      "fullTitle": "Object CURD should be able to update object present",
      "timedOut": false,
      "duration": 1750,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, object1.uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "02ca4718-db6f-468f-8055-60c0b449f750",
      "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
      "skipped": false
    },
    {
      "title": "should be able to perform scilent update on object",
      "fullTitle": "Object CURD should be able to perform scilent update on object",
      "timedOut": false,
      "duration": 1464,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object_sclient'</span>, sys_user1.authtoken, app.api_key, <span class=\"hljs-literal\">true</span>, myclass3.uid, object2.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.object<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t<span class=\"hljs-comment\">// Object.keys(object).should.to.be.deep.equal(['name', 'app_user_object_uid', 'created_by', 'updated_by', 'created_at', 'updated_at', 'uid', 'published', 'ACL', '__loc', '_version', 'tags'])</span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\tobject.created_at.should.be.equal(object.updated_at)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "07fd048b-e96e-468d-b3bc-1f79b6251287",
      "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid object uid",
      "fullTitle": "Object CURD should provide an error message for invalid object uid",
      "timedOut": false,
      "duration": 1444,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, <span class=\"hljs-string\">\"swapnil\"</span>, {<br>\t\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"updated\"</span><br>\t\t\t\t}<br>\t\t\t}))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The requested object doesn't exist.\"</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">141</span>,<br>\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t    ]<br>\t\t\t\t  }<br>\t\t\t\t})<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
      "isRoot": false,
      "uuid": "3e54db75-97ba-4e31-bba8-6955d0301e36",
      "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
      "skipped": false
    },
    {
      "title": "should be able to delete object present",
      "fullTitle": "Object CURD should be able to delete object present",
      "timedOut": false,
      "duration": 1852,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'delete_object'</span>, sys_user1.authtoken, app.api_key, myclass3.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "f7f96df6-d710-40a5-9227-26eba1877d48",
      "parentUUID": "f04e2afe-8fdb-43ba-9ff0-6b243e998369",
      "skipped": false
    },
    {
      "title": "should be able to get all object includeing unpublish",
      "fullTitle": "Unpublish object CURD should be able to get all object includeing unpublish",
      "timedOut": false,
      "duration": 1649,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, myclass5.uid))<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\tobject = R.last(res.body.objects)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t})<br>\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\tdone()<br>\t\t\t})<br>\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t})",
      "isRoot": false,
      "uuid": "c721cea9-8956-4d74-bff4-ea6aff8cef95",
      "parentUUID": "92f6be2d-c0bb-4675-bc26-bcec7889faab",
      "skipped": false
    },
    {
      "title": "should be able to get single unpublish object present",
      "fullTitle": "Unpublish object CURD should be able to get single unpublish object present",
      "timedOut": false,
      "duration": 1692,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_object'</span>, sys_user1.authtoken, app.api_key, myclass5.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tobject = res.body.object<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "0c614594-84ba-4655-b19d-6e553805ce53",
      "parentUUID": "92f6be2d-c0bb-4675-bc26-bcec7889faab",
      "skipped": false
    },
    {
      "title": "should be able to update object present",
      "fullTitle": "Unpublish object CURD should be able to update object present",
      "timedOut": false,
      "duration": 1488,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, myclass5.uid, object1.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: [<span class=\"hljs-string\">\"updated\"</span>]<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobject = res.body.object<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "c0338606-4b49-441c-8027-959b0e913a04",
      "parentUUID": "92f6be2d-c0bb-4675-bc26-bcec7889faab",
      "skipped": false
    },
    {
      "title": "should be able to delete object present",
      "fullTitle": "Unpublish object CURD should be able to delete object present",
      "timedOut": false,
      "duration": 1671,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'delete_object'</span>, sys_user1.authtoken, app.api_key, myclass5.uid, object1.uid))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object deleted successfully.'</span>)<br>\t\t\t\t\t<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})<br>\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "f0054839-b046-4026-a59e-0dbcd4e67f9f",
      "parentUUID": "92f6be2d-c0bb-4675-bc26-bcec7889faab",
      "skipped": false
    },
    {
      "title": "should provide an error message for -ve index key",
      "fullTitle": "PUSH-PULL should provide an error message for -ve index key",
      "timedOut": false,
      "duration": 1616,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"888\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: -<span class=\"hljs-number\">6</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"Invalid parameters\"</span>: [<br>\t      <span class=\"hljs-string\">\"have invalid update operation(s). Please check if they were performed on null values.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "191f0c39-8040-40df-902f-2fc9ecba8eb5",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should be able to PUSH value (object property) in array field present in group",
      "fullTitle": "PUSH-PULL should be able to PUSH value (object property) in array field present in group",
      "timedOut": false,
      "duration": 1808,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"1222222\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "152ce7c2-2680-4e7d-8ac8-3a06adf2aa7e",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should able to PUSH value (object property) in array field present in group without pasing index",
      "fullTitle": "PUSH-PULL should able to PUSH value (object property) in array field present in group without pasing index",
      "timedOut": false,
      "duration": 2315,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">555</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "7ba0e19c-0e8e-4429-ad60-1e147377e8eb",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should able to PUSH value(dot property) in array field present in group",
      "fullTitle": "PUSH-PULL should able to PUSH value(dot property) in array field present in group",
      "timedOut": false,
      "duration": 1636,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"666\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.object<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\t<span class=\"hljs-comment\">// object.roundone.hits.should.have.length(6)</span><br>\tobject.roundone.hits[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">666</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "18848480-3083-4432-a22d-52432b925e63",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should provide an error message for field datatype validation for PUSH operation",
      "fullTitle": "PUSH-PULL should provide an error message for field datatype validation for PUSH operation",
      "timedOut": false,
      "duration": 2689,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone.hits.0\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not number\"</span><br>\t    ]<br>\t  }<br>\t})\t\t\t\t\t<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "695d4366-8782-41a4-a254-4ec6d2672c3e",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should able to PUSH value(dot property) without passing index",
      "fullTitle": "PUSH-PULL should able to PUSH value(dot property) without passing index",
      "timedOut": false,
      "duration": 1562,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">999</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = R.last(res.body.object.roundone.hits)<br>\tobject.should.be.equal(<span class=\"hljs-number\">999</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "4aac4daf-7153-46b9-8339-a1c5ceb11a06",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should able to create object and PUSH values in it",
      "fullTitle": "PUSH-PULL should able to create object and PUSH values in it",
      "timedOut": false,
      "duration": 1509,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"555\"</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tobject = res.body.object.roundone.hits[<span class=\"hljs-number\">0</span>]<br>\tobject.should.be.equal(<span class=\"hljs-number\">555</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "09a8ed67-b765-497c-ae52-ff70f652d827",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should able to create object without PUSH operation (blank object)",
      "fullTitle": "PUSH-PULL should able to create object without PUSH operation (blank object)",
      "timedOut": false,
      "duration": 1663,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: [<span class=\"hljs-string\">\"786\"</span>]<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">\"Woot! Object created successfully.\"</span>)<br>\tres.body.object.roundone.should.be.deep.equal({<br>\t\t\t      <span class=\"hljs-string\">\"hits\"</span>: []<br>\t\t\t    })<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "b9d467d6-0fd2-4203-a39f-28bf5d7a4214",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should able to create object and PUSH values in it using dot property",
      "fullTitle": "PUSH-PULL should able to create object and PUSH values in it using dot property",
      "timedOut": false,
      "duration": 1639,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">777</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"parameter\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "b4095cd1-a64c-4049-a012-ef339874ebdd",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should be able to PULL value(object property) from array while updating object",
      "fullTitle": "PUSH-PULL should be able to PULL value(object property) from array while updating object",
      "timedOut": false,
      "duration": 2954,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"101\"</span>, <span class=\"hljs-string\">\"102\"</span>, <span class=\"hljs-string\">\"103\"</span>, <span class=\"hljs-string\">\"104\"</span>, <span class=\"hljs-string\">\"105\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest1\"</span><br>\t\t}<br>\t}<br>}))<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">105</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))\t<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.roundone.hits.should.be.deep.equal([<span class=\"hljs-number\">101</span>, <span class=\"hljs-number\">102</span>, <span class=\"hljs-number\">103</span>, <span class=\"hljs-number\">104</span>])<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "c2d077a3-5d6f-4b9a-b8f1-bd672f3e0bb6",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should be able to PULL multiple values(object property) from array while updating object",
      "fullTitle": "PUSH-PULL should be able to PULL multiple values(object property) from array while updating object",
      "timedOut": false,
      "duration": 3182,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"201\"</span>, <span class=\"hljs-string\">\"202\"</span>, <span class=\"hljs-string\">\"203\"</span>, <span class=\"hljs-string\">\"204\"</span>, <span class=\"hljs-string\">\"205\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest2\"</span><br>\t\t}<br>\t}<br>}))<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-number\">201</span>, <span class=\"hljs-number\">202</span>, <span class=\"hljs-number\">203</span>, <span class=\"hljs-number\">204</span>, <span class=\"hljs-number\">205</span>]<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))\t<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.roundone.hits.should.be.deep.equal([])<br>\t<span class=\"hljs-comment\">// object.roundone.hits[1].should.be.not.equal([3])</span><br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "a99d3e66-4938-483c-8291-dee2c726068d",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should provide an error message for data key for PULL operation",
      "fullTitle": "PUSH-PULL should provide an error message for data key for PULL operation",
      "timedOut": false,
      "duration": 1667,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object.uid <br>\t \t\t\t<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone.hits\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "27c451fa-19ac-4e81-9a50-1194ba974691",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should provide an error message if index specified for PULL operation ",
      "fullTitle": "PUSH-PULL should provide an error message if index specified for PULL operation ",
      "timedOut": false,
      "duration": 3402,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"401\"</span>, <span class=\"hljs-string\">\"402\"</span>, <span class=\"hljs-string\">\"403\"</span>, <span class=\"hljs-string\">\"404\"</span>, <span class=\"hljs-string\">\"405\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest3\"</span><br>\t\t}<br>\t}<br>}))<br>\t \t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">2</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone.hits\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "e60f2545-2b92-4966-9397-66b369c0ed27",
      "parentUUID": "a40f69b1-ccda-4ed4-b106-bd9d52bb7f76",
      "skipped": false
    },
    {
      "title": "should provide an error message for -ve index in UPDATE operation",
      "fullTitle": "UPDATE on group(array) field should provide an error message for -ve index in UPDATE operation",
      "timedOut": false,
      "duration": 3268,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">55000</span>)<br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"201\"</span>, <span class=\"hljs-string\">\"202\"</span>, <span class=\"hljs-string\">\"203\"</span>, <span class=\"hljs-string\">\"204\"</span>, <span class=\"hljs-string\">\"205\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest122\"</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// console.log(objUid)</span><br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">9999</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: -<span class=\"hljs-number\">1</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "3d09b7f3-cc09-4f4a-8951-9f5bceaf617f",
      "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
      "skipped": false
    },
    {
      "title": "should be able to update the given value(object property) at provided index",
      "fullTitle": "UPDATE on group(array) field should be able to update the given value(object property) at provided index",
      "timedOut": false,
      "duration": 3450,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">35000</span>)<br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"201\"</span>, <span class=\"hljs-string\">\"202\"</span>, <span class=\"hljs-string\">\"203\"</span>, <span class=\"hljs-string\">\"204\"</span>, <span class=\"hljs-string\">\"205\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest12\"</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"hits\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-number\">9999</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">1</span><br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"roundone\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "dd88a9d8-220f-4cba-8fd4-54370319b429",
      "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
      "skipped": false
    },
    {
      "title": "should be able to update then value(dot property) at provided index",
      "fullTitle": "UPDATE on group(array) field should be able to update then value(dot property) at provided index",
      "timedOut": false,
      "duration": 3502,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">40000</span>)<br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"roundone\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"hits\"</span>: [<span class=\"hljs-string\">\"501\"</span>, <span class=\"hljs-string\">\"502\"</span>, <span class=\"hljs-string\">\"503\"</span>, <span class=\"hljs-string\">\"504\"</span>, <span class=\"hljs-string\">\"505\"</span>],<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest22\"</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t \t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t \t\t\t\tobjUid = res.body.object.uid<br>\t \t\t\t})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass7.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"roundone.hits\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"UPDATE\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: <span class=\"hljs-string\">\"666\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span><br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.roundone.hits[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">666</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "8efa3016-e725-48d8-95e5-448ab4f53c96",
      "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
      "skipped": false
    },
    {
      "title": "should provide an error message for multiple values(object property) PUSH on same object",
      "fullTitle": "UPDATE on group(array) field should provide an error message for multiple values(object property) PUSH on same object",
      "timedOut": false,
      "duration": 2101,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> objUid = object1.uid<br><br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass8.uid, objUid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"UPDATE\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"marks\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-number\">502</span>, <span class=\"hljs-number\">503</span>]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t},<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"subject\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"list\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-string\">\"ENG\"</span>]<br>\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"group.0.subject\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "554ce8d0-2552-487a-913c-7a79538ec05a",
      "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
      "skipped": false
    },
    {
      "title": "should provide an error message for multiple values(dot property) PUSH on same object",
      "fullTitle": "UPDATE on group(array) field should provide an error message for multiple values(dot property) PUSH on same object",
      "timedOut": false,
      "duration": 1551,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">25000</span>)<br><span class=\"hljs-keyword\">var</span> objUid = object1.uid<br><br>\t \t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, appUser1.authtoken, app.api_key, myclass8.uid, objUid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"group\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"UPDATE\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"index\"</span>: <span class=\"hljs-number\">0</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"marks\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-number\">99</span>, <span class=\"hljs-number\">98</span>]<br>\t\t\t\t\t\t}<br>\t\t\t\t\t},<br>\t\t\t\t\t<span class=\"hljs-string\">\"subject.0.list\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"PUSH\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-string\">\"FRN\"</span>]<br>\t\t\t\t\t\t},<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"subject.0.list\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"PULL\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data\"</span>: [<span class=\"hljs-string\">\"PHY\"</span>]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}<br>\t\t\t\t\t}<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object.group[<span class=\"hljs-number\">0</span>]<br>\tobject.marks[<span class=\"hljs-number\">4</span>].should.be.equal(<span class=\"hljs-number\">99</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "b38ad579-4bce-400f-826b-c941ff76f27e",
      "parentUUID": "49c94157-492a-4706-bd4c-d2319fee4d47",
      "skipped": false
    },
    {
      "title": "should provide an error message for array field when index is not specifyed for field to ADD/SUB",
      "fullTitle": "ADD_SUB should provide an error message for array field when index is not specifyed for field to ADD/SUB",
      "timedOut": false,
      "duration": 1486,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_plus\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t},<br>\t\t<span class=\"hljs-string\">\"cash_minus\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">500</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"cash_plus\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "42e8c1bf-2cc7-4e12-8249-4062dd803b6e",
      "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
      "skipped": false
    },
    {
      "title": "should be able to ADD provided number in present field in an array",
      "fullTitle": "ADD_SUB should be able to ADD provided number in present field in an array",
      "timedOut": false,
      "duration": 1912,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_plus.0\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.cash_plus[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">6900</span>)<br>\tobject.cash_plus[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-number\">6300</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "5baa51f1-0b7a-48c5-a361-4bfe6658ad85",
      "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
      "skipped": false
    },
    {
      "title": "should be able to SUB given number in present field in an array",
      "fullTitle": "ADD_SUB should be able to SUB given number in present field in an array",
      "timedOut": false,
      "duration": 1646,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_minus\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">500.7</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.cash_minus.should.be.equal(<span class=\"hljs-number\">8000.000000000001</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "2cad585c-a9ca-4a0b-b16a-268d5a13976b",
      "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
      "skipped": false
    },
    {
      "title": "should provide an error message for null field ADD/sub operation",
      "fullTitle": "ADD_SUB should provide an error message for null field ADD/sub operation",
      "timedOut": false,
      "duration": 3300,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"cash_plus.4\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"cash_plus.3\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">2000</span><br>\t\t\t}<br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"3\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "803771c9-ec9d-48de-b0c7-0e2cf98246a4",
      "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
      "skipped": false
    },
    {
      "title": "should be able to ADD given number to number field present inside the group",
      "fullTitle": "ADD_SUB should be able to ADD given number to number field present inside the group",
      "timedOut": false,
      "duration": 1514,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group_cash.add_cash.0\"</span>: {<span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">50</span>}<br>\t\t}<br>\t}<br>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.group_cash.add_cash[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-number\">102</span>)<br>\tobject.group_cash.add_cash[<span class=\"hljs-number\">1</span>].should.be.equal(<span class=\"hljs-number\">75</span>)<br>\tobject.group_cash.remove_cash.should.be.equal(<span class=\"hljs-number\">264.56</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "f77657a1-d854-415d-a0c6-c18226a985a5",
      "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
      "skipped": false
    },
    {
      "title": "should be able to SUB given number to number field present inside the group",
      "fullTitle": "ADD_SUB should be able to SUB given number to number field present inside the group",
      "timedOut": false,
      "duration": 1675,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group_cash.remove_cash\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">200</span><br>\t\t\t}<br>\t\t}<br>\t}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.group_cash.remove_cash.should.be.equal(<span class=\"hljs-number\">64.56</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "6b44a121-574a-4476-8e57-179a7d8f7584",
      "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
      "skipped": false
    },
    {
      "title": "should provide an error message for incorrect group field",
      "fullTitle": "ADD_SUB should provide an error message for incorrect group field",
      "timedOut": false,
      "duration": 1470,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">35000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"group_cash.remove_cash.0\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"SUB\"</span>: <span class=\"hljs-number\">264</span><br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"parameters\"</span>: [<br>\t      <span class=\"hljs-string\">\"has an invalid array operation.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "1c5bf295-e912-41ff-856b-faae6ab54df2",
      "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
      "skipped": false
    },
    {
      "title": "should be able to ADD given number to number field present inside the group",
      "fullTitle": "ADD_SUB should be able to ADD given number to number field present inside the group",
      "timedOut": false,
      "duration": 1593,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object'</span>, sys_user1.authtoken, app.api_key, classMath.uid, objectMath.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"group_cash.add_cash\"</span>: {<span class=\"hljs-string\">\"ADD\"</span>: <span class=\"hljs-number\">50</span>}<br>\t\t}<br>\t}<br>))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object update failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">121</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"group_cash.add_cash\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not multiple\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "c08ed9a0-208e-40df-9bcc-3ff9266f9e5b",
      "parentUUID": "60573e93-5197-4948-a7aa-6392cea80c58",
      "skipped": false
    },
    {
      "title": "should be able to search and update object using UPSERT operation",
      "fullTitle": "UPSERT should be able to search and update object using UPSERT operation",
      "timedOut": false,
      "duration": 2924,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classInfo.uid, {<br>  <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>    <span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"pune\"</span><br>  },<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"sachin\"</span>,<br>    <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">36</span>,<br>    <span class=\"hljs-string\">\"address\"</span>: {<br>      <span class=\"hljs-string\">\"state\"</span>: <span class=\"hljs-string\">\"DL\"</span>,<br>      <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"mumbai\"</span><br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object updated successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, classInfo.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\tobject.name.should.be.equal(<span class=\"hljs-string\">'sachin'</span>)<br>\tobject.address.state.should.be.equal(<span class=\"hljs-string\">'DL'</span>)<br>\tobject.address.city.should.be.equal(<span class=\"hljs-string\">'mumbai'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "b898980f-7595-48ca-ba25-5815f4a41d97",
      "parentUUID": "2d9102fe-6ba4-440c-9d18-12ffc71b8af3",
      "skipped": false
    },
    {
      "title": "should be able to search and create new object if not found",
      "fullTitle": "UPSERT should be able to search and create new object if not found",
      "timedOut": false,
      "duration": 1853,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// console.log(classInfo.uid)</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classInfo.uid, {<br>  <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>    <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"ooty\"</span><br>  },<br>  <span class=\"hljs-string\">\"object\"</span>: {<br>    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"hari\"</span>,<br>    <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">28</span>,<br>    <span class=\"hljs-string\">\"address\"</span>: {<br>      <span class=\"hljs-string\">\"state\"</span>: <span class=\"hljs-string\">\"kerala\"</span>,<br>      <span class=\"hljs-string\">\"city\"</span>: <span class=\"hljs-string\">\"ooty\"</span><br>    }<br>  }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\tobject = res.body.object<br>\tobject.name.should.be.equal(<span class=\"hljs-string\">'hari'</span>)<br>\tobject.age.should.be.equal(<span class=\"hljs-number\">28</span>)<br>\tobject.address.state.should.be.equal(<span class=\"hljs-string\">'kerala'</span>)<br>\tobject.address.city.should.be.equal(<span class=\"hljs-string\">'ooty'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "e7860621-8f36-4ef7-babb-8c6566f84e10",
      "parentUUID": "2d9102fe-6ba4-440c-9d18-12ffc71b8af3",
      "skipped": false
    },
    {
      "title": "should be able to update reference object using UPSERT operation",
      "fullTitle": "UPSERT should be able to update reference object using UPSERT operation",
      "timedOut": false,
      "duration": 3545,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// console.log(classInfo.uid)</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classRef.uid, {<br>\t\t\t    <span class=\"hljs-string\">\"object\"</span>: {<br>\t\t        <span class=\"hljs-string\">\"owner\"</span>: [{<br>\t\t          <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>\t\t              <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"sing\"</span><br>\t\t          },<br>\t\t          <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">55</span>,<br>\t\t          <span class=\"hljs-string\">\"address.state\"</span>: <span class=\"hljs-string\">\"KT\"</span>,<br>\t\t          <span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"hampi\"</span><br>\t\t        }]<br>\t\t\t    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'get_all_objects'</span>, sys_user1.authtoken, app.api_key, classInfo.uid, {<br>\t <span class=\"hljs-string\">\"query\"</span>: {<br>\t    <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"sing\"</span><br>\t  }<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "c2bed31a-681d-4a32-aa79-a80f41341045",
      "parentUUID": "2d9102fe-6ba4-440c-9d18-12ffc71b8af3",
      "skipped": false
    },
    {
      "title": "should provide an error message for Multiple matching objects while UPSERT operation",
      "fullTitle": "UPSERT should provide an error message for Multiple matching objects while UPSERT operation",
      "timedOut": false,
      "duration": 1713,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-comment\">// console.log(classInfo.uid)</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classRef.uid, {<br>\t\t\t    <span class=\"hljs-string\">\"object\"</span>: {<br>\t\t        <span class=\"hljs-string\">\"owner\"</span>: [{<br>\t\t          <span class=\"hljs-string\">\"UPSERT\"</span>: {<br>\t\t              <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"peter\"</span><br>\t\t          },<br>\t\t          <span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">55</span>,<br>\t\t          <span class=\"hljs-string\">\"address.state\"</span>: <span class=\"hljs-string\">\"KT\"</span>,<br>\t\t          <span class=\"hljs-string\">\"address.city\"</span>: <span class=\"hljs-string\">\"hampi\"</span><br>\t\t        }]<br>\t\t\t    }<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"owner.0.UPSERT\"</span>: [<br>\t      <span class=\"hljs-string\">\"Bummer. Upsert failed. Multiple matching objects were found.\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "c7e8c593-fdd9-4e69-92f1-703770d4ab70",
      "parentUUID": "2d9102fe-6ba4-440c-9d18-12ffc71b8af3",
      "skipped": false
    },
    {
      "title": "should be able to have only localy unique objects per system user",
      "fullTitle": "Localy unique should be able to have only localy unique objects per system user",
      "timedOut": false,
      "duration": 3005,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">20000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test\"</span><br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// console.log(res.body)</span><br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "62f9f900-88f9-4516-a03f-913d45692073",
      "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
      "skipped": false
    },
    {
      "title": "should be able to have only localy unique objects per application user(tenant)",
      "fullTitle": "Localy unique should be able to have only localy unique objects per application user(tenant)",
      "timedOut": false,
      "duration": 5119,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">45000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}, tenant1.uid))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}, tenant1.uid))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}, tenant1.uid))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "811a4539-b3e6-4cd3-ae99-22380521cd4d",
      "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
      "skipped": false
    },
    {
      "title": "should be able to have only localy unique objects as per application user and system user",
      "fullTitle": "Localy unique should be able to have only localy unique objects as per application user and system user",
      "timedOut": false,
      "duration": 8190,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">45000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, <span class=\"hljs-string\">''</span>, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, <span class=\"hljs-string\">''</span>, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser3.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}, tenant2.uid))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "140606cc-2c4d-4b10-a917-ffd0c69bf3b7",
      "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
      "skipped": false
    },
    {
      "title": "should be able to have only localy unique objects as per application user in tenant",
      "fullTitle": "Localy unique should be able to have only localy unique objects as per application user in tenant",
      "timedOut": false,
      "duration": 5600,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">95000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser6.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classLocal.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "2d237746-9785-456a-a12e-5225daf9931f",
      "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
      "skipped": false
    },
    {
      "title": "should provide an error message for localy unique object present",
      "fullTitle": "Localy unique should provide an error message for localy unique object present",
      "timedOut": false,
      "duration": 3041,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classLocal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classLocal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"uniquness\"</span>: <span class=\"hljs-string\">\"test1\"</span><br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uniquness\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "a8e663aa-0fa7-42f0-8a77-abb40647aa58",
      "parentUUID": "8c623193-c0f5-4ed6-867a-705f85518fe8",
      "skipped": false
    },
    {
      "title": "should be able to have only globaly unique objects per user",
      "fullTitle": "Global unique should be able to have only globaly unique objects per user",
      "timedOut": false,
      "duration": 6633,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">35000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, sys_user1.authtoken, app.api_key, classGlobal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, <span class=\"hljs-string\">''</span>, app.api_key, classGlobal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t\t}<br>\t}))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: [<br>\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t]<br>\t\t}<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classGlobal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t\t}<br>\t}, tenant1.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.notice.should.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser2.authtoken, app.api_key, classGlobal.uid, {<br>\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"batman\"</span><br>\t\t}<br>\t}, tenant1.uid))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: [<br>\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t]<br>\t\t}<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "24d5801c-0b2c-4b75-9cf3-b84f998b2d17",
      "parentUUID": "a7ab7c54-3e41-443e-8f80-cf39ca47dc03",
      "skipped": false
    },
    {
      "title": "should provide an error message for global object already present",
      "fullTitle": "Global unique should provide an error message for global object already present",
      "timedOut": false,
      "duration": 1672,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classGlobal.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"swapnil\"</span><br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t    ]<br>\t  }<br>\t})<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "7b02c4ff-f10c-4648-8419-aac423e3317e",
      "parentUUID": "a7ab7c54-3e41-443e-8f80-cf39ca47dc03",
      "skipped": false
    },
    {
      "title": "should not be able to uniquness change local to global on class",
      "fullTitle": "Change uniquness should not be able to uniquness change local to global on class",
      "timedOut": false,
      "duration": 3787,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"uniqueclass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"uniqueclass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}]<br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tclassUnique = res.body.class<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'global'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, classUnique.uid, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t}]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}))<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class updated successfully!'</span>)<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'global'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tdone()<br>\t\t\t\t\t})<br>\t\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t\t})",
      "isRoot": false,
      "uuid": "4a2a8302-facc-4eae-bd8c-9ab0fc2d54fd",
      "parentUUID": "4cdf162d-5411-4586-bdbe-30baabf179f2",
      "skipped": false
    },
    {
      "title": "should be able to change uniquness local to null on class",
      "fullTitle": "Change uniquness should be able to change uniquness local to null on class",
      "timedOut": false,
      "duration": 3251,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"uniqueClass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"uniqueClass\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}]<br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t\tclassUnique = res.body.class<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'local'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, classUnique.uid, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t}]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}))<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class updated successfully!'</span>)<br>\t\t\t\t\t\tclassUpdated = res.body.class<br>\t\t\t\t\t\tshould.not.exist(classUpdated.schema[<span class=\"hljs-number\">0</span>].unique)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tdone()<br>\t\t\t\t\t})<br>\t\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t\t})",
      "isRoot": false,
      "uuid": "ee4a5dc8-e826-441a-90c1-64124fa85ae4",
      "parentUUID": "4cdf162d-5411-4586-bdbe-30baabf179f2",
      "skipped": false
    },
    {
      "title": "should be able to change uniquness global to null on class",
      "fullTitle": "Change uniquness should be able to change uniquness global to null on class",
      "timedOut": false,
      "duration": 3450,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"uniqueClass2\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"uniqueClass2\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}]<br>\t\t\t\t\t}<br>\t\t\t\t}))<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t\tclassUnique = res.body.class<br>\t\t\t\t\t\tclassUnique.schema[<span class=\"hljs-number\">0</span>].unique.should.be.equal(<span class=\"hljs-string\">'global'</span>)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, classUnique.uid, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-number\">7</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-number\">2</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t\t\t}]<br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t}))<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Class updated successfully!'</span>)<br>\t\t\t\t\t\tclassUpdated = res.body.class<br>\t\t\t\t\t\tshould.not.exist(classUpdated.schema[<span class=\"hljs-number\">0</span>].unique)<br>\t\t\t\t\t})<br>\t\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t\tdone()<br>\t\t\t\t\t})<br>\t\t\t\t\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t\t\t\t\t})",
      "isRoot": false,
      "uuid": "5a9f45ba-1a61-47b4-85b9-335bfdf9e3ed",
      "parentUUID": "4cdf162d-5411-4586-bdbe-30baabf179f2",
      "skipped": false
    },
    {
      "title": "should be able to update class with other unique fields and create objects",
      "fullTitle": "Change uniquness should be able to update class with other unique fields and create objects",
      "timedOut": false,
      "duration": 10270,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">25000</span>)<br><span class=\"hljs-comment\">// grp Golbal fields local</span><br>R.Promisify(factories.create(<span class=\"hljs-string\">'Create_class'</span>, sys_user1.authtoken, app.api_key, {<br>\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grpClass\"</span>,<br>\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"grpClass\"</span>,<br>\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t}<br>\t\t}, {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"group\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t},<br>\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t}<br>\t\t\t}, {<br>\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t}<br>\t\t\t}]<br>\t\t}]<br>\t}<br>}))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tclassUpdate = res.body.class<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid123\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"1\"</span>, <span class=\"hljs-string\">\"2\"</span>, <span class=\"hljs-string\">\"3\"</span>]<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Object created successfully.'</span>)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser6.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid123\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"3\"</span>, <span class=\"hljs-string\">\"2\"</span>, <span class=\"hljs-string\">\"1\"</span>]<br>\t\t\t\t}<br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Update_class'</span>, sys_user1.authtoken, app.api_key, <span class=\"hljs-string\">'built_io_application_user'</span>, {<br>\t\t\t<span class=\"hljs-string\">\"class\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"title\"</span>: <span class=\"hljs-string\">\"grpClass\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grpclass\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"inbuilt_class\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"name\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t}<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"group\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"grp1\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t},<br>\t\t\t\t\t<span class=\"hljs-string\">\"schema\"</span>: [{<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"text\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"id1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}, {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"num1\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"local\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t\t}<br>\t\t\t\t\t}]<br>\t\t\t\t}, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"age\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"data_type\"</span>: <span class=\"hljs-string\">\"number\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"display_name\"</span>: <span class=\"hljs-string\">\"age\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"mandatory\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"max\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"min\"</span>: <span class=\"hljs-literal\">null</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"multiple\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"format\"</span>: <span class=\"hljs-string\">\"\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"unique\"</span>: <span class=\"hljs-string\">\"global\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"action\"</span>: <span class=\"hljs-string\">\"add\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"field_metadata\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"allow_rich_text\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"multiline\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t\t\t\t}<br>\t\t\t\t}]<br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser6.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid456\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"4\"</span>, <span class=\"hljs-string\">\"5\"</span>, <span class=\"hljs-string\">\"6\"</span>]<br>\t\t\t\t},<br>\t\t\t\t<span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">10</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser5.authtoken, app.api_key, classUpdate.uid, {<br>\t\t\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"test\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"id1\"</span>: <span class=\"hljs-string\">\"myid456\"</span>,<br>\t\t\t\t\t<span class=\"hljs-string\">\"num1\"</span>: [<span class=\"hljs-string\">\"4\"</span>, <span class=\"hljs-string\">\"5\"</span>, <span class=\"hljs-string\">\"6\"</span>]<br>\t\t\t\t},<br>\t\t\t\t<span class=\"hljs-string\">\"age\"</span>: <span class=\"hljs-number\">10</span> <span class=\"hljs-comment\">//checking</span><br>\t\t\t}<br>\t\t}))<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Object creation failed. Please enter valid data.\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">119</span>,<br>\t\t\t<span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"grp1\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t]<br>\t\t\t}<br>\t\t})<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "b67ceb5e-08a6-4635-be24-32f79e0c72b7",
      "parentUUID": "4cdf162d-5411-4586-bdbe-30baabf179f2",
      "skipped": false
    },
    {
      "title": "should be able to get tenant uid for upload object link present in created object",
      "fullTitle": "Tenant uid in url should be able to get tenant uid for upload object link present in created object",
      "timedOut": false,
      "duration": 1698,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'Create_object'</span>, appUser1.authtoken, app.api_key, classFile.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"swapnil\"</span>,<br>\t\t<span class=\"hljs-string\">\"file\"</span>: uploadGet1.uid<br>\t}<br>}, tenant1.uid))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tobject = res.body.object<br>\texpect(object.file.url).to.contain(<span class=\"hljs-string\">'tenant_uid'</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})",
      "isRoot": false,
      "uuid": "e2851fbf-d25c-4a27-91e4-d40e32360c93",
      "parentUUID": "30759dc2-c09b-4f51-b8bf-51bdd0cce220",
      "skipped": false
    },
    {
      "title": "should be able to get application user object and check group fields present",
      "fullTitle": "System class group fields should be able to get application user object and check group fields present",
      "timedOut": false,
      "duration": 1639,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'get_app_user_objects'</span>, sys_user1.authtoken, app.api_key))<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tobject = res.body.objects[<span class=\"hljs-number\">0</span>]<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'group1'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_field1'</span>, <span class=\"hljs-string\">'g1_field2'</span>, <span class=\"hljs-string\">'g1_group1'</span>, <span class=\"hljs-string\">'g1_group2'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_field1'</span>, <span class=\"hljs-string\">'g1_g1_group1'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1.g1_g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_g1_field1'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>, <span class=\"hljs-string\">'g1_g2_group1'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>].g1_g2_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>])<br>\t\t<span class=\"hljs-comment\">// value assertion</span><br>\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject.group1.should.be.deep.equal({<br>\t\t\t<span class=\"hljs-string\">\"g1_field1\"</span>: <span class=\"hljs-string\">\"group 1 field 1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_field2\"</span>: <span class=\"hljs-number\">100</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_field1\"</span>: <span class=\"hljs-string\">\"group 1 group 1 field1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g1_g1_field1\"</span>: <span class=\"hljs-string\">\"group 1 group 1 group 1 field1\"</span><br>\t\t\t\t}<br>\t\t\t},<br>\t\t\t<span class=\"hljs-string\">\"g1_group2\"</span>: [{<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<br>\t\t\t\t\t<span class=\"hljs-number\">100</span>,<br>\t\t\t\t\t<span class=\"hljs-number\">100</span><br>\t\t\t\t],<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"abcde\"</span><br>\t\t\t\t\t]<br>\t\t\t\t}<br>\t\t\t}]<br>\t\t})<br>\t\tobject.username.should.be.equal(userObj.username)<br>\t\tobject.email.should.be.equal(userObj.email)<br>\t\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\tobject.created_by.should.be.equal(object.updated_by)<br>\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\tobject.uid.should.be.equal(userObj.uid)<br>\t\tobject.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tobject.ACL.should.be.deep.equal({})<br>\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\tobject.tags.should.be.deep.equal([])<br>\t\tshould.not.exist(object.__loc)<br>\t})<br>\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\tdone()<br>\t})<br>\t.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t\t<span class=\"hljs-built_in\">console</span>.log(err)<br>\t})",
      "isRoot": false,
      "uuid": "0b219f2a-912f-4aab-8a8f-f406906f7a69",
      "parentUUID": "63dd1488-8e9a-4418-883d-aca7222570f9",
      "skipped": false
    },
    {
      "title": "should update application user objects group fields present ",
      "fullTitle": "System class group fields should update application user objects group fields present ",
      "timedOut": false,
      "duration": 1497,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "R.Promisify(factories.create(<span class=\"hljs-string\">'update_object_app_user'</span>, sys_user1.authtoken, app.api_key, userObj.uid, {<br>\t<span class=\"hljs-string\">\"object\"</span>: {<br>\t\t<span class=\"hljs-string\">\"group1\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 field 1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_field2\"</span>: <span class=\"hljs-string\">\"900\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 field1\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 group 1 field1\"</span><br>\t\t\t\t}<br>\t\t\t},<br>\t\t\t<span class=\"hljs-string\">\"g1_group2\"</span>: [{<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-string\">\"900\"</span>, <span class=\"hljs-string\">\"900\"</span>, <span class=\"hljs-string\">\"900\"</span>],<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_group1\"</span>: {<br>\t\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-string\">\"zxcvb\"</span>]<br>\t\t\t\t}<br>\t\t\t}]<br>\t\t}<br>\t}<br>}))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tobject = res.body.object<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t<span class=\"hljs-comment\">// key assertion </span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'group1'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'device_type'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'active'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_field1'</span>, <span class=\"hljs-string\">'g1_field2'</span>, <span class=\"hljs-string\">'g1_group2'</span>, <span class=\"hljs-string\">'g1_group1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_field1'</span>, <span class=\"hljs-string\">'g1_g1_group1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group1.g1_g1_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g1_g1_field1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>, <span class=\"hljs-string\">'g1_g2_group1'</span>])<br>\t<span class=\"hljs-built_in\">Object</span>.keys(object.group1.g1_group2[<span class=\"hljs-number\">0</span>].g1_g2_group1).should.to.be.deep.equal([<span class=\"hljs-string\">'g1_g2_field1'</span>])<br>\t<span class=\"hljs-comment\">// value assertion</span><br>\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\tobject.group1.should.be.deep.equal({<br>\t\t<span class=\"hljs-string\">\"g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 field 1\"</span>,<br>\t\t<span class=\"hljs-string\">\"g1_field2\"</span>: <span class=\"hljs-number\">900</span>,<br>\t\t<span class=\"hljs-string\">\"g1_group1\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 field1\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"g1_g1_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g1_g1_field1\"</span>: <span class=\"hljs-string\">\"updated group 1 group 1 group 1 field1\"</span><br>\t\t\t}<br>\t\t},<br>\t\t<span class=\"hljs-string\">\"g1_group2\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-number\">900</span>, <span class=\"hljs-number\">900</span>, <span class=\"hljs-number\">900</span>],<br>\t\t\t<span class=\"hljs-string\">\"g1_g2_group1\"</span>: {<br>\t\t\t\t<span class=\"hljs-string\">\"g1_g2_field1\"</span>: [<span class=\"hljs-string\">\"zxcvb\"</span>]<br>\t\t\t}<br>\t\t}]<br>\t})<br>\tobject.username.should.be.equal(userObj.username)<br>\tobject.email.should.be.equal(userObj.email)<br>\tobject.device_type.should.be.equal(<span class=\"hljs-string\">'ios'</span>)<br>\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\tobject.created_by.should.be.equal(object.updated_by)<br>\tobject.created_at.should.be.not.equal(object.updated_at)<br>\tobject.uid.should.be.equal(userObj.uid)<br>\tobject.active.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\tobject.ACL.should.be.deep.equal({})<br>\tobject._version.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\tobject.tags.should.be.deep.equal([])<br>\tshould.not.exist(object.__loc)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\tdone()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>\t<span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "isRoot": false,
      "uuid": "37cb11df-610a-4acf-bd76-3e1bfaa9871f",
      "parentUUID": "63dd1488-8e9a-4418-883d-aca7222570f9",
      "skipped": false
    },
    {
      "title": "should be able to create a system roles for an app",
      "fullTitle": "Create an system roles should be able to create a system roles for an app",
      "timedOut": false,
      "duration": 1640,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> role = res.body.system_role<br>\t\t\t<span class=\"hljs-comment\">//console.log(res.body)</span><br>\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(role).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(role.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was created successfully.'</span>)<br>\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\trole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\trole.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\trole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\trole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\trole.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\trole.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\trole.application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\trole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\trole.name.should.be.equal(<span class=\"hljs-string\">'role_test'</span>)<br>\t\trole.owner.should.be.equal(email)<br>\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t<span class=\"hljs-comment\">//role.application.created_at.should.be.equal(role.application.updated_at)</span><br>\t\trole.application.uid.should.be.equal(appuid)<br>\t\trole.application.name.should.be.equal(appname)<br>\t\trole.application.api_key.should.be.equal(api_key)<br>\t\trole.application.owner_uid.should.be.equal(userUID)<br>\t\trole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\trole.application.master_key.should.be.equal(master_key)<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "40e05f54-279a-4d6b-9f6a-ba7c8e3cc56a",
      "parentUUID": "e3d3c282-8764-41d7-8df7-4f3a217b7425",
      "skipped": false
    },
    {
      "title": "should provide error message for mandetory field",
      "fullTitle": "Create an system roles should provide error message for mandetory field",
      "timedOut": false,
      "duration": 1482,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. System creation failed. Please try again.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">157</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t\t      <span class=\"hljs-string\">\"is a required field\"</span><br>\t\t    ]<br>\t\t  }<br>\t\t})\t<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "26fd8341-6afe-439f-b512-a4b0863bd63b",
      "parentUUID": "e3d3c282-8764-41d7-8df7-4f3a217b7425",
      "skipped": false
    },
    {
      "title": "should provide error message for unique name",
      "fullTitle": "Create an system roles should provide error message for unique name",
      "timedOut": false,
      "duration": 3107,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tfactories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"role_test\"</span><br>\t\t})<br>\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\tres.body.should.be.deep.equal({<br>\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. System creation failed. Please try again.\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">157</span>,<br>\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t    <span class=\"hljs-string\">\"name\"</span>: [<br>\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t    ]<br>\t\t\t  }<br>\t\t\t})<br>\t\t\tdone(err)<br>\t\t})<br>\t})",
      "isRoot": false,
      "uuid": "e001f51c-5525-4075-b11b-852ef6516d53",
      "parentUUID": "e3d3c282-8764-41d7-8df7-4f3a217b7425",
      "skipped": false
    },
    {
      "title": "should be able to get all system roles created for an app",
      "fullTitle": "Get system_roles should be able to get all system roles created for an app",
      "timedOut": false,
      "duration": 5896,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"dev manager\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> role1 = res.body.system_role.name<br>\t\tfactories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"content manager\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> role2 = res1.body.system_role.name<br>\t\t\t\tfactories.create(<span class=\"hljs-string\">'Get_system_roles'</span>, authtoken, api_key)<br>\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res3</span>) </span>{<br>\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> allroles = res3.body.system_roles<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(allroles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(allroles[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(allroles[<span class=\"hljs-number\">0</span>].application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br><br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].name.should.be.equal(<span class=\"hljs-string\">'role_test'</span>)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].owner.should.be.equal(email)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//allroles[0].application.created_at.should.be.equal(allroles[0].application.updated_at)</span><br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.uid.should.be.equal(appuid)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.name.should.be.equal(appname)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.api_key.should.be.equal(api_key)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.owner_uid.should.be.equal(userUID)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\t\t\tallroles[<span class=\"hljs-number\">0</span>].application.master_key.should.be.equal(master_key)<br>\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t})<br>\t\t\t})<br><br>\t})",
      "isRoot": false,
      "uuid": "ac3ce3f6-58f7-4436-b89e-0f91451713a4",
      "parentUUID": "f2594566-5955-4f73-8337-906277feda00",
      "skipped": false
    },
    {
      "title": "should be able to get single system_role created for an app",
      "fullTitle": "Get single system role should be able to get single system_role created for an app",
      "timedOut": false,
      "duration": 3384,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest\"</span><br>\t})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res.body.system_role.uid<br><br>\t\tfactories.create(<span class=\"hljs-string\">'Get_single_role'</span>, authtoken, api_key, role_uid)<br>\t\t\t<span class=\"hljs-comment\">// .expect(200)</span><br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-keyword\">var</span> roleobject = res1.body.system_role<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roleobject).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roleobject).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(roleobject.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\troleobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troleobject.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troleobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troleobject.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\troleobject.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\troleobject.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\troleobject.application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\troleobject.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\troleobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\troleobject.owner.should.be.equal(email)<br>\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t<span class=\"hljs-comment\">//roleobject.application.created_at.should.be.equal(roleobject.application.updated_at)</span><br>\t\t\t\troleobject.application.uid.should.be.equal(appuid)<br>\t\t\t\troleobject.application.name.should.be.equal(appname)<br>\t\t\t\troleobject.application.api_key.should.be.equal(api_key)<br>\t\t\t\troleobject.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\troleobject.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\troleobject.application.master_key.should.be.equal(master_key)<br>\t\t\t\tdone(err)<br>\t\t\t});<br>\t});",
      "isRoot": false,
      "uuid": "82ef05b9-610a-404f-a6df-60ff504b980c",
      "parentUUID": "1124a109-d181-4d9c-82a4-083e00d55ec0",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid uid for get operation",
      "fullTitle": "Get single system role should provide an error message for invalid uid for get operation",
      "timedOut": false,
      "duration": 1645,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_single_role'</span>, authtoken, api_key, <span class=\"hljs-string\">'asdardf'</span>)<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The system role was not found. Please try again.\"</span>,<br>\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">158</span>,<br>\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t})<br>\t\tdone(err)<br>\t});",
      "isRoot": false,
      "uuid": "ef7eae8f-fa1f-4a6e-aee3-24ba0607db87",
      "parentUUID": "1124a109-d181-4d9c-82a4-083e00d55ec0",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid authtoken",
      "fullTitle": "Get single system role should provide an error message for invalid authtoken",
      "timedOut": false,
      "duration": 1661,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_single_role'</span>, <span class=\"hljs-string\">'blt69cf33d54698aaeca4fd5c9a'</span>, api_key, role_uid)<br>\t<span class=\"hljs-comment\">// .expect(200)</span><br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\tdone(err)<br>\t});",
      "isRoot": false,
      "uuid": "e1ffa2b5-6531-4b6f-8aa1-4dcb1ebc00db",
      "parentUUID": "1124a109-d181-4d9c-82a4-083e00d55ec0",
      "skipped": false
    },
    {
      "title": "should be able to update system role created for an app",
      "fullTitle": "Update system role should be able to update system role created for an app",
      "timedOut": false,
      "duration": 3581,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"managers\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res1.body.system_role.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Update_system_role'</span>, authtoken, api_key, role_uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> updatedRole = res2.body.system_role<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was updated successfully.'</span>)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\tupdatedRole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\tupdatedRole.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.application.master_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tupdatedRole.name.should.be.equal(<span class=\"hljs-string\">'developers'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.equal(email)<br>\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t<span class=\"hljs-comment\">//updatedRole.application.created_at.should.be.equal(updatedRole.application.updated_at)</span><br>\t\t\t\tupdatedRole.application.uid.should.be.equal(appuid)<br>\t\t\t\tupdatedRole.application.name.should.be.equal(appname)<br>\t\t\t\tupdatedRole.application.api_key.should.be.equal(api_key)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\tupdatedRole.application.master_key.should.be.equal(master_key)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
      "isRoot": false,
      "uuid": "9fa469b2-df7c-4b4f-a948-30f5b8e29c4b",
      "parentUUID": "b194063b-efba-4746-a9dd-77a9411ad42b",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid uid whlie updating system roles",
      "fullTitle": "Update system role should provide an error message for invalid uid whlie updating system roles",
      "timedOut": false,
      "duration": 1469,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Update_system_role'</span>, authtoken, api_key, <span class=\"hljs-string\">'ddfbkdfkjf'</span>, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The system role was not found. Please try again.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">158</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\tdone(err)<br>\t});",
      "isRoot": false,
      "uuid": "4b7d503d-f237-4133-84e8-b672dc7a6035",
      "parentUUID": "b194063b-efba-4746-a9dd-77a9411ad42b",
      "skipped": false
    },
    {
      "title": "should be able to update role as collaborator when not restricted",
      "fullTitle": "Update system role should be able to update role as collaborator when not restricted",
      "timedOut": false,
      "duration": 8027,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"QA_manager\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res1.body.system_role.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'Update_system_role'</span>, sys_user2.authtoken, api_key, role_uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Tester\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> updatedRole = res2.body.system_role<br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was updated successfully.'</span>)<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'users'</span>, <span class=\"hljs-string\">'roles'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'owner'</span>, <span class=\"hljs-string\">'application'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(updatedRole.application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\tupdatedRole.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\tupdatedRole.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tupdatedRole.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>\t\t\t\tupdatedRole.application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tupdatedRole.application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// updatedRole.application.master_key.should.be.a('string')</span><br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tupdatedRole.name.should.be.equal(<span class=\"hljs-string\">'Tester'</span>)<br>\t\t\t\tupdatedRole.owner.should.be.equal(email)<br>\t\t\t\t\t<span class=\"hljs-comment\">// bug</span><br>\t\t\t\t\t<span class=\"hljs-comment\">//updatedRole.application.created_at.should.be.equal(updatedRole.application.updated_at)</span><br>\t\t\t\tupdatedRole.application.uid.should.be.equal(appuid)<br>\t\t\t\tupdatedRole.application.name.should.be.equal(appname)<br>\t\t\t\tupdatedRole.application.api_key.should.be.equal(api_key)<br>\t\t\t\tupdatedRole.application.owner_uid.should.be.equal(userUID)<br>\t\t\t\tupdatedRole.application.user_uids[<span class=\"hljs-number\">0</span>].should.be.equal(userUID)<br>\t\t\t\t<span class=\"hljs-comment\">// updatedRole.application.master_key.should.be.equal(master_key)</span><br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
      "isRoot": false,
      "uuid": "57337fc0-39d1-4968-8c1b-301af9b71494",
      "parentUUID": "b194063b-efba-4746-a9dd-77a9411ad42b",
      "skipped": false
    },
    {
      "title": "should be able to delete a system role created for an app",
      "fullTitle": "Delete system role should be able to delete a system role created for an app",
      "timedOut": false,
      "duration": 2913,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_system_role'</span>, authtoken, api_key, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"clients\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t<span class=\"hljs-keyword\">var</span> role_uid = res1.body.system_role.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'delete_system_role'</span>, authtoken, api_key, role_uid, {<br>\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t\t\t})<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-comment\">//var updatedRole = res2.body.system_role</span><br>\t\t\t\tres2.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The system role was deleted successfully.'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
      "isRoot": false,
      "uuid": "0e5c16fb-510a-45dd-94de-f4edc19b85f7",
      "parentUUID": "2623b90e-12de-4cfd-a58a-1a7c07feb203",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid uid for delete operation",
      "fullTitle": "Delete system role should provide an error message for invalid uid for delete operation",
      "timedOut": false,
      "duration": 2107,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_system_role'</span>, authtoken, api_key, <span class=\"hljs-string\">'ddfbkdfkjf'</span>, {<br>\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"developers\"</span><br>\t})<br>\t.expect(<span class=\"hljs-number\">422</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. The system role was not found. Please try again.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">158</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\tdone(err)<br>\t});",
      "isRoot": false,
      "uuid": "f466684a-2d22-49a5-bcd9-219489d837e0",
      "parentUUID": "2623b90e-12de-4cfd-a58a-1a7c07feb203",
      "skipped": false
    },
    {
      "title": "should be able to get single tenant created for an app",
      "fullTitle": "Get single tenant should be able to get single tenant created for an app",
      "timedOut": false,
      "duration": 2994,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_single_tenant'</span>, user.authtoken, app.api_key, myTenant.uid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> tenant = res1.body.tenant<br>\t\t\t\t\t<span class=\"hljs-comment\">// var id     = res1.body.tenant.uid</span><br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenant).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.equal(res1.body.tenant.updated_at)<br>\t\t\t\t\ttenant.uid.should.be.equal(myTenant.uid)<br>\t\t\t\t\ttenant.name.should.be.equal(myTenant.name)<br>\t\t\t\t\ttenant.description.should.be.equal(<span class=\"hljs-string\">'supertest tenant is created by supertest'</span>)<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, tenant.uid)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "e3d25dd2-afcd-4b6e-ba75-0f2c9f9a81d6",
      "parentUUID": "76fd7eb0-320d-4195-9d9d-d08c1ecc3293",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid tenant uid",
      "fullTitle": "Get single tenant should provide an error message for invalid tenant uid",
      "timedOut": false,
      "duration": 1457,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Get_single_tenant'</span>, user.authtoken, app.api_key, <span class=\"hljs-string\">\"asd\"</span>)<br>\t\t\t\t.expect(<span class=\"hljs-number\">422</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Tenant was not found. Please try again.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">166</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})\t\t<br>\t\t\t\t\t<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "2c6706b5-5fa7-4b28-9ae5-52810ff255f4",
      "parentUUID": "76fd7eb0-320d-4195-9d9d-d08c1ecc3293",
      "skipped": false
    },
    {
      "title": "should be able to create tenants for an app",
      "fullTitle": "Create tenants should be able to create tenants for an app",
      "timedOut": false,
      "duration": 2976,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tenantId   = <span class=\"hljs-string\">\"mumbai\"</span>;<br>\t\t\t<span class=\"hljs-keyword\">var</span> tenantName = <span class=\"hljs-string\">\"mumbai\"</span>;<br>\t\t\tfactories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: tenantId,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: tenantName,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"mumbai tenant\"</span><br>\t\t\t\t\t}<br>\t\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The tenant was created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> tenant = res.body.tenant<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id     = res.body.tenant.uid<br>\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenant).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\ttenant.description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\ttenant.created_at.should.be.equal(res.body.tenant.updated_at)<br>\t\t\t\t\ttenant.uid.should.be.equal(tenantId)<br>\t\t\t\t\ttenant.name.should.be.equal(tenantName)<br>\t\t\t\t\ttenant.description.should.be.equal(<span class=\"hljs-string\">'mumbai tenant'</span>)<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id)<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "07cccdb3-85e4-4cc7-bbfc-7de2e63bca63",
      "parentUUID": "eaa7527c-cfd5-412b-ab34-826ae333e022",
      "skipped": false
    },
    {
      "title": "should provide an error message when auto_create_tenants setting is false",
      "fullTitle": "Create tenants should provide an error message when auto_create_tenants setting is false",
      "timedOut": false,
      "duration": 1429,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tenantId   = <span class=\"hljs-string\">\"virar\"</span>;<br><span class=\"hljs-keyword\">var</span> tenantName = <span class=\"hljs-string\">\"virar\"</span>;<br>factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, <span class=\"hljs-string\">''</span>, app.api_key, {<br>\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: tenantId,<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: tenantName,<br>\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"mumbai tenant\"</span><br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">401</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tres.body.should.be.deep.equal({<br>\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t})<br>\t\t<br>\t\tdone(err)<br>\t<br>\t})",
      "isRoot": false,
      "uuid": "c0b219ef-aeae-46bc-b3b0-beecd16c72eb",
      "parentUUID": "eaa7527c-cfd5-412b-ab34-826ae333e022",
      "skipped": false
    },
    {
      "title": "should provide an error message for unique tenant name",
      "fullTitle": "Create tenants should provide an error message for unique tenant name",
      "timedOut": false,
      "duration": 3018,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Kokan tenant\"</span><br>\t\t\t\t\t}<br>\t\t\t\t})<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"Kokan\"</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">422</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\tres1.body.should.be.deep.equal({<br>\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bummer. Tenant creation failed. Please try again.\"</span>,<br>\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">164</span>,<br>\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t\t\t      <span class=\"hljs-string\">\"is not unique\"</span><br>\t\t\t\t\t\t\t    ]<br>\t\t\t\t\t\t\t  }<br>\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "6956f59f-a818-421d-84ea-65502ac92b27",
      "parentUUID": "eaa7527c-cfd5-412b-ab34-826ae333e022",
      "skipped": false
    },
    {
      "title": "should be able to update created tenant object",
      "fullTitle": "Update tenant should be able to update created tenant object",
      "timedOut": false,
      "duration": 5075,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'update_tenant'</span>, user.authtoken, app.api_key, id, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Kokan tenant\"</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id1 = res1.body.tenant.uid<br>\t\t\t\t\t\t\t<span class=\"hljs-keyword\">var</span> tenant = res1.body.tenant<br>\t\t\t\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The tenant was updated successfully.'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenant).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\t\t\t\ttenant.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\ttenant.description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\t\t\ttenant.created_at.should.not.equal(res1.body.tenant.updated_at)<br>\t\t\t\t\t\t\ttenant.uid.should.be.equal(id)<br>\t\t\t\t\t\t\ttenant.name.should.be.equal(<span class=\"hljs-string\">'Kokan'</span>)<br>\t\t\t\t\t\t\ttenant.description.should.be.equal(<span class=\"hljs-string\">'Kokan tenant'</span>)<br>\t\t\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id1)<br>\t\t\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "3fc70ac7-4632-4282-8fe2-8d367e0d9116",
      "parentUUID": "ee7e4c68-5895-46ce-bc39-d0842c243328",
      "skipped": false
    },
    {
      "title": "should provide an error message when app user updates tenant object",
      "fullTitle": "Update tenant should provide an error message when app user updates tenant object",
      "timedOut": false,
      "duration": 5359,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key)<br>\t\t\t\t.expect(<span class=\"hljs-number\">201</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'update_tenant'</span>, appUser1.authtoken, app.api_key, id, {<br>\t\t\t\t\t\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"Kokan\"</span>,<br>\t\t\t\t\t\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Kokan tenant\"</span><br>\t\t\t\t\t\t\t}<br>\t\t\t\t\t\t})<br>\t\t\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\tres1.body.should.be.deep.equal({<br>\t\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Hey! You're not allowed in here unless you're logged in.\"</span>,<br>\t\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">105</span>,<br>\t\t\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t\t<br>\t\t\t\t\t\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id)<br>\t\t\t\t\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t\t\t\t\t\tdone(err)<br>\t\t\t\t\t\t\t\t})<br>\t\t\t\t\t\t})<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "1216eca5-b1df-4c25-b35d-1aa03c02de2d",
      "parentUUID": "ee7e4c68-5895-46ce-bc39-d0842c243328",
      "skipped": false
    },
    {
      "title": "should be able to get all created tenant as a list",
      "fullTitle": "Get all tenants should be able to get all created tenant as a list",
      "timedOut": false,
      "duration": 3151,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key, {<br>\t\t<span class=\"hljs-string\">\"tenant\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"supertest\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"description\"</span>: <span class=\"hljs-string\">\"Get all tenants\"</span><br>\t\t}<br>\t})<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tfactories.create(<span class=\"hljs-string\">'Get_tenants_list'</span>, user.authtoken, app.api_key)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res2.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> tenants = res2.body.tenants<br>\t\t\t\ttenants.length.should.be.equal(<span class=\"hljs-number\">2</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion</span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(tenants[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'description'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">//Data type assertion</span><br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].description.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\ttenants[<span class=\"hljs-number\">0</span>].created_at.should.be.equal(res2.body.tenants[<span class=\"hljs-number\">0</span>].updated_at)<br>\t\t\t\t<span class=\"hljs-comment\">// tenants[0].uid.should.be.equal('supertest')</span><br>\t\t\t\t<span class=\"hljs-comment\">// tenants[0].name.should.be.equal('supertest')</span><br>\t\t\t\t<span class=\"hljs-comment\">// tenants[0].description.should.be.equal('Get all tenants')</span><br><br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t})",
      "isRoot": false,
      "uuid": "c20f94dd-5162-43e6-99e0-5037f7474c5f",
      "parentUUID": "5253d784-6490-467b-b19c-082aad0c8a0a",
      "skipped": false
    },
    {
      "title": "should be able to delete created tenant",
      "fullTitle": "Delete tenant should be able to delete created tenant",
      "timedOut": false,
      "duration": 3201,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'Create_tenants'</span>, user.authtoken, app.api_key)<br>\t.expect(<span class=\"hljs-number\">201</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\t<span class=\"hljs-keyword\">var</span> id = res.body.tenant.uid<br>\t\tfactories.create(<span class=\"hljs-string\">'delete_tenant'</span>, user.authtoken, app.api_key, id)<br>\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res1.body)</span><br>\t\t\t\tres1.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! The tenant was deleted successfully.'</span>)<br>\t\t\t\tdone(err)<br>\t\t\t})<br>\t\t<br>\t});",
      "isRoot": false,
      "uuid": "d8edfc14-0240-4f0e-be49-24142fe1f5a5",
      "parentUUID": "e2cf79f1-e169-495b-91d7-f4d40ad302f1",
      "skipped": false
    },
    {
      "title": "should be able to get all created uploads for an app",
      "fullTitle": "Get Uploads should be able to get all created uploads for an app",
      "timedOut": false,
      "duration": 1847,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_uploads'</span>, authtoken, api_key)<br>\t.expect(<span class=\"hljs-number\">200</span>)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\t\tuploadID = res.body.uploads[<span class=\"hljs-number\">0</span>].uid<br>\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tupload.uid.should.be.equal(uploadID)<br>\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\tupload.created_by.should.be.equal(userUID)<br>\t\tupload.updated_by.should.be.equal(userUID)<br>\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'application/json'</span>)<br><br>\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.filename.should.be.equal(uploadName)</span><br><br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "010cb928-230c-424e-92e2-a832ba9b7710",
      "parentUUID": "efc5f3bc-6340-4d25-a9de-966b637270d7",
      "skipped": false
    },
    {
      "title": "should be able to get all created uploads for an app using query",
      "fullTitle": "Get Uploads should be able to get all created uploads for an app using query",
      "timedOut": false,
      "duration": 1448,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_uploads'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"query\"</span>: {<span class=\"hljs-string\">\"filename\"</span>: <span class=\"hljs-string\">\"pdf_1.pdf\"</span>}<br>})<br>.expect(<span class=\"hljs-number\">200</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\tuploadID = res.body.uploads[<span class=\"hljs-number\">0</span>].uid<br>\t<span class=\"hljs-comment\">// key assertion </span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t<span class=\"hljs-comment\">// Data assertion</span><br>\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\texpect(upload.created_by).to.be.null;<br>\texpect(upload.updated_by).to.be.null;<br>\t<br>\t<span class=\"hljs-comment\">// upload.created_by.should.be.a(null)</span><br>\t<span class=\"hljs-comment\">// upload.updated_by.should.be.a(null)</span><br>\t<br>\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\tupload.uid.should.be.equal(uploadID)<br>\tupload.created_at.should.be.equal(upload.updated_at)<br>\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'application/pdf'</span>)<br>\tupload.app_user_object_uid.should.be.equal(app_user.uid)<br>\t<span class=\"hljs-comment\">// upload.filename.should.be.equal(uploadName)</span><br><br>\tdone(err)<br>})",
      "isRoot": false,
      "uuid": "4c5ddd35-841f-48d7-83c9-f8cc26938e97",
      "parentUUID": "efc5f3bc-6340-4d25-a9de-966b637270d7",
      "skipped": false
    },
    {
      "title": "should be able to get single upload created for an app",
      "fullTitle": "Get Uploads should be able to get single upload created for an app",
      "timedOut": false,
      "duration": 1437,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_single_upload'</span>, authtoken, api_key, uploadUID)<br>.expect(<span class=\"hljs-number\">200</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\tupload = res.body.upload<br>\tuploadID = res.body.upload.uid<br>\t<span class=\"hljs-comment\">// key assertion </span><br>\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t<span class=\"hljs-comment\">// Data assertion</span><br>\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\tupload.uid.should.be.equal(uploadID)<br>\tupload.created_at.should.be.equal(upload.updated_at)<br>\tupload.created_by.should.be.equal(upload.updated_by)<br>\tupload.created_by.should.be.equal(userUID)<br>\tupload.updated_by.should.be.equal(userUID)<br>\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br><br>\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\tupload.filename.should.be.equal(uploadName)<br><br>\tdone(err)<br>})",
      "isRoot": false,
      "uuid": "0c2753bf-6b71-41e1-8459-0b19980e40d0",
      "parentUUID": "efc5f3bc-6340-4d25-a9de-966b637270d7",
      "skipped": false
    },
    {
      "title": "should provided an error message for invalid upload uid",
      "fullTitle": "Get Uploads should provided an error message for invalid upload uid",
      "timedOut": false,
      "duration": 1696,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_single_upload'</span>, authtoken, api_key, <span class=\"hljs-string\">'asdasd'</span>)<br>.expect(<span class=\"hljs-number\">404</span>)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\tres.body.should.be.deep.equal({<br>\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Oops! That file was not found.\"</span>,<br>\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">145</span>,<br>\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t    ]<br>\t  }<br>\t})<br><br>\tdone(err)<br>})",
      "isRoot": false,
      "uuid": "e45bd56c-1326-42bb-a498-c5fcd66e785e",
      "parentUUID": "efc5f3bc-6340-4d25-a9de-966b637270d7",
      "skipped": false
    },
    {
      "title": "should be able to get all images uploaded for an app",
      "fullTitle": "Get images and videos should be able to get all images uploaded for an app",
      "timedOut": false,
      "duration": 1674,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_uploads_images'</span>, authtoken, api_key)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\t\tuploadID = res.body.uploads[<span class=\"hljs-number\">0</span>].uid<br>\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tupload.uid.should.be.equal(uploadID)<br>\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\tupload.created_by.should.be.equal(collaborator.uid)<br>\t\tupload.updated_by.should.be.equal(collaborator.uid)<br>\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/png'</span>)<br><br>\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t<span class=\"hljs-comment\">// upload.filename.should.be.equal(uploadName)</span><br><br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "590a078a-71b7-4473-966a-19c7062d6447",
      "parentUUID": "12c6dc37-0c58-4225-9ab3-3044fbc97fc6",
      "skipped": false
    },
    {
      "title": "should be able to get all videos uploaded for an app",
      "fullTitle": "Get images and videos should be able to get all videos uploaded for an app",
      "timedOut": false,
      "duration": 1704,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_uploads_videos'</span>, authtoken, api_key)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<br>\t\t\t\t\tupload = res.body.uploads[<span class=\"hljs-number\">0</span>]<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.uid.should.be.equal(uploadVideo.uid)<br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'video/x-ms-wmv'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename2)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "75aac2a4-745b-425a-81fd-d5ac8ada744d",
      "parentUUID": "12c6dc37-0c58-4225-9ab3-3044fbc97fc6",
      "skipped": false
    },
    {
      "title": "should be able to create an upload(system) for an app",
      "fullTitle": "create_upload should be able to create an upload(system) for an app",
      "timedOut": false,
      "duration": 2395,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'jpg_1.JPG'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'create_upload'</span>, authtoken, api_key, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tupload = res.body.upload<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.updated_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tupload.ACL.should.to.be.deep.equal({})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "c34b7402-7fef-4d6f-85da-24ec916e7fe5",
      "parentUUID": "db720e5a-5c6a-4900-9f14-6240af00b42d",
      "skipped": false
    },
    {
      "title": "should be able to create an upload(collaborator) for an app",
      "fullTitle": "create_upload should be able to create an upload(collaborator) for an app",
      "timedOut": false,
      "duration": 2119,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'jpg_2.jpg'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'create_upload'</span>, collaborator.authtoken, api_key, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tupload = res.body.upload<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(collaborator.uid)<br>\t\t\t\t\tupload.updated_by.should.be.equal(collaborator.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tupload.ACL.should.to.be.deep.equal({})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "5720a5aa-1614-4fae-8f0d-7fe009ad1c32",
      "parentUUID": "db720e5a-5c6a-4900-9f14-6240af00b42d",
      "skipped": false
    },
    {
      "title": "should be able to create an upload(anonymous) for an app",
      "fullTitle": "create_upload should be able to create an upload(anonymous) for an app",
      "timedOut": false,
      "duration": 2606,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'jpg_1.JPG'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'create_upload'</span>, <span class=\"hljs-string\">''</span>, api_key, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tupload = res.body.upload<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File created successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.ACL.can.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// value assretion </span><br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tshould.not.exist(upload.created_by)<br>\t\t\t\t\tshould.not.exist(upload.updated_by)<br>\t\t\t\t\tshould.not.exist(upload.app_user_object_uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'image/jpeg'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tupload.ACL.can.should.to.be.deep.equal([<span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "f35e66ff-68b8-4401-95f4-e9069d58cd2b",
      "parentUUID": "db720e5a-5c6a-4900-9f14-6240af00b42d",
      "skipped": false
    },
    {
      "title": "should be able to create an upload(application user) for an app",
      "fullTitle": "create_upload should be able to create an upload(application user) for an app",
      "timedOut": false,
      "duration": 2124,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> filename = <span class=\"hljs-string\">'json_1.json'</span><br>\t\t\tR.Promisify(factories.create(<span class=\"hljs-string\">'create_upload'</span>, app_user.authtoken, api_key, filename))<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> upload = res.body.upload<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.ACL.can.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// value assretion </span><br>\t\t\t\t\tupload.created_at.should.be.equal(upload.updated_at)<br>\t\t\t\t\tshould.not.exist(upload.created_by)<br>\t\t\t\t\tshould.not.exist(upload.updated_by)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(app_user.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'application/json'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename)<br>\t\t\t\t\tupload.ACL.can.should.to.be.deep.equal([<span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t})<br>\t\t\t\t.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>\t\t\t\t\tdone()<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "27ce08e5-ed9a-42f8-a96d-8aa8fb50167f",
      "parentUUID": "db720e5a-5c6a-4900-9f14-6240af00b42d",
      "skipped": false
    },
    {
      "title": "should be able to get a list of all tags created for an upload",
      "fullTitle": "Uploads tags should be able to get a list of all tags created for an upload",
      "timedOut": false,
      "duration": 1485,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_upload_tags'</span>, authtoken, api_key)<br>.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>)</span>{<br>\tres.body.tags.should.to.be.deep.equal([<span class=\"hljs-string\">'supertest'</span>, <span class=\"hljs-string\">'backend'</span>])<br>\tdone(err)<br>})",
      "isRoot": false,
      "uuid": "ada468a2-ef77-4d93-b082-71f59bd69fa0",
      "parentUUID": "2618efc2-982a-4b66-b8f4-45c36fdb0806",
      "skipped": false
    },
    {
      "title": "should be able to update given upload object as a collaborator",
      "fullTitle": "Update upload should be able to update given upload object as a collaborator",
      "timedOut": false,
      "duration": 6194,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, collaborator.authtoken, api_key, uploadUID, filename1)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File updated successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> upload = res.body.upload<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// upload.file_size.should.be.a('number')</span><br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.uid.should.be.equal(uploadUID)<br>\t\t\t\t\tupload.created_at.should.be.not.equal(upload.updated_at)<br>\t\t\t\t\tupload.created_by.should.be.not.equal(upload.updated_by)<br>\t\t\t\t\tupload.created_by.should.be.equal(userUID)<br>\t\t\t\t\tupload.updated_by.should.be.equal(collaborator.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'text/csv'</span>)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename1)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "be58b58f-444c-47c3-90bd-64818e9a0c09",
      "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
      "skipped": false
    },
    {
      "title": "should be able to provide an error message when application user updates upload object created by sysuser",
      "fullTitle": "Update upload should be able to provide an error message when application user updates upload object created by sysuser",
      "timedOut": false,
      "duration": 3349,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, api_key, uploadUID1, filename1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.error_message.should.be.equal(<span class=\"hljs-string\">'Access denied. You have insufficient permissions to perform this operation.'</span>)<br>\t\t\t\t\tres.body.error_code.should.be.equal(<span class=\"hljs-number\">162</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "f7016103-9ffc-46c9-9964-7fba220f5fe4",
      "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
      "skipped": false
    },
    {
      "title": "should be able to update upload object as a application user",
      "fullTitle": "Update upload should be able to update upload object as a application user",
      "timedOut": false,
      "duration": 5094,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> filename9 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\t<br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, api_key, uploadAppuser.uid, filename9)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File updated successfully.'</span>)<br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> upload = res.body.upload<br>\t\t\t\t\t<span class=\"hljs-comment\">// key assertion </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(upload).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'content_type'</span>, <span class=\"hljs-string\">'file_size'</span>, <span class=\"hljs-string\">'tags'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'filename'</span>, <span class=\"hljs-string\">'url'</span>, <span class=\"hljs-string\">'ACL'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data assertion</span><br>\t\t\t\t\tupload.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.content_type.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.file_size.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\tupload.url.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tupload.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tupload.ACL.can.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// value assretion </span><br>\t\t\t\t\tupload.created_at.should.be.not.equal(upload.updated_at)<br>\t\t\t\t\tshould.not.exist(upload.created_by)<br>\t\t\t\t\tshould.not.exist(upload.updated_by)<br>\t\t\t\t\tupload.app_user_object_uid.should.be.equal(app_user.uid)<br>\t\t\t\t\tupload.content_type.should.be.equal(<span class=\"hljs-string\">'text/csv'</span>)<br>\t\t\t\t\tupload.filename.should.be.equal(filename9)<br>\t\t\t\t\tupload.ACL.can.should.to.be.deep.equal([<span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "353845ff-fea6-43e4-a653-10835c204a36",
      "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid update upload",
      "fullTitle": "Update upload should provide an error message for invalid update upload",
      "timedOut": false,
      "duration": 5013,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, api_key, <span class=\"hljs-string\">'asd'</span>, filename1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">404</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Oops! That file was not found.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">145</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "a5622eb1-bbc4-4156-8f6a-67791fdc51df",
      "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
      "skipped": false
    },
    {
      "title": "should provide an error message for invalid api key for update upload",
      "fullTitle": "Update upload should provide an error message for invalid api key for update upload",
      "timedOut": false,
      "duration": 3279,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> filename1 = <span class=\"hljs-string\">'csv_1.csv'</span><br>\t\t\tfactories.create(<span class=\"hljs-string\">'update_upload'</span>, app_user.authtoken, <span class=\"hljs-string\">'asdasdad'</span>, <span class=\"hljs-string\">'asd'</span>, filename1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">412</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Bad news! We can't find that application. Please try again.\"</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">109</span>,<br>\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t    <span class=\"hljs-string\">\"api_key\"</span>: [<br>\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t    ]<br>\t\t\t\t\t  }<br>\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "a36f2dd8-cd18-43ee-a21f-a7304e981495",
      "parentUUID": "124432ca-2742-43df-b3ef-fdfe77cd08d2",
      "skipped": false
    },
    {
      "title": "should be able to delete given upload object as a collaborator",
      "fullTitle": "delete upload should be able to delete given upload object as a collaborator",
      "timedOut": false,
      "duration": 2037,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, collaborator.authtoken, api_key, uploadUID)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File deleted successfully.'</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "8d0dfae0-099c-4c1f-a7a2-6cab0270e3d7",
      "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
      "skipped": false
    },
    {
      "title": "should be able to provide an error message when delete object(system) as a application user",
      "fullTitle": "delete upload should be able to provide an error message when delete object(system) as a application user",
      "timedOut": false,
      "duration": 1589,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, app_user.authtoken, api_key, uploadUID1)<br>\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.error_message.should.be.equal(<span class=\"hljs-string\">'Access denied. You have insufficient permissions to perform this operation.'</span>)<br>\t\t\t\t\tres.body.error_code.should.be.equal(<span class=\"hljs-number\">162</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "b5c94dda-7d69-4cda-8313-fcf421515d49",
      "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
      "skipped": false
    },
    {
      "title": "should provide error message invalid upload delete",
      "fullTitle": "delete upload should provide error message invalid upload delete",
      "timedOut": false,
      "duration": 1627,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, app_user.authtoken, api_key, <span class=\"hljs-string\">'asd'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// .expect(200)</span><br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Oops! That file was not found.\"</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">145</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {<br>\t\t\t\t\t\t    <span class=\"hljs-string\">\"uid\"</span>: [<br>\t\t\t\t\t\t      <span class=\"hljs-string\">\"is invalid\"</span><br>\t\t\t\t\t\t    ]<br>\t\t\t\t\t\t  }<br>\t\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "363826f3-a72b-4405-beb1-e4310e4a643e",
      "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
      "skipped": false
    },
    {
      "title": "should provide error message invalid user authtoken for upload delete",
      "fullTitle": "delete upload should provide error message invalid user authtoken for upload delete",
      "timedOut": false,
      "duration": 1715,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, <span class=\"hljs-string\">''</span>, api_key, uploadAppuser.uid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">401</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\tres.body.should.be.deep.equal({<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_message\"</span>: <span class=\"hljs-string\">\"Access denied. You have insufficient permissions to perform this operation.\"</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"error_code\"</span>: <span class=\"hljs-number\">162</span>,<br>\t\t\t\t\t\t  <span class=\"hljs-string\">\"errors\"</span>: {}<br>\t\t\t\t\t\t})<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "3814ae55-51e1-4643-9de1-5c87c0082610",
      "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
      "skipped": false
    },
    {
      "title": "should be able to delete upload object as a application user",
      "fullTitle": "delete upload should be able to delete upload object as a application user",
      "timedOut": false,
      "duration": 1448,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'delete_upload'</span>, app_user.authtoken, api_key, uploadAppuser.uid)<br>\t\t\t\t.expect(<span class=\"hljs-number\">200</span>)<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! File deleted successfully.'</span>)<br>\t\t\t\t\tdone(err)<br>\t\t\t\t})",
      "isRoot": false,
      "uuid": "f39d7da9-73e7-41a5-ba83-9cca51d1016a",
      "parentUUID": "ca673edf-6dc5-4075-9b86-f02e58732852",
      "skipped": false
    },
    {
      "title": "should be able to get the default ACL set for an uploads",
      "fullTitle": "uploads default_acl should be able to get the default ACL set for an uploads",
      "timedOut": false,
      "duration": 1441,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_default_acl'</span>, authtoken, api_key)<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\t<span class=\"hljs-keyword\">var</span> acl = res.body.DEFAULT_ACL<br>\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl.others).should.to.be.deep.equal([<span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'create'</span>])<br>\t\t<span class=\"hljs-comment\">// data assertion</span><br>\t\tacl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tacl.others.read.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\tacl.others.create.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion </span><br>\t\tacl.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tacl.others.create.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "ca6073d4-a797-42f1-afc7-7cb18723a84e",
      "parentUUID": "5e7e2475-d307-4dc7-be72-7cfd48a23752",
      "skipped": false
    },
    {
      "title": "should be able to specify a default ACL for uploads",
      "fullTitle": "uploads default_acl should be able to specify a default ACL for uploads",
      "timedOut": false,
      "duration": 1461,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'set_default_acl'</span>, authtoken, api_key, {<br>\t<span class=\"hljs-string\">\"DEFAULT_ACL\"</span>: {<br>\t\t<span class=\"hljs-string\">\"others\"</span>: {<br>\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">true</span>,<br>\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t},<br>\t\t<span class=\"hljs-string\">\"users\"</span>: [{<br>\t\t\t<span class=\"hljs-string\">\"uid\"</span>: <span class=\"hljs-string\">\"anonymous\"</span>,<br>\t\t\t<span class=\"hljs-string\">\"create\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"read\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"update\"</span>: <span class=\"hljs-literal\">false</span>,<br>\t\t\t<span class=\"hljs-string\">\"delete\"</span>: <span class=\"hljs-literal\">false</span><br>\t\t}],<br>\t\t<span class=\"hljs-string\">\"roles\"</span>: []<br>\t}<br>})<br>\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t<br>\t\tres.body.notice.should.be.equal(<span class=\"hljs-string\">'Woot! Default ACL updated successfully.'</span>)<br>\t\t<span class=\"hljs-keyword\">var</span> acl = res.body.DEFAULT_ACL<br>\t\t<span class=\"hljs-comment\">// key assertion</span><br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl).should.to.be.deep.equal([<span class=\"hljs-string\">'others'</span>, <span class=\"hljs-string\">'users'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl.others).should.to.be.deep.equal([<span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t<span class=\"hljs-built_in\">Object</span>.keys(acl.users[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'create'</span>, <span class=\"hljs-string\">'read'</span>, <span class=\"hljs-string\">'update'</span>, <span class=\"hljs-string\">'delete'</span>])<br>\t\t<span class=\"hljs-comment\">// data assertion</span><br>\t\tacl.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tacl.others.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\tacl.users.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t<span class=\"hljs-comment\">// value assertion </span><br>\t\tacl.others.read.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\tacl.others.create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.others.update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.others.delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].uid.should.be.equal(<span class=\"hljs-string\">'anonymous'</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].read.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].create.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].update.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tacl.users[<span class=\"hljs-number\">0</span>].delete.should.be.equal(<span class=\"hljs-literal\">false</span>)<br>\t\tdone(err)<br>\t})",
      "isRoot": false,
      "uuid": "c8865c54-c386-454c-8a27-6938baf14ac9",
      "parentUUID": "5e7e2475-d307-4dc7-be72-7cfd48a23752",
      "skipped": false
    }
  ],
  "allFailures": [
    {
      "title": "should be able to get an applications including collaborators info in response",
      "fullTitle": "Get applications should be able to get an applications including collaborators info in response",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">25000</span>)<br>factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2)<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <br>    factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>        <span class=\"hljs-string\">\"emails\"</span>: [<br>          res.body.user.email<br>        ]<br>      })<br>      .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res1</span>) </span>{<br>        <br>        factories.create(<span class=\"hljs-string\">'Get_all_applications'</span>, authtoken, {<br>            <span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>            <span class=\"hljs-string\">\"include_collaborators\"</span>: <span class=\"hljs-literal\">true</span>,<br>            <span class=\"hljs-string\">\"query\"</span>: {<br>              <span class=\"hljs-string\">\"api_key\"</span>: api_key<br>            }<br>          })<br>          .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res2</span>) </span>{<br>            <br>            <span class=\"hljs-keyword\">var</span> application = res2.body.applications[<span class=\"hljs-number\">0</span>]<br>            <br>          <span class=\"hljs-comment\">// Keys assertion</span><br>            <span class=\"hljs-built_in\">Object</span>.keys(application).should.to.be.deep.equal([<span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'api_key'</span>, <span class=\"hljs-string\">'owner_uid'</span>, <span class=\"hljs-string\">'user_uids'</span>, <span class=\"hljs-string\">'master_key'</span>, <span class=\"hljs-string\">'collaborators'</span>, <span class=\"hljs-string\">'SYS_ACL'</span>])<br>            <span class=\"hljs-built_in\">Object</span>.keys(application.collaborators[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>, <span class=\"hljs-string\">'is_owner'</span>, <span class=\"hljs-string\">'roles'</span>])<br>            <span class=\"hljs-built_in\">Object</span>.keys(application.collaborators[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>, <span class=\"hljs-string\">'roles'</span>])<br>              <span class=\"hljs-comment\">// Data type assertion</span><br>            application.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.api_key.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.owner_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.user_uids.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.SYS_ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].plan_id.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].email.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].username.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].plan_id.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].is_owner.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].roles.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.a(<span class=\"hljs-string\">'string'</span>)<br>            <span class=\"hljs-comment\">//application.collaborators[1].roles[0].should.be.a('string') </span><br>            application.uid.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>            application.api_key.length.should.be.equal(<span class=\"hljs-number\">19</span>)<br>            application.owner_uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].uid.length.should.be.equal(<span class=\"hljs-number\">27</span>)<br>            <span class=\"hljs-comment\">// Value assertion</span><br>            application.api_key.should.be.equal(api_key)<br>            application.owner_uid.should.be.equal(userUID)<br>            application.owner_uid.should.be.equal(application.user_uids[<span class=\"hljs-number\">0</span>])<br>            application.collaborators[<span class=\"hljs-number\">1</span>].uid.should.be.equal(userUID)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].uid.should.not.be.equal(userUID)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'free_trial'</span>)<br>            application.collaborators[<span class=\"hljs-number\">0</span>].plan_id[<span class=\"hljs-number\">0</span>].should.be.equal(<span class=\"hljs-string\">'free_trial'</span>)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].username.should.be.equal(username)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].email.should.be.equal(email)<br>            application.collaborators[<span class=\"hljs-number\">1</span>].is_owner.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>            <span class=\"hljs-comment\">//application.created_at.should.be.equal(application.updated_at)</span><br>            done(err)<br>          })<br>      })<br>  })",
      "err": {
        "name": "AssertionError",
        "message": "expected [ Array(9) ] to deeply equal [ Array(8) ]",
        "stack": "AssertionError: expected [ Array(9) ] to deeply equal [ Array(8) ]<br>    at assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/addMethod.js:41:25)<br>    at doAsserterAsyncAndAddThen (node_modules/chai-as-promised/lib/chai-as-promised.js:292:33)<br>    at null.&lt;anonymous&gt; (node_modules/chai-as-promised/lib/chai-as-promised.js:251:21)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at somethingMethod (node_modules/chai-things/lib/chai-things.js:97:25)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at allMethod (node_modules/chai-things/lib/chai-things.js:165:25)<br>    at ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at Test.&lt;anonymous&gt; (spec/application/application_spec.js:348:79)<br>    at Test.assert (node_modules/supertest/lib/test.js:156:6)<br>    at assert (node_modules/supertest/lib/test.js:127:12)<br>    at node_modules/supertest/lib/test.js:124:5<br>    at Test.Request.callback (node_modules/supertest/node_modules/superagent/lib/node/index.js:785:12)<br>    at Stream.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/index.js:990:12)<br>    at Unzip.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/utils.js:108:12)<br>    at endReadableNT (_stream_readable.js:913:12)"
      },
      "isRoot": false,
      "uuid": "63f18da4-ce51-44cd-8afb-3cf568e80c83",
      "parentUUID": "5e48e2a8-bdad-4898-8a28-5eae5c59a477",
      "skipped": false
    },
    {
      "title": "should be able to get all collaborators present in an application",
      "fullTitle": "Collaborators invite and unaccepted_invitations should be able to get all collaborators present in an application",
      "timedOut": true,
      "duration": 60050,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">this</span>.timeout(<span class=\"hljs-number\">60000</span>)<br>R.Promisify(factories.create(<span class=\"hljs-string\">'login_system_user'</span>, config.user2))<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  collaborator = res.body.user<br>  <span class=\"hljs-keyword\">return</span> res<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"emails\"</span>: [<br>      res.body.user.email<br>    ]<br>  }))<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-keyword\">return</span> R.Promisify(factories.create(<span class=\"hljs-string\">'Get_collaborators'</span>, authtoken, api_key)) <br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  <span class=\"hljs-comment\">// R.pretty(res.body)</span><br>  users = res.body.users<br>  <span class=\"hljs-built_in\">Object</span>.keys(users[<span class=\"hljs-number\">0</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'email'</span>,<span class=\"hljs-string\">'username'</span>,<span class=\"hljs-string\">'company'</span>,<span class=\"hljs-string\">'plan_id'</span>,<span class=\"hljs-string\">'roles'</span>])<br>  <span class=\"hljs-built_in\">Object</span>.keys(users[<span class=\"hljs-number\">1</span>]).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>,<span class=\"hljs-string\">'created_at'</span>,<span class=\"hljs-string\">'updated_at'</span>,<span class=\"hljs-string\">'email'</span>,<span class=\"hljs-string\">'username'</span>,<span class=\"hljs-string\">'plan_id'</span>,<span class=\"hljs-string\">'is_owner'</span>,<span class=\"hljs-string\">'roles'</span>])<br>  users[<span class=\"hljs-number\">0</span>].email.should.be.equal(collaborator.email)<br>  users[<span class=\"hljs-number\">1</span>].email.should.be.equal(email)<br>  users[<span class=\"hljs-number\">1</span>].is_owner.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>})<br>.then(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) </span>{<br>  done()<br>})<br>.catch(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>) </span>{<br>  <span class=\"hljs-built_in\">console</span>.log(err)<br>})",
      "err": {
        "name": "Error",
        "message": "timeout of 60000ms exceeded. Ensure the done() callback is being called in this test.",
        "stack": "<span class=\"hljs-built_in\">Error</span>: timeout <span class=\"hljs-keyword\">of</span> <span class=\"hljs-number\">60000</span>ms exceeded. Ensure the done() callback is being called <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">this</span> test."
      },
      "isRoot": false,
      "uuid": "538fc7e0-5d48-48ad-b11d-69f16c6c1d50",
      "parentUUID": "ee0922bb-d23b-4069-86af-be83617d5015",
      "skipped": false
    },
    {
      "title": "should be able to invite collaborators for an application",
      "fullTitle": "Collaborators invite and unaccepted_invitations should be able to invite collaborators for an application",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'invite_collaborator'</span>, authtoken, api_key, {<br>    <span class=\"hljs-string\">\"emails\"</span>: [<br>      <span class=\"hljs-string\">\"test1user@mailinator.com\"</span>,<br>      <span class=\"hljs-string\">\"test2user@mailinator.com\"</span><br>    ]<br>  })<br>  .end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> response = res.body<br>    response.notice.should.be.equal(<span class=\"hljs-string\">'The invitation has been sent successfully.'</span>)<br>    done(err)<br>  })",
      "err": {
        "name": "TypeError",
        "message": "Cannot read property 'should' of undefined",
        "stack": "<span class=\"hljs-built_in\">TypeError</span>: Cannot read property <span class=\"hljs-string\">'should'</span> <span class=\"hljs-keyword\">of</span> <span class=\"hljs-literal\">undefined</span><br>    at Test.&lt;anonymous&gt; (spec/application/application_spec.js:<span class=\"hljs-number\">1532</span>:<span class=\"hljs-number\">26</span>)<br>    at Test.assert (node_modules/supertest/lib/test.js:<span class=\"hljs-number\">156</span>:<span class=\"hljs-number\">6</span>)<br>    at assert (node_modules/supertest/lib/test.js:<span class=\"hljs-number\">127</span>:<span class=\"hljs-number\">12</span>)<br>    at node_modules/supertest/lib/test.js:<span class=\"hljs-number\">124</span>:<span class=\"hljs-number\">5</span><br>    at Test.Request.callback (node_modules/supertest/node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">785</span>:<span class=\"hljs-number\">12</span>)<br>    at IncomingMessage.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/index.js:<span class=\"hljs-number\">990</span>:<span class=\"hljs-number\">12</span>)<br>    at endReadableNT (_stream_readable.js:<span class=\"hljs-number\">913</span>:<span class=\"hljs-number\">12</span>)"
      },
      "isRoot": false,
      "uuid": "00263414-c570-4bd0-a12b-fb867205358b",
      "parentUUID": "ee0922bb-d23b-4069-86af-be83617d5015",
      "skipped": false
    },
    {
      "title": "should get object owner information in created_by key",
      "fullTitle": "get object should get object owner information in created_by key",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"include_created_by\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t})<br>\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.created_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\tobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\tobject.created_by.uid.should.be.equal(userUID)<br>\t\t\t\tobject.created_by.uid.should.be.equal(object.updated_by)<br>\t\t\t\tobject.created_by.email.should.be.equal(email)<br>\t\t\t\tobject.created_by.username.should.be.equal(username)<br>\t\t\t\tobject.updated_by.should.be.equal(userUID)<br>\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// object.ACL.should.be.equal({})</span><br>\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t<span class=\"hljs-comment\">// object.tags.should.be.equal([])\t\t\t\t               </span><br>\t\t\t\tdone()<br>\t\t\t});",
      "err": {
        "name": "AssertionError",
        "message": "expected [ Array(7) ] to deeply equal [ Array(6) ]",
        "stack": "AssertionError: expected [ Array(7) ] to deeply equal [ Array(6) ]<br>    at assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/addMethod.js:41:25)<br>    at doAsserterAsyncAndAddThen (node_modules/chai-as-promised/lib/chai-as-promised.js:292:33)<br>    at null.&lt;anonymous&gt; (node_modules/chai-as-promised/lib/chai-as-promised.js:251:21)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at somethingMethod (node_modules/chai-things/lib/chai-things.js:97:25)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at allMethod (node_modules/chai-things/lib/chai-things.js:165:25)<br>    at ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at Test.&lt;anonymous&gt; (spec/cms_apis/object_revisions_revert_spec.js:119:54)<br>    at Test.assert (node_modules/supertest/lib/test.js:156:6)<br>    at assert (node_modules/supertest/lib/test.js:127:12)<br>    at node_modules/supertest/lib/test.js:124:5<br>    at Test.Request.callback (node_modules/supertest/node_modules/superagent/lib/node/index.js:785:12)<br>    at Stream.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/index.js:990:12)<br>    at Unzip.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/utils.js:108:12)<br>    at endReadableNT (_stream_readable.js:913:12)"
      },
      "isRoot": false,
      "uuid": "142f3f69-640a-469a-a2e9-bfca326df775",
      "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
      "skipped": false
    },
    {
      "title": "should get object owner information in updated_by key",
      "fullTitle": "get object should get object owner information in updated_by key",
      "timedOut": false,
      "duration": 0,
      "state": "failed",
      "pass": false,
      "fail": true,
      "pending": false,
      "code": "factories.create(<span class=\"hljs-string\">'get_object'</span>, authtoken, api_key, classUid, objectUid, {<br>\t\t\t\t<span class=\"hljs-string\">\"_method\"</span>: <span class=\"hljs-string\">\"get\"</span>,<br>\t\t\t\t<span class=\"hljs-string\">\"include_updated_by\"</span>: <span class=\"hljs-literal\">true</span><br>\t\t\t})<br>\t\t\t\t.end(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, res</span>) </span>{<br>\t\t\t\t\t<span class=\"hljs-comment\">// R.pretty(res.body)</span><br>\t\t\t\t\t<span class=\"hljs-keyword\">var</span> object = res.body.object<br>\t\t\t\t\t<span class=\"hljs-comment\">// Keys assertion        </span><br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object).should.to.be.deep.equal([<span class=\"hljs-string\">'name'</span>, <span class=\"hljs-string\">'app_user_object_uid'</span>, <span class=\"hljs-string\">'created_by'</span>, <span class=\"hljs-string\">'updated_by'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'published'</span>, <span class=\"hljs-string\">'ACL'</span>, <span class=\"hljs-string\">'__loc'</span>, <span class=\"hljs-string\">'_version'</span>, <span class=\"hljs-string\">'tags'</span>])<br>\t\t\t\t\t<span class=\"hljs-built_in\">Object</span>.keys(object.updated_by).should.to.be.deep.equal([<span class=\"hljs-string\">'uid'</span>, <span class=\"hljs-string\">'created_at'</span>, <span class=\"hljs-string\">'updated_at'</span>, <span class=\"hljs-string\">'email'</span>, <span class=\"hljs-string\">'username'</span>, <span class=\"hljs-string\">'plan_id'</span>])<br>\t\t\t\t\t<span class=\"hljs-comment\">// Data type assertion</span><br>\t\t\t\t\tobject.name.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.created_by.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.updated_by.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject.created_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.updated_at.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.uid.should.be.a(<span class=\"hljs-string\">'string'</span>)<br>\t\t\t\t\tobject.published.should.be.a(<span class=\"hljs-string\">'boolean'</span>)<br>\t\t\t\t\tobject.ACL.should.be.a(<span class=\"hljs-string\">'object'</span>)<br>\t\t\t\t\tobject._version.should.be.a(<span class=\"hljs-string\">'number'</span>)<br>\t\t\t\t\tobject.tags.should.be.a(<span class=\"hljs-string\">'array'</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// Value assertion</span><br>\t\t\t\t\tobject.name.should.be.equal(<span class=\"hljs-string\">'supertest'</span>)<br>\t\t\t\t\tobject.app_user_object_uid.should.be.equal(<span class=\"hljs-string\">'system'</span>)<br>\t\t\t\t\tobject.updated_by.uid.should.be.equal(userUID)<br>\t\t\t\t\tobject.updated_by.uid.should.be.equal(object.created_by)<br>\t\t\t\t\tobject.updated_by.email.should.be.equal(email)<br>\t\t\t\t\tobject.updated_by.username.should.be.equal(username)<br>\t\t\t\t\tobject.created_by.should.be.equal(userUID)<br>\t\t\t\t\tobject.created_at.should.be.equal(object.updated_at)<br>\t\t\t\t\tobject.updated_at.should.be.equal(object.created_at)<br>\t\t\t\t\tobject.uid.should.be.equal(objectUid)<br>\t\t\t\t\tobject.published.should.be.equal(<span class=\"hljs-literal\">true</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// object.ACL.should.be.equal({})</span><br>\t\t\t\t\tobject._version.should.be.equal(<span class=\"hljs-number\">1</span>)<br>\t\t\t\t\t<span class=\"hljs-comment\">// object.tags.should.be.equal([])\t\t\t\t               </span><br>\t\t\t\t\tdone()<br>\t\t\t\t});",
      "err": {
        "name": "AssertionError",
        "message": "expected [ Array(7) ] to deeply equal [ Array(6) ]",
        "stack": "AssertionError: expected [ Array(7) ] to deeply equal [ Array(6) ]<br>    at assertEqual (node_modules/chai/lib/chai/core/assertions.js:485:19)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/addMethod.js:41:25)<br>    at doAsserterAsyncAndAddThen (node_modules/chai-as-promised/lib/chai-as-promised.js:292:33)<br>    at null.&lt;anonymous&gt; (node_modules/chai-as-promised/lib/chai-as-promised.js:251:21)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at somethingMethod (node_modules/chai-things/lib/chai-things.js:97:25)<br>    at ctx.(anonymous function) (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at allMethod (node_modules/chai-things/lib/chai-things.js:165:25)<br>    at ctx.(anonymous function) [as equal] (node_modules/chai/lib/chai/utils/overwriteMethod.js:49:33)<br>    at Test.&lt;anonymous&gt; (spec/cms_apis/object_revisions_revert_spec.js:171:55)<br>    at Test.assert (node_modules/supertest/lib/test.js:156:6)<br>    at assert (node_modules/supertest/lib/test.js:127:12)<br>    at node_modules/supertest/lib/test.js:124:5<br>    at Test.Request.callback (node_modules/supertest/node_modules/superagent/lib/node/index.js:785:12)<br>    at Stream.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/index.js:990:12)<br>    at Unzip.&lt;anonymous&gt; (node_modules/supertest/node_modules/superagent/lib/node/utils.js:108:12)<br>    at endReadableNT (_stream_readable.js:913:12)"
      },
      "isRoot": false,
      "uuid": "907c9360-81dd-4e56-9fc2-54dd9cbcbd20",
      "parentUUID": "392b0f8e-4ea6-4f45-b8bb-0f33be656dd1",
      "skipped": false
    },
    {
      "title": "\"before all\" hook",
      "fullTitle": "Reference objects \"before all\" hook",
      "timedOut": true,
      "duration": 45001,
      "state": "failed",
      "pass": false,
      "fail": true,
      "err": {
        "name": "Error",
        "message": "timeout of 45000ms exceeded. Ensure the done() callback is being called in this test.",
        "stack": "<span class=\"hljs-built_in\">Error</span>: timeout <span class=\"hljs-keyword\">of</span> <span class=\"hljs-number\">45000</span>ms exceeded. Ensure the done() callback is being called <span class=\"hljs-keyword\">in</span> <span class=\"hljs-keyword\">this</span> test."
      },
      "isRoot": false,
      "uuid": "3d76a9ba-2c9c-4f0c-96d0-b5a332d65267",
      "parentUUID": "b697474f-f4ee-4b2d-befd-a9a50be81f42",
      "skipped": false
    }
  ],
  "copyrightYear": 2016
}